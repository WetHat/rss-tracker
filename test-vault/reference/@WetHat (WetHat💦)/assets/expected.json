{
    "title": "@WetHat (WetHatüí¶)",
    "description": "<p>I enjoy programming computers. </p><p><a href=\"https://fosstodon.org/tags/fedi22\" class=\"mention hashtag\" rel=\"tag\">#<span>fedi22</span></a> <a href=\"https://fosstodon.org/tags/Mastodon\" class=\"mention hashtag\" rel=\"tag\">#<span>Mastodon</span></a> <a href=\"https://fosstodon.org/tags/Fediverse\" class=\"mention hashtag\" rel=\"tag\">#<span>Fediverse</span></a> <a href=\"https://fosstodon.org/tags/Programming\" class=\"mention hashtag\" rel=\"tag\">#<span>Programming</span></a> <a href=\"https://fosstodon.org/tags/OpenSource\" class=\"mention hashtag\" rel=\"tag\">#<span>OpenSource</span></a> <a href=\"https://fosstodon.org/tags/FOSS\" class=\"mention hashtag\" rel=\"tag\">#<span>FOSS</span></a> <a href=\"https://fosstodon.org/tags/MachineLearning\" class=\"mention hashtag\" rel=\"tag\">#<span>MachineLearning</span></a> <a href=\"https://fosstodon.org/tags/ArtificialIntelligence\" class=\"mention hashtag\" rel=\"tag\">#<span>ArtificialIntelligence</span></a> <a href=\"https://fosstodon.org/tags/AI\" class=\"mention hashtag\" rel=\"tag\">#<span>AI</span></a> <a href=\"https://fosstodon.org/tags/Python\" class=\"mention hashtag\" rel=\"tag\">#<span>Python</span></a> <a href=\"https://fosstodon.org/tags/Lisp\" class=\"mention hashtag\" rel=\"tag\">#<span>Lisp</span></a> <a href=\"https://fosstodon.org/tags/Dotnet\" class=\"mention hashtag\" rel=\"tag\">#<span>Dotnet</span></a> <a href=\"https://fosstodon.org/tags/JupyterNotebooks\" class=\"mention hashtag\" rel=\"tag\">#<span>JupyterNotebooks</span></a> <a href=\"https://fosstodon.org/tags/JupyterLab\" class=\"mention hashtag\" rel=\"tag\">#<span>JupyterLab</span></a></p>",
    "site": "https://fosstodon.org/@WetHat",
    "items": [
        {
            "id": "https://mastodon.social/@lisp_discussions/112442474804563136",
            "tags": [],
            "description": "<p>Series: A Functional Approach To Common Lisp</p><p><a href=\"https://youtu.be/2mJ88j3CqRs\" rel=\"nofollow noopener noreferrer\" translate=\"no\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"\">youtu.be/2mJ88j3CqRs</span><span class=\"invisible\"></span></a></p><p>Discussions: <a href=\"https://discu.eu/q/https://youtu.be/2mJ88j3CqRs\" rel=\"nofollow noopener noreferrer\" translate=\"no\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">discu.eu/q/https://youtu.be/2m</span><span class=\"invisible\">J88j3CqRs</span></a></p><p><a href=\"https://mastodon.social/tags/lisp\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>lisp</span></a> <a href=\"https://mastodon.social/tags/programming\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>programming</span></a></p><span>- Lisp & Scheme Weekly (@lisp_discussions) <a href=\"https://mastodon.social/@lisp_discussions/112442474804563136\">May 14, 2024</a></span>",
            "title": "Boosted: Series: A Functional Approach To Common Lisp https://youtu.be/2mJ88j3CqRs Discussions: https://discu.eu/q/https://youtu.be/2mJ88j3CqRs #lisp #programming",
            "link": "https://mastodon.social/@lisp_discussions/112442474804563136",
            "published": "2024-05-15T05:40:35.000Z"
        },
        {
            "id": "https://mathstodon.xyz/@ngons/112440813968194589",
            "tags": [],
            "description": "<img src=\"https://cdn.fosstodon.org/cache/media_attachments/files/112/440/814/082/576/222/original/b5bd02dcafece97f.mp4\" /><p>Polyhedral tiling for <a href=\"https://mathstodon.xyz/tags/TilingTuesday\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>TilingTuesday</span></a></p><p><a href=\"https://mathstodon.xyz/tags/Tiling\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>Tiling</span></a> <a href=\"https://mathstodon.xyz/tags/Hedron\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>Hedron</span></a> <a href=\"https://mathstodon.xyz/tags/Geometry\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>Geometry</span></a> <a href=\"https://mathstodon.xyz/tags/mathart\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>mathart</span></a> <a href=\"https://mathstodon.xyz/tags/mathsart\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>mathsart</span></a> <a href=\"https://mathstodon.xyz/tags/mastoart\" class=\"mention hashtag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">#<span>mastoart</span></a></p><span>- n-gons (@ngons) <a href=\"https://mathstodon.xyz/@ngons/112440813968194589\">May 14, 2024</a></span>",
            "title": "Boosted: Polyhedral tiling for #TilingTuesday #Tiling #Hedron #Geometry #mathart #mathsart #mastoart",
            "link": "https://mathstodon.xyz/@ngons/112440813968194589",
            "published": "2024-05-15T05:36:22.000Z"
        },
        {
            "id": "https://fosstodon.org/@eddyizm/112440587071746764",
            "tags": [],
            "description": "<img src=\"https://cdn.fosstodon.org/media_attachments/files/112/440/586/486/395/031/original/dffbab31e3a50a29.jpg\" /><p>Celluar  <a href=\"https://fosstodon.org/tags/fooocus\" class=\"mention hashtag\" rel=\"tag\">#<span>fooocus</span></a>  <a href=\"https://fosstodon.org/tags/stablediffusion\" class=\"mention hashtag\" rel=\"tag\">#<span>stablediffusion</span></a> <a href=\"https://fosstodon.org/tags/selfhosted\" class=\"mention hashtag\" rel=\"tag\">#<span>selfhosted</span></a> <a href=\"https://fosstodon.org/tags/AI\" class=\"mention hashtag\" rel=\"tag\">#<span>AI</span></a> <a href=\"https://fosstodon.org/tags/AIart\" class=\"mention hashtag\" rel=\"tag\">#<span>AIart</span></a> <a href=\"https://fosstodon.org/tags/generativeAI\" class=\"mention hashtag\" rel=\"tag\">#<span>generativeAI</span></a> <a href=\"https://fosstodon.org/tags/generativeArt\" class=\"mention hashtag\" rel=\"tag\">#<span>generativeArt</span></a> <a href=\"https://fosstodon.org/tags/AIArtwork\" class=\"mention hashtag\" rel=\"tag\">#<span>AIArtwork</span></a> <a href=\"https://fosstodon.org/tags/stablediffusionart\" class=\"mention hashtag\" rel=\"tag\">#<span>stablediffusionart</span></a> <a href=\"https://fosstodon.org/tags/AiArtCommunity\" class=\"mention hashtag\" rel=\"tag\">#<span>AiArtCommunity</span></a> <a href=\"https://fosstodon.org/tags/sdxl\" class=\"mention hashtag\" rel=\"tag\">#<span>sdxl</span></a> <a href=\"https://fosstodon.org/tags/sdxlturbo\" class=\"mention hashtag\" rel=\"tag\">#<span>sdxlturbo</span></a> <a href=\"https://fosstodon.org/tags/feditart\" class=\"mention hashtag\" rel=\"tag\">#<span>feditart</span></a> <a href=\"https://fosstodon.org/tags/mastoart\" class=\"mention hashtag\" rel=\"tag\">#<span>mastoart</span></a> <a href=\"https://fosstodon.org/tags/digitalart\" class=\"mention hashtag\" rel=\"tag\">#<span>digitalart</span></a></p><span>- eddyizm :python: (@eddyizm) <a href=\"https://fosstodon.org/@eddyizm/112440587071746764\">May 14, 2024</a></span>",
            "title": "Boosted: Celluar #fooocus #stablediffusion #selfhosted #AI #AIart #generativeAI #generativeArt #AIArtwork #stablediffusionart #AiArtCommunity #sdxl #sdxlturbo #feditart #mastoart #digitalart",
            "link": "https://fosstodon.org/@eddyizm/112440587071746764",
            "published": "2024-05-14T17:21:59.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112438284637950197",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://infosec.exchange/@cambirch\" class=\"u-url mention\">@<span>cambirch</span></a></span> </p><p>I remeber these articles too. Hwever, I did not pay much attention because readonly field optimization was the least of my problems at that time.üòâ   </p><p>Apparently, there is an advantage with **static readonly** in <a href=\"https://fosstodon.org/tags/dotnet\" class=\"mention hashtag\" rel=\"tag\">#<span>dotnet</span></a> profile guided optimization (<a href=\"https://fosstodon.org/tags/PGO\" class=\"mention hashtag\" rel=\"tag\">#<span>PGO</span></a>) according to:<br /> ‚û°Ô∏è<a href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#tiering-and-dynamic-pgo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" translate=\"no\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">devblogs.microsoft.com/dotnet/</span><span class=\"invisible\">performance-improvements-in-net-8/#tiering-and-dynamic-pgo</span></a><br />‚û°Ô∏è<a href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#constant-folding\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" translate=\"no\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">devblogs.microsoft.com/dotnet/</span><span class=\"invisible\">performance-improvements-in-net-8/#constant-folding</span></a></p><p><span class=\"h-card\" translate=\"no\"><a href=\"https://mastodon.online/@kvandermotten\" class=\"u-url mention\">@<span>kvandermotten</span></a></span> found these in a devblog article about  performance Improvements in .NET 8</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112438284637950197\">May 14, 2024</a></span>",
            "title": "Replied to: @WetHat I recall several stack overflow libraries had compiler switches so they compiled with readonly in development and not readonly in production builds because the compiler added extra checks to the output and it slowed down hot paths. Not sure if this is still the case. Readonly is certainly important for development at the absolute minimum since it makes several classes of bugs effectively impossible.",
            "link": "https://fosstodon.org/@WetHat/112438284637950197",
            "published": "2024-05-14T07:34:27.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112434672435437631",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://mastodon.online/@kvandermotten\" class=\"u-url mention\">@<span>kvandermotten</span></a></span> Excellent articles! Thanks for pointing that out!üëç</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112434672435437631\">May 13, 2024</a></span>",
            "title": "Replied to: @WetHat There can be significant benefits with static readonly fields, see https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#tiering-and-dynamic-pgo and https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#constant-folding IIRC, the JIT will also optimize multiple loads of the same field better in some cases if it is readonly.",
            "link": "https://fosstodon.org/@WetHat/112434672435437631",
            "published": "2024-05-13T16:15:50.000Z"
        },
        {
            "id": "https://mastodon.online/@kvandermotten/112434653881037869",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://fosstodon.org/@WetHat\" class=\"u-url mention\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">@<span>WetHat</span></a></span> <br>There can be significant benefits with static readonly fields, see <a href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#tiering-and-dynamic-pgo\" rel=\"nofollow noopener noreferrer\" translate=\"no\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">devblogs.microsoft.com/dotnet/</span><span class=\"invisible\">performance-improvements-in-net-8/#tiering-and-dynamic-pgo</span></a> and <a href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#constant-folding\" rel=\"nofollow noopener noreferrer\" translate=\"no\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">devblogs.microsoft.com/dotnet/</span><span class=\"invisible\">performance-improvements-in-net-8/#constant-folding</span></a><br>IIRC, the JIT will also optimize multiple loads of the same field better in some cases if it is readonly.</p><span>- Kris Vandermotten (@kvandermotten) <a href=\"https://mastodon.online/@kvandermotten/112434653881037869\">May 13, 2024</a></span>",
            "title": "Boosted: @WetHat There can be significant benefits with static readonly fields, see https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#tiering-and-dynamic-pgo and https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/#constant-folding IIRC, the JIT will also optimize multiple loads of the same field better in some cases if it is readonly.",
            "link": "https://mastodon.online/@kvandermotten/112434653881037869",
            "published": "2024-05-13T16:13:42.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112434102899083500",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://mstdn.io/@blaue_Fledermaus\" class=\"u-url mention\">@<span>blaue_Fledermaus</span></a></span> I do see some possibility that readonly would allow AoT (Ahead of Time compilation) or PGO (Profile-Guided Optimization) to choose a memory layout better suited for the computing pipeline. However. I'm not aware of any measurements in this direction. And I would agree that the advantage is probably small.</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112434102899083500\">May 13, 2024</a></span>",
            "title": "Replied to: @WetHat Thanks for sharing. Makes me wonder if AoT or PGO might benefit from it. Probably also no.",
            "link": "https://fosstodon.org/@WetHat/112434102899083500",
            "published": "2024-05-13T13:50:59.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112434073371395011",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://mastodon.scot/@irongut\" class=\"u-url mention\">@<span>irongut</span></a></span> I did ask some fellow hackers why they would consider <a href=\"https://github.com/JamesNK/Newtonsoft.Json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" translate=\"no\"><span class=\"invisible\">https://</span><span class=\"ellipsis\">github.com/JamesNK/Newtonsoft.</span><span class=\"invisible\">Json</span></a> dead.</p><p>Arguments for 'dead':<br />‚û°Ô∏è ~700 open issues<br />‚û°Ô∏è~70 open pull requests (oldest being 1 year old)</p><p>Arguments against 'dead':<br />‚û°Ô∏èReasonably stable and popular (~10k start)<br />‚û°Ô∏èA few commits per year (1 this year; 4 last year)</p><p>I'v updated the post and removed 'and dead', because I'd use this library anytime.</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112434073371395011\">May 13, 2024</a></span>",
            "title": "Replied to: @WetHat Newtonsoft,Json is not dead. It's last release was 14 months ago & the repo has commits in the last month. There is such a thing as stable code that doesn't need constant releases every 5 minutes.",
            "link": "https://fosstodon.org/@WetHat/112434073371395011",
            "published": "2024-05-13T13:43:29.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112433753157520180",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://mastodon.scot/@irongut\" class=\"u-url mention\">@<span>irongut</span></a></span>  You are right! Newtonsoft,Json is still with us!</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112433753157520180\">May 13, 2024</a></span>",
            "title": "Replied to: @WetHat Newtonsoft,Json is not dead. It's last release was 14 months ago & the repo has commits in the last month. There is such a thing as stable code that doesn't need constant releases every 5 minutes.",
            "link": "https://fosstodon.org/@WetHat/112433753157520180",
            "published": "2024-05-13T12:22:02.000Z"
        },
        {
            "id": "https://fosstodon.org/@WetHat/112433745762841309",
            "tags": [],
            "description": "<p><span class=\"h-card\" translate=\"no\"><a href=\"https://functional.cafe/@phoe\" class=\"u-url mention\">@<span>phoe</span></a></span> Thanks for pointing this out. I do agree that some of the examples would be better written as functions. As the reddit article points out the coverage of metapogramming is rather shalllow demonstrating just the basics.</p><p>I've checked the contributors of that website. Most of which have skeleton LinkedIn profiles claming they are from South Africa. I believe that site indeed is fake!</p><span>- WetHatüí¶ (@WetHat) <a href=\"https://fosstodon.org/@WetHat/112433745762841309\">May 13, 2024</a></span>",
            "title": "Replied to: @WetHat it's AI-generated. See comments at https://old.reddit.com/r/lisp/comments/1cpfljb/how_to_explore_lisp_metaprogramming_techniques/",
            "link": "https://fosstodon.org/@WetHat/112433745762841309",
            "published": "2024-05-13T12:20:10.000Z"
        }
    ]
}