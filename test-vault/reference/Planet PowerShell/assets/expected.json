{
    "title": "Planet PowerShell",
    "description": "An aggregated feed from the PowerShell community",
    "site": "https://www.planetpowershell.com/",
    "image": {
        "src": "https://www.planetpowershell.com/Content/Logo.png",
        "type": "image"
    },
    "items": [
        {
            "id": "https://jdhitsolutions.com/blog/?p=9389",
            "tags": [
                "Books",
                "PowerShell",
                "Scripting",
                "LeanPub",
                "toolmaking"
            ],
            "description": "Several years ago Don Jones and I wrote what we hoped would be the definitive book on PowerShell scripting and toolmaking. The book takes all off our years of experience, not only from writing PowerShell code, to teaching and conference presentations where we hear first hand what people struggle with. We published the book on...",
            "title": "PowerShell Scripting and Toolmaking",
            "link": "https://jdhitsolutions.com/blog/books/9389/powershell-scripting-and-toolmaking/",
            "published": "2024-05-24T17:03:43.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6896",
            "tags": [],
            "description": "<p>A collection of over 100 PowerShell learning exercises targeted for beginners developed by <div id=\"target-id6653457b04bf8\" class=\"collapseomatic_content_inline colomat-inline \"> PowerShell MVP and veteran teacher Jeff Hicks. </div><span class=\"collapseomatic my_button\" id=\"id6653457b04bf8\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b04bf8'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "The PowerShell Practice Primer",
            "link": "https://leanpub.com/psprimer",
            "published": "2024-05-24T12:25:00.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>A collection of over 100 PowerShell learning exercises targeted for beginners developed by <div id=\"target-id6653457b04e72\" class=\"collapseomatic_content_inline colomat-inline \"> PowerShell MVP and veteran teacher Jeff Hicks. </div><span class=\"collapseomatic my_button\" id=\"id6653457b04e72\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b04e72'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6894",
            "tags": [],
            "description": "<p>A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output - <div id=\"target-id6653457b053c0\" class=\"collapseomatic_content_inline colomat-inline \"> powershell-gui-aws-lambda-start-functions.ps1 </div><span class=\"collapseomatic my_button\" id=\"id6653457b053c0\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b053c0'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output",
            "link": "https://gist.github.com/aeveltstra/94806a1230b8165f43e9b4e4dec9bacc",
            "published": "2024-05-24T12:24:44.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output - <div id=\"target-id6653457b055b9\" class=\"collapseomatic_content_inline colomat-inline \"> powershell-gui-aws-lambda-start-functions.ps1 </div><span class=\"collapseomatic my_button\" id=\"id6653457b055b9\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b055b9'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6893",
            "tags": [],
            "description": "<p>[OC] Learn how to get data from a Google Form into PowerShell, by building a repeatable and reusable <div id=\"target-id6653457b05b01\" class=\"collapseomatic_content_inline colomat-inline \"> automation you can use to with any form. </div><span class=\"collapseomatic my_button\" id=\"id6653457b05b01\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b05b01'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "Frontend PowerShell with Google Forms: Part 1 Getting your data",
            "link": "https://www.youtube.com/watch?v=ZqAShden9qA",
            "published": "2024-05-24T12:24:12.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>[OC] Learn how to get data from a Google Form into PowerShell, by building a repeatable and reusable <div id=\"target-id6653457b05d12\" class=\"collapseomatic_content_inline colomat-inline \"> automation you can use to with any form. </div><span class=\"collapseomatic my_button\" id=\"id6653457b05d12\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b05d12'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6892",
            "tags": [],
            "description": "<p>I previously wrote about Automating maintenance tasks with Azure Functions and PowerShell. That <div id=\"target-id6653457b06249\" class=\"collapseomatic_content_inline colomat-inline \"> combo has been my go-to solution for many automation tasks. </div><span class=\"collapseomatic my_button\" id=\"id6653457b06249\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b06249'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "Automating PowerShell tasks with Container App Jobs",
            "link": "https://www.jannemattila.com/azure/2024/05/20/automating-powershell-tasks-with-container-apps.html",
            "published": "2024-05-24T12:23:54.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>I previously wrote about Automating maintenance tasks with Azure Functions and PowerShell. That <div id=\"target-id6653457b063ff\" class=\"collapseomatic_content_inline colomat-inline \"> combo has been my go-to solution for many automation tasks. </div><span class=\"collapseomatic my_button\" id=\"id6653457b063ff\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b063ff'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6891",
            "tags": [],
            "description": "<p>On May 13th GPT-4o was released in preview in the Azure OpenAI Playground. No API access, only <div id=\"target-id6653457b0695e\" class=\"collapseomatic_content_inline colomat-inline \"> accessible in the browser. Today I was going into the playground to test something with the GPT-4o model, but could not find it. What had happened? Turnes out it suddenly was in GA and available to choose under ... Continue reading Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell! </div><span class=\"collapseomatic my_button\" id=\"id6653457b0695e\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b0695e'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell!",
            "link": "https://alexholmeset.blog/2024/05/22/use-the-azure-openai-gpt-4o-all-in-one-model-with-powershell/",
            "published": "2024-05-24T12:23:43.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>On May 13th GPT-4o was released in preview in the Azure OpenAI Playground. No API access, only <div id=\"target-id6653457b06b1a\" class=\"collapseomatic_content_inline colomat-inline \"> accessible in the browser. Today I was going into the playground to test something with the GPT-4o model, but could not find it. What had happened? Turnes out it suddenly was in GA and available to choose under ... Continue reading Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell! </div><span class=\"collapseomatic my_button\" id=\"id6653457b06b1a\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b06b1a'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6890",
            "tags": [],
            "description": "<p>It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does <div id=\"target-id6653457b07236\" class=\"collapseomatic_content_inline colomat-inline \"> Microsoft Teams think I&#039;m away while I&#039;m not / My PC isn&#039;t locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn&#039;t work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :) </div><span class=\"collapseomatic my_button\" id=\"id6653457b07236\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b07236'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "Keep Microsoft Teams status Available instead of away using PowerShell",
            "link": "https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/",
            "published": "2024-05-24T12:23:30.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does <div id=\"target-id6653457b0742d\" class=\"collapseomatic_content_inline colomat-inline \"> Microsoft Teams think I&#039;m away while I&#039;m not / My PC isn&#039;t locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn&#039;t work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :) </div><span class=\"collapseomatic my_button\" id=\"id6653457b0742d\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b0742d'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://psweekly.dowst.dev/?post_type=link_library_links&p=6889",
            "tags": [],
            "description": "<p>Using parameters for your Scripts and Functions is very powerful. You don&#039;t have to hardcode things <div id=\"target-id6653457b079e2\" class=\"collapseomatic_content_inline colomat-inline \"> in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work. </div><span class=\"collapseomatic my_button\" id=\"id6653457b079e2\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b079e2'  class='colomat-swap' style='display:none;'>(-)</span></p>",
            "title": "Parameters for PowerShell Scripts and Functions",
            "link": "https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/",
            "published": "2024-05-24T12:23:18.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Using parameters for your Scripts and Functions is very powerful. You don&#039;t have to hardcode things <div id=\"target-id6653457b07be3\" class=\"collapseomatic_content_inline colomat-inline \"> in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work. </div><span class=\"collapseomatic my_button\" id=\"id6653457b07be3\"  tabindex=\"0\" title=\"(+)\"    >(+)</span><span id='swap-id6653457b07be3'  class='colomat-swap' style='display:none;'>(-)</span></p>"
        },
        {
            "id": "https://powershellisfun.com/?p=7435",
            "tags": [
                "Fun",
                "Microsoft Teams",
                "PowerShell"
            ],
            "description": "It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does Microsoft Teams think I'm away while I'm not / My PC isn't locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn't work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :)",
            "title": "Keep Microsoft Teams status Available instead of away using PowerShell",
            "link": "https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/",
            "published": "2024-05-23T16:41:33.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://adamtheautomator.com/?p=26256",
            "tags": [
                "IT Ops",
                "PowerShell"
            ],
            "description": "Automate deploying PowerShell scripts to Intune devices with Azure app registration, Graph API, and more in this step-by-step tutorial.",
            "title": "Upload a PowerShell Script to Intune (With PowerShell) From Scratch",
            "link": "https://adamtheautomator.com/intune-powershell-script-upload/",
            "published": "2024-05-22T20:13:52.000Z",
            "author": {
                "#text": "Adam Bertram",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7398",
            "tags": [
                "Formatting",
                "PowerShell"
            ],
            "description": "Using parameters for your Scripts and Functions is very powerful. You don't have to hardcode things in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work.",
            "title": "Parameters for PowerShell Scripts and Functions",
            "link": "https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/",
            "published": "2024-05-17T13:55:11.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://adamtheautomator.com/?p=26254",
            "tags": [
                "IT Ops",
                "PowerShell"
            ],
            "title": "PowerShell Basics: Navigating CSV Files",
            "link": "https://adamtheautomator.com/powershell-basics-navigating-csv-files/",
            "published": "2024-05-15T20:13:25.000Z",
            "author": {
                "#text": "Adam Bertram",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7370",
            "tags": [
                "PowerShell"
            ],
            "description": "You created a script or function a while back that people in the company use a lot, and suddenly... They come to you telling you that it doesn't work anymore. :( The module you used has become deprecated, cmdlets don't all work anymore, etc. In this blog post, I will show the three most prominent modules that have become deprecated and where you can find good information about the successor to adjust your scripts.",
            "title": "Deprecated PowerShell Modules and Azure AD Graph retirement",
            "link": "https://powershellisfun.com/2024/05/10/deprecated-powershell-modules-and-azure-ad-graph-retirement/",
            "published": "2024-05-10T13:12:46.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://adamtheautomator.com/?p=26238",
            "tags": [
                "IT Ops",
                "Pester",
                "PowerShell"
            ],
            "description": "I’ve been using Pester for a long time off and on. I’ve always been obsessed with ensuring reliability in my PowerShell code. After writing <a href=\"https://leanpub.com/pesterbook/\">the Pester Book</a> and mentioning some of the methodologies I used with Pester v4 I’ll present in this blog post, I’ve since learned Pester v5 makes my work so much easier.",
            "title": "PowerShell Testing Mastery with Data-Driven Pester",
            "link": "https://adamtheautomator.com/pester-infrastructure-data-driven-tests/",
            "published": "2024-05-10T13:12:31.000Z",
            "author": {
                "#text": "Adam Bertram",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3893",
            "tags": [
                "Connectwise",
                "PowerShell",
                "API",
                "Automation",
                "REST"
            ],
            "description": "<p>I have recently been automating a lot within Connectwise PSA. One of the items I set out to do is to upload a file and attach it to a service ticket. This led me to the <a href=\"https://www.techcolumnist.com/2019/01/09/powershell-connectwise-documents-api-uploading-a-document-or-attachment-to-a-ticket/\" title=\"\">following article,</a> but after doing some testing, I found that some file types were not properly rendering on the Connectwise side, making me believe there was something wrong with the encoding. </p>\n<p>I could upload a <code>.txt</code> file without issues, but I also tried with a <code>.docx</code> and a <code>.pdf</code>, and the file would be corrupted or blank. </p>\n<p>The process to upload a file and then link it to a service ticket is first to upload the file to the endpoint <code>/system/documents</code> and then, from there, link the uploaded document to an existing service ticket. </p>\n<h2 class=\"wp-block-heading\">Multipart/Form-Data</h2>\n<p>The first thing to know about how Connectwise wants a document uploaded is that it uses what is &#8230; <a href=\"https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/\">Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell",
            "link": "https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/",
            "published": "2024-05-09T19:27:53.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>I have recently been automating a lot within Connectwise PSA. One of the items I set out to do is to upload a file and attach it to a service ticket. This led me to the <a href=\"https://www.techcolumnist.com/2019/01/09/powershell-connectwise-documents-api-uploading-a-document-or-attachment-to-a-ticket/\" title=\"\">following article,</a> but after doing some testing, I found that some file types were not properly rendering on the Connectwise side, making me believe there was something wrong with the encoding. </p>\n\n\n\n<p>I could upload a <code>.txt</code> file without issues, but I also tried with a <code>.docx</code> and a <code>.pdf</code>, and the file would be corrupted or blank. </p>\n\n\n\n<p>The process to upload a file and then link it to a service ticket is first to upload the file to the endpoint <code>/system/documents</code> and then, from there, link the uploaded document to an existing service ticket. </p>\n\n\n\n<h2 class=\"wp-block-heading\">Multipart/Form-Data</h2>\n\n\n\n<p>The first thing to know about how Connectwise wants a document uploaded is that it uses what is &hellip; <a href=\"https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/\" class=\"read-more\">Continue... </a></p><p>The post <a href=\"https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/\">Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://powershellisfun.com/?p=7339",
            "tags": [
                "PowerShell"
            ],
            "description": "When running scripts that connect to remote systems using Invoke-Command, you can use your local variables in the remote session which makes things a lot easier. In this blog post, I will show you how :)",
            "title": "Using $using in PowerShell for local variables in remote sessions",
            "link": "https://powershellisfun.com/2024/05/03/using-using-in-powershell-for-local-variables-in-remote-sessions/",
            "published": "2024-05-03T13:23:49.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://adamtheautomator.com/?p=26230",
            "tags": [
                "Cloud",
                "Azure Functions",
                "PowerShell"
            ],
            "description": "Struggling with messy Azure Functions PowerShell code? Learn how to adapt your scripts for serverless, validate HTTP parameters, throw descriptive errors, and bind PowerShell output to HTTP responses for robust web-friendly functions.",
            "title": "Your Go-To PowerShell Template for HTTP-Triggered Azure Functions",
            "link": "https://adamtheautomator.com/powershell-azure-function-template/",
            "published": "2024-05-01T19:18:27.000Z",
            "author": {
                "#text": "Adam Bertram",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9352",
            "tags": [
                "Books",
                "PowerShell",
                "LeanPub"
            ],
            "description": "A number of years ago, I published book on Leanpub, designed to help you teach yourself PowerShell. After you get through the first Month of Lunches book, what do you do next? The best way to learn PowerShell is to do it. But it might be challending trying to figure out what to do. I...",
            "title": "Pick Up The PowerShell Practice Primer",
            "link": "https://jdhitsolutions.com/blog/books/9352/pick-up-powershell-practice-primer/",
            "published": "2024-04-29T19:02:37.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7309",
            "tags": [
                "Intune",
                "Microsoft Endpoint Manager",
                "PowerShell"
            ],
            "description": "I received a question on the Microsoft Tech Community forum regarding creating a report about non-compliant Intune devices. The report should give insight into what device has what issue with which setting; the person asking the question was already working on a Microsoft Graph script but couldn't find a suitable way. In this blog post, I will show how to create this report. There are other scripts out there, but I always like a challenge (And Microsoft Graph can be quite a challenge sometimes ;) )",
            "title": "Report on Non-Compliant Intune devices",
            "link": "https://powershellisfun.com/2024/04/26/report-on-non-compliant-intune-devices/",
            "published": "2024-04-26T12:06:34.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7249",
            "tags": [
                "PowerShell"
            ],
            "description": "We all encountered this: you get a script or function that uses a certain cmdlet... And it fails because the cmdlet is not recognized :( But which module should you install to get the script working? Or does your script install or import all the required modules? In this blog post, I will show you how to check from which module(s) the cmdlet(s) originate and if they are present on your system or if you should install them.",
            "title": "Report from which PowerShell module the cmdlets are from",
            "link": "https://powershellisfun.com/2024/04/18/report-from-which-powershell-module-the-cmdlets-are-from/",
            "published": "2024-04-18T17:09:01.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18630",
            "tags": [
                "Active Directory",
                "PowerShell",
                "active directory",
                "powershell",
                "replication"
            ],
            "description": "<p>Active Directory replication is a critical process that ensures the consistent and up-to-date state of directory information across all domain controllers in a domain. Monitoring this process is important as it helps identify any issues that may arise and resolve them quickly. One way to monitor Active Directory replication is by using the Repadmin command-line tool. Repadmin provides a wealth of information about the replication status and health of a domain. However, manually checking the Repadmin output can be time-consuming and tedious, and running it manually every 30 minutes just to check if everything is great doesn't seem like a great idea. While PowerShell has its own commands around replication I've not found something as fast and reliable as repadmin /replsummary.</p>\n<p>The post <a href=\"https://evotec.xyz/active-directory-replication-summary-to-your-email/\">Active Directory Replication Summary to your Email or Microsoft Teams</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Active Directory Replication Summary to your Email or Microsoft Teams",
            "link": "https://evotec.xyz/active-directory-replication-summary-to-your-email/",
            "published": "2024-04-17T19:25:32.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c6be043\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6be02b6450\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c68308903\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6c6834 \"><div class=\"wpb_wrapper thegem-custom-665370c6c68308903\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c6ae02658\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>Active Directory replication</strong> is a critical process that ensures the consistent and up-to-date state of directory information across all domain controllers in a domain. Monitoring this process is important as it helps identify any issues that may arise and resolve them quickly. One way to monitor <strong>Active Directory</strong> replication is by using the Repadmin command-line tool. <strong>Repadmin</strong> provides a wealth of information about the replication status and health of a domain. However, manually checking the <strong>Repadmin</strong> output can be time-consuming and tedious, and running it manually every 30 minutes just to check if everything is great doesn't seem like a great idea. While <strong>PowerShell</strong> has its own commands around replication I've not found something as fast and reliable as <strong>repadmin /replsummary</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6c6d9a\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6c6d8c6954\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c6fa66027\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6c6fa8 \"><div class=\"wpb_wrapper thegem-custom-665370c6c6fa66027\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Replication Summary to an email</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c74be5347\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>So, as part of my advanced <strong>Active Directory</strong> module called <a href=\"https://github.com/EvotecIT/ADEssentials\"><strong>ADEssentials</strong></a>, I wrote a function that uses repadmin to generate results. Then, I use <a href=\"https://github.com/EvotecIT/PSWriteHTML\"><strong>PSWriteHTML</strong> </a>to process them and <a href=\"https://github.com/EvotecIT/Mailozaurr\"><strong>Mailozaurr</strong></a> to send them to my email. Here's a how I did it:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c761f6341\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$ReplicationSummary = Get-WinADForestReplicationSummary -IncludeStatisticsVariable Statistics\n\n$Body = EmailBody {\n    EmailImage -Source 'https://evotec.xyz/wp-content/uploads/2021/04/Logo-evotec-bb.png' -UrlLink '' -AlternativeText 'Logo' -Width 181 -Heigh 57 -Inline\n\n    EmailText -Text \"Dear \", \"AD Team,\" -LineBreak\n    EmailText -Text \"Upon reviewing the resuls of replication I've found: \"\n    EmailList {\n        EmailListItem -Text \"Servers with good replication: \", $($Statistics.Good) -Color Black, SpringGreen -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication failures: \", $($Statistics.Failures) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication delta over 24 hours: \", $($Statistics.DeltaOver24Hours) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication delta over 12 hours: \", $($Statistics.DeltaOver12Hours) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication delta over 6 hours: \", $($Statistics.DeltaOver6Hours) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication delta over 3 hours: \", $($Statistics.DeltaOver3Hours) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Servers with replication delta over 1 hour: \", $($Statistics.DeltaOver1Hours) -Color Black, Red -FontWeight normal, bold\n        EmailListItem -Text \"Unique replication errors: \", $($Statistics.UniqueErrors.Count) -Color Black, Red -FontWeight normal, bold\n    }\n\n    if ($Statistics.UniqueErrors.Count -gt 0) {\n        EmailText -Text \"Unique replication errors:\"\n        EmailList {\n            foreach ($ErrorText in $Statistics.UniqueErrors) {\n                EmailListItem -Text $ErrorText\n            }\n        }\n    } else {\n        EmailText -Text \"It seems you're doing a great job! Keep it up! <img src=\"https://s.w.org/images/core/emoji/15.0.3/72x72/1f60a.png\" alt=\"😊\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />\" -LineBreak\n    }\n\n    EmailText -Text \"For more details please check the table below:\"\n\n    EmailTable -DataTable $ReplicationSummary {\n        EmailTableCondition -Inline -Name \"Fail\" -HighlightHeaders 'Fails', 'Total', 'PercentageError' -ComparisonType number -Operator gt 0 -BackgroundColor Salmon -FailBackgroundColor SpringGreen\n    } -HideFooter\n\n    EmailText -LineBreak\n    EmailText -Text \"Kind regards,\"\n    EmailText -Text \"Your automation friend\"\n}\n\n\n$EmailSplat = @{\n    From           = 'przemyslaw.klys@evotec.pl'\n    To             = 'przemyslaw.klys@evotec.pl'\n    Body           = $Body\n    Priority       = if ($Statistics.Failures -gt 0) { 'High' } else { 'Low' }\n    Subject        = 'Replication Results <img src=\"https://s.w.org/images/core/emoji/15.0.3/72x72/1f496.png\" alt=\"💖\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />'\n    Verbose        = $true\n    WhatIf         = $false\n    MgGraph        = $true\n}\n\nConnect-MgGraph\nSend-EmailMessage @EmailSplat</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c77528274\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>What is the result of those 50 lines of code?</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c77528274{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c77528274{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c77528274{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c77528274{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c78546449\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"bsdSZZj\"><a href=\"https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259.png\"><img class=\"alignnone wp-image-18631 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-1024x1021.png\" alt=\"\" width=\"1024\" height=\"1021\" srcset=\"https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-1024x1021.png 1024w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-300x300.png 300w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-150x150.png 150w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-768x765.png 768w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-256x256.png 256w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259.png 1221w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c78546449{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c78546449{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c78546449{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c78546449{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c79829575\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The <strong>Get-WinADForestReplicationSummary</strong> function joins over 100 functions available for <strong>Active Directory</strong> admins in the <a href=\"https://github.com/EvotecIT/ADEssentials\"><strong>ADEssentials</strong></a> module. It's doing the heavy lifting of reading repadmin data and converting it to PowerShell objects. Then, we use the PSWriteHTML <strong>EmailBody</strong> function, which allows for the accessible building of emails without knowing <strong>HTML</strong> and <strong>CSS</strong>. Finally, since I wanted to send an email with <strong>Microsoft Graph</strong>, I've used <a href=\"https://github.com/EvotecIT/Mailozaurr\"><strong>Mailozaurr's</strong></a> amazing <strong>Send-EmailMessage</strong> to send an email.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c79829575{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c79829575{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c79829575{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c79829575{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6c7bfe\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6c7bf33856\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c7dce7246\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6c7dd0 \"><div class=\"wpb_wrapper thegem-custom-665370c6c7dce7246\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c7f458876\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>What if you don't like emails? How about <strong>Microsoft Teams</strong>?</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c80515054\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">New-AdaptiveCard -Uri $TeamsUri {\n    New-AdaptiveColumnSet {\n        New-AdaptiveColumn -Width auto {\n            New-AdaptiveImage -Url \"https://evotec.xyz/wp-content/uploads/2021/04/Logo-evotec-bb.png\" -Size Large -Style default\n        }\n        New-AdaptiveColumn -Width stretch {\n            New-AdaptiveTextBlock -Text \"Replication Summary\" -Weight Bolder -Wrap\n            if ($Statistics.Failures -gt 0) {\n                $Summary = \"There are $($Statistics.Failures) servers with replication issues. Please take a look and fix ASAP.\"\n            } else {\n                $Summary = \"All servers are in good shape. Keep up the good work!\"\n            }\n            New-AdaptiveTextBlock -Text $Summary -Subtle -Spacing None -Wrap\n        }\n    }\n    New-AdaptiveContainer {\n        New-AdaptiveTextBlock -Text \"ad.evotec.pl\" -Size Medium -Wrap\n        New-AdaptiveTextBlock -Text \"\" -Subtle -Spacing None -Wrap\n        New-AdaptiveTextBlock -Text (Get-Date)\n    }\n    New-AdaptiveContainer {\n        New-AdaptiveColumnSet {\n            New-AdaptiveColumn {\n                New-AdaptiveTextBlock -Text \"▲ $($Statistics.Good) servers with good replication\" -Color Good -Spacing None\n                New-AdaptiveTextBlock -Text \"▼ $($Statistics.Failures) servers with failing replication\" -Color Attention -Spacing None\n            } -Width Stretch\n            New-AdaptiveColumn {\n                New-AdaptiveFactSet {\n                    foreach ($Entry in $Statistics.GetEnumerator() | Select-Object -Skip 1 -Last 5) {\n                        New-AdaptiveFact -Title $Entry.Key -Value $Entry.Value\n                    }\n                }\n            } -Width Auto\n        }\n    } -Spacing None\n} -FullWidth</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c80515054{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c80515054{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c80515054{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c80515054{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c816f7567\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>And what do you get? Nice and fancy replication summary in Teams <img src=\"https://s.w.org/images/core/emoji/15.0.3/72x72/1f60a.png\" alt=\"😊\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c82663844\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"zGRgLVr\"><img class=\"alignnone wp-image-18636 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-1024x461.png\" alt=\"\" width=\"1024\" height=\"461\" srcset=\"https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-1024x461.png 1024w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-300x135.png 300w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-768x346.png 768w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc.png 1135w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c82663844{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c82663844{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c82663844{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c82663844{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6c8458\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6c84494741\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c862c1286\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6c862e \"><div class=\"wpb_wrapper thegem-custom-665370c6c862c1286\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>What do I need?</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c89082775\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To get it up and running you just need to:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c89082775{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c89082775{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c89082775{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c89082775{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c8a0c9088\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">Install-Module PSWriteHTML -Force -Verbose\nInstall-Module ADEssentials -Force -Verbose\n# if you like emails\nInstall-Module Mailozaurr -Force -Verbose\n\n# if you like teams\nInstall-Module PSTeams -Force -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c8b334289\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Once modules are installed, you only modify the email body to suit your needs and send an email splat with the proper parameters, as your email provider requires. Alternatively, you can change the team's template or use it as is via <strong>Teams Incoming Webhooks</strong>. If you need more details on how to configure <a href=\"https://github.com/EvotecIT/PSTeams\"><strong>PSTeams</strong></a>, <a href=\"https://github.com/EvotecIT/Mailozaurr\"><strong>Mailozaurr</strong></a>, or use email-building functionality with <a href=\"https://github.com/EvotecIT/PSWriteHTML\"><strong>PSWriteHTML</strong></a>, I invite you to search via multiple blogs that cover this functionality.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/active-directory-replication-summary-to-your-email/\">Active Directory Replication Summary to your Email or Microsoft Teams</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://powershellisfun.com/?p=7187",
            "tags": [
                "PowerShell"
            ],
            "description": "When you store data in a variable, PowerShell can store it how you want it to be if you use the correct data type. This blog post will show you how that works and which data types I mostly use for my scripts.",
            "title": "PowerShell data/reference types for variables",
            "link": "https://powershellisfun.com/2024/04/11/powershell-data-reference-types-for-varriables/",
            "published": "2024-04-11T09:56:09.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7114",
            "tags": [
                "Hyper-V",
                "PowerShell",
                "Security",
                "Windows Updates"
            ],
            "description": "I&#8217;m a Consultant who does a lot of Intune testing, and I use Hyper-V on my laptop with many VMs in customer environments. Some VMs are used more than others, but when you turn them on after a few weeks&#8230; They need updates and restarts, and I wanted to automate that process so that it &#8230; <a href=\"https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">Installing Windows Updates on all your Hyper-V lab VMs using PowerShell and PSWindowsUpdate</span></a>",
            "title": "Installing Windows Updates on all your Hyper-V lab VMs using PowerShell and PSWindowsUpdate",
            "link": "https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/",
            "published": "2024-04-04T15:00:09.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://wragg.io/converting-azure-devops-classic-release-pipelines-to-yaml",
            "tags": [
                "powershell",
                "azure",
                "azuredevops",
                "pipelines",
                "YAML"
            ],
            "description": "I recently migrated some Azure DevOps Classic Release deployment pipelines to YAML. There’s obvious benefits to storing your pipelines as code: they become an artifact in source control that can evolve and change as the code they build or deploy does, and you have the benefits of version history and maintaining the pipelines via pull requests. However I also found that I could use logic and expressions to make the pipelines more efficient and easier to maintain and that through templating could easily connect the pipelines together to form what I humorously dubbed the “super pipeline” (but then the name stuck). In this blog post I will explain the approach I took and the advantages/disadvantages I discovered.",
            "title": "Converting Azure DevOps Classic Release deployment pipelines to YAML",
            "link": "https://wragg.io/converting-azure-devops-classic-release-pipelines-to-yaml/",
            "published": "2024-04-02T12:00:00.000Z",
            "author": "mark@wragg.io",
            "media": []
        },
        {
            "id": "https://powershellisfun.com/?p=7075",
            "tags": [
                "Formatting",
                "Logs",
                "Networking",
                "Security"
            ],
            "description": "One of our customers had issues authenticating clients using NPS. One of the first things you do is&#8230; I read the NPS logs, and they were DTS Compliant formatted, a bit of a pain to read and search 🙁 So, I used PowerShell to create a nice log for me in either a GridView or &#8230; <a href=\"https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">Use PowerShell to create report of a DTS Compliant NPS log</span></a>",
            "title": "Use PowerShell to create report of a DTS Compliant NPS log",
            "link": "https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/",
            "published": "2024-03-28T15:11:00.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3849",
            "tags": [
                "AI",
                "CLI",
                "Copilot",
                "GitHub",
                "PowerShell",
                "Zsh"
            ],
            "description": "<figure class=\"wp-block-image size-large\"><img fetchpriority=\"high\" decoding=\"async\" width=\"1024\" height=\"538\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png\" alt=\"\" class=\"wp-image-3861\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png 1024w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-300x158.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-768x403.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1536x806.png 1536w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-2048x1075.png 2048w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-514x270.png 514w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-850x446.png 850w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n<p>It was announced recently that GitHub Copilot in the CLI has reached General Availablity for all Individual, Business, and Enterprise customers. In this post, I will show you how you can get download and install the CLI and Copilot extension, authenticate to use Copilot, and the available commands and use cases. </p>\n<h1 class=\"wp-block-heading\">Install the GitHub CLI</h1>\n<h2 class=\"wp-block-heading\">Windows </h2>\n<p>With Windows, we can install the GitHub CLI via the command line (Winget, Chocolatey, or Scoop)  or manually from <a href=\"https://cli.github.com/\" target=\"_blank\" rel=\"noopener\" title=\"\">here</a>.</p>\n<h3 class=\"wp-block-heading\">Winget</h3>\n<p>With Winget, we can install the GitHub CLI using the following command: </p>\n<div class=\"wp-block-kevinbatdorf-code-block-pro\" data-code-block-pro-font-family=\"\" style=\"font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"winget install --id GitHub.cli\" style=\"color:#d8dee9ff;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path></svg></span></p>\n<pre class=\"shiki nord\" style=\"background-color: #2e3440ff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #88C0D0\">winget</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">install</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">--id</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">GitHub.cli</span></span></code></pre>\n</div>\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" width=\"804\" height=\"543\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png\" alt=\"\" class=\"wp-image-3864\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png 804w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-300x203.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-768x519.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-400x270.png 400w\" sizes=\"(max-width: 804px) 100vw, 804px\" /></figure>\n<h2 class=\"wp-block-heading\">MacOS</h2>\n<p>With MacOS, we can install the GitHub CLI via homebrew or manually from <a href=\"https://cli.github.com/\" target=\"_blank\" rel=\"noopener\" title=\"here\">here</a>.</p>\n<h3 class=\"wp-block-heading\">Homebrew</h3>\n<p>Using homebrew, run the following command:</p>\n<div class=\"wp-block-kevinbatdorf-code-block-pro\" data-code-block-pro-font-family=\"\" style=\"font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"brew install gh\" style=\"color:#d8dee9ff;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path></svg></span></p>\n<pre class=\"shiki nord\" style=\"background-color: #2e3440ff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #88C0D0\">brew</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">install</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">gh</span></span></code></pre>\n</div>\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" width=\"822\" height=\"700\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png\" alt=\"\" class=\"wp-image-3850\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png 822w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-300x255.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-768x654.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-317x270.png 317w\" sizes=\"(max-width: 822px) 100vw, 822px\" /></figure>\n<h1 class=\"wp-block-heading\">Authenticate </h1>\n<p><strong>Note</strong>: In order to use Copilot in the CLI, you must have an active GitHub Copilot subscription. </p>\n<p>Once you have a valid subscription to use Copilot, run the &#8230; <a href=\"https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/\">Getting Started with GitHub Copilot in the CLI</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Getting Started with GitHub Copilot in the CLI",
            "link": "https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/",
            "published": "2024-03-22T16:42:13.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"538\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png\" alt=\"\" class=\"wp-image-3861\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png 1024w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-300x158.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-768x403.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1536x806.png 1536w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-2048x1075.png 2048w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-514x270.png 514w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-850x446.png 850w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<p>It was announced recently that GitHub Copilot in the CLI has reached General Availablity for all Individual, Business, and Enterprise customers. In this post, I will show you how you can get download and install the CLI and Copilot extension, authenticate to use Copilot, and the available commands and use cases. </p>\n\n\n\n<h1 class=\"wp-block-heading\">Install the GitHub CLI</h1>\n\n\n\n<h2 class=\"wp-block-heading\">Windows </h2>\n\n\n\n<p>With Windows, we can install the GitHub CLI via the command line (Winget, Chocolatey, or Scoop)  or manually from <a href=\"https://cli.github.com/\" target=\"_blank\" rel=\"noopener\" title=\"\">here</a>.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Winget</h3>\n\n\n\n<p>With Winget, we can install the GitHub CLI using the following command: </p>\n\n\n\n<div class=\"wp-block-kevinbatdorf-code-block-pro\" data-code-block-pro-font-family=\"\" style=\"font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"winget install --id GitHub.cli\" style=\"color:#d8dee9ff;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path></svg></span><pre class=\"shiki nord\" style=\"background-color: #2e3440ff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #88C0D0\">winget</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">install</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">--id</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">GitHub.cli</span></span></code></pre></div>\n\n\n\n<p></p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"804\" height=\"543\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png\" alt=\"\" class=\"wp-image-3864\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png 804w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-300x203.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-768x519.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-400x270.png 400w\" sizes=\"(max-width: 804px) 100vw, 804px\" /></figure>\n\n\n\n<h2 class=\"wp-block-heading\">MacOS</h2>\n\n\n\n<p>With MacOS, we can install the GitHub CLI via homebrew or manually from <a href=\"https://cli.github.com/\" target=\"_blank\" rel=\"noopener\" title=\"here\">here</a>.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Homebrew</h3>\n\n\n\n<p>Using homebrew, run the following command:</p>\n\n\n\n<div class=\"wp-block-kevinbatdorf-code-block-pro\" data-code-block-pro-font-family=\"\" style=\"font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"brew install gh\" style=\"color:#d8dee9ff;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path></svg></span><pre class=\"shiki nord\" style=\"background-color: #2e3440ff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #88C0D0\">brew</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">install</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">gh</span></span></code></pre></div>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"822\" height=\"700\" src=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png\" alt=\"\" class=\"wp-image-3850\" srcset=\"https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png 822w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-300x255.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-768x654.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-317x270.png 317w\" sizes=\"(max-width: 822px) 100vw, 822px\" /></figure>\n\n\n\n<h1 class=\"wp-block-heading\">Authenticate </h1>\n\n\n\n<p><strong>Note</strong>: In order to use Copilot in the CLI, you must have an active GitHub Copilot subscription. </p>\n\n\n\n<p>Once you have a valid subscription to use Copilot, run the &hellip; <a href=\"https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/\" class=\"read-more\">Continue... </a></p><p>The post <a href=\"https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/\">Getting Started with GitHub Copilot in the CLI</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://powershellisfun.com/?p=7006",
            "tags": [
                "PowerShell"
            ],
            "description": "One of our customers sought a solution to disable Idle Power Save on their Realtek USB GbE network adapters using Intune. Because of that setting, their users were disconnected from their Remote Desktop sessions multiple times during the day. This blog post will show you how to disable that setting using Intune, a Windows app (Win32), or a Remediation script.",
            "title": "Disabling Idle Power Save using Intune and PowerShell",
            "link": "https://powershellisfun.com/2024/03/21/disabling-idle-power-save-using-intune-and-powershell/",
            "published": "2024-03-21T15:04:19.000Z",
            "author": {
                "#text": "Harm Veenstra",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3828",
            "tags": [
                "Uncategorized"
            ],
            "description": "<h1 class=\"wp-block-heading\">Introduction</h1>\n<p>If you&#8217;re familiar with Intune, you&#8217;re likely aware of its capability to deploy platform or PowerShell scripts to your endpoint devices. Unfortunately, once you upload your script to the portal, there is (at the time of writing this) no easy way to view the script content or download it. </p>\n<h1 class=\"wp-block-heading\">Resolution </h1>\n<p>To quickly and easily get Intune scripts, I created a function that allows me to export all the scripts from a tenant en masse and view them in the shell or terminal. Sometimes, I am auditing a new tenant and have no need to download the scripts to my local machine; I need to audit the code behind it to get an idea of what is being performed. Additionally, I added some other quality-of-life features that I did not find in other scripts online. </p>\n<h2 class=\"wp-block-heading\">Features</h2>\n<h3 class=\"wp-block-heading\">Platform Agnostic</h3>\n<p>The function will work on PowerShell Core (pwsh) and Windows PowerShell. Allowing &#8230; <a href=\"https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/\">View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK",
            "link": "https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/",
            "published": "2024-03-15T12:10:55.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<h1 class=\"wp-block-heading\">Introduction</h1>\n\n\n\n<p>If you&#8217;re familiar with Intune, you&#8217;re likely aware of its capability to deploy platform or PowerShell scripts to your endpoint devices. Unfortunately, once you upload your script to the portal, there is (at the time of writing this) no easy way to view the script content or download it. </p>\n\n\n\n<h1 class=\"wp-block-heading\">Resolution </h1>\n\n\n\n<p>To quickly and easily get Intune scripts, I created a function that allows me to export all the scripts from a tenant en masse and view them in the shell or terminal. Sometimes, I am auditing a new tenant and have no need to download the scripts to my local machine; I need to audit the code behind it to get an idea of what is being performed. Additionally, I added some other quality-of-life features that I did not find in other scripts online. </p>\n\n\n\n<h2 class=\"wp-block-heading\">Features</h2>\n\n\n\n<h3 class=\"wp-block-heading\">Platform Agnostic</h3>\n\n\n\n<p>The function will work on PowerShell Core (pwsh) and Windows PowerShell. Allowing &hellip; <a href=\"https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/\" class=\"read-more\">Continue... </a></p><p>The post <a href=\"https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/\">View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://blog.victorsilva.com.uy/",
            "tags": [
                "Terraform",
                "PowerShell",
                "Terraform",
                "PowerShell",
                "IaC"
            ],
            "title": "Terraform outputs en PowerShell",
            "link": "https://blog.victorsilva.com.uy/terraform-outputs-powershell/",
            "published": "2024-03-13T19:25:47.000Z",
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9343",
            "tags": [
                "GitHub",
                "PowerShell",
                "Scripting"
            ],
            "description": "Earlier this year I appeared on the PowerShell Podcast. I ended the interview with a scripting challenge. The Core Challenge Using whatever tools and techniques you want, write a PowerShell function that will query the Issues section of a GitHub repository and create output showing the number of open issues by label and the percentage...",
            "title": "GitHub Scripting Challenge Solution",
            "link": "https://jdhitsolutions.com/blog/powershell/9343/github-scripting-challenge-solution/",
            "published": "2024-03-07T18:45:25.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9327",
            "tags": [
                "Conferences",
                "PowerShell",
                "Professional",
                "Automation",
                "conferences"
            ],
            "description": "I have been an IT professional for over 30 years. I have been speaking publicly and presenting at conferences for probably 25 years. I have presented to all types of groups, from small user groups to large conferences, literally around the world. As I enter the last part of my IT career, I am re-assessing...",
            "title": "My Conference Future",
            "link": "https://jdhitsolutions.com/blog/conferences/9327/my-conference-future/",
            "published": "2024-03-04T14:24:23.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://blog.darrenjrobinson.com/?p=49306",
            "tags": [
                "PowerShell",
                "Dall-e",
                "OpenAI"
            ],
            "description": "<p>A few weeks back the<a href=\"https://envision.microsoft.com/en-US/sydney\" target=\"_blank\" rel=\"noreferrer noopener\"> Microsoft AI Tour</a> was in Sydney Australia. There was a plethora of great content associated with the wave of everything AI that we are currently in. </p>\n<p>I gave a quick-fire series of live demos in a theatre session titled <strong><a href=\"https://envision.microsoft.com/en-US/sessions/4d466cb8-34de-4bfb-a357-bd7812f5635c?source=/speakers/b9e443b2-27c6-4d89-8e33-1f5c8d12e327\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell &#38; ChatGPT &#8211; How to Automate Your Way to Generative AI Brilliance</a></strong>.&#8230; <a href=\"https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/\" class=\"read-more\">keep reading </a></p>\n<p>The post <a href=\"https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/\">Visualising your IP Address using PowerShell and AI</a> appeared first on <a href=\"https://blog.darrenjrobinson.com\">darrenjrobinson - Bespoke Identity and Access Management Solutions</a>.</p>",
            "title": "Visualising your IP Address using PowerShell and AI",
            "link": "https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/",
            "published": "2024-03-04T01:00:00.000Z",
            "author": {
                "#text": "Darren Robinson",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell",
            "tags": [
                "powershell",
                "azure",
                "azurespringclean",
                "module",
                "costmanagement",
                "cloudcomputing"
            ],
            "description": "Should cloud computing be illegal? Probably not, but it is incredibly easy to get started, equally difficult to stop, and before you know it you could be selling your grandmother just to afford one more month of that delicious compute. Hopefully your circumstances never get that dire, but I’ve seen plenty of companies entrench themselves into the highly addictive world of automated, scalable infrastructure, but then struggle to understand the often-astronomical monthly bill.",
            "title": "Monitor and manage your Azure cloud costs with a little help from PowerShell",
            "link": "https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell/",
            "published": "2024-03-02T09:00:00.000Z",
            "author": "mark@wragg.io",
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9325",
            "tags": [
                "PowerShell",
                "Scripting",
                "Automation"
            ],
            "description": "The other day on X, I was asked about what things I would setup or configure on a new PowerShell installation. This is something I actually have thought about and face all the time when I setup a new demo virtual machine. I had been meaning to build new tooling to meet this challenge, and...",
            "title": "PowerShell Refresh",
            "link": "https://jdhitsolutions.com/blog/powershell/9325/powershell-refresh/",
            "published": "2024-03-01T14:04:57.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9323",
            "tags": [
                "PowerShell",
                "module",
                "New-Item",
                "symbolic link"
            ],
            "description": "I know it has been a while since I've given the blog any attention. I am hoping to correct that in 2024, although I'm already behind schedule. But let's get to it. I have a short tip today that you may find useful, especially if you write modules for your private use. I have a...",
            "title": "Module Linking",
            "link": "https://jdhitsolutions.com/blog/powershell/9323/module-linking/",
            "published": "2024-02-27T14:14:16.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://blog.it-koehler.com/?p=5658",
            "tags": [
                "common",
                "Microsoft Exchange Server",
                "Microsoft Office 365"
            ],
            "description": "<p>Some days ago I got a ticket where someone could not load his calendar in Microsoft Teams. Outlook worked fine the only thing was Out of Office Notification, also did not work. After some research I found the solution by activating EWS on this specific mailbox. One our later everything was fine. You can find &#8230; </p>\n<p class=\"link-more\"><a href=\"https://blog.it-koehler.com/en/Archive/5658\" class=\"more-link\">Read more<span class=\"screen-reader-text\"> \"Exchange Online mailbox apps check via PowerShell\"</span></a></p>\n<p>Articel <a href=\"https://blog.it-koehler.com/en/Archive/5658\">Exchange Online mailbox apps check via PowerShell</a> available first on <a href=\"https://blog.it-koehler.com/en\">IT koehler blog</a>.</p>",
            "title": "Exchange Online mailbox apps check via PowerShell",
            "link": "https://blog.it-koehler.com/en/Archive/5658",
            "published": "2024-02-16T14:30:21.000Z",
            "author": {
                "#text": "A.K.",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://baswijdenes.com/?p=29306",
            "tags": [
                "Microsoft",
                "PowerShell"
            ],
            "description": "<p>Microsoft.PowerShell.Utility &#38; Microsoft.PowerShell.Management Cannot find the built-in module that is compatible with the edition. Please make sure the PowerShell built-in modules are available. They usually come with the PowerShell package under the $PSHOME module path, and are required for PowerShell to function properly. If you made this error, you screwed up big time.But luckily, it&#8217;s &#8230; <a href=\"https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: Cannot find built-in module that is compatible with the edition</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/\">FIX: Cannot find built-in module that is compatible with the edition</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: Cannot find built-in module that is compatible with the edition",
            "link": "https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/",
            "published": "2024-02-16T06:33:53.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://wragg.io/Perform-currency-conversion-with-PowerShell",
            "tags": [
                "powershell",
                "api",
                "module",
                "currency"
            ],
            "description": "I’ve recently been working on a PowerShell module for exploring Azure costs and while doing so added some functionality to allow the costs to be converted between different currencies. It occurred to me that this functionality would be useful as a module of its own, and when I searched around I didn’t find too many recent examples for the same. As such I’ve now developed and published a module in the PowerShell Gallery and on GitHub called CurrencyConverter.",
            "title": "Perform Currency Conversions with PowerShell",
            "link": "https://wragg.io/Perform-currency-conversion-with-PowerShell/",
            "published": "2024-02-08T13:30:00.000Z",
            "author": "mark@wragg.io",
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/2024/02/08/quick-fix-meeting-room-booking-window",
            "tags": [
                "PowerShell",
                "PowerShell",
                "Microsoft",
                "Exchange"
            ],
            "description": "So I got a task to expand the booking window for all the meeting rooms at work. From the default 180 days to 365 days. This isn’t anything big or complicated to do. It’s an everyday task really. But I was wondering, how short can I make the PowerShell script to do this for all meeting rooms?",
            "title": "Quickly exanding the booking window of all meeting rooms in Microsoft 365",
            "link": "http://www.randriksen.net/powershell/2024/02/08/quick-fix-meeting-room-booking-window.html",
            "published": "2024-02-08T00:00:00.000Z",
            "media": []
        },
        {
            "id": "https://powershell.ro/?p=225",
            "tags": [
                "Automation",
                "Powershell",
                "VMWare",
                "CISCore",
                "CISTAG",
                "Get-CISTag",
                "modify vm tag",
                "New-CISTagAssignment",
                "powercli",
                "vcenter",
                "vm tag management",
                "vm tags"
            ],
            "description": "In this blog post, we&#8217;ll explore the process of assigning tags to multiple VMs using the CIStag module in PowerShell. This becomes necessary when the conventional PowerCLI module for tagging VMs fails, as was the case for me. Discovering a solution in a VMware blog post (https://blogs.vmware.com/PowerCLI/2018/12/new-tag-management-module.html), I learned about the CIStag module for effective [&#8230;]",
            "title": "Tagging Virtual Machines with the CISTag Module in PowerShell",
            "link": "https://powershell.ro/tagging-virtual-machines-with-the-cistag-module-in-powershell/",
            "published": "2024-02-01T13:15:32.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>In this blog post, we&#8217;ll explore the process of assigning tags to multiple VMs using the CIStag module in PowerShell. This becomes necessary when the conventional PowerCLI module for tagging VMs fails, as was the case for me.</p>\n\n\n\n<p>Discovering a solution in a VMware blog post (https://blogs.vmware.com/PowerCLI/2018/12/new-tag-management-module.html), I learned about the CIStag module for effective VM tag management. After downloading and installing the module on my Windows server, I proceeded to utilize it for assigning tags to VMs.</p>\n\n\n\n<p>The script provided in this post is specifically designed to establish a connection with a vCenter server, extract a list of VMs from the input file, and then assign the appropriate tags.</p>\n\n\n\n<p>The VMware.Community.CISTag module enhances vSphere tag management by leveraging the vSphere REST API for improved automation. With functions like tag gathering, assignment, and removal, it addresses challenges in larger environments. Notable performance improvements, such as a 25% speed boost in environments with 400 tags, make it a valuable resource. Downloadable from the PowerCLI Community Repository, the module also exhibits increased reliability, overcoming common issues like timeout errors. Users are encouraged to explore and share their experiences with this powerful tool.</p>\n\n\n\n<h3 class=\"wp-block-heading\">The script:</h3>\n\n\n\n<p>The script is designed to connect to a vCenter server, get list of VMs from the input file and assign the tag.</p>\n\n\n\n<p class=\"has-medium-font-size\"></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# Import required modules\nImport-Module -Name VMware.Community.CISTag\nImport-Module -Name VMware.VIMAutomation.Cis.Core\n\n# Get vCenter Server credentials\n$VCSACreds = Get-Credential\n\n# Connect to vCenter Server\nConnect-CisServer -Server VCSA_FQDN -Credential $VCSACreds\n\n# Read VM names from input file\n$vms = Get-Content -Path &quot;input_file.txt&quot;\n\n# Specify the tag to be assigned\n$TAGName = &quot;No Job&quot;\n\n# Loop through each VM and assign the tag\nforeach ($VM in $vms) {\n    Write-Host &quot;Configuring 'No Job' tag for $VM&quot;\n    New-CISTagAssignment -Tag (Get-CISTag -Name $TAGName).Name -Entity $VM \n    Write-Host &quot;Configuration completed for $VM&quot;\n}\n\n# Disconnect from vCenter Server\nDisconnect-CisServer -Server VCSA_FQDN -Confirm:$false\n\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_225\" class=\"pvc_stats all  \" data-element-id=\"225\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://devdojo.com/11900",
            "tags": [
                "json",
                "Classes",
                "schema",
                "powershell",
                "argument",
                "transformation",
                "attribute"
            ],
            "description": "<p>In a recent scripting endeavor, I developed a PowerShell script with an ArgumentTransformationAttribute. The script's purpose was to convert PSCustomObjects or Hashtables into a JSON format tailored for seamless integration with a BatchRequest destined for the Microsoft Graph API.</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JSONTransform</span> : <span class=\"hljs-title\">System</span>.<span class=\"hljs-title\">Management</span>.<span class=\"hljs-title\">Automation</span>.<span class=\"hljs-title\">ArgumentTransformationAttribute</span></span>{\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">object</span>] <span class=\"hljs-title\">Transform</span></span>([<span class=\"hljs-type\">System.Management.Automation.EngineIntrinsics</span>]<span class=\"hljs-variable\">$EngineIntrinsics</span>,[<span class=\"hljs-type\">object</span>]<span class=\"hljs-variable\">$InputData</span>){\n        <span class=\"hljs-variable\">$MandatoryKeys</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"url\"</span>,<span class=\"hljs-string\">\"id\"</span>,<span class=\"hljs-string\">\"method\"</span>)\n        <span class=\"hljs-variable\">$ValidKeys</span> = <span class=\"hljs-variable\">$MandatoryKeys</span>+<span class=\"hljs-selector-tag\">@</span>(,<span class=\"hljs-string\">\"headers\"</span>,<span class=\"hljs-string\">\"body\"</span>)\n        <span class=\"hljs-variable\">$ValidMethods</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"Get\"</span>,<span class=\"hljs-string\">\"Post\"</span>,<span class=\"hljs-string\">\"Put\"</span>,<span class=\"hljs-string\">\"Patch\"</span>,<span class=\"hljs-string\">\"Delete\"</span>)\n\n        <span class=\"hljs-keyword\">Switch</span> (<span class=\"hljs-variable\">$InputData</span>){\n            {<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-is</span> [<span class=\"hljs-type\">PSObject</span>]}{\n                <span class=\"hljs-variable\">$_</span>.psobject.properties.name.ForEach({\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-operator\">-Not</span> <span class=\"hljs-variable\">$ValidKeys</span>.Contains(<span class=\"hljs-variable\">$_</span>)){\n                        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Invalid psobject keys\"</span>\n                    }\n                })       \n                <span class=\"hljs-keyword\">if</span>((<span class=\"hljs-built_in\">Compare-Object</span> <span class=\"hljs-literal\">-ReferenceObject</span> <span class=\"hljs-variable\">$MandatoryKeys</span> <span class=\"hljs-literal\">-DifferenceObject</span> <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-variable\">$_</span>.PSObject.Properties.Name) <span class=\"hljs-literal\">-IncludeEqual</span> <span class=\"hljs-literal\">-ExcludeDifferent</span>).Count <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-variable\">$MandatoryKeys</span>.Count){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Missing mandatory keys\"</span>\n                }         \n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-operator\">-not</span> <span class=\"hljs-variable\">$ValidMethods</span> <span class=\"hljs-operator\">-Contains</span> <span class=\"hljs-variable\">$_</span>.Method){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Method need to be: Get, Delete, Patch, Put, Post\"</span>\n                }\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_</span>.URL <span class=\"hljs-operator\">-notmatch</span> <span class=\"hljs-string\">'^\\/[a-zA-Z0-9\\/$&amp;=?,]+$'</span>){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"the url is not in a proper pattern\"</span>\n                }\n            }\n            {<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-is</span> [<span class=\"hljs-built_in\">hashtable</span>]}{\n                <span class=\"hljs-variable\">$_</span>.Keys.ForEach({\n                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-operator\">-Not</span> <span class=\"hljs-variable\">$ValidKeys</span> <span class=\"hljs-operator\">-Contains</span>(<span class=\"hljs-variable\">$_</span>)){\n                        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Invalid Hashtable keys\"</span>\n                    }\n                })\n                <span class=\"hljs-keyword\">if</span>((<span class=\"hljs-built_in\">Compare-Object</span> <span class=\"hljs-literal\">-ReferenceObject</span> <span class=\"hljs-variable\">$MandatoryKeys</span> <span class=\"hljs-literal\">-DifferenceObject</span> <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-variable\">$_</span>.Keys) <span class=\"hljs-literal\">-IncludeEqual</span> <span class=\"hljs-literal\">-ExcludeDifferent</span>).Count <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-variable\">$MandatoryKeys</span>.Count){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Missing mandatory keys\"</span>\n                }\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-operator\">-not</span> <span class=\"hljs-variable\">$ValidMethods</span> <span class=\"hljs-operator\">-Contains</span> <span class=\"hljs-variable\">$_</span>[<span class=\"hljs-string\">\"Method\"</span>]){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Method need to be: Get, Delete, Patch, Put, Post\"</span>\n                }\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$_</span>[<span class=\"hljs-string\">'URL'</span>] <span class=\"hljs-operator\">-notmatch</span> <span class=\"hljs-string\">'^\\/[a-zA-Z0-9\\/$&amp;=?,]+$'</span>){\n                    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"the url is not in a proper pattern\"</span>\n                }\n            }\n            Default{\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-string\">\"Wrong Input type\"</span>\n            }\n            \n        }\n        <span class=\"hljs-variable\">$ReturnObject</span> = <span class=\"hljs-selector-tag\">@</span>{\n            requests = <span class=\"hljs-variable\">$InputData</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$ReturnObject</span> | <span class=\"hljs-built_in\">ConvertTo-Json</span> <span class=\"hljs-literal\">-Depth</span> <span class=\"hljs-number\">4</span>\n    }\n}\n</code></pre>\n<p>Amidst this coding journey, redundancy surfaced within the class. Seeking a streamlined approach, I explored JSON-Schema validation, an efficient solution. This method allowed me to encapsulate all necessary specifications within a single schema, eliminating the need to differentiate between object types.</p>\n<pre><code class=\"hljs powershell\">{\n  <span class=\"hljs-string\">\"properties\"</span>: {\n    <span class=\"hljs-string\">\"requests\"</span>: {\n      <span class=\"hljs-string\">\"items\"</span>: {\n        <span class=\"hljs-string\">\"properties\"</span>: {\n          <span class=\"hljs-string\">\"body\"</span>: {\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"object\"</span>\n          },\n          <span class=\"hljs-string\">\"url\"</span>: {\n            <span class=\"hljs-string\">\"pattern\"</span>: <span class=\"hljs-string\">\"^\\\\/[a-zA-Z0-9\\\\/<span class=\"hljs-variable\">$</span>&amp;=?,]+<span class=\"hljs-variable\">$</span>\"</span>,\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\n          },\n          <span class=\"hljs-string\">\"id\"</span>: {\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\n          },\n          <span class=\"hljs-string\">\"headers\"</span>: {\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"object\"</span>\n          },\n          <span class=\"hljs-string\">\"method\"</span>: {\n            <span class=\"hljs-string\">\"enum\"</span>: [\n              <span class=\"hljs-string\">\"GET\"</span>,\n              <span class=\"hljs-string\">\"PUT\"</span>,\n              <span class=\"hljs-string\">\"PATCH\"</span>,\n              <span class=\"hljs-string\">\"POST\"</span>,\n              <span class=\"hljs-string\">\"DELETE\"</span>\n            ],\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\n          }\n        },\n        <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"object\"</span>,\n        <span class=\"hljs-string\">\"propertyNames\"</span>: {\n          <span class=\"hljs-string\">\"enum\"</span>: [\n            <span class=\"hljs-string\">\"id\"</span>,\n            <span class=\"hljs-string\">\"method\"</span>,\n            <span class=\"hljs-string\">\"url\"</span>,\n            <span class=\"hljs-string\">\"headers\"</span>,\n            <span class=\"hljs-string\">\"body\"</span>\n          ]\n        },\n        <span class=\"hljs-string\">\"required\"</span>: [\n          <span class=\"hljs-string\">\"id\"</span>,\n          <span class=\"hljs-string\">\"method\"</span>,\n          <span class=\"hljs-string\">\"url\"</span>\n        ]\n      },\n      <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"array\"</span>\n    }\n  },\n  <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"object\"</span>,\n  <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$schema</span>\"</span>: <span class=\"hljs-string\">\"http://json-schema.org/draft-07/schema#\"</span>,\n  <span class=\"hljs-string\">\"required\"</span>: [\n    <span class=\"hljs-string\">\"requests\"</span>\n  ]\n}\n</code></pre>\n<p>The class underwent a transformation, shedding redundancy in favor of clarity. The code now validates objects against the JSON schema, ensuring adherence to predefined rules.</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JSONTransform</span> : <span class=\"hljs-title\">System</span>.<span class=\"hljs-title\">Management</span>.<span class=\"hljs-title\">Automation</span>.<span class=\"hljs-title\">ArgumentTransformationAttribute</span></span>{\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">object</span>] <span class=\"hljs-title\">Transform</span></span>([<span class=\"hljs-type\">System.Management.Automation.EngineIntrinsics</span>]<span class=\"hljs-variable\">$EngineIntrinsics</span>,[<span class=\"hljs-type\">object</span>]<span class=\"hljs-variable\">$InputData</span>){\n        <span class=\"hljs-variable\">$batchGraphRequestSchema</span> = <span class=\"hljs-selector-tag\">@</span>{\n            <span class=\"hljs-string\">'$schema'</span> = <span class=\"hljs-string\">'http://json-schema.org/draft-07/schema#'</span>\n            <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'object'</span>\n            <span class=\"hljs-string\">'properties'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                <span class=\"hljs-string\">'requests'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                    <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'array'</span>\n                    <span class=\"hljs-string\">'items'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                        <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'object'</span>\n                        <span class=\"hljs-string\">'properties'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                            <span class=\"hljs-string\">'id'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                                <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'string'</span>\n                            }\n                            <span class=\"hljs-string\">'method'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                                <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'string'</span>\n                                <span class=\"hljs-string\">'enum'</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">'GET'</span>, <span class=\"hljs-string\">'PUT'</span>, <span class=\"hljs-string\">'PATCH'</span>, <span class=\"hljs-string\">'POST'</span>, <span class=\"hljs-string\">'DELETE'</span>)\n                            }\n                            <span class=\"hljs-string\">'url'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                                <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'string'</span>\n                                <span class=\"hljs-string\">'pattern'</span> = <span class=\"hljs-string\">'^\\/[a-zA-Z0-9\\/$&amp;=?,]+$'</span>\n                            }\n                            <span class=\"hljs-string\">'headers'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                                <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'object'</span>\n                                <span class=\"hljs-comment\"># Additional properties for headers schema if needed</span>\n                            }\n                            <span class=\"hljs-string\">'body'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                                <span class=\"hljs-string\">'type'</span> = <span class=\"hljs-string\">'object'</span>\n                                <span class=\"hljs-comment\"># Additional properties for body schema if needed</span>\n                            }\n                        }\n                        <span class=\"hljs-string\">'required'</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">'id'</span>, <span class=\"hljs-string\">'method'</span>, <span class=\"hljs-string\">'url'</span>)\n                        <span class=\"hljs-string\">'propertyNames'</span> = <span class=\"hljs-selector-tag\">@</span>{\n                            <span class=\"hljs-string\">'enum'</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">'id'</span>, <span class=\"hljs-string\">'method'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'headers'</span>, <span class=\"hljs-string\">'body'</span>)\n                        }\n                    }\n                }\n            }\n            <span class=\"hljs-string\">'required'</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">'requests'</span>)\n        }\n        <span class=\"hljs-comment\">#Todo spin up multiple batches if number exceed 20.</span>\n        <span class=\"hljs-variable\">$ReturnObject</span> = <span class=\"hljs-selector-tag\">@</span>{\n            requests = <span class=\"hljs-variable\">$InputData</span>\n        } | <span class=\"hljs-built_in\">ConvertTo-Json</span> <span class=\"hljs-literal\">-Depth</span> <span class=\"hljs-number\">6</span>\n\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-variable\">$ReturnObject</span> | <span class=\"hljs-built_in\">Test-Json</span> <span class=\"hljs-literal\">-Schema</span> <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$batchGraphRequestSchema</span> | <span class=\"hljs-built_in\">Convertto-Json</span> <span class=\"hljs-literal\">-Depth</span> <span class=\"hljs-number\">6</span>) <span class=\"hljs-literal\">-ErrorAction</span> Stop\n        }\n        <span class=\"hljs-keyword\">catch</span> {\n            <span class=\"hljs-built_in\">write-host</span> <span class=\"hljs-variable\">$ReturnObject</span>\n            \n            <span class=\"hljs-keyword\">Throw</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message). JSON Schema did not match\"</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$ReturnObject</span>\n    }\n}\n</code></pre>\n<p>This approach not only improves the transformation for Graph API batch requests but also holds promise for broader applications in parameter validation scenarios. The JSON schema is a versatile tool, ready to enforce rules and ensure data integrity. Stay tuned for more coding adventures!</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian</p>",
            "title": "Simplifying PowerShell Object Validation &amp; Transforming: A JSON-Schema Refactoring Journey",
            "link": "https://devdojo.com/hcritter/simplifying-powershell-object-validation-transforming-a-json-schema-refactoring-journey",
            "published": "2024-01-24T09:06:23.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://tseknet.com/blog/modeldrivers",
            "tags": [
                "blog",
                "powershell",
                "windows",
                "SCCM",
                "automation",
                "opensource"
            ],
            "description": "Automatically download the latest device drivers during Windows OS deployment (Dell, Lenovo, HP, etc.).",
            "title": "How to Automatically Download the Latest Windows Device Drivers",
            "link": "https://tseknet.com/blog/modeldrivers",
            "published": "2022-10-23T00:00:00.000Z",
            "author": "dan@tseknet.com",
            "image": {
                "src": "https://tseknet.com/assets/img/blog/gettingready.jpg",
                "type": "image"
            },
            "media": [
                {
                    "src": "https://tseknet.com/assets/img/blog/gettingready.jpg",
                    "type": "image"
                }
            ]
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3781",
            "tags": [
                "Graph",
                "PowerShell",
                "API",
                "Automation",
                "Azure",
                "Entra",
                "Office 365",
                "Teams",
                "Users"
            ],
            "description": "<p>In this article I will be showing you how you can automatically have Microsoft Teams set its presence to Do Not Disturb, or any other presence, based on events in your Outlook Calendar. I also looked into leveraging Power Automate but it began to require premium connectors and at that cost, going the serverless automation route was much cheaper. </p>\n<p>An overview of this automation is as follows:</p>\n<ol>\n<li>Run on a set schedule.</li>\n<li>Get all users within the tenant, if the user <strong>does not</strong> have a mailbox, proceed to the next user, if the user <strong>does</strong> have a mailbox proceed to the next step.</li>\n<li>Get the users events that will occur within the next 1 hour (configurable value)</li>\n<li>See if there is an event that matches what we are looking for. In my instance, if an event title/subject is &#8220;DND&#8221; (not case-sensitive) then proceed to the next step, otherwise go to </li>\n</ol>\n<p>&#8230; <a href=\"https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/\">Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events",
            "link": "https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/",
            "published": "2024-01-04T05:30:52.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>In this article I will be showing you how you can automatically have Microsoft Teams set its presence to Do Not Disturb, or any other presence, based on events in your Outlook Calendar. I also looked into leveraging Power Automate but it began to require premium connectors and at that cost, going the serverless automation route was much cheaper. </p>\n\n\n\n<p>An overview of this automation is as follows:</p>\n\n\n\n<ol>\n<li>Run on a set schedule.</li>\n\n\n\n<li>Get all users within the tenant, if the user <strong>does not</strong> have a mailbox, proceed to the next user, if the user <strong>does</strong> have a mailbox proceed to the next step.</li>\n\n\n\n<li>Get the users events that will occur within the next 1 hour (configurable value)</li>\n\n\n\n<li>See if there is an event that matches what we are looking for. In my instance, if an event title/subject is &#8220;DND&#8221; (not case-sensitive) then proceed to the next step, otherwise go to </li></ol>&hellip; <a href=\"https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/\" class=\"read-more\">Continue... </a><p>The post <a href=\"https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/\">Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://powershell.ro/?p=205",
            "tags": [
                "Powershell",
                "VMWare",
                "connect-hpeilo",
                "disconnect-hpeilo",
                "firmware",
                "get-hpeilo",
                "HPEiLOCmdlets",
                "hpeilocmdlets〭4〭0〭0",
                "iloaddress",
                "powercli",
                "set-hpeilo"
            ],
            "description": "The first script of 2024 is about updating the HPE ILO firmware on physical servers using PowerShell. Firmware updates, including those for iLO, often include bug fixes, security patches, and performance enhancements. Regularly updating iLO firmware ensures that your servers are equipped with the latest features, improvements, and security measures, reducing the risk of vulnerabilities [&#8230;]",
            "title": "Update HPE ILO firmware using PowerShell",
            "link": "https://powershell.ro/update-hpe-ilo-firmware-using-powershell/",
            "published": "2024-01-02T16:34:41.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>The first script of 2024 is about updating the HPE ILO firmware on physical servers using PowerShell.</p>\n\n\n\n<p>Firmware updates, including those for iLO, often include bug fixes, security patches, and performance enhancements. Regularly updating iLO firmware ensures that your servers are equipped with the latest features, improvements, and security measures, reducing the risk of vulnerabilities and enhancing overall system stability.</p>\n\n\n\n<h3 class=\"wp-block-heading\">The PowerShell Script:</h3>\n\n\n\n<p>The script is designed to connect to a ILO remote board, iterate through each one, and perform the firmware update as needed.</p>\n\n\n\n<p class=\"has-medium-font-size\">Just to be noted that it was tested on ILO 5 on more than 200 HPE physical servers.</p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# 1. Import the HPEiLOCmdlets module\nImport-Module -Name &quot;C:\\temp\\hpeilocmdlets.4.0.0\\HPEiLOCmdlets.psd1&quot;\n\n# 2. Declare a variable to use for the connection\n$ILOAccount = Get-Credential\n\n# HPE ILO cmdlets connect to iLO\n# Reading iLO addresses from a text file\n$ILOAddresses = Get-Content -Path &quot;C:\\temp\\ilotargets.txt&quot;\n\n# Loop through each iLO address\nforeach ($ILOAddress in $ILOAddresses) {\n\n    # Establishing a connection to the iLO\n    $Connection = Connect-HPEiLO -Address $ILOAddress -Credential $ILOAccount -DisableCertificateAuthentication:$true -Timeout 60 -Verbose\n\n    # 3. Checking the iLO firmware version before updating\n    Get-HPEiLOFirmwareVersion -Connection $Connection | Select-Object Hostname, FirmwareVersion \n\n    # 4. Upgrading the HPE iLO firmware\n    $task = Update-HPEiLOFirmware -Connection $Connection -Location &quot;C:\\temp\\ilo5_300.fwpkg&quot; -UploadTimeout 300 -UpdateRepository:$true -TPMEnabled:$true -confirm:$false\n\n}\n\n\n # Loop through each iLO address\nforeach ($ILOAddress in $ILOAddresses) {   \n\n    # Reconnect to iLO after the update\n    $Connection = Connect-HPEiLO -Address $ILOAddress -Credential $ILOAccount -DisableCertificateAuthentication:$true -Timeout 60\n\n    # 5. Checking the iLO firmware version after updating\n    Get-HPEiLOFirmwareVersion -Connection $Connection | Select-Object Hostname, FirmwareVersion\n\n# Disconnect from iLO after completing the updates\nDisconnect-HPEiLO -Connection $Connection\n}\n</pre></div>\n\n\n<p>This script does the following:</p>\n\n\n\n<ol>\n<li>Imports the HPEiLOCmdlets module.</li>\n\n\n\n<li>Declares a variable for the iLO account credentials.</li>\n\n\n\n<li>Reads iLO addresses from a text file.</li>\n\n\n\n<li>Connects to each iLO using the provided credentials and addresses.</li>\n\n\n\n<li>Checks the iLO firmware version before updating.</li>\n\n\n\n<li>Updates the iLO firmware using the specified package.</li>\n\n\n\n<li>Reconnects to iLO after the update.</li>\n\n\n\n<li>Checks the iLO firmware version again after updating.</li>\n\n\n\n<li>Disconnects from iLO after completing the updates.</li>\n</ol>\n\n\n\n<p></p>\n\n\n\n<p></p>\n\n\n\n<p>Feel free to customize this script based on your specific reporting requirements and share your experiences or improvements in the comments below!</p>\n\n\n\n<p>It should be noted that the script is not entirely authored by me; certain information and code snippets are sourced from various places, including blogs, GitHub repositories, and community forums.</p>\n<div class=\"pvc_clear\"></div><p id=\"pvc_stats_205\" class=\"pvc_stats all  \" data-element-id=\"205\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20excel,%20copilot/2024/01/02/Videos-In-Review-2023",
            "tags": [
                "PowerShell, PowerShellAI, OpenAI, Azure OpenAI, Excel, Copilot",
                "PowerShell, PowerShellAI, OpenAI, Azure OpenAI, Excel, Copilot"
            ],
            "title": "2023 Videos In Review 2023",
            "link": "https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20excel,%20copilot/2024/01/02/Videos-In-Review-2023.html",
            "published": "2024-01-02T09:00:00.000Z",
            "media": []
        },
        {
            "id": "https://www.dowst.dev/?p=3760",
            "tags": [
                "Uncategorized"
            ],
            "description": "2023 was quite the year for me and PowerShell, so I thought I would put together a brief summary of the year as I saw it. Plus provide you with some fun and interesting statics from the PowerShell Weekly newsletter. This year was also a huge year for me. My book Practical Automation with PowerShell [&#8230;]",
            "title": "2023: A PowerShell Year in Review",
            "link": "https://www.dowst.dev/2023-a-powershell-year-in-review/",
            "published": "2023-12-22T14:00:26.000Z",
            "author": {
                "#text": "Matthew Dowst",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p class=\"\">2023 was quite the year for me and PowerShell, so I thought I would put together a brief summary of the year as I saw it. Plus provide you with some fun and interesting statics from the PowerShell Weekly newsletter.</p>\n\n\n\n<p class=\"\">This year was also a huge year for me. My book <a href=\"https://www.manning.com/books/practical-automation-with-powershell?ar=false&amp;lpse=B\">Practical Automation with PowerShell</a> was released in April. This book aims to help you take your PowerShell skills to the next level and create full enterprise-ready automations. It was a real labor of lover to share my experiences in automation with the world. And I hope everyone who has read it has found it useful.</p>\n\n\n\n<p class=\"\">I’m looking forward to 2024 where I plan on making some major updates to some of my community module, publish more blog content, and in general continue my journey with PowerShell and technology in general. But I know most of you aren’t here to read about me, so here is my recap of some of the highlights from this year. </p>\n\n\n\n<h2 class=\"wp-block-heading\">PowerShell Platform</h2>\n\n\n\n<p class=\"\">• <a href=\"https://devblogs.microsoft.com/powershell/powershell-7-4-general-availability/\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell 7.4</a> was made generally available in November and is now built on .NET 8. <br>• The new package manager, <a href=\"https://github.com/PowerShell/PSResourceGet\" target=\"_blank\" rel=\"noreferrer noopener\">PSResourceGet </a>was released and is now included in PowerShell 7.4.<br>• <a href=\"https://learn.microsoft.com/en-us/powershell/microsoftgraph/get-started?view=graph-powershell-1.0\" target=\"_blank\" rel=\"noreferrer noopener\">Microsoft Graph</a> modules have now officially replaced the Azure AD modules. <br>• There were also new releases for <a href=\"https://devblogs.microsoft.com/powershell/psreadline-2-3-4-ga-release/\" target=\"_blank\" rel=\"noreferrer noopener\">PSReadLine </a>and <a href=\"https://devblogs.microsoft.com/powershell/announcing-powershell-crescendo-1-1-0/\" target=\"_blank\" rel=\"noreferrer noopener\">Crescendo</a>.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Community</h2>\n\n\n\n<p class=\"\">• <a href=\"https://powershellpodcast.podbean.com/\" target=\"_blank\" rel=\"noreferrer noopener\">The PowerShell Podcast</a> is still going strong with weekly releases and are almost up to 100 episodes. <br>• <a href=\"https://www.meetup.com/pacific-powershell-user-group/\" target=\"_blank\" rel=\"noreferrer noopener\">The Pacific PowerShell User Group</a> was started, and many local user groups are still going strong. Most notably the <a href=\"https://www.meetup.com/nycpowershellmeetup/\" target=\"_blank\" rel=\"noreferrer noopener\">New York PowerShell Meetup</a> and <a href=\"https://rtpsug.com/\" target=\"_blank\" rel=\"noreferrer noopener\">Research Triangle PowerShell User Group</a>. (If you know of other PowerShell user groups please let me know and I’ll add them here.)<br>• This year was also my time presenting at the PowerShell + DevOps Global Summit. It was great getting to meet so many member of the community in person. Be sure to check out the <a href=\"https://www.youtube.com/watch?v=YYESMmlAeDc&amp;list=PLE7tQUdRKcyYKuZmmRf9gFzvSw2uDon5u&amp;index=55\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell + DevOps Global Summit 2023 playlist</a> on YouTube for my presentation and all of the others. And don’t forget to purchase your tickets to the <a href=\"https://powershell.org/2023/05/powershell-devops-global-summit-2024/\" target=\"_blank\" rel=\"noreferrer noopener\">2024 summit</a>. </p>\n\n\n\n<h2 class=\"wp-block-heading\">PowerShell Weekly by the Numbers</h2>\n\n\n\n<p class=\"\">For those who aren’t aware <a href=\"https://psweekly.dowst.dev/\">PowerShell Weekly</a> is a weekly collection of PowerShell news, blogs, scripts, and other related media from world the web, that I found useful and wanted to share. With this being the end of the year, I thought I would share some interesting insights and numbers from 2023. Start with the number:</p>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:30%\">\n<p class=\"has-text-align-center\"><font size=\"12\">689</font><br>The total number of links this year</p>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<p class=\"has-text-align-center\"><font size=\"12\">301</font><br>The number of unique contributors</p>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:30%\">\n<p class=\"has-text-align-center\"><font size=\"12\">140</font><br>The number of unique sites</p>\n</div>\n</div>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-2 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:50%\">\n<p class=\"has-text-align-center\"><strong>Top 10 Contributors</strong><br><a href=\"https://psweekly.dowst.dev/profile/the-powershell-podcast/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/the-powershell-podcast/\" target=\"_blank\" rel=\"noreferrer noopener\">The PowerShell Podcast (51)</a><br> <a href=\"https://psweekly.dowst.dev/profile/tony-redmond/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/tony-redmond/\" target=\"_blank\" rel=\"noreferrer noopener\">Tony Redmond (35)</a><br> <a href=\"https://psweekly.dowst.dev/profile/harm-veenstra/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/harm-veenstra/\" target=\"_blank\" rel=\"noreferrer noopener\">Harm Veenstra (34)</a><br> <a href=\"https://psweekly.dowst.dev/profile/patrick-gruenauer/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/patrick-gruenauer/\" target=\"_blank\" rel=\"noreferrer noopener\">Patrick Gruenauer (22)</a><br> <a href=\"https://psweekly.dowst.dev/profile/doug-finke/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/doug-finke/\" target=\"_blank\" rel=\"noreferrer noopener\">Doug Finke (13)</a><br> <a href=\"https://psweekly.dowst.dev/profile/jeff-hicks/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/jeff-hicks/\" target=\"_blank\" rel=\"noreferrer noopener\">Jeff Hicks (12)</a><br> <a href=\"https://psweekly.dowst.dev/profile/the-powershell-team/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/the-powershell-team/\" target=\"_blank\" rel=\"noreferrer noopener\">The PowerShell Team (12)</a><br> <a href=\"https://psweekly.dowst.dev/profile/james-brundage/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/james-brundage/\" target=\"_blank\" rel=\"noreferrer noopener\">James Brundage (10)</a><br> <a href=\"https://psweekly.dowst.dev/profile/nicholas-xuan-nguyen/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/nicholas-xuan-nguyen/\" target=\"_blank\" rel=\"noreferrer noopener\">Nicholas Xuan Nguyen (9)</a><br> <a href=\"https://psweekly.dowst.dev/profile/przemyslaw-klys/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/przemyslaw-klys/\" target=\"_blank\" rel=\"noreferrer noopener\">Przemyslaw Klys (9)</a></p>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:50%\">\n<p class=\"has-text-align-center\"><strong>Top 10 New Comers</strong><br> <a href=\"https://psweekly.dowst.dev/profile/christian-ritter/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/christian-ritter/\" target=\"_blank\" rel=\"noreferrer noopener\">Christian Ritter (8)</a><br> <a href=\"https://psweekly.dowst.dev/profile/mdgrs/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/mdgrs/\" target=\"_blank\" rel=\"noreferrer noopener\">mdgrs (8)</a><br> <a href=\"https://psweekly.dowst.dev/profile/clayton-tyger/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/clayton-tyger/\" target=\"_blank\" rel=\"noreferrer noopener\">Clayton Tyger (7)</a><br> <a href=\"https://psweekly.dowst.dev/profile/clayton-errington/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/clayton-errington/\" target=\"_blank\" rel=\"noreferrer noopener\">Clayton Errington (7)</a><br> <a href=\"https://psweekly.dowst.dev/profile/steven-bucher/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/steven-bucher/\" target=\"_blank\" rel=\"noreferrer noopener\">Steven Bucher (5)</a><br> <a href=\"https://psweekly.dowst.dev/profile/christopher-nguyen/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/christopher-nguyen/\" target=\"_blank\" rel=\"noreferrer noopener\">Christopher Nguyen (5)</a><br> <a href=\"https://psweekly.dowst.dev/profile/alexandru-radu-marin/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/alexandru-radu-marin/\" target=\"_blank\" rel=\"noreferrer noopener\">Alexandru Radu Marin (4)</a><br> <a href=\"https://psweekly.dowst.dev/profile/daniel-schroeder/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/daniel-schroeder/\" target=\"_blank\" rel=\"noreferrer noopener\">Daniel Schroeder (4)</a><br> <a href=\"https://psweekly.dowst.dev/profile/james-petty/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/james-petty/\" target=\"_blank\" rel=\"noreferrer noopener\">James Petty (4)</a><br> <a href=\"https://psweekly.dowst.dev/profile/bijay-kumar/\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/profile/bijay-kumar/\" target=\"_blank\" rel=\"noreferrer noopener\">Bijay Kumar (3)</a></p>\n</div>\n</div>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-3 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:50%\">\n<p class=\"has-text-align-center\"><strong>Top 10 Sites</strong><br><a href=\"https://devblogs.microsoft.com\" data-type=\"link\" data-id=\"https://devblogs.microsoft.com\" target=\"_blank\" rel=\"noreferrer noopener\">devblogs.microsoft.com (49)</a><br>\n<a href=\"https://powershellpodcast.podbean.com\" data-type=\"link\" data-id=\"https://powershellpodcast.podbean.com\" target=\"_blank\" rel=\"noreferrer noopener\">powershellpodcast.podbean.com (49)</a><br>\n<a href=\"https://github.com\" data-type=\"link\" data-id=\"https://github.com\" target=\"_blank\" rel=\"noreferrer noopener\">github.com (48)</a><br>\n<a href=\"https://reddit.com\" data-type=\"link\" data-id=\"https://reddit.com\" target=\"_blank\" rel=\"noreferrer noopener\">reddit.com (45)</a><br>\n<a href=\"https://powershellgallery.com\" data-type=\"link\" data-id=\"https://powershellgallery.com\" target=\"_blank\" rel=\"noreferrer noopener\">powershellgallery.com (35)</a><br>\n<a href=\"https://powershellisfun.com\" data-type=\"link\" data-id=\"https://powershellisfun.com\" target=\"_blank\" rel=\"noreferrer noopener\">powershellisfun.com (34)</a><br>\n<a href=\"https://youtube.com\" data-type=\"link\" data-id=\"https://youtube.com\" target=\"_blank\" rel=\"noreferrer noopener\">youtube.com (29)</a><br>\n<a href=\"https://office365itpros.com\" data-type=\"link\" data-id=\"https://office365itpros.com\" target=\"_blank\" rel=\"noreferrer noopener\">office365itpros.com (25)</a><br>\n<a href=\"https://sid-500.com\" data-type=\"link\" data-id=\"https://sid-500.com\" target=\"_blank\" rel=\"noreferrer noopener\">sid-500.com (22)</a><br>\n<a href=\"https://adamtheautomator.com\" data-type=\"link\" data-id=\"https://adamtheautomator.com\" target=\"_blank\" rel=\"noreferrer noopener\">adamtheautomator.com (17)</a></p>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\" style=\"flex-basis:50%\">\n<p class=\"has-text-align-center\"><strong>Top 10 Categories</strong><br><a href=\"https://psweekly.dowst.dev/?link_library_category=platform\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=platform\" target=\"_blank\" rel=\"noreferrer noopener\">Platform (140)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=windows\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=windows\" target=\"_blank\" rel=\"noreferrer noopener\">Windows (39)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=security\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=security\" target=\"_blank\" rel=\"noreferrer noopener\">Security (39)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=azure\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=azure\" target=\"_blank\" rel=\"noreferrer noopener\">Azure (31)</a><br> <a href=\"\" data-type=\"link\" data-id=\"\" target=\"_blank\" rel=\"noreferrer noopener\">Development (23)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=ai\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=ai\" target=\"_blank\" rel=\"noreferrer noopener\">AI (22)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=azure\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=azure\" target=\"_blank\" rel=\"noreferrer noopener\">Azure AD (22)</a><br> <a href=\"\" data-type=\"link\" data-id=\"\" target=\"_blank\" rel=\"noreferrer noopener\">Graph API (20)</a><br> <a href=\"https://psweekly.dowst.dev/?link_library_category=networking\" data-type=\"link\" data-id=\"https://psweekly.dowst.dev/?link_library_category=networking\" target=\"_blank\" rel=\"noreferrer noopener\">Networking (17)</a><br> <a href=\"\" data-type=\"link\" data-id=\"\" target=\"_blank\" rel=\"noreferrer noopener\">Active Directory (17)</a></p>\n</div>\n</div>\n\n\n\n<p class=\"\"><strong>Top Links</strong><br>• <a href=\"https://devblogs.microsoft.com/powershell/completion-predictor-version-0-1-1-release/\" data-type=\"link\" data-id=\"https://devblogs.microsoft.com/powershell/completion-predictor-version-0-1-1-release/\" target=\"_blank\" rel=\"noreferrer noopener\">Completion Predictor v0.1.1 Release</a> by The PowerShell Team (231 &#8211; clicks)<br>• <a href=\"https://ctrlaltzzz.wordpress.com/2023/05/03/how-to-create-guis-in-powershell/\" data-type=\"link\" data-id=\"https://ctrlaltzzz.wordpress.com/2023/05/03/how-to-create-guis-in-powershell/\" target=\"_blank\" rel=\"noreferrer noopener\">How to Create a Powershell Form Generator</a> by Fabio De Oliveira (193 &#8211; clicks)<br>• <a href=\"https://devblogs.microsoft.com/powershell/powershell-extension-for-visual-studio-code-spring-2023-update/\" data-type=\"link\" data-id=\"https://devblogs.microsoft.com/powershell/powershell-extension-for-visual-studio-code-spring-2023-update/\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell Extension for Visual Studio Code Spring 2023 Update</a> by The PowerShell Team (153 &#8211; clicks)<br>• <a href=\"https://mdgrs.hashnode.dev/building-your-own-terminal-status-bar-in-powershell\" data-type=\"link\" data-id=\"https://mdgrs.hashnode.dev/building-your-own-terminal-status-bar-in-powershell\" target=\"_blank\" rel=\"noreferrer noopener\">Building your own Terminal Status Bar in PowerShell</a> by mdgrs (145 &#8211; clicks)<br>• <a href=\"https://mikefrobbins.com/2023/10/19/automatically-convert-a-powershell-command-to-use-splatting/\" data-type=\"link\" data-id=\"https://mikefrobbins.com/2023/10/19/automatically-convert-a-powershell-command-to-use-splatting/\" target=\"_blank\" rel=\"noreferrer noopener\">Automatically convert a PowerShell command to use splatting</a> by Mike F. Robbins (116 &#8211; clicks)<br>• <a href=\"https://ehmiiz.tech/blog/ps_fast_password_retrieving/\" data-type=\"link\" data-id=\"https://ehmiiz.tech/blog/ps_fast_password_retrieving/\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell KeePass and saving time.</a> by Emil Larsson (115 &#8211; clicks)<br>• <a href=\"https://itconstructors.com/increase-maturity-of-powershell-script-with-mermaid-diagram/\" data-type=\"link\" data-id=\"https://itconstructors.com/increase-maturity-of-powershell-script-with-mermaid-diagram/\" target=\"_blank\" rel=\"noreferrer noopener\">Increase maturity of PowerShell script with Mermaid diagram</a> by Wiktor Mrowczynski (115 &#8211; clicks)<br>• <a href=\"https://jeffhicks.substack.com/p/best-practices-make-perfect\" data-type=\"link\" data-id=\"https://jeffhicks.substack.com/p/best-practices-make-perfect\" target=\"_blank\" rel=\"noreferrer noopener\">Best Practices Make Perfect</a> by Jeff Hicks (110 &#8211; clicks)<br>• <a href=\"https://github.com/StartAutomating/Posh\" data-type=\"link\" data-id=\"https://github.com/StartAutomating/Posh\" target=\"_blank\" rel=\"noreferrer noopener\">POSH</a> by James Brundage (110 &#8211; clicks)<br>• <a href=\"https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/\" data-type=\"link\" data-id=\"https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/\" target=\"_blank\" rel=\"noreferrer noopener\">How to optimize and speed up your PowerShell scripts</a> by Bas Wijdenes (103 &#8211; clicks)</p>\n\n\n\n<p class=\"\">I hope everyone has a wonderful holiday season and I will see you all again in 2024.</p>"
        },
        {
            "id": "https://baswijdenes.com/?p=27855",
            "tags": [
                "Microsoft",
                "Automation",
                "PowerShell"
            ],
            "description": "<p>An emergency button to ensure that your runbooks stop running without disconnecting the schedule in Azure Automation Disclaimer: This post can be seen as satire. There are probably better ways, but because we were so limited with the customer at the time, we opted for a hobby approach: &#8216;Maintenance mode the creative way&#8216;. What if&#8230; &#8230; <a href=\"https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">How to create a maintenance mode in Azure Automation</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/\">How to create a maintenance mode in Azure Automation</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "How to create a maintenance mode in Azure Automation",
            "link": "https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/",
            "published": "2023-12-22T13:14:03.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=7397",
            "tags": [
                "Exchange"
            ],
            "description": "<p>When migrating from Exchange on-premises to Exchange online, you might notice that the mailbox migrations is completed successfully with no failure or error in the migration process. But from Microsoft 365 Admin Portal you find an error about Exchange online archive issue, even though everything seems to be OK for the user in the Exchange...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/\">FIX: Exchange Failed to enable the new cloud archive using PowerShell</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "FIX: Exchange Failed to enable the new cloud archive using PowerShell",
            "link": "https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/",
            "published": "2023-12-21T18:38:47.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3711",
            "tags": [
                "Graph",
                "PowerShell",
                "API",
                "Automation",
                "Azure",
                "JSON",
                "Office 365"
            ],
            "description": "<p>Monitoring Azure AD (Entra ID now) application secret expirations in an enterprise is a critical aspect of maintaining robust security and ensuring uninterrupted service. When application secrets expire without timely renewal, it can disrupt business operations by causing application failures. Proactive management of application secret expirations helps enterprises avoid last-minute issues, enabling a more secure and efficient operational environment.</p>\n<p>During my brief research in finding an automated approach to monitoring application secret expirations, I found multiple write-ups and articles but many only showed the code on how to get the expiration property without walking through setting up the automation itself. Another issue was not converting the default UTC time to local time to get more accurate expiration datetimes, and also dealing with applications with multiple secrets that expire at different times. </p>\n<p>This article will walk one through the code&#8217;s logic, including converting time and dealing with multiple values, and creating &#8230; <a href=\"https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/\">Automated Alerts on Azure (Entra ID) Application Secret Expirations</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Automated Alerts on Azure (Entra ID) Application Secret Expirations",
            "link": "https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/",
            "published": "2023-12-16T06:43:02.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Monitoring Azure AD (Entra ID now) application secret expirations in an enterprise is a critical aspect of maintaining robust security and ensuring uninterrupted service. When application secrets expire without timely renewal, it can disrupt business operations by causing application failures. Proactive management of application secret expirations helps enterprises avoid last-minute issues, enabling a more secure and efficient operational environment.</p>\n\n\n\n<p>During my brief research in finding an automated approach to monitoring application secret expirations, I found multiple write-ups and articles but many only showed the code on how to get the expiration property without walking through setting up the automation itself. Another issue was not converting the default UTC time to local time to get more accurate expiration datetimes, and also dealing with applications with multiple secrets that expire at different times. </p>\n\n\n\n<p>This article will walk one through the code&#8217;s logic, including converting time and dealing with multiple values, and creating &hellip; <a href=\"https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/\" class=\"read-more\">Continue... </a></p><p>The post <a href=\"https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/\">Automated Alerts on Azure (Entra ID) Application Secret Expirations</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://blog.it-koehler.com/?p=5619",
            "tags": [
                "common",
                "Microsoft Exchange Server",
                "Microsoft Office 365",
                "Powershell"
            ],
            "description": "<p>Lot of people already know the new Microsoft strategy for blocking outdated Exchange OnPrem Versions in hybrid environments. See this old article which describes the most important informations, see also the timeline for throttling and blocking. https://techcommunity.microsoft.com/t5/exchange-team-blog/update-on-transport-enforcement-system-in-exchange-online/ba-p/3827774 After some time the Exchange Teams announced an new article about pausing this enforcement with throttling and blocking. &#8230; </p>\n<p class=\"link-more\"><a href=\"https://blog.it-koehler.com/en/Archive/5619\" class=\"more-link\">Read more<span class=\"screen-reader-text\"> \"Exchange Online Enforcement Pause\"</span></a></p>\n<p>Articel <a href=\"https://blog.it-koehler.com/en/Archive/5619\">Exchange Online Enforcement Pause</a> available first on <a href=\"https://blog.it-koehler.com/en\">IT koehler blog</a>.</p>",
            "title": "Exchange Online Enforcement Pause",
            "link": "https://blog.it-koehler.com/en/Archive/5619",
            "published": "2023-12-15T21:00:14.000Z",
            "author": {
                "#text": "A.K.",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://devdojo.com/11839",
            "tags": [
                "powershell",
                "method",
                "indexof",
                "indexofall",
                "string",
                "adventofcode"
            ],
            "description": "<p>Recently, I participated in AdventOfCode 2023 and encountered challenges that required finding the precise location of a character in a string, along with all its occurrences. Take, for instance, the string 'Hello, world!'. I needed to identify all positions of the character 'l': 2, 3, and 10.</p>\n<p>The typical method, .IndexOf('l'), provides only the first occurrence (in this case, 2). To obtain all positions, I devised a PowerShell function that iterates through the string using the IndexOf() method with a position parameter. Here's the function:</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Get</span>-<span class=\"hljs-title\">IndexOfAll</span> </span>{\n    param (\n        [string]$String,\n        [string]$SearchString\n    )\n    $IndexList = [System.Collections.Generic.<span class=\"hljs-keyword\">List</span>[int]]::new()\n    $Index = $String.IndexOf($SearchString)\n    <span class=\"hljs-keyword\">while</span>($Index -ne <span class=\"hljs-number\">-1</span>){\n        $IndexList.Add($Index)\n        $Index = $String.IndexOf($SearchString,$Index+<span class=\"hljs-number\">1</span>)\n    }\n    <span class=\"hljs-keyword\">return</span> $IndexList\n}\n</code></pre>\n<p>Additionally, I demonstrated in a previous post how to extend the TypeData of string objects using Update-TypeData:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$IndexOfAll</span> = {\n    <span class=\"hljs-keyword\">param</span>(\n        <span class=\"hljs-variable\">$SearchString</span>\n    )\n    <span class=\"hljs-variable\">$IndexList</span> = [<span class=\"hljs-type\">System.Collections.Generic.List</span>[<span class=\"hljs-built_in\">int</span>]]::new()\n    <span class=\"hljs-variable\">$Index</span> = <span class=\"hljs-keyword\">$this</span>.IndexOf(<span class=\"hljs-variable\">$SearchString</span>)\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-variable\">$Index</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-literal\">-1</span>){\n        <span class=\"hljs-variable\">$IndexList</span>.Add(<span class=\"hljs-variable\">$Index</span>)\n        <span class=\"hljs-variable\">$Index</span> = <span class=\"hljs-keyword\">$this</span>.IndexOf(<span class=\"hljs-variable\">$SearchString</span>,<span class=\"hljs-variable\">$Index</span>+<span class=\"hljs-number\">1</span>)\n    }\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$indexlist</span>\n}\n\n<span class=\"hljs-variable\">$etd</span> = <span class=\"hljs-selector-tag\">@</span>{\n    TypeName = <span class=\"hljs-string\">'string'</span>\n    MemberType = <span class=\"hljs-string\">'Scriptmethod'</span>\n    MemberName = <span class=\"hljs-string\">'IndexOfAll'</span>\n    Value = <span class=\"hljs-variable\">$IndexOfAll</span>\n}\n<span class=\"hljs-built_in\">Update-TypeData</span> @etd\n</code></pre>\n<p>Now, you can easily find all occurrences of a character in a string using the IndexOfAll method.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian</p>",
            "title": "PowerShell-Technique: PowerShell: Getting all String occurrence Indices",
            "link": "https://devdojo.com/hcritter/powershell-technique-powershell-getting-all-string-occurrence-indices",
            "published": "2023-12-15T10:59:02.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://ngetchell.com/posts/my-powershell-journey/",
            "tags": [],
            "description": "As I look back on my sixteen years in information technology, I can&rsquo;t help but notice the impact PowerShell has had on my career.\nFirst Automation My first automations were little batch scripts and AutoHotKey plays. They did trival tasks like opening multiple Internet Explorer windows and the Active Directory Users and Computers tool to quickly get myself up and running at work. I&rsquo;d share them with my coworkers while sitting at a college helpdesk.",
            "title": "My PowerShell Journey",
            "link": "https://ngetchell.com/posts/my-powershell-journey/",
            "published": "2023-12-11T11:00:12.000Z",
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3629",
            "tags": [
                "Graph",
                "API",
                "Azure",
                "Office 365",
                "PowerShell"
            ],
            "description": "<p>Previously, if you wanted to find a user&#8217;s last successful sign-in to your Microsoft 365 tenant using the Microsoft Graph REST API, you would have to iterate through Entra ID sign-in logs. With new recent additions to the Microsoft Graph API Beta Endpoint, you can now return the UTC value just by parsing the user details and properties. The Microsoft documentation regarding the signInActivity resource type can be found <a href=\"https://learn.microsoft.com/en-au/graph/api/resources/signinactivity?view=graph-rest-beta\" target=\"_blank\" rel=\"noopener\" title=\"\">here</a>.</p>\n<h3 class=\"wp-block-heading\">LastSignInDateTime vs LastSuccessfulSignInDateTime</h3>\n<p>The difference between&#160;<em>lastSignInDateTime</em>&#160;and&#160;<em>lastSuccessfulSignInDateTime</em>&#160;property is:</p>\n<ul>\n<li><em><strong>lastSignInDateTime</strong></em>: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For </li>\n</ul>\n<p>&#8230; <a href=\"https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/\">Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time",
            "link": "https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/",
            "published": "2023-12-09T17:58:37.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Previously, if you wanted to find a user&#8217;s last successful sign-in to your Microsoft 365 tenant using the Microsoft Graph REST API, you would have to iterate through Entra ID sign-in logs. With new recent additions to the Microsoft Graph API Beta Endpoint, you can now return the UTC value just by parsing the user details and properties. The Microsoft documentation regarding the signInActivity resource type can be found <a href=\"https://learn.microsoft.com/en-au/graph/api/resources/signinactivity?view=graph-rest-beta\" target=\"_blank\" rel=\"noopener\" title=\"\">here</a>.</p>\n\n\n\n<h3 class=\"wp-block-heading\">LastSignInDateTime vs LastSuccessfulSignInDateTime</h3>\n\n\n\n<p>The difference between&nbsp;<em>lastSignInDateTime</em>&nbsp;and&nbsp;<em>lastSuccessfulSignInDateTime</em>&nbsp;property is:</p>\n\n\n\n<ul>\n<li><em><strong>lastSignInDateTime</strong></em>: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For </li></ul>&hellip; <a href=\"https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/\" class=\"read-more\">Continue... </a><p>The post <a href=\"https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/\">Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://powershell.ro/?p=201",
            "tags": [
                "Automation",
                "Powershell",
                "VMWare",
                "cpu ratio",
                "overcommit",
                "pCPU",
                "powercli",
                "vCPU",
                "vexpert"
            ],
            "description": "Efficient resource utilization is a key factor in maintaining a healthy VMware vSphere environment. As virtualization environments grow, it becomes crucial to monitor and optimize resource allocation to prevent overcommitment, ensuring the smooth operation of virtual machines. In this blog post, we&#8217;ll explore a PowerCLI script designed to check the Cluster Overcommitment Ratio, providing valuable [&#8230;]",
            "title": "PowerCLI script to check Cluster Overcommitment ratio",
            "link": "https://powershell.ro/powercli-script-to-check-cluster-overcommitment-ratio/",
            "published": "2023-12-06T19:39:53.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Efficient resource utilization is a key factor in maintaining a healthy VMware vSphere environment. As virtualization environments grow, it becomes crucial to monitor and optimize resource allocation to prevent overcommitment, ensuring the smooth operation of virtual machines. In this blog post, we&#8217;ll explore a PowerCLI script designed to check the Cluster Overcommitment Ratio, providing valuable insights into the CPU and RAM usage across your vSphere clusters.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Understanding Cluster Overcommitment:</h3>\n\n\n\n<p>Cluster Overcommitment is a metric that reflects how efficiently your cluster utilizes its available resources, specifically focusing on CPU and RAM. By calculating the ratio of powered-on virtual CPUs (vCPUs) or RAM to the total physical resources, administrators can identify potential bottlenecks and optimize their infrastructure.</p>\n\n\n\n<h3 class=\"wp-block-heading\">The PowerCLI Script:</h3>\n\n\n\n<p>The script is designed to connect to a vCenter server, iterate through each cluster, and generate a detailed report containing key metrics.</p>\n\n\n\n<p class=\"has-medium-font-size\"></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\nparam(\n    &#x5B;String]$vcenter,\n    &#x5B;String]$userName,\n    &#x5B;String]$password\n)\n\n# Import required modules\nImport-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue\nImport-Module -Name &quot;C:\\temp\\importexcel.7.8.4\\importexcel.psd1&quot; -ErrorAction SilentlyContinue\n\n# Set PowerCLI configuration\nSet-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode multiple -Scope User -InvalidCertificateAction ignore -Confirm:$false | Out-Null\n\n# Connect to vCenter\ntry {\n    Connect-VIServer -Server $vcenter -User $userName -Password $password -ErrorAction Stop | Out-Null\n} catch &#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {\n    Write-Host &quot;Cannot connect to $vcenter with provided credentials&quot; -ForegroundColor Red\n    return\n} catch &#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {\n    Write-Host &quot;Cannot connect to $vcenter - check IP/FQDN&quot; -ForegroundColor Red\n    return\n} catch {\n    Write-Host &quot;Cannot connect to $vcenter - Unknown error&quot; -ForegroundColor Red\n    return\n}\n\n# Get all the clusters\n$clusters = Get-Cluster\n$data = @()\n\n# Loop through the clusters and extract the required data\nforeach ($cluster in $clusters) {\n    $vmhosts = Get-VMHost -Location $cluster\n    $num_esxis = $vmhosts.Count\n    \n    # Calculate cluster metrics\n    $ClusterPoweredOnvCPUs = (Get-VM -Location $cluster | Where-Object {$_.PowerState -eq &quot;PoweredOn&quot; }).NumCpu | Measure-Object -Sum\n    $ClusterCPUCores = ($vmhosts.NumCpu | Measure-Object -Sum).Sum\n\n    $ClusterPoweredOnvRAM = (Get-VM -Location $cluster | Where-Object {$_.PowerState -eq &quot;PoweredOn&quot; }).MemoryGB | Measure-Object -Sum\n    $ClusterPhysRAM = ($vmhosts.MemoryTotalGB | Measure-Object -Sum).Sum\n\n    $oneesxi = if ($num_esxis) { $num_esxis - 1 } else { $null }\n    $coresPerESXi = if ($num_esxis) { $ClusterCPUCores / $num_esxis } else { $null }\n    $coresPerClusterMinusOne = $coresPerESXi * $oneesxi\n    $TotalCoresPerClusterMinusOne = &#x5B;Math]::Round($coresPerClusterMinusOne)\n\n    $ramPerESXi = $ClusterPhysRAM / $num_esxis\n    $ramPerClusterMinusOne = $ramPerESXi * $oneesxi\n    $TotalRAMPerClusterMinusOne = &#x5B;Math]::Round($ramPerClusterMinusOne)\n\n    # Create an ordered hashtable for each cluster\n    $property = &#x5B;ordered]@{\n        &quot;vCenter&quot; = $vcenter\n        &quot;Cluster Name&quot; = $cluster.Name\n        &quot;Number of ESXi servers&quot; = $num_esxis\n        &quot;pCPU&quot; = $ClusterCPUCores\n        &quot;vCPU&quot; = (Get-VM -Location $cluster | Measure-Object NumCpu -Sum).Sum\n        &quot;PoweredOn vCPUs&quot; = $ClusterPoweredOnvCPUs.Sum\n        &quot;vCPU:pCPU Ratio&quot; = &#x5B;Math]::Round($ClusterPoweredOnvCPUs.Sum / $ClusterCPUCores, 3)\n        &quot;vCPU:pCPU Ratio with one ESXi failed&quot; = &#x5B;Math]::Round($ClusterPoweredOnvCPUs.Sum / $TotalCoresPerClusterMinusOne, 3)\n        &quot;CPU Overcommit (%)&quot; = &#x5B;Math]::Round(100 * ($ClusterPoweredOnvCPUs.Sum / $ClusterCPUCores), 3)\n        'pRAM(GB)' = $ClusterPhysRAM\n        'vRAM(GB)' = &#x5B;Math]::Round((Get-VM -Location $cluster | Measure-Object MemoryGB -Sum).Sum, 2)\n        'PoweredOn vRAM (GB)' = $ClusterPoweredOnvRAM.Sum\n        'vRAM:pRAM Ratio' = &#x5B;Math]::Round($ClusterPoweredOnvRAM.Sum / $ClusterPhysRAM, 3)\n        &quot;vRAM:pRAM Ratio with one ESXi failed&quot; = &#x5B;Math]::Round($ClusterPoweredOnvRAM.Sum / $TotalRAMPerClusterMinusOne, 3)\n        'RAM Overcommit (%)' = &#x5B;Math]::Round(100 * ($ClusterPoweredOnvRAM.Sum / $ClusterPhysRAM), 2)\n    }\n\n    # Add the hashtable to the data array\n    $data += New-Object -TypeName psobject -Property $property\n}\n\n# Export the data to an Excel file\n$filePath = &quot;C:\\temp\\$($vcenter).xlsx&quot;\n$data | Export-Excel -Path $filePath -AutoSize -TableName &quot;Data&quot;\n\n# Disconnect from vCenter\nDisconnect-VIserver -Server $vcenter -Confirm:$false\n\n</pre></div>\n\n\n<p>Feel free to customize this script based on your specific reporting requirements and share your experiences or improvements in the comments below!</p>\n\n\n\n<p>It should be noted that the script is not entirely authored by me; certain information and code snippets are sourced from various places, including blogs, GitHub repositories, and community forums.</p>\n<div class=\"pvc_clear\"></div><p id=\"pvc_stats_201\" class=\"pvc_stats all  \" data-element-id=\"201\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://evotec.xyz/?p=18406",
            "tags": [
                "Exchange",
                "Microsoft Graph",
                "Office 365",
                "PowerShell",
                "api",
                "exchange",
                "microsoft graph",
                "office 365",
                "powershell"
            ],
            "description": "<p>Hey there! Today, I wanted to introduce you to one of the small but excellent module I've created called the O365Synchronizer. This module focuses on synchronizing contacts and users. If you've ever been tasked with synchronizing Global Address Lists (GAL) across different Office 365 tenants or just wanted to sync GAL with user mailboxes so they can access contacts directly on their phones, this tool is for you.</p>\n<p>The post <a href=\"https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/\">Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell",
            "link": "https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/",
            "published": "2023-12-03T15:32:13.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c6d1d4a\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d1d338077\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d1f813020\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d1f83 \"><div class=\"wpb_wrapper thegem-custom-665370c6d1f813020\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d21468190\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Hey there! Today, I wanted to introduce you to one of the small but excellent module I've created called the <a href=\"https://github.com/EvotecIT/O365Synchronizer\"><strong>O365Synchronizer</strong></a>. This module focuses on synchronizing contacts and users. If you've ever been tasked with synchronizing Global Address Lists (GAL) across different Office 365 tenants or just wanted to sync GAL with user mailboxes so they can access contacts directly on their phones, this tool is for you.</p>\n<p>Think of <a href=\"https://github.com/EvotecIT/O365Synchronizer\"><strong>O365Synchronizer</strong></a> as your new best friend in Office 365 synchronization needs. It's like having a magic wand that smoothly aligns your contact lists across various domains and even directly into user inboxes.</p>\n<p>While several tools on the market do similar stuff, I was tempted to write my own. I hope you enjoy it!</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d21468190{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d21468190{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d21468190{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d21468190{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d2359\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d234f7562\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d25689702\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d256a \"><div class=\"wpb_wrapper thegem-custom-665370c6d25689702\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d26d34200\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>O365Synchronizer</strong> aims to close two problems that I've encountered when working with Office 365:</p>\n<ul>\n<li>Synchronizing Users and contacts to personal mailboxes to allow them to be visible on mobile phones without the necessity to go through GAL</li>\n<li>Synchronizing Users as contacts between tenants (<strong>Tenant A</strong> gets users as contacts in <strong>Tenant B</strong>)</li>\n</ul>\n<p>Most of the time, when you want to achieve either of those two, you have to resort to paid solutions. While I have nothing against the paid solutions (and I would like to get paid myself), it's a bit expensive for what it's needed for, in my honest opinion.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d293c\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d29329600\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d2b653054\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d2b67 \"><div class=\"wpb_wrapper thegem-custom-665370c6d2b653054\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Synchronizing members and contacts to user personal contacts using Sync-O365PersonalContact</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d2e5d4549\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>O365Synchronizer</strong> utilizes <strong>Microsoft Graph API</strong> to get the users/contacts from <strong>Office 365</strong> tenants and then pushes them using Microsoft Graph API to the user mailbox as contacts. Once <strong>Contacts</strong> are created, when the command is rerun, it compares existing <strong>Contacts</strong> for any changes and updates them if necessary. If the user gets removed from the tenant and is no longer on the source, it will also be removed from the user's mailbox. By default, the <strong>Sync-O365PersonalContact</strong> command uses <b>GUID </b>to distinguish contacts created by it from existing user contacts. It uses it to track what contacts it adds and only manages those, leaving existing user contacts untouched.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d2f96110\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$ClientID = '9e1b3c'\n$TenantID = 'ceb371f6'\n$ClientSecret = 'nQF8Q'\n\n# connect to Microsoft Graph API\n$Credentials = [pscredential]::new($ClientID, (ConvertTo-SecureString $ClientSecret -AsPlainText -Force))\nConnect-MgGraph -ClientSecretCredential $Credentials -TenantId $TenantID -NoWelcome\n\n# synchronize contacts for two users of two types (Member, Contact) using GUID prefix\nSync-O365PersonalContact -UserId 'test@evotec.pl', 'test1@evotec.pl' -Verbose -MemberTypes 'Member', 'Contact' -GuidPrefix 'O365Synchronizer' -WhatIf -PassThru | Format-Table *</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d31324318\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you can see above, to synchronize all users/contacts to two users, all you have to do is run two commands:</p>\n<ul>\n<li><strong>Connect-MgGraph</strong> to authorize the tenant</li>\n<li><strong>Sync-O365PersonalContact</strong> and use the <strong>UserId</strong> parameter to provide the UPN of users you want to deliver with synchronization of Members/Contacts.</li>\n</ul>\n<p>Once executed, you get</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d31324318{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d31324318{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d31324318{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d31324318{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d32592676\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"zHqBbtw\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972.png\"><img class=\"alignnone wp-image-18589 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1024x668.png\" alt=\"\" width=\"1024\" height=\"668\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1024x668.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-300x196.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-768x501.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1536x1003.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d32592676{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d32592676{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d32592676{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d32592676{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d33719486\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Now, if we change the command to <strong>exclude Members</strong> and only synchronize contacts, you will see that it starts removing members and leaving only contacts in place.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d33719486{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d33719486{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d33719486{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d33719486{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d34a45500\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"xIFMfIG\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694.png\"><img class=\"alignnone wp-image-18595 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1024x742.png\" alt=\"\" width=\"1024\" height=\"742\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1024x742.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-300x217.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-768x557.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1536x1113.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d35b05797\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Notice that we have a <strong>WhatIf</strong> switch to quickly test it before running wild. Using the <strong>PassThru</strong> parameter allows you to take the output from that command and send it to email or build a report around it.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d36bb7021\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The following permissions are required to use this functionality:</p>\n<div>\n<ul>\n<li><strong>User.Read.All</strong> &#8211; to read users</li>\n<li><strong>OrgContact.Read.All</strong> &#8211; to read contacts</li>\n<li><strong>Contacts.ReadWrite</strong> &#8211; to write contacts</li>\n</ul>\n</div>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d394c\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d39415220\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d3b389049\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d3b3a \"><div class=\"wpb_wrapper thegem-custom-665370c6d3b389049\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Synchronizing users as contacts between tenants using Sync-O365Contact</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d3dd69495\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The second functionality is doable using the <strong>Sync-O365Contact</strong> command. It's a bit different in what it does, as it uses the <strong>ExchangeOnlineManagement</strong> PowerShell module to synchronize contacts between tenants. The process is a bit different because we need to contact <strong>Tenant A</strong> using <strong>Microsoft Graph API</strong> but then synchronize those users/objects as contacts to <strong>Tenant B</strong>.</p>\n<p>Currently, the Source objects to synchronize are objects provided by <strong>Get-MgUser</strong>. Still, providing functionality to synchronize objects from Active Directory, Exchange, or even external systems should be doable if there's a need for that.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d3f3e8909\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\"># Source tenant (read only)\n$ClientID = '9e1b3c36'\n$TenantID = 'ceb371f6'\n$ClientSecret = 'NDE8Q'\n\n$Credentials = [pscredential]::new($ClientID, (ConvertTo-SecureString $ClientSecret -AsPlainText -Force))\nConnect-MgGraph -ClientSecretCredential $Credentials -TenantId $TenantID -NoWelcome\n\n$UsersToSync = Get-MgUser | Select-Object -First 5\n\n# Destination tenant (writeable)\n$ClientID = 'edc4302e'\nConnect-ExchangeOnline -AppId $ClientID -CertificateThumbprint '2EC710' -Organization 'xxxxx.onmicrosoft.com'\nSync-O365Contact -SourceObjects $UsersToSync -Domains 'evotec.pl', 'gmail.com' -Verbose -WhatIf -LogPath 'C:\\Temp\\Logs\\O365Synchronizer.log' -LogMaximum 5</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d40fd5134\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>This command works a bit differently when synchronizing users. You provide users to synchronize but also state from <strong>which domain</strong> those users are. Once the power starts running, it expects to control users from these specific fields. If users created in your <strong>target tenant</strong> are not on the list provided, those contacts will be deleted. If they exist in<strong> source</strong>, they <strong>will get updated</strong>. Essentially the command assumes complete control in <strong>adding, removing or updating contacts</strong> for given domains.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d422b3203\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"KNApVOn\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78.png\"><img class=\"alignnone wp-image-18598 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1024x423.png\" alt=\"\" width=\"1024\" height=\"423\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1024x423.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-300x124.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-768x317.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1536x634.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d43357610\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>It's essential to reiterate!<strong> Those contacts will be removed if you have contacts in the target tenant that are not on the source lists for given domains</strong>. For the sake of exercise, if I tell it to synchronize the first 15 users but skip the first 5, the output will show that we are adding some new users, but at the same time, we try to remove those that already exist.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d43357610{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d43357610{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d43357610{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d43357610{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d445a6820\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$UsersToSync = Get-MgUser | Select-Object -First 15 -Skip 5</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d457c5710\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"wRKqqRN\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5.png\"><img class=\"alignnone wp-image-18600 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1024x681.png\" alt=\"\" width=\"1024\" height=\"681\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1024x681.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-300x199.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-768x511.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1536x1021.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d46ab5314\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Of course, I'm <strong>showing one-way sync</strong>, but nothing stops you from reverting commands, getting users from the target tenant, and pushing them to the source tenant. I would expect, however, that this would be done in another script by the admin of the second tenant, but in theory, you could just run it in a single <strong>PowerShell</strong> script.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d47e86743\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The following permissions are required on the source tenant to use this functionality:</p>\n<div>\n<ul>\n<li><strong>User.Read.All</strong> &#8211; to read users</li>\n</ul>\n<div>On target tenant, you should use:</div>\n<ul>\n<li><strong>Exchange.ManageAsApp</strong> &#8211; to read/write contacts in Exchange (remember to add application to <strong>Exchange Recipient Administrator</strong> role)</li>\n</ul>\n</div>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d4a80\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d4a753517\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d4c381474\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d4c3a \"><div class=\"wpb_wrapper thegem-custom-665370c6d4c381474\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-paperclip\" ></span></div>\n</div>\n<h2>Installing the module</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d4ebd2517\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Installing <strong>O365Synchronizer</strong> (or updating) is as easy as executing a single command</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d4fe48382\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Install-Module O365Synchronizer -Force -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d50ec7364\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To review sources or build your version of my module, you can find the project on the O365Synchronize GitHub page.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/\">Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://blog.darrenjrobinson.com/?p=49294",
            "tags": [
                "PowerShell"
            ],
            "description": "<p>If you&#8217;re anything like me you always have PowerShell open, and often both <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/whats-new/differences-from-windows-powershell?view=powershell-7.4\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell and Windows PowerShell</a>. And PowerShell in VSCode and Terminal (and sometimes <a href=\"https://blog.darrenjrobinson.com/elevate-your-documentation-with-powershell-jupyter-notebook/\" target=\"_blank\" rel=\"noreferrer noopener\">Jupyter Notebook</a>, and <a href=\"https://blog.darrenjrobinson.com/windows-subsystem-for-linux-instance-has-terminated/\" target=\"_blank\" rel=\"noreferrer noopener\">WSL</a> &#8211; Windows Subsystem for Linux). </p>\n<p>There WILL come a point on Windows when you want to know where the heck is the PowerShell Module loading from (especially when using Windows PowerShell).&#8230; <a href=\"https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/\" class=\"read-more\">keep reading </a></p>\n<p>The post <a href=\"https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/\">Where the heck is the PowerShell Module loading from?</a> appeared first on <a href=\"https://blog.darrenjrobinson.com\">darrenjrobinson - Bespoke Identity and Access Management Solutions</a>.</p>",
            "title": "Where the heck is the PowerShell Module loading from?",
            "link": "https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/",
            "published": "2023-11-30T05:08:37.000Z",
            "author": {
                "#text": "Darren Robinson",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://devdojo.com/11811",
            "tags": [
                "secure",
                "powershell",
                "microsoft graph",
                "app registration",
                "application access policy"
            ],
            "description": "<p>In the rapidly evolving landscape of Entra ID, the use of App-Registrations has become increasingly prevalent, empowering users to seamlessly leverage PowerShell and the Microsoft Graph API for fundamental tasks in Exchange-Online, Entra ID, Intune, and related domains.</p>\n<p>However, the challenge arises in the potential for App-Registrations to possess expansive access, allowing them to target all objects within a designated scope, such as all mailboxes, when set to \"Application Scope\" permission.</p>\n<p>Addressing this concern, organizations can implement Application Access Policies, offering meticulous control over access permissions for specific resources like Calendars, Contacts, Mail, and Mailbox settings. Notably, these policies can only be configured through PowerShell, necessitating the ExchangeOnlineManagement Module for execution.</p>\n<p>A crucial step in this process involves designating a mail-enabled security group as the policy target, ensuring a focused approach to access control. Although the policy cannot be applied to an individual mailbox, having a lone member in the security group is acceptable. Creating such a group is straightforward with the provided PowerShell command:</p>\n<pre><code class=\"hljs perl\">$groupParams = @{\n    Name = <span class=\"hljs-string\">\"AAP_AppReg_SG\"</span>\n    Alias = <span class=\"hljs-string\">\"AAPAppRegSG\"</span>\n    Type = <span class=\"hljs-string\">\"security\"</span>\n    PrimarySMTPAddress = <span class=\"hljs-string\">\"AAPAppRegSG@contoso.com\"</span>\n    Members = @(<span class=\"hljs-string\">\"ironman@contoso.com\"</span>, <span class=\"hljs-string\">\"thor@contoso.com\"</span>, <span class=\"hljs-string\">\"captainamerica@contoso.com\"</span>)\n}\nNew-DistributionGroup @groupParams\n</code></pre>\n<p>Following this, the next imperative is creating the Application Access Policy using PowerShell:</p>\n<pre><code class=\"hljs perl\">$policyParams = @{\n    AppId = $AppID\n    PolicyScopeGroupId = <span class=\"hljs-string\">\"AAPAppRegSG@contoso.com\"</span>\n    AccessRight = <span class=\"hljs-string\">\"RestrictAccess\"</span>\n    Description = <span class=\"hljs-string\">\"Restrict this app to members of distribution group AAPAppRegSG.\"</span>\n}\nNew-ApplicationAccessPolicy @policyParams\n</code></pre>\n<p>By implementing these measures, App Registrations are refined to exclusively target designated resources—specifically, our superhero mailboxes. Verification of this tailored access can be conducted using the Test-ApplicationAccessPolicy command:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">Test-ApplicationAccessPolicy</span> <span class=\"hljs-literal\">-Identity</span> <span class=\"hljs-string\">\"The.Joker@contoso.com\"</span> <span class=\"hljs-literal\">-AppId</span> <span class=\"hljs-variable\">$AppID</span>\n</code></pre>\n<p>In conclusion, the integration of Application Access Policies serves as a pivotal strategy for organizations aiming to strike a balance between harnessing the capabilities of App-Registrations and maintaining precise control over access to critical resources. This approach not only fortifies security but also ensures a seamless and focused utilization of PowerShell and the Microsoft Graph API within the Entra ID environment.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>",
            "title": "PowerShell: Securing App-Registration with Application Access Policy",
            "link": "https://devdojo.com/hcritter/powershell-securing-app-registration-with-application-access-policy",
            "published": "2023-11-24T08:59:54.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/11806",
            "tags": [
                "performance",
                "powershell",
                "math",
                "sort-object",
                "max",
                "maximum",
                "measure-object"
            ],
            "description": "<h3 id=\"introduction\">Introduction:</h3>\n<p>Efficiency is key when working with PowerShell, and maximizing performance is a common goal for script developers. In this post, we'll explore various techniques for retrieving the maximum number from arrays of different sizes, comparing well-known approaches like Measure-Object, Sort-Object and a more mathematical method.</p>\n<h3 id=\"methods\">Methods:</h3>\n<ol>\n<li>\n<h4 id=\"measure-object\">Measure-Object:</h4>\n</li>\n</ol>\n<p>To retrieve the maximum number using Measure-Object, the following command is used:</p>\n<pre><code class=\"hljs powershell\">(<span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">55</span>,<span class=\"hljs-number\">69</span>,<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">37</span>)| <span class=\"hljs-built_in\">Measure-Object</span> <span class=\"hljs-literal\">-Maximum</span>).Maximum \n</code></pre>\n<ol start=\"2\">\n<li>\n<h4 id=\"sort-object\">Sort-Object:</h4>\n</li>\n</ol>\n<p>Another approach involves sorting the array and extracting the highest number from the last index:</p>\n<pre><code class=\"hljs powershell\">(<span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">55</span>,<span class=\"hljs-number\">69</span>,<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">37</span>)| <span class=\"hljs-built_in\">Sort-Object</span>)[-<span class=\"hljs-number\">1</span>]\n</code></pre>\n<ol start=\"3\">\n<li>\n<h4 id=\"mathematical-approach\">Mathematical Approach:</h4>\n</li>\n</ol>\n<p>Utilizing the [System.Math] class and its Max method requires a loop through the array:</p>\n<pre><code class=\"hljs php\">$Numbers = (@(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">55</span>,<span class=\"hljs-number\">69</span>,<span class=\"hljs-number\">13</span>,<span class=\"hljs-number\">37</span>)\n$maxValue = $Numbers[<span class=\"hljs-number\">0</span>] <span class=\"hljs-comment\">#we need to start with an number</span>\n<span class=\"hljs-keyword\">foreach</span>($num in $Numbers){\n    $maxValue = [System.Math]::Max($Num,$maxValue)\n}\n</code></pre>\n<h3 id=\"performance-testing\">Performance Testing:</h3>\n<p>For a comprehensive performance comparison, three arrays of different sizes were created:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$NumbersLarge</span>   = <span class=\"hljs-built_in\">get-random</span> <span class=\"hljs-literal\">-min</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-literal\">-max</span> <span class=\"hljs-number\">1</span>gb <span class=\"hljs-literal\">-count</span> <span class=\"hljs-number\">20</span>mb\n<span class=\"hljs-variable\">$NumbersMedium</span>  = <span class=\"hljs-built_in\">get-random</span> <span class=\"hljs-literal\">-min</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-literal\">-max</span> <span class=\"hljs-number\">1</span>gb <span class=\"hljs-literal\">-count</span> <span class=\"hljs-number\">1</span>mb\n<span class=\"hljs-variable\">$NumbersSmall</span>   = <span class=\"hljs-built_in\">get-random</span> <span class=\"hljs-literal\">-min</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-literal\">-max</span> <span class=\"hljs-number\">1</span>gb <span class=\"hljs-literal\">-count</span> <span class=\"hljs-number\">100</span>kb\n</code></pre>\n<h3 id=\"results\">Results:</h3>\n<h4 id=\"small-list\">Small List:</h4>\n<pre><code class=\"hljs perl\">Technique Time            RelativeSpeed Throughput\n--------- ----            ------------- ----------\nMath      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>.<span class=\"hljs-number\">144915</span> <span class=\"hljs-number\">1</span><span class=\"hljs-keyword\">x</span>            <span class=\"hljs-number\">34.5</span>/<span class=\"hljs-keyword\">s</span>\nMeasure   <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>.<span class=\"hljs-number\">602446</span> <span class=\"hljs-number\">4.16</span><span class=\"hljs-keyword\">x</span>         <span class=\"hljs-number\">8.3</span>/<span class=\"hljs-keyword\">s</span>\nSort      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">02</span>.<span class=\"hljs-number\">053357</span> <span class=\"hljs-number\">14.17</span><span class=\"hljs-keyword\">x</span>        <span class=\"hljs-number\">2.44</span>/<span class=\"hljs-keyword\">s</span>\n</code></pre>\n<h4 id=\"medium-list\">Medium List:</h4>\n<pre><code class=\"hljs perl\">Technique Time            RelativeSpeed Throughput\n--------- ----            ------------- ----------\nMath      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">01</span>.<span class=\"hljs-number\">377477</span> <span class=\"hljs-number\">1</span><span class=\"hljs-keyword\">x</span>            <span class=\"hljs-number\">3.63</span>/<span class=\"hljs-keyword\">s</span>\nMeasure   <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">11.163644</span> <span class=\"hljs-number\">8.1</span><span class=\"hljs-keyword\">x</span>          <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">45</span>/<span class=\"hljs-keyword\">s</span>\nSort      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">31.034414</span> <span class=\"hljs-number\">22.53</span><span class=\"hljs-keyword\">x</span>        <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">16</span>/<span class=\"hljs-keyword\">s</span>\n</code></pre>\n<h4 id=\"large-list\">Large List:</h4>\n<pre><code class=\"hljs perl\">Technique Time            RelativeSpeed Throughput\n--------- ----            ------------- ----------\nMath      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">26.392599</span> <span class=\"hljs-number\">1</span><span class=\"hljs-keyword\">x</span>            <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">19</span>/<span class=\"hljs-keyword\">s</span>\nMeasure   <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">01</span>:<span class=\"hljs-number\">57.695910</span> <span class=\"hljs-number\">4.46</span><span class=\"hljs-keyword\">x</span>         <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">04</span>/<span class=\"hljs-keyword\">s</span>\nSort      <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">18</span>:<span class=\"hljs-number\">38.731559</span> <span class=\"hljs-number\">42.39</span><span class=\"hljs-keyword\">x</span>        <span class=\"hljs-number\">0</span>/<span class=\"hljs-keyword\">s</span>\n</code></pre>\n<h3 id=\"conclusion\">Conclusion:</h3>\n<p>The [System.Math]::Max() method consistently outperforms Measure-Object and Sort-Object, particularly for larger datasets. Although its implementation may be less intuitive, encapsulating it in a function enhances usability.</p>\n<h3 id=\"function-implementation\">Function Implementation:</h3>\n<pre><code class=\"hljs php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Get</span>-<span class=\"hljs-title\">MaxNumber</span> </span>{\n    param (\n        [int[]]Numbers\n    )\n    $MaxValue = $Numbers[<span class=\"hljs-number\">0</span>]\n    <span class=\"hljs-keyword\">foreach</span>($num in $Numbers){\n        $MaxValue = [System.Math]::Max($MaxValue,$num)\n    }\n    <span class=\"hljs-keyword\">return</span> $MaxValue\n}\n</code></pre>\n<p>In scenarios where milliseconds matter and the primary goal is to retrieve the maximum number, the targeted solution using [System.Math]::Max() proves to be a powerful choice.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>",
            "title": "PowerShell Perfomance-Test: Get the Maximum",
            "link": "https://devdojo.com/hcritter/powershell-perfomance-test-get-the-maximum",
            "published": "2023-11-23T10:55:27.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/11803",
            "tags": [
                "microsoft",
                "windows",
                "powershell",
                "ubr",
                "update",
                "release",
                "registry",
                "intune",
                "graph"
            ],
            "description": "<p>In the realm of PowerShell, determining the version of the operating system is a common task for sysadmins. However, when it comes to reporting, extracting additional details, such as the Update Build Release (UBR), becomes crucial. While the Winver tool is a popular choice for obtaining the build, including the UBR, PowerShell provides a more versatile approach.</p>\n<h3 id=\"unveiling-the-ubr-going-beyond-the-basics\">Unveiling the UBR: Going Beyond the Basics</h3>\n<h4 id=\"registry-magic\">Registry Magic</h4>\n<p>One way to retrieve the UBR is through the registry:</p>\n<h6 id=\"powershell\">PowerShell:</h6>\n<pre><code class=\"hljs powershell\">(<span class=\"hljs-built_in\">Get-ItemProperty</span> <span class=\"hljs-string\">'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'</span> –Name UBR).UBR\n</code></pre>\n<h6 id=\"output\">Output:</h6>\n<pre><code class=\"hljs \">3570\n</code></pre>\n<p>This straightforward command quickly fetches the UBR, but what if you need more comprehensive information?</p>\n<h4 id=\"exploring-get-computerinfo\">Exploring Get-ComputerInfo</h4>\n<p>To delve deeper into the operating system details, the Get-ComputerInfo command is a powerful tool. Specifically, the 'OsHardwareAbstractionLayer' property contains the complete string with the UBR:</p>\n<h6 id=\"powershell-1\">PowerShell:</h6>\n<pre><code class=\"hljs css\">(<span class=\"hljs-selector-tag\">Get-ComputerInfo</span>)<span class=\"hljs-selector-class\">.OsHardwareAbstractionLayer</span>\n</code></pre>\n<h6 id=\"output-1\">Output:</h6>\n<pre><code class=\"hljs css\">10<span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.19041</span><span class=\"hljs-selector-class\">.3570</span>\n</code></pre>\n<h5 id=\"harnessing-the-system-version-class\">Harnessing the [System.Version] Class</h5>\n<p>For a structured representation of the version information, the [System.Version] class proves invaluable. While [System.Environment]::OSVersion.Version provides the basics, including Major, Minor, Build, and Revision, it lacks the UBR. To include the UBR, cast the 'OsHardwareAbstractionLayer' property:</p>\n<h6 id=\"powershell-2\">PowerShell:</h6>\n<pre><code class=\"hljs markdown\">[<span class=\"hljs-string\">Version</span>](<span class=\"hljs-link\">Get-ComputerInfo</span>).OsHardwareAbstractionLayer\n</code></pre>\n<h6 id=\"output-2\">Output:</h6>\n<pre><code class=\"hljs markdown\">Major  Minor  Build  Revision\n-----  -----  -----  --------\n10     0      19041  3570\n</code></pre>\n<p>Now, the output displays the detailed version information, including the UBR.</p>\n<h3 id=\"scaling-up-managing-multiple-systems\">Scaling Up: Managing Multiple Systems</h3>\n<p>But what if you're dealing with multiple computers? PowerShell offers a solution. Introducing Microsoft Graph, and if you are leveraging Intune, you can seamlessly fetch information from the cloud:</p>\n<h6 id=\"powershell-3\">PowerShell:</h6>\n<pre><code class=\"hljs markdown\">import-module microsoft.graph.devicemanagement\n[<span class=\"hljs-string\">Version</span>](<span class=\"hljs-link\">Get-MGDeviceManagementManagedDevice -Filter \"deviceName eq 'YouNameIt'\"</span>).OSVersion\n</code></pre>\n<h6 id=\"output-3\">Output:</h6>\n<pre><code class=\"hljs markdown\">Major  Minor  Build  Revision\n-----  -----  -----  --------\n10     0      19041  3570\n</code></pre>\n<p>This method enables you to obtain the necessary information from the cloud with a simple Microsoft Graph call, making it especially handy for managing multiple devices efficiently.</p>\n<h4 id=\"building-your-powershell-toolbelt\">Building Your PowerShell Toolbelt</h4>\n<p>In conclusion, by combining registry queries, Get-ComputerInfo, and the [System.Version] class, you've crafted a robust toolkit for extracting detailed operating system information. Whether you're working on a single machine or managing an entire fleet of devices through the cloud, PowerShell equips you with the flexibility to streamline your patching processes.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian</p>",
            "title": "PowerShell: Retreive the Update Build Release (UBR)",
            "link": "https://devdojo.com/hcritter/powershell-retreive-the-update-build-release-ubr",
            "published": "2023-11-22T14:24:59.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://powershell.ro/?p=188",
            "tags": [
                "Powershell",
                "VMWare",
                "Hardware information",
                "powercli",
                "PowerShellAutomation",
                "RDM Disks",
                "VirtualizationManagement",
                "vmware",
                "VMwareScripting"
            ],
            "description": "In this blog post, we&#8217;ll explore five practical PowerShell scripts designed to make everyday tasks in a virtualized environment more manageable. 1. Retrieve VM Hardware Version: When managing a virtualized infrastructure, knowing the hardware version of your VMs is crucial. This script simplifies the process, providing you with quick access to essential information about the [&#8230;]",
            "title": "Simplify Your Day-to-Day Tasks with These 5 Essential PowerShell Scripts",
            "link": "https://powershell.ro/simplify-your-day-to-day-tasks-with-these-5-essential-powershell-scripts/",
            "published": "2023-11-17T19:33:20.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p></p>\n\n\n\n<p>In this blog post, we&#8217;ll explore five practical PowerShell scripts designed to make everyday tasks in a virtualized environment more manageable.</p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>1. Retrieve VM Hardware Version:</strong></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n(Get-VM -Name $vm | Select-Object Name, Version).Version\n</pre></div>\n\n\n<p>When managing a virtualized infrastructure, knowing the hardware version of your VMs is crucial. This script simplifies the process, providing you with quick access to essential information about the VM hardware version.</p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>2. Retrieve VMware Tools Upgrade Policy:</strong></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n(Get-VM -Name $vm | Get-VMTools | Select-Object Name, Version, UpgradePolicy).UpgradePolicy\n</pre></div>\n\n\n<p>Keeping VMware Tools up-to-date is crucial for optimal virtual machine performance. This script not only gives you details about the installed VMware Tools but also offers insights into the upgrade policy in place, enabling proactive maintenance.</p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>3. Retrieve VM Disk Information (RDM Disks):</strong></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n(Get-VM -Name $VM | Get-HardDisk -DiskType &quot;RawPhysical&quot;,&quot;RawVirtual&quot; | Select-Object Parent, Name, DiskType, ScsiCanonicalName, DeviceName).Parent\n</pre></div>\n\n\n<p>Simplify your storage management by focusing on Raw Device Mapping (RDM) disks with this script. It extracts key details about RDM disks, including parent information, disk type, and device names, offering a comprehensive view of your storage configuration</p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>4. Retrieve CD/DVD Drive Information:</strong></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n(Get-VM -Name $vm | Get-CDDrive | Select-Object Parent, IsoPath | Format-Table -AutoSize -HideTableHeaders -Wrap | Out-String) -match '0000'\n</pre></div>\n\n\n<p>It fetches details about the parent VM, ISO path, and capacity. The use of <code>Format-Table</code> enhances readability, and <code>-match</code> allows for easy data filtering.</p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>5. Retrieve Revised VM Disk Information:</strong></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n(Get-VM -Name $vm | Get-HardDisk | Select-Object Parent, Filename, CapacityGB | Format-Table -AutoSize -HideTableHeaders -Wrap | Out-String) -match '0000'\n</pre></div>\n\n\n<p>It offers a clearer presentation of details such as the parent VM, filename, and capacity.</p>\n\n\n\n<p></p>\n\n\n\n<p class=\"has-text-align-left has-medium-font-size\" style=\"font-style:normal;font-weight:700\"><mark style=\"background-color:rgba(0, 0, 0, 0)\" class=\"has-inline-color has-palette-color-4-color\"><strong>Use it with a Foreach Loop:</strong></mark></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\nforeach ($vm in $VMs) {\n    # Use the desired script here\n}\n</pre></div>\n\n\n<p>Enhance your workflow by incorporating a foreach loop into your PowerShell scripts. By utilizing the syntax <code>foreach ($vm in $VMs)</code>, you can efficiently extend the functionality of these scripts to multiple virtual machines within your vCenter environment. This iterative process simplifies your management tasks, providing a systematic and efficient approach. Whether you seek details on hardware versions, storage configurations, or VMware Tools across your entire virtualized infrastructure, this loop ensures a comprehensive understanding of your environment.</p>\n\n\n\n<p>In conclusion, make these five PowerShell scripts an integral part of your daily routine to elevate your efficiency as an IT professional or system administrator. For added convenience, leverage the foreach loop to obtain details for all VMs in your vCenter environment. Whether your focus is on hardware versions, storage setups, or the status of VMware Tools, these scripts cover a diverse range of tasks, significantly improving your day-to-day operations. Unlock the potential of PowerShell to enhance your virtualized environment management and achieve a more efficient workflow.</p>\n<div class=\"pvc_clear\"></div><p id=\"pvc_stats_188\" class=\"pvc_stats all  \" data-element-id=\"188\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://baswijdenes.com/?p=29194",
            "tags": [
                "Microsoft",
                "Azure",
                "PowerShell"
            ],
            "description": "<p>Get-AzContext missing a &#8216;subscription&#8217; while using Set-AzContext We use the command below as standard in our scripts, but I have also discovered that this is not entirely useful. But for more about that you should go to another section on this blog (see the Table of Contents). You probably found this blog cause of an &#8230; <a href=\"https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: Get-AzContext missing &#8216;subscription&#8217; Az.Accounts PowerShell</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/\">FIX: Get-AzContext missing &#8216;subscription&#8217; Az.Accounts PowerShell</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: Get-AzContext missing ‘subscription’ Az.Accounts PowerShell",
            "link": "https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/",
            "published": "2023-11-17T12:32:00.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/azure/microsoftgraph/2023/11/07/removing-stale-devices-from-entra",
            "tags": [
                "PowerShell",
                "Azure",
                "MicrosoftGraph",
                "PowerShell",
                "Microsoft",
                "Azure",
                "Intune",
                "MicrosoftGraph",
                "EntraID"
            ],
            "description": "Today, I continued the cleanup process of our Entra Directory. There were about 7500 Stale devices in the directory, and I’m not that fond of clicking my mouse. So I needed a quicker method to deal with the devices. And as you’ve probably figured out already, that means PowerShell.",
            "title": "Removing stale devices from Entra/Intune",
            "link": "http://www.randriksen.net/powershell/azure/microsoftgraph/2023/11/07/removing-stale-devices-from-entra.html",
            "published": "2023-11-07T00:00:00.000Z",
            "media": []
        },
        {
            "id": "https://blog.it-koehler.com/?p=5461",
            "tags": [
                "azure ad powershell",
                "common",
                "Powershell"
            ],
            "description": "<p>Clearing old or orphaned groups is also important in cloud environments, especially in larger structures. So an easy way is to check if there are disabled users in Azure AD groups. Of course there can be also some license savings in M365 if disabled users are removed. This use case I wrote a small PowerShell &#8230; </p>\n<p class=\"link-more\"><a href=\"https://blog.it-koehler.com/en/Archive/5461\" class=\"more-link\">Read more<span class=\"screen-reader-text\"> \"Cleanup M365 Azure AD groups via PowerShell\"</span></a></p>\n<p>Articel <a href=\"https://blog.it-koehler.com/en/Archive/5461\">Cleanup M365 Azure AD groups via PowerShell</a> available first on <a href=\"https://blog.it-koehler.com/en\">IT koehler blog</a>.</p>",
            "title": "Cleanup M365 Azure AD groups via PowerShell",
            "link": "https://blog.it-koehler.com/en/Archive/5461",
            "published": "2023-11-06T09:30:00.000Z",
            "author": {
                "#text": "A.K.",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://baswijdenes.com/?p=29224",
            "tags": [
                "Microsoft",
                "Automation",
                "PowerShell"
            ],
            "description": "<p>Import a PowerShell 7.XX runbook in Azure Automation via PowerShell You cannot currently choose PowerShell 7.XX runtime via the standard cmdlet New-AzAutomationRunbook in the Az.Automation module. This limits you to using the Azure portal. You can upload runbooks via a workaround with runtime 7.XX. This only applies to powershell script files located in an Azure &#8230; <a href=\"https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">How to import PowerShell 7 runbooks in Azure Automation</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/\">How to import PowerShell 7 runbooks in Azure Automation</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "How to import PowerShell 7 runbooks in Azure Automation",
            "link": "https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/",
            "published": "2023-10-31T13:15:00.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/2023/10/30/new-version-of-MGNestedGroups",
            "tags": [
                "PowerShell",
                "PowerShell",
                "Microsoft"
            ],
            "description": "I’ve just released a new version of my MGNestedGroups module. It’s a pretty niche module, but it’s something I’ve found usefull at work, so I’ve improved it a little bit now.",
            "title": "New version of MGNestedGroups",
            "link": "http://www.randriksen.net/powershell/2023/10/30/new-version-of-MGNestedGroups.html",
            "published": "2023-10-30T00:00:00.000Z",
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/2023/10/27/windows-gitlab-runner-setup",
            "tags": [
                "PowerShell",
                "Microsoft",
                "GitLab",
                "DevOps",
                "PowerShell"
            ],
            "description": "When I first started my current job, one of the first things I did was set up a GitLab server. I wanted it to be the central place for version control and CI/CD. I’d used GitLab at my previous job and really liked it, so I wanted to use it again.",
            "title": "How to set up GitLab Runner on a Windows Server",
            "link": "http://www.randriksen.net/powershell/2023/10/27/windows-gitlab-runner-setup.html",
            "published": "2023-10-27T00:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/11762",
            "tags": [
                "powershell",
                "function",
                "method",
                "hashtable",
                "getvalueordefault"
            ],
            "description": "<h2 id=\"enhancing-powershell-with-getvalueordefault-a-neat-solution-for-streamlined-hashtables\">Enhancing PowerShell with GetValueOrDefault: A Neat Solution for Streamlined Hashtables</h2>\n<p>Have you ever wondered why the Hashtable in .NET lacks a GetValueOrDefault method, a feature readily available in basic Dictionaries? In my quest to streamline my PowerShell experience, I decided to address this by creating a simple function and extending it to all my Hashtables. This handy method can prove invaluable in various scenarios, making your code cleaner and more concise.</p>\n<p>First, let's define the GetValueOrDefault function for Hashtables:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$GetValueOrDefault</span> = {\n    <span class=\"hljs-keyword\">param</span>(\n        <span class=\"hljs-variable\">$key</span>,\n        <span class=\"hljs-variable\">$defaultValue</span>\n    )\n    <span class=\"hljs-keyword\">$this</span>.ContainsKey(<span class=\"hljs-variable\">$key</span>) ? <span class=\"hljs-keyword\">$this</span>[<span class=\"hljs-variable\">$key</span>] : <span class=\"hljs-variable\">$defaultValue</span>\n}\n\n<span class=\"hljs-variable\">$etd</span> = <span class=\"hljs-selector-tag\">@</span>{\n    TypeName = <span class=\"hljs-string\">'System.Collections.Hashtable'</span>\n    MemberType = <span class=\"hljs-string\">'Scriptmethod'</span>\n    MemberName = <span class=\"hljs-string\">'GetValueOrDefault'</span>\n    Value = <span class=\"hljs-variable\">$GetValueOrDefault</span>\n}\n<span class=\"hljs-built_in\">Update-TypeData</span> @etd\n</code></pre>\n<p>With this function now at your disposal, you might wonder how to best utilize it. One excellent use case is as a replacement for the traditional switch command. Let's consider an example where you need to translate a number into a language, defaulting to English for unknown inputs.</p>\n<p>Without the GetValueOrDefault method, you might use a switch statement like this:</p>\n<pre><code class=\"hljs php\">$number = <span class=\"hljs-number\">1</span>\n$language = <span class=\"hljs-keyword\">switch</span> ($number) {\n    <span class=\"hljs-number\">1</span> { <span class=\"hljs-string\">\"German\"</span> }\n    <span class=\"hljs-number\">2</span> { <span class=\"hljs-string\">\"French\"</span> }\n    <span class=\"hljs-number\">3</span> { <span class=\"hljs-string\">\"Spanish\"</span> }\n    <span class=\"hljs-number\">4</span> { <span class=\"hljs-string\">\"Italian\"</span> }\n    <span class=\"hljs-number\">5</span> { <span class=\"hljs-string\">\"Russian\"</span> }\n    <span class=\"hljs-keyword\">Default</span> {<span class=\"hljs-string\">\"English\"</span>}\n}\n</code></pre>\n<p>Or its more verbose if-elseif-else counterpart:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$number</span> = <span class=\"hljs-number\">1</span>\n<span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">''</span>\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$number</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"German\"</span>\n}\n<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$number</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">2</span>) {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"French\"</span>\n}\n<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$number</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">3</span>) {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"Spanish\"</span>\n}\n<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$number</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">4</span>) {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"Italian\"</span>\n}\n<span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-variable\">$number</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">5</span>) {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"Russian\"</span>\n}\n<span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-variable\">$language</span> = <span class=\"hljs-string\">\"English\"</span>\n}\n</code></pre>\n<p>Or its more verbose if-elseif-else counterpart:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$Number</span>=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-variable\">$LanguageTable</span> = <span class=\"hljs-selector-tag\">@</span>{\n    <span class=\"hljs-number\">1</span> = <span class=\"hljs-string\">\"German\"</span>\n    <span class=\"hljs-number\">2</span> = <span class=\"hljs-string\">\"French\"</span>\n    <span class=\"hljs-number\">3</span> = <span class=\"hljs-string\">\"Spanish\"</span>\n    <span class=\"hljs-number\">4</span> = <span class=\"hljs-string\">\"Italian\"</span>\n    <span class=\"hljs-number\">5</span> = <span class=\"hljs-string\">\"Russian\"</span>\n}\n<span class=\"hljs-variable\">$LanguageTable</span>.GetValueOrDefault(<span class=\"hljs-variable\">$Number</span>,<span class=\"hljs-string\">'English'</span>)\n</code></pre>\n<p>As you can see, the code is not only more concise but also easier to read. It's important to note that this method doesn't aim to replace complex switch statements involving regular expressions or multiple conditions; instead, it excels at providing a clean and efficient solution for basic replacements of switch or if/elseif/else constructs.</p>\n<p>In conclusion, the GetValueOrDefault method for Hashtables can be a valuable addition to your PowerShell toolkit, offering a simpler and more elegant way to handle basic switch-like scenarios, making your code more readable and maintainable.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Best regards,\nChristian</p>",
            "title": "PowerShell: Add GetValueOrDefault Method to a Hashtable",
            "link": "https://devdojo.com/hcritter/powershell-add-getvalueordefault-method-to-a-hashtable",
            "published": "2023-10-26T09:51:01.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/2023/10/20/easy-way-to-figure-out-what-old-scripts-do",
            "tags": [
                "PowerShell",
                "PowerShell",
                "Microsoft",
                "ChatGPT"
            ],
            "description": "In most of my jobs in the last 12 years, I’ve encountered situations where my predecessors had already left before I started, and I had to search far and wide for documentation on how they had set up the systems. Sometimes the documentation was available, and sometimes it wasn’t. At times, it was fairly up-to-date, but most of the time, it was quite outdated.",
            "title": "An easy way to figure out what old scripts actually do, document them and maybe even improve them",
            "link": "http://www.randriksen.net/powershell/2023/10/20/easy-way-to-figure-out-what-old-scripts-do.html",
            "published": "2023-10-20T00:00:00.000Z",
            "media": []
        },
        {
            "id": "http://www.randriksen.net/powershell/2023/10/19/alert-when-running-out-of-licenses",
            "tags": [
                "PowerShell",
                "PowerShell",
                "Microsoft",
                "Graph",
                "Microsoft365"
            ],
            "description": "Lately, we’ve been experiencing a shortage of licenses for some of our Microsoft 365 services. It’s not a significant problem, but the absence of any alerting mechanism made it a bit of a hassle when new users couldn’t obtain the licenses they needed.",
            "title": "Alerting when running out of licenses",
            "link": "http://www.randriksen.net/powershell/2023/10/19/alert-when-running-out-of-licenses.html",
            "published": "2023-10-19T00:00:00.000Z",
            "media": []
        },
        {
            "id": "https://powershell.ro/?p=184",
            "tags": [
                "Automation",
                "Powershell",
                "VMWare",
                "Event Monitoring",
                "HA (High Availability)",
                "Infrastructure Monitoring",
                "powercli",
                "powershell",
                "scripting",
                "vmware"
            ],
            "description": "Part II of this post Get HA events of VM restart from vCenter – PowerShell.ro In part I of getting the HA events we have searched for the VM restart events. Now, I wanted to search for the HA events of Host restart and add it to an object, using this Powershell object later for [&#8230;]",
            "title": "Get HA events of Host restart from vCenter",
            "link": "https://powershell.ro/get-ha-events-of-host-restart-from-vcenter/",
            "published": "2023-10-11T18:45:28.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Part II of this post <a href=\"https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/\">Get HA events of VM restart from vCenter – PowerShell.ro</a></p>\n\n\n\n<p>In part I of getting the HA events we have searched for the VM restart events. Now, I wanted to search for the HA events of Host restart and add it to an object, using this Powershell object later for other scope.</p>\n\n\n\n<p>In this blog post, we&#8217;ll explore a PowerShell script designed to monitor Host Availability (HA) events in a VMware environment. The script focuses on detecting instances where a HA host has failed and provides information about the host.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Script Breakdown</h3>\n\n\n\n<ol>\n<li><strong>Configuration Settings:</strong>\n<ul>\n<li><code>$HAHostrestart</code>: A boolean flag indicating whether to check for HA host restarts.</li>\n\n\n\n<li><code>$maxevents</code>: Maximum number of events to retrieve.</li>\n\n\n\n<li><code>$searchperiod</code>: Number of days to search for HA events.</li>\n\n\n\n<li><code>$stopevents</code> and <code>$startevents</code>: Define the time range for event retrieval.</li>\n</ul>\n</li>\n\n\n\n<li><strong>Checking HA Host Restart:</strong>\n<ul>\n<li>The script begins by checking if the HA host restart check is enabled (<code>$HAHostrestart</code> is set to <code>$true</code>).</li>\n\n\n\n<li>If enabled, it fetches the relevant HA events within the specified time range using <code>Get-VIEvent</code>.</li>\n</ul>\n</li>\n\n\n\n<li><strong>Processing HA Host Events:</strong>\n<ul>\n<li>If there are events, the script filters them to include only events related to HA host failures.</li>\n\n\n\n<li>Extracted host names are processed to obtain server names and fully qualified domain names (FQDNs).</li>\n\n\n\n<li>A custom object is created for each host, containing the server name and FQDN.</li>\n</ul>\n</li>\n\n\n\n<li><strong>Output:</strong>\n<ul>\n<li>The server names of affected hosts are then displayed.</li>\n</ul>\n</li>\n</ol>\n\n\n\n<h3 class=\"wp-block-heading\">Conclusion</h3>\n\n\n\n<p>This PowerShell script offers a streamlined way to monitor HA host restarts in a VMware environment. By leveraging the VMware PowerCLI module, users can easily customize and integrate this script into their infrastructure monitoring solutions.</p>\n\n\n\n<p>Monitoring HA events is crucial for maintaining the reliability and availability of virtualized environments. This script provides a foundation for building more comprehensive monitoring and alerting systems tailored to specific organizational needs.</p>\n\n\n\n<p>Feel free to adapt and expand upon this script to suit your environment, and stay tuned for more PowerShell insights!</p>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# HA VM restart log\n\n$HAHostrestart = $true\n$maxevents = 250000\n$searchperiod = 1\n$stopevents = Get-Date\n$startevents = $stopevents - (New-TimeSpan -Days $searchperiod)\n\n# Get Host HA events\nif ($HAHostrestart) {\n    Write-Host &quot;..Checking HA Host restart&quot;\n    \n    $HAHostrestartlist = Get-VIEvent -Start $startevents -Finish $stopevents -MaxSamples $maxevents | Where-Object { $_.EventTypeID -eq &quot;com.vmware.vc.HA.DasHostFailedEvent&quot; }\n\n    if ($HAHostrestartlist.Count -gt 0) {\n        $vmHosts = $HAHostrestartlist | Where-Object { $_.EventTypeId -eq &quot;com.vmware.vc.HA.DasHostFailedEvent&quot; } | Select-Object ObjectName -ExpandProperty ObjectName\n\n        $outputHost = foreach ($matchhost in $vmHosts) {\n            $matchhostname = $matchhost.Split(&quot;.&quot;)&#x5B;0]\n            &#x5B;PSCustomObject]@{\n                Server = $matchhostname\n                FQDN = $matchhost\n            }\n        }\n\n        $outputHost.Server\n    }\n}\n\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_184\" class=\"pvc_stats all  \" data-element-id=\"184\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://evotec.xyz/?p=18421",
            "tags": [
                "Active Directory",
                "Azure",
                "Azure AD",
                "PowerShell",
                "azure ad",
                "health checks",
                "microsoft entra",
                "powershell"
            ],
            "description": "<p>Active Directory (AD) is crucial in managing identities and resources within an organization. Ensuring its health is pivotal for the seamless operation of various services. Today, I decided to look at Microsoft Entra Connect Health (Azure AD Connect Health) service, which allows monitoring Azure AD Connect, ADFS, and Active Directory. This means that under a single umbrella, you can have an overview of three services health. But is it worth it?</p>\n<p>The post <a href=\"https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/\">Active Directory Health Check using Microsoft Entra Connect Health Service</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Active Directory Health Check using Microsoft Entra Connect Health Service",
            "link": "https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/",
            "published": "2023-10-08T14:36:57.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c6d7bb0\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d7b972881\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d7e078708\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d7e09 \"><div class=\"wpb_wrapper thegem-custom-665370c6d7e078708\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d7fd76735\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>Active Directory (AD)</strong> is crucial in managing identities and resources within an organization. Ensuring its health is pivotal for the seamless operation of various services. Today, I decided to look at <strong>Microsoft Entra Connect Health</strong> (<strong>Azure AD Connect Health</strong>) service, which allows monitoring <strong>Azure AD Connect</strong>, <strong>ADFS</strong>, and <strong>Active Directory.</strong> This means that under a single umbrella, you can have an overview of three services health. But is it worth it?</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d814a5799\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Before we check what this service has to offer, after reading the documentation it's clear Microsoft needs to do some updates, as depending on where you look you will find discrepancies in what the service is for. In the installation document <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/how-to-connect-health-agent-install\">Install the Microsoft Entra Connect Health agents</a> there are references that this service is actually for <strong>Microsoft Entra DS</strong>, which is the new name for <strong>Azure Active Directory DS</strong>, where you explicitly can't install any agents as it's Microsoft-hosted.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d82d09166\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<blockquote><p>For example, to get data from your Active Directory Federation Services (AD FS) infrastructure, you must install the agent on the AD FS server and on the Web Application Proxy server. Similarly, to get data from your on-premises Microsoft Entra Domain Services (Microsoft Entra DS) infrastructure, you must install the agent on the domain controllers.</p></blockquote>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d8402283\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Different docs, such as <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/how-to-connect-health-adds\">Using Microsoft Entra Connect Health with AD DS</a> points to support Windows Server 2008 R2, Windows Server 2012, and Windows Server 2016, skipping new versions of servers. On the other hand, the <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/reference-connect-health-faq\">FAQ for Microsoft Entra Connect Health</a> correctly refers to more systems being supported and to Active Directory Domain Services (AD DS). Whether this is just a simple case of going overboard with renaming everything with <strong>Active Directory DS</strong> in its name to <strong>Microsoft Entra DS</strong>, or we are looking for a future rename of <strong>Active Directory</strong>, we will have to wait and see. In the meantime, let's test the <strong>Entra Connect Health agent for AD DS</strong> and see how it works. The FAQ document also points to different systems being supported (Windows 2008 R2 and Windows 21012 aren't up-to-date anymore), and I would trust it a bit more than the first mentioned document.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8402283{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8402283{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8402283{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8402283{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d852d8548\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"dZPNXqJ\"><img class=\"alignnone wp-image-18472 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-888x1024.png\" alt=\"\" width=\"888\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-888x1024.png 888w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-260x300.png 260w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-768x886.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291.png 939w\" sizes=\"(max-width: 888px) 100vw, 888px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d87cb\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d87bf6520\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d89e63303\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d89e9 \"><div class=\"wpb_wrapper thegem-custom-665370c6d89e63303\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Deploying Microsoft Entra Health Agent</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d8d115882\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Deployment of agents is pretty straightforward and follows the standard process:</p>\n<ul>\n<li>Download the agent (MSI file)</li>\n<li>Copy it to the Domain Controller</li>\n<li>Run it, and let it ask you for Entra ID (Azure AD) credentials. You will require Global Admin to register a health agent.</li>\n</ul>\n<p>That's it; now wait for the data to show in the Dashboard. Of course, if you have plenty of Domain Controllers, Microsoft provides the ability to install it using PowerShell.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d8f9c\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d8f8f9488\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d91a35215\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d91a5 \"><div class=\"wpb_wrapper thegem-custom-665370c6d91a35215\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Microsoft Entra Health Dashboard for Active Directory (AD DS)</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d94af6397\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The dashboard is pretty minimalistic showing essential information about the domain, replication status, alerts, and basic charts for <strong>LDAP</strong>, <strong>NTLM</strong>, and <strong>Kerberos</strong> authentications.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d96212379\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294.png\"><img class=\"alignnone wp-image-18434 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-974x1024.png\" alt=\"\" width=\"974\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-974x1024.png 974w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-285x300.png 285w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-768x807.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-1461x1536.png 1461w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294.png 1859w\" sizes=\"(max-width: 974px) 100vw, 974px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d96212379{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d96212379{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d96212379{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d96212379{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d97512785\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c.png\"><img class=\"alignnone wp-image-18437 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-974x1024.png\" alt=\"\" width=\"974\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-974x1024.png 974w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-285x300.png 285w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-768x807.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-1461x1536.png 1461w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c.png 1859w\" sizes=\"(max-width: 974px) 100vw, 974px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d97512785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d97512785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d97512785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d97512785{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d986e1828\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you can see on the screenshots above, it also gives you a quick overview of the number of DCs monitored (out of all available) and domains within the forest and sites it sees. According to it I have 2 out of 5 DCs, two domains, and one site.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6d9b3f\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6d9b2d560\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d9d442311\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6d9d46 \"><div class=\"wpb_wrapper thegem-custom-665370c6d9d442311\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d9f2b1958\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>You can also deep-dive into Performance Monitors Collection where you can select multiple other counters</p>\n<ul>\n<li>ATQ estimated queue delay</li>\n<li>ATQ outstanding queued requests</li>\n<li>ATQ request latency</li>\n<li>ATQ threads LDAP</li>\n<li>ATQ threads other</li>\n<li>ATQ threads total</li>\n<li>Directory replication agent inbound bytes total per second</li>\n<li>Directory replication agent outbound bytes total per second</li>\n<li>Domain services threads in use</li>\n<li>Free disk space</li>\n<li>Kerberos authentications</li>\n<li>LDAP active threads</li>\n<li>LDAP bind time</li>\n<li>LDAP searches per second</li>\n<li>LDAP successful binds per second</li>\n<li>NTLM authentications per second</li>\n<li>Replication queue</li>\n<li>TCP connections established</li>\n<li>Used memory percentage</li>\n<li>Used processor percentage</li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da0f01364\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"JXGNnzp\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9.png\"><img class=\"alignnone wp-image-18482 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-980x1024.png\" alt=\"\" width=\"980\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-980x1024.png 980w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-287x300.png 287w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-768x802.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-1470x1536.png 1470w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9.png 1863w\" sizes=\"(max-width: 980px) 100vw, 980px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da2ac1580\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"wbgDtLF\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a.png\"><img class=\"alignnone wp-image-18480 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-980x1024.png\" alt=\"\" width=\"980\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-980x1024.png 980w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-287x300.png 287w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-768x802.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-1470x1536.png 1470w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a.png 1863w\" sizes=\"(max-width: 980px) 100vw, 980px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da3d93972\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>For each chart, you can drill down, see details, and filter out data per Domain Controller</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da5443758\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef.png\"><img class=\"alignnone wp-image-18441 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-1024x804.png\" alt=\"\" width=\"1024\" height=\"804\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-1024x804.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-300x235.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-768x603.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef.png 1180w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da5443758{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da5443758{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da5443758{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da5443758{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6da93f\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6da9305762\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dac976077\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6dac99 \"><div class=\"wpb_wrapper thegem-custom-665370c6dac976077\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Mix & Match with other Azure Elements</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db1641386\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Every chart can also be sent to a global dashboard to create a mix & match with other Azure Services. Unfortunately, after I pinned a few charts to my private dashboard and came back a bit later to it &#8211;  I was greeted with <strong>not-found </strong>messages, making this functionality more like a gimmick.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db1641386{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db1641386{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db1641386{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db1641386{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db36d5648\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"ayQWVQF\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb.png\"><img class=\"alignnone wp-image-18484 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1024x888.png\" alt=\"\" width=\"1024\" height=\"888\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1024x888.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-300x260.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-768x666.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1536x1332.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db535531\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Maybe spending enough time fighting the dashboard, saving it multiple times, and fixing the positioning will be helpful. After playing with the dashboard for a few minutes where the data would be gone, or I had to go back to Health Service to add more charts, my patience ran out.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db535531{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db535531{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db535531{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db535531{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6db8f4\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6db8e54978\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dbad17706\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6dbad3 \"><div class=\"wpb_wrapper thegem-custom-665370c6dbad17706\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Domain Controllers overview</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dbd705585\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Every element is clickable to drill down one or two levels. We can see which Domain Controllers are monitored, their status, and what roles on which DC are available. As you can see below, 2 out of 5 domain controllers are installed, and monitoring is available for them.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dbea04310\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png\"><img class=\"alignnone wp-image-18443 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png\" alt=\"\" width=\"1024\" height=\"316\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-300x93.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-768x237.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1536x474.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png 1832w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6dc198\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6dc1879421\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dc39e9541\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6dc3a0 \"><div class=\"wpb_wrapper thegem-custom-665370c6dc39e9541\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc51f2233\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>After I left the newly implemented solution running for a whole night, in the morning, it suggested I only have one domain, one site, and two out of two DCs in the forest. I tried refreshing, clicking icons, and going in or out, and the data suggested that my forest suddenly is much smaller than it is.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc6209699\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"pFluzWR\"><img class=\"alignnone wp-image-18423 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1024x300.png\" alt=\"\" width=\"1024\" height=\"300\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1024x300.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-300x88.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-768x225.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1536x449.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc71b4297\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"ymwXRqe\"><img class=\"alignnone wp-image-18425 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1024x521.png\" alt=\"\" width=\"1024\" height=\"521\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1024x521.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-300x153.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-768x391.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1536x782.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc8132652\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>After installing another agent and waiting 5 minutes, it was able to pick up that I have another domain and and another DC.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc9156267\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"wFJAMut\"><img class=\"alignnone wp-image-18463 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1024x311.png\" alt=\"\" width=\"1024\" height=\"311\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1024x311.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-300x91.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-768x233.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1536x466.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dca119738\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>But it still is missing two other DCs, so it left me a bit worried about deployment to production. As part of the same view, you can choose additional columns that show you critical information that is very useful for Domain Admins</p>\n<ul>\n<li>LAST UPLOADED</li>\n<li>LAST BOOT TIME</li>\n<li>PDC REACHABLE</li>\n<li>GC REACHABLE</li>\n<li>SYSVOL STATE</li>\n<li>DC ADVERTISED</li>\n<li>OS NAME</li>\n</ul>\n<p>With a simple glance, you can see potential issues in your forest (as long as you condition that this isn't <strong>live view</strong> but monitoring with a delay).</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dca119738{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dca119738{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dca119738{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dca119738{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dcb2d3692\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"aTDuAaH\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e.png\"><img class=\"alignnone wp-image-18466 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1024x306.png\" alt=\"\" width=\"1024\" height=\"306\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1024x306.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-300x90.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-768x230.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1536x459.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dcc47327\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you can see above, the <strong>Last Uploaded</strong> column gave different times: 9:00, 9:05, and 8:55, and when I took this screenshot, it was already 9:20. After waiting a bit more, it seems the actual refresh time is <strong>every 30 minutes</strong>. I am also not sure if this can be adjusted. More up-to-date information would be beneficial, but maybe a bit too performance-intensive. According to FAQ, the actual impact on the given server is:</p>\n<ul>\n<li><strong>CPU consumption</strong>: ~1-5% increase.</li>\n<li><strong>Memory consumption</strong>: Up to 10 % of the total system memory.</li>\n</ul>\n<p>The agent is also not supported on <strong>Server Core,</strong> which, if you have invested heavily for a more secure version of Windows, you're a bit out of luck on this one.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6dcf27\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6dcf1a5451\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dd1401900\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6dd142 \"><div class=\"wpb_wrapper thegem-custom-665370c6dd1401900\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Detecting replication failures and reviewing them</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd4599453\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To test if the service works, I shutdown one of the <strong>Domain Controllers</strong>, and the service did pick it up and let me know that replication is not working correctly.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd5792138\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png\"><img class=\"alignnone wp-image-18443 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png\" alt=\"\" width=\"1024\" height=\"316\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-300x93.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-768x237.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1536x474.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png 1832w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd6a52624\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>You can also go into <strong>Replication Status</strong> and see what replication is failing.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd7a35873\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30.png\"><img class=\"alignnone wp-image-18432 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1024x621.png\" alt=\"\" width=\"1024\" height=\"621\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1024x621.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-300x182.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-768x465.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1536x931.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30.png 1726w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6dd9a9\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6dd99f2454\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ddb518220\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ddb53 \"><div class=\"wpb_wrapper thegem-custom-665370c6ddb518220\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddcae4758\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>When any health problems are detected, an email is sent, and alerts are generated in the console, giving you a quick overview of its status.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dddaa2612\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b.png\"><img class=\"alignnone wp-image-18445 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1024x278.png\" alt=\"\" width=\"1024\" height=\"278\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1024x278.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-300x81.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-768x209.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1536x417.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b.png 1838w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddea66195\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The alerts can't be suppressed or marked as fixed. They are generated automatically on error; if you set them on DC, the service will resolve them automatically. In the dashboard, you can see the history of alerts for the last 6 hours, the past 24 hours, or the past seven days. This is enough to cover day-to-day monitoring, but you can't see a more extended period to see any patterns of problems reoccurring over an extended period.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddfa94128\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef.png\"><img class=\"alignnone wp-image-18449 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-1024x198.png\" alt=\"\" width=\"1024\" height=\"198\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-1024x198.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-300x58.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-768x148.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef.png 1176w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6de210\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6de2049444\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6de4003889\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6de403 \"><div class=\"wpb_wrapper thegem-custom-665370c6de4003889\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de5a15543\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>By default, only Global Administrators get email notifications about issues with Active Directory, but it can be changed to notify any other email addresses.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de6bb4491\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff.png\"><img class=\"alignnone wp-image-18447 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1024x269.png\" alt=\"\" width=\"1024\" height=\"269\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1024x269.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-300x79.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-768x202.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1536x403.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff.png 1832w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de7d04104\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Once the issue is detected, the email is sent &#8220;as soon as possible.&#8221; Since I have completely shut down DC, two errors have been detected. One was a <strong>replication issue</strong>; the other was <strong>LDAP ping</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de8f55116\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"zxbgBgT\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77.png\"><img class=\"alignnone wp-image-18453 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-823x1024.png\" alt=\"\" width=\"823\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-823x1024.png 823w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-241x300.png 241w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-768x955.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77.png 1075w\" sizes=\"(max-width: 823px) 100vw, 823px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6deb7a\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6deb6e1273\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ded349200\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ded36 \"><div class=\"wpb_wrapper thegem-custom-665370c6ded349200\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Support for Multiple Active Directory Forests</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6df04345\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Azure Active Directory Connect Health supports multiple forests so it's possible to register all your domains</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df04345{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df04345{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df04345{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df04345{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6df1df5937\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"lYZvpnW\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665.png\"><img class=\"alignnone wp-image-18489 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1024x424.png\" alt=\"\" width=\"1024\" height=\"424\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1024x424.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-300x124.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-768x318.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1536x635.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6df463\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6df4514734\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6df7822884\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6df785 \"><div class=\"wpb_wrapper thegem-custom-665370c6df7822884\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Licensing for Entra Connect Health Agent</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dfb7f9636\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>While it may seem it's a free service, it requires <strong>Azure AD Premium P1</strong> or <strong>P2</strong> licenses. For every domain controller you want to monitor, you need <strong>25 Azure AD Premium</strong> licenses assigned to your tenant, except for <strong>Azure AD Connect Server</strong>, which requires <strong>only one approval</strong>.</p>\n<ul>\n<li>If you have<strong> 1</strong> and <strong>1 Azure AD Connect</strong>, you will need <strong>51 </strong>licenses.</li>\n<li>If you have <b>10</b> and <strong>1 Azure AD Connect</strong>, you will need <strong>251</strong> licenses.</li>\n<li>If you have <strong>100</strong> controllers and <strong>2 Azure AD Connect</strong>, you will need <strong>2502</strong> licenses.</li>\n</ul>\n<p>Most companies who are invested in <strong>Office 365</strong> usually have <strong>P1</strong> and <strong>P2</strong> licenses already, as it brings other benefits to the table, so for them, it's primarily free addition.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6dff2f\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6dff23557\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e01355689\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6e0137 \"><div class=\"wpb_wrapper thegem-custom-665370c6e01355689\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Pros & Cons for Microsoft Entra Connect Health</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e044b6628\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Microsoft Entra Health Service for ADDS has its pros and cons:</p>\n<ul>\n<li>Supports monitoring multiple Active Directory forests</li>\n<li>Agents communicate every 30 minutes. For 30 minutes, the service doesn't even notice any issues.</li>\n<li>I've shut down one Domain Controller (ADRODC) with no other DC being monitored in the same domain, which would potentially detect problems with replications. It took 4 hours to get a notification that the agent was not responding. For 2 hours, the server was reporting in the console as perfectly fine, and only after 4 hours did the notification come in. The only thing that gave it away that something was wrong was the Last Upload column was not updated.</li>\n<li>For another server, shutting it down triggered a replication error in the console on another server, but the server that was down again was reported as working as expected. It would take 4 hours to get a notification about it being down totally.</li>\n<li>The console started showing the first replication errors about 35 minutes after DC was shut, but it took over 80 minutes to get an email.</li>\n<li>In one case, it took over 2 hours to auto-resolve alerts for broken replication even though Testimo testing showed the replication works fine.</li>\n<li>There were occasional issues with GUI where the service would report that my Forest has only one domain and two domain controllers, and all were onboarded, where I had 2 out of 5 available. This issue fixed itself several hours later, correctly showing several domains and domain controllers.</li>\n<li>Some errors will auto-resolve themselves only after 72 hours from the alert generation if the same error condition doesn't happen again within that timeframe.</li>\n<li>The metrics provided in the console are helpful and can bring benefits if one doesn't have other systems that offer such monitoring.</li>\n<li>The agents upgrade themselves automatically, meaning there is very little maintenance. It either works or it doesn't.</li>\n<li>The agents don't require reboots during installation as long as NET 4.6.2 Framework is installed.</li>\n</ul>\n<p>Overall, I believe the health service has potential and is beneficial for monitoring if you already have enough Azure AD Premium P1 or P2 licenses. <strong>Unfortunately, this service is not super helpful if one expects real-time monitoring</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6e06f8\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6e06ed7001\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e09a63202\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6e09a9 \"><div class=\"wpb_wrapper thegem-custom-665370c6e09a63202\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>List of notifications supported by Microsoft Entra Connect service for ADDS</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e0d709616\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Here's a list of currently supported notifications/detections. Even without having real-time monitoring for large environments, detecting problems like this is super beneficial. Unless you have specialized software already able to deliver such detection with real-time monitoring, <strong>Microsoft Entra Health service for ADDS</strong> is worth investing in.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e0f343492\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<table class=\"table table-sm\" aria-label=\"Table 4\">\n<thead>\n<tr>\n<th>Alert Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Domain controller is unreachable via LDAP ping</td>\n<td>Domain Controller isn't reachable via LDAP Ping. This can be caused due to Network issues or machine issues. As a result, LDAP Pings will fail.</td>\n</tr>\n<tr>\n<td>Active Directory replication error encountered</td>\n<td>This domain controller is experiencing replication issues, which can be found by going to the Replication Status Dashboard. Replication errors may be due to improper configuration or other related issues. Untreated replication errors can lead to data inconsistency.</td>\n</tr>\n<tr>\n<td>Domain controller is unable to find a PDC</td>\n<td>A PDC isn't reachable through this domain controller. This will lead to impacted user logons, unapplied group policy changes, and system time synchronization failure.</td>\n</tr>\n<tr>\n<td>Domain controller is unable to find a Global Catalog server</td>\n<td>A global catalog server isn't reachable from this domain controller. It will result in failed authentications attempted through this Domain Controller.</td>\n</tr>\n<tr>\n<td>Domain controller unable to reach local sysvol share</td>\n<td>Sysvol contains important elements from Group Policy Objects and scripts to be distributed within DCs of a domain. The DC won't advertise itself as DC and Group Policies won't be applied.</td>\n</tr>\n<tr>\n<td>Domain Controller time is out of sync</td>\n<td>The time on this Domain Controller is outside of the normal Time Skew range. As a result, Kerberos authentications will fail.</td>\n</tr>\n<tr>\n<td>Domain controller isn't advertising</td>\n<td>This domain controller isn't properly advertising the roles it's capable of performing. This can be caused by problems with replication, DNS misconfiguration, critical services not running, or because of the server not being fully initialized. As a result, domain controllers, domain members, and other devices won't be able to locate this domain controller. Additionally, other domain controllers might not be able to replicate from this domain controller.</td>\n</tr>\n<tr>\n<td>GPSVC service isn't running</td>\n<td>If the service is stopped or disabled, settings configured by the admin won't be applied and applications and components won't be manageable through Group Policy. Any components or applications that depend on the Group Policy component might not be functional if the service is disabled.</td>\n</tr>\n<tr>\n<td>DFSR and/or NTFRS services aren't running</td>\n<td>If both DFSR and NTFRS services are stopped, Domain Controllers won't be able to replicate sysvol data. sysvol Data will be out of consistency.</td>\n</tr>\n<tr>\n<td>Netlogon service isn't running</td>\n<td>Logon requests, registration, authentication, and locating of domain controllers will be unavailable on this DC.</td>\n</tr>\n<tr>\n<td>W32Time service isn't running</td>\n<td>If Windows Time Service is stopped, date and time synchronization will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start.</td>\n</tr>\n<tr>\n<td>ADWS service isn't running</td>\n<td>If Active Directory Web Services service is stopped or disabled, client applications, such as Active Directory PowerShell, won't be able to access or manage any directory service instances that are running locally on this server.</td>\n</tr>\n<tr>\n<td>Root PDC isn't Syncing from NTP Server</td>\n<td>If you do not configure the PDC to synchronize time from an external or internal time source, the PDC emulator uses its internal clock and is itself the reliable time source for the forest. If time isn't accurate on the PDC itself, all computers will have incorrect time settings.</td>\n</tr>\n<tr>\n<td>Domain controller is quarantined</td>\n<td>This Domain Controller isn't connected to any of the other working Domain Controllers. This may be caused due to improper configuration. As a result, this DC isn't being used and won't replicate from/to anyone.</td>\n</tr>\n<tr>\n<td>Outbound Replication is Disabled</td>\n<td>DCs with disabled Outbound Replication, won't be able to distribute any changes originating within itself.</td>\n</tr>\n<tr>\n<td>Inbound Replication is Disabled</td>\n<td>DCs with disabled Inbound Replication, won't have the latest information. This condition can lead to logon failures.</td>\n</tr>\n<tr>\n<td>LanmanServer service isn't running</td>\n<td>If this service is disabled, any services that explicitly depend on it will fail to start.</td>\n</tr>\n<tr>\n<td>Kerberos Key Distribution Center service isn't running</td>\n<td>If KDC Service is stopped, users won't be able to authentication through this DC using the Kerberos v5 authentication protocol.</td>\n</tr>\n<tr>\n<td>DNS service isn't running</td>\n<td>If DNS Service is stopped, computers and users using that server for DNS purposes will fail to find resources.</td>\n</tr>\n<tr>\n<td>DC had USN Rollback</td>\n<td>When USN rollbacks occur, modifications to objects and attributes aren't inbound replicated by destination domain controllers that have previously seen the USN. Because these destination domain controllers believe they are up to date, no replication errors are reported in Directory Service event logs or by monitoring and diagnostic tools. USN rollback may affect the replication of any object or attribute in any partition. The most frequently observed side effect is that user accounts and computer accounts that are created on the rollback domain controller do not exist on one or more replication partners. Or, the password updates that originated on the rollback domain controller do not exist on replication partners.</td>\n</tr>\n</tbody>\n</table>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6e13b1\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6e13a5652\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e15983788\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6e159b \"><div class=\"wpb_wrapper thegem-custom-665370c6e15983788\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Monitoring Forest Replication with Testimo for ad-hoc verifications</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e18ee7030\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To finalize this blog post, here's an output from <strong>Testimo</strong>, which I use to verify <strong>Forest Replication</strong> to confirm whether it was being reported by the Health Service. Contrary to the <strong>Health Service,</strong> it asks every DC in the forest to deliver information about replication health. This means it can take a while to see results across large environments.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1a432521\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Invoke-Testimo -Sources ForestReplication</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1b4d6173\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"KwqCjzt\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820.png\"><img class=\"alignnone wp-image-18427 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1024x511.png\" alt=\"\" width=\"1024\" height=\"511\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1024x511.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-300x150.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-768x383.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1536x766.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-2048x1022.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1c656765\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"HZFwdiT\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e.png\"><img class=\"alignnone wp-image-18429 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1024x707.png\" alt=\"\" width=\"1024\" height=\"707\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1024x707.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-300x207.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-768x530.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1536x1061.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e.png 1859w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/\">Active Directory Health Check using Microsoft Entra Connect Health Service</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://devdojo.com/11327",
            "tags": [
                "functions",
                "powershell",
                "smart",
                "alias",
                "aliases",
                "dynamic parameter",
                "psmermaid"
            ],
            "description": "<h2 id=\"powershell-technique-smart-aliases\">PowerShell-Technique: Smart Aliases</h2>\n<h2 id=\"utilizing-non-existent-functions-in-powershell\">Utilizing Non-existent Functions in PowerShell</h2>\n<h3 id=\"introduction\">Introduction</h3>\n<p>In a recent project of mine, <a href=\"https://github.com/HCRitter/PSMermaid\">PSMermaid</a>, I had the privilege of exploring a fascinating technique called 'Smart Aliases,' which was introduced to me by the brilliant <a href=\"https://www.youtube.com/watch?v=6mgQGpQbDjY\">James Brundage</a>. By employing this technique in conjunction with Dynamic Parameters, I managed to streamline the process of creating a GitGraph in Mermaid to just two single functions, even though users have the option to choose from a total of five different entry types. To fully support the creation of a GitGraph, users need the ability to add five types of entries: 'Commit,' 'Merge,' 'Branch,' 'Cherrypick,' and 'Checkout.'</p>\n<h3 id=\"implementation\">Implementation</h3>\n<p>My journey into the world of 'Smart Aliases' began with the need to determine which entry type the user intended to use. To achieve this, I created multiple aliases within the parent function. These aliases made it easy to identify the desired entry type by analyzing the name of the function called and subtracting the main function's name from it. For example, if a user called 'New-MermaidGitGraphEntryCommit,' I removed 'New-MermaidGitGraphEntry,' leaving me with 'Commit'—indicating that the user wanted to add a Commit to the GitGraph. Alias creation involved using the 'Alias' attribute above the 'Param()' section, as shown below:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">New-MermaidGitGraphEntry</span></span> {\n    [<span class=\"hljs-type\">CmdletBinding</span>()]\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">alias</span>(<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCommit\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryBranch\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCheckout\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryMerge\"</span>)]</span>\n    <span class=\"hljs-keyword\">param</span>()\n    <span class=\"hljs-keyword\">end</span> {}\n}\n</code></pre>\n<p>To extract the calling function name, I utilized '$PSCmdlet.MyInvocation.InvocationName' and, as mentioned earlier, removed or replaced the parent function name:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">New-MermaidGitGraphEntry</span></span> {\n    [<span class=\"hljs-type\">CmdletBinding</span>()]\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">alias</span>(<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCommit\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryBranch\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCheckout\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryMerge\"</span>)]</span>\n    <span class=\"hljs-keyword\">param</span>()\n    <span class=\"hljs-keyword\">end</span> {\n        <span class=\"hljs-variable\">$TypeName</span> = <span class=\"hljs-variable\">$PSCmdlet</span>.MyInvocation.InvocationName <span class=\"hljs-operator\">-replace</span> <span class=\"hljs-string\">'New-MermaidGitGraphEntry'</span>\n    }\n}\n\n</code></pre>\n<p>But why did I put in the effort to determine the type this way? There are two significant reasons:</p>\n<ol>\n<li>Each entry type has different parameters that needed to be implemented (more on this below).</li>\n<li>I aimed to maintain a consistent style throughout the project, where each function name adapts to its purpose. For example, when I want a Mermaid Graph, I call out the graph type first, followed by the specific graph type (e.g., section or actor), and then the data entry type.</li>\n</ol>\n<p>The next step involved dynamically creating parameters for each entry type. While these parameters were similar, they were not identical. To manage this, I constructed a lookup table using a Hashtable. The keys in this table represented the entry type names, while the values were arrays containing parameter names:</p>\n<pre><code class=\"hljs powershell\">    <span class=\"hljs-variable\">$TypeParameter</span> = [<span class=\"hljs-type\">ordered</span>]<span class=\"hljs-selector-tag\">@</span>{\n        <span class=\"hljs-string\">\"commit\"</span>    = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"id\"</span>,<span class=\"hljs-string\">\"tag\"</span>,<span class=\"hljs-string\">\"type\"</span>)\n        <span class=\"hljs-string\">\"Branch\"</span>    = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"name\"</span>)\n        <span class=\"hljs-string\">\"Merge\"</span>     = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"id\"</span>,<span class=\"hljs-string\">\"tag\"</span>,<span class=\"hljs-string\">\"type\"</span>)\n        <span class=\"hljs-string\">\"Checkout\"</span>  = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"name\"</span>)\n        <span class=\"hljs-string\">\"Cherrypick\"</span>= <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"id\"</span>)\n    }\n</code></pre>\n<p>By performing a lookup on this table using the selected type via '$TypeName,' I obtained the corresponding parameters:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$Parameters</span> = <span class=\"hljs-variable\">$TypeParameter</span>[<span class=\"hljs-variable\">$TypeName</span>]\n</code></pre>\n<p>Now, we come to the somewhat more intricate part—the dynamic creation of parameters:</p>\n<pre><code class=\"hljs ruby\">$paramDictionary = [RuntimeDefinedParameterDictionary]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>()\nforeach($TypeParameterElement <span class=\"hljs-keyword\">in</span> $Parameters){\n    $paramDictionary.add($TypeParameterElement,$([RuntimeDefinedParameter]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>(\n        $TypeParameterElement,\n        [String],\n        [Attribute[]]@(\n            [Parameter]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>()\n        )\n    )))\n}\n</code></pre>\n<p>In this section, we iterate through all the parameters in the '$Parameters' array. For each parameter, we create a 'ParameterAttribute,' 'RuntimeDefinedParameter,' and 'AttributeCollection' with the utmost efficiency and structural clarity. These objects are then added to the 'RuntimeDefinedParameterDictionary.' After completing these steps, we return this dictionary as the final component of the DynamicParam section in the function, bringing it all together:</p>\n<pre><code class=\"hljs ruby\">function New-MermaidGitGraphEntry {\n    [CmdletBinding()]\n    [<span class=\"hljs-keyword\">alias</span>(<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCommit\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryBranch\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryCheckout\"</span>,<span class=\"hljs-string\">\"New-MermaidGitGraphEntryMerge\"</span>)]\n    param()\n    dynamicparam{\n        $TypeParameter = [ordered]@{\n            <span class=\"hljs-string\">\"commit\"</span>    = @(<span class=\"hljs-string\">\"id\"</span>,<span class=\"hljs-string\">\"tag\"</span>,<span class=\"hljs-string\">\"type\"</span>)\n            <span class=\"hljs-string\">\"Branch\"</span>    = @(<span class=\"hljs-string\">\"name\"</span>)\n            <span class=\"hljs-string\">\"Merge\"</span>     = @(<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"id\"</span>,<span class=\"hljs-string\">\"tag\"</span>,<span class=\"hljs-string\">\"type\"</span>)\n            <span class=\"hljs-string\">\"Checkout\"</span>  = @(<span class=\"hljs-string\">\"name\"</span>)\n            <span class=\"hljs-string\">\"Cherrypick\"</span>= @(<span class=\"hljs-string\">\"id\"</span>)\n        }\n        $TypeName = $PSCmdlet.MyInvocation.InvocationName -replace <span class=\"hljs-string\">'New-MermaidGitGraphEntry'</span>\n        $Parameters = $TypeParameter[$TypeName]\n        $paramDictionary = [RuntimeDefinedParameterDictionary]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>()\n        foreach($TypeParameterElement <span class=\"hljs-keyword\">in</span> $Parameters){\n            $paramDictionary.add($TypeParameterElement,$([RuntimeDefinedParameter]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>(\n                $TypeParameterElement,\n                [String],\n                [Attribute[]]@(\n                    [Parameter]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>()\n                )\n            )))\n        }\n        <span class=\"hljs-comment\"># Return the collection of dynamic parameters</span>\n        $paramDictionary\n        \n    }\n    <span class=\"hljs-keyword\">end</span> {\n        \n    }\n}\n\n\n</code></pre>\n<p>In the 'end' block, I managed to respond to the different output behaviors for each type. Although a detailed overview and technical insights into using Smart Aliases in combination with dynamic parameters based on a live example exceed the scope of this post, you can explore the function in its entirety in the <a href=\"https://github.com/HCRitter/PSMermaid/blob/main/Public/GitGraph/New-MermaidGitGraphEntry.ps1\">PSMermaid-Function</a> repository.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<h3 id=\"conclusion\">Conclusion</h3>\n<p>In this blog post, we delved into the intriguing concept of 'Smart Aliases' and how they can be harnessed effectively in PowerShell. By combining these aliases with Dynamic Parameters, I demonstrated how to simplify the process of creating a GitGraph in Mermaid. This technique allowed us to reduce the number of functions required for the task while maintaining a consistent naming style throughout the project.</p>\n<p>The key takeaway here is that PowerShell offers powerful features that can be creatively leveraged to streamline complex tasks and improve code maintainability. 'Smart Aliases' are just one example of how you can enhance your PowerShell scripts and functions to make them more versatile and user-friendly. By embracing such techniques, you can become a more efficient and effective PowerShell developer.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,\nChristian.</p>",
            "title": "PowerShell-Technique: Smart Aliases",
            "link": "https://devdojo.com/hcritter/powershell-technique-smart-aliases",
            "published": "2023-09-18T08:06:57.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=3309",
            "tags": [
                "DevOps",
                "Graph",
                "PowerShell",
                "API",
                "Automation",
                "Azure",
                "Contacts",
                "Endpoint",
                "Intune",
                "REST"
            ],
            "description": "<p>I recently met with a company that was looking for a better way to get contacts to their employee&#8217;s work phones. Currently, they are sending a .vcf file and then having the employees manually save the contacts. While this works, the problem is if you need to send a new contact, you now need to send a new .vcf file to every employee and instruct them on how to save it. Similarly, if you ever need to remove a contact, you need to instruct your employees to manually delete that contact. </p>\n<p>One of the first things I thought about, is creating an <a href=\"https://www.inthecloud247.com/automatically-configure-outlook-contact-sync-to-the-native-contacts-app-with-microsoft-intune/\">App Configuration Policy to force Outlook to sync contacts to native apps</a>. Most of the contacts I need to sync to the phone were employees of the company so I figured it would sync from the Global Address List and then maybe I could create contacts in &#8230; <a href=\"https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/\">Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.",
            "link": "https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/",
            "published": "2023-09-18T01:21:00.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>I recently met with a company that was looking for a better way to get contacts to their employee&#8217;s work phones. Currently, they are sending a .vcf file and then having the employees manually save the contacts. While this works, the problem is if you need to send a new contact, you now need to send a new .vcf file to every employee and instruct them on how to save it. Similarly, if you ever need to remove a contact, you need to instruct your employees to manually delete that contact. </p>\n\n\n\n<p>One of the first things I thought about, is creating an <a href=\"https://www.inthecloud247.com/automatically-configure-outlook-contact-sync-to-the-native-contacts-app-with-microsoft-intune/\">App Configuration Policy to force Outlook to sync contacts to native apps</a>. Most of the contacts I need to sync to the phone were employees of the company so I figured it would sync from the Global Address List and then maybe I could create contacts in &hellip; <a href=\"https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/\" class=\"read-more\">Continue... </a></p><p>The post <a href=\"https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/\">Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://powershell.ro/?p=169",
            "tags": [
                "Powershell",
                "VMWare",
                "HA",
                "High Availability",
                "vm restart",
                "vmware"
            ],
            "description": "When the High Availability (HA) feature is active within your vCenter cluster, it provides an automated solution for handling host failures by seamlessly restarting VMs on alternative ESXi hosts within the same cluster. This process generates a detailed event log documenting each restart, and you have the option to utilize a PowerCLI script to extract [&#8230;]",
            "title": "Get HA events of VM restart from vCenter",
            "link": "https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/",
            "published": "2023-09-14T09:55:41.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p></p>\n\n\n\n<p>When the High Availability (HA) feature is active within your vCenter cluster, it provides an automated solution for handling host failures by seamlessly restarting VMs on alternative ESXi hosts within the same cluster.</p>\n\n\n\n<p>This process generates a detailed event log documenting each restart, and you have the option to utilize a PowerCLI script to extract a comprehensive list of the restarted VMs.</p>\n\n\n\n<p>Despite searching online for scripts that perform this VM list retrieval task, I was unable to locate a suitable solution. Consequently, I took matters into my own hands and developed a custom script for this purpose. While numerous blog posts contain cmdlets for retrieving VM restart events, they does not include the listing of the specific VMs affected by these events.</p>\n\n\n\n<p></p>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# HA VM reset day(s) number\n$HAVMresetold = 1\n# HA VM restart day(s) number\n$HAVMrestartold = (Get-Date).AddDays(-2)\n\n$Date = Get-Date\nWrite-Host &quot;..Checking HA VM restart&quot;\n$HAVMrestartlist = @(Get-VIEvent -MaxSamples 100000 -Start $HAVMrestartold -Type Warning | Where {$_.FullFormattedMessage -match &quot;restarted&quot;} | select CreatedTime,FullFormattedMessage |sort CreatedTime -Descending)\nIf (($HAVMrestartlist | Measure-Object).count -gt 0) {\n\n                $regexPattern = &quot;virtual machine (\\w+) on host&quot;\n                $matches = &#x5B;Regex]::Matches($HAVMrestartlist.FullFormattedMessage, $regexPattern)\n                \n                $output = @()\n                foreach ($match in $matches) {\n                    $serverName = $match.Groups&#x5B;1].Value\n                    Write-Host &quot;Server Name: $serverName&quot;\n\n                    $property = @{&quot;Server&quot; = $serverName}\n                    $output += New-Object -TypeName psobject -Property $property\n      }\t\n}\n$output\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_169\" class=\"pvc_stats all  \" data-element-id=\"169\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://blog.kilasuit.org/2023/09/09/installing-powershell-side-by-side-for-testing-purposes/",
            "tags": [],
            "description": "This is part of a series called Using PowerShell in testing in which I intend to showcase lots of different ways that PowerShell can used for all sorts of testing. A prior example would be Building A Lab using Hyper-V and Lability - The End to End Example.\nFirst things first, if you are writing code then you will have built up a series of preferences over the years in how you have your machine configure, or actually for many of us that is actually not just one machine but a collection of physical and virtual machines.",
            "title": "Installing PowerShell Side by Side for testing purposes",
            "link": "https://blog.kilasuit.org/2023/09/09/installing-powershell-side-by-side-for-testing-purposes/",
            "published": "2023-09-09T00:00:00.000Z",
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18357",
            "tags": [
                "PowerShell",
                "css",
                "html",
                "markdown",
                "powershell",
                "powershell module",
                "pswritehtml"
            ],
            "description": "<p>In today's digital age, the ability to create compelling and informative HTML reports and documents is a crucial skill for professionals in various fields. Whether you're a data analyst, a system administrator, a developer, or simply someone who wants to present information in an organized and visually appealing manner, having the right tools at your disposal can make all the difference. That's where the PSWriteHTML PowerShell module steps in, offering an array of possibilities to suit your reporting needs.</p>\n<p>The post <a href=\"https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/\">Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module",
            "link": "https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/",
            "published": "2023-09-03T16:59:27.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c6eb890\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6eb8752637\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ebad04111\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ebad2 \"><div class=\"wpb_wrapper thegem-custom-665370c6ebad04111\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ebcc85986\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In today's digital age, the ability to create compelling and informative <strong>HTML</strong> reports and documents is a crucial skill for professionals in various fields. Whether you're a data analyst, a system administrator, a developer, or simply someone who wants to present information in an organized and visually appealing manner, having the right tools at your disposal can make all the difference. That's where the <a href=\"https://github.com/EvotecIT/PSWriteHTML\">PSWriteHTML</a> PowerShell module steps in, offering an array of possibilities to suit your reporting needs.</p>\n<p>In this blog post, we'll explore the fascinating world of <strong>HTML</strong> report generation using <a href=\"https://github.com/EvotecIT/PSWriteHTML\">PSWriteHTML</a>, a versatile and powerful tool in the <strong>PowerShell</strong> arsenal. What sets <a href=\"https://github.com/EvotecIT/PSWriteHTML\">PSWriteHTML</a> apart is its flexibility. You can create HTML reports using standard commands or leverage the simplicity and readability of Markdown – the choice is yours. This coexistence of options ensures you can adapt your reporting workflow to your specific requirements.</p>\n<p>Join us on this journey as we unlock the potential of the <a href=\"https://github.com/EvotecIT/PSWriteHTML\">PSWriteHTML</a> PowerShell module, showcasing how you can effortlessly create professional HTML reports, whether you prefer traditional commands or the elegance of Markdown. So, if you're ready to elevate your reporting game and discover a powerful, user-friendly way to craft HTML reports tailored to your needs, let's dive right in!</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ebf08\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ebefd8264\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ec0f4390\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ec0f6 \"><div class=\"wpb_wrapper thegem-custom-665370c6ec0f4390\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-check-double\" ></span></div>\n</div>\n<h2>Harnessing the Power of Markdown with PSWriteHTML: Three Distinct Approaches</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ec3b96097\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In exploring the <strong>PSWriteHTML</strong> PowerShell module, we've uncovered a versatile tool that empowers us to effortlessly create stunning <strong>HTML</strong> reports and documents. One of its standout features is the <code>New-HTMLMarkdown</code> command, which allows us to integrate <strong>Markdown</strong> content into our reports seamlessly. What sets it apart is its flexibility, offering not just one but three distinct ways to incorporate Markdown into your <strong>HTML</strong> creations. Let's dive into each of these approaches.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ec607\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ec5fc6323\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ec7f01573\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ec7f2 \"><div class=\"wpb_wrapper thegem-custom-665370c6ec7f01573\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Using Direct Markdown as a Scriptblock</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecac48614\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>he first approach allows you to include Markdown directly within a scriptblock. This method provides fine-grained control over your Markdown content, enabling you to craft your report precisely as you envision it. Here's how it works:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecc2c754\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">New-HTMLMarkdown {\n    '# Hello, Markdown!'\n    'This is a sample paragraph.'\n    '## Subheading'\n    'More Markdown content here.'\n}</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecdf74751\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In this example, the Markdown content is defined within the scriptblock, making it easy to structure and format your report. You can include headings, paragraphs, lists, and more, all while taking advantage of PSWriteHTML's features like table of contents generation (<code>-EnableTOC</code>).</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ecff7\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ecfec5471\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ed1c45294\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ed1c7 \"><div class=\"wpb_wrapper thegem-custom-665370c6ed1c45294\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Loading Markdown Content from a File</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed44a9415\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The second approach simplifies the process of incorporating Markdown by allowing you to load content directly from a Markdown file. This is particularly useful when you have pre-existing Markdown documents that you want to include in your HTML report. Here's how you can achieve this:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed5702796\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">New-HTMLMarkdown -FilePath \"C:\\Path\\To\\Your\\File.md\"</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed6723378\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>By specifying the path to your Markdown file, PSWriteHTML seamlessly incorporates its content into your HTML report. You can use this method to include documentation, README files, or any Markdown content you have readily available.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ed858\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ed8492194\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6eda284768\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6eda2b \"><div class=\"wpb_wrapper thegem-custom-665370c6eda284768\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon far fa-hand-point-right\" ></span></div>\n</div>\n<h3>Using an Array of Strings</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edce455\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The third approach provides a flexible way to include Markdown content as an array of strings. This approach is ideal for scenarios where you want to construct your Markdown content dynamically within your script. Here's how it looks:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edce455{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edce455{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edce455{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edce455{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edde73451\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">New-HTMLMarkdown -Content '# Hello, Markdown!', '## Subheading', 'This is a test'</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edde73451{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edde73451{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edde73451{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edde73451{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edf2b6534\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>With this method, you can assemble your <strong>Markdown</strong> content programmatically, offering great flexibility in customizing your report's content. These three distinct approaches allow you to choose the most suitable method for your reporting needs. Whether you prefer to work directly with Markdown in a ScriptBlock, load content from a file, or construct content dynamically as an array of strings, <strong>PSWriteHTML</strong> has you covered.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ee163\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ee1575328\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ee3475744\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6ee349 \"><div class=\"wpb_wrapper thegem-custom-665370c6ee3475744\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-highlighter\" ></span></div>\n</div>\n<h2>Beyond Markdown: Crafting Comprehensive HTML Documents with PSWriteHTML</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee5f21012\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>While the <code>New-HTMLMarkdown</code> command within the <strong>PSWriteHTML</strong> PowerShell module shines as a powerful tool for incorporating Markdown content into your reports; its capabilities extend beyond simple text. <strong>PSWriteHTML</strong> allows you to create rich and comprehensive HTML documents by combining Markdown with a wide array of other commands.</p>\n<p>Imagine weaving together Markdown-based documentation with interactive elements like calendars, charts, and tables, all within the same HTML document. This seamless integration is where <strong>PSWriteHTML</strong> truly excels, making it a valuable asset for anyone who needs to present diverse and engaging information. Let's explore how this can be achieved.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee7642003\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">New-HTML {\n    New-HTMLTabStyle -BorderRadius 0px -TextTransform capitalize -BackgroundColorActive SlateGrey\n    New-HTMLSectionStyle -BorderRadius 0px -HeaderBackGroundColor Grey -RemoveShadow\n    New-HTMLPanelStyle -BorderRadius 0px\n    New-HTMLTableOption -DataStore JavaScript -BoolAsString -ArrayJoinString ', ' -ArrayJoin\n    New-HTMLSection {\n        # as an array of strings\n        New-HTMLMarkdown -Content '# Hello, Markdown!', '## Hello, Markdown!', 'Ok this is a test', '### Hello, Markdown!'\n    }\n    New-HTMLSection {\n        # as a scriptblock\n        New-HTMLMarkdown {\n            '# Testing Header 1'\n            'This is TOC'\n            '[TOC]'\n            '## Testing Header 2'\n            'Ok this is a test'\n            '## Testing Header 3'\n            'Ok this is a test'\n            '## Testing Header 4'\n            'Ok this is a test'\n            '### Testing Header 5'\n        }\n    }\n    New-HTMLSection -Invisible {\n        # as a file\n        New-HTMLSection {\n            New-HTMLMarkdown -FilePath \"$PSScriptRoot\\..\\..\\readme.md\"\n        }\n        New-HTMLSection {\n            New-HTMLMarkdown -FilePath \"C:\\Support\\GitHub\\ADEssentials\\readme.md\" -SanitezeHTML\n        }\n\n        New-HTMLSection {\n            New-HTMLMarkdown -FilePath \"C:\\Support\\GitHub\\PSTeams\\readme.md\" -EnableOpenLinksInNewWindow\n        }\n        New-HTMLSection {\n            New-HTMLMarkdown -FilePath \"C:\\Support\\GitHub\\PowerFederatedDirectory\\README.MD\"\n        }\n    }\n} -ShowHTML:$true -Online -FilePath $PSScriptRoot\\Example-Markdown.html</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee8ef3263\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"bizwnYJ\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d.png\"><img class=\"alignnone wp-image-18369 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-962x1024.png\" alt=\"\" width=\"962\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-962x1024.png 962w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-282x300.png 282w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-768x818.png 768w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-1442x1536.png 1442w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d.png 1850w\" sizes=\"(max-width: 962px) 100vw, 962px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6eea1d1008\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you see above, I've used all three mentioned methods. I've used markdown by hand, I've loaded four different files, and I have also used them as ScriptBlock.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6eec56\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6eec4b767\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6eee756340\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6eee77 \"><div class=\"wpb_wrapper thegem-custom-665370c6eee756340\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-code\" ></span></div>\n</div>\n<h2>Markdown as Part of a Larger Canvas</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef15b7036\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>When you work with PSWriteHTML, you don't have to use <code>New-HTMLMarkdown</code> it in isolation. Instead, you can embed Markdown content within a broader canvas created with various other PSWriteHTML commands. For instance, you can:</p>\n<ul>\n<li>Use <code>New-HTMLCalendar</code> to incorporate interactive calendars that display essential dates and events.</li>\n<li>Leverage <code>New-HTMLChart</code> to visualize data with interactive charts and graphs.</li>\n<li>Employ <code>New-HTMLTable</code> to present structured data in a tabular format.</li>\n<li>Add navigation menus, headers, and footers to enhance the document's usability and aesthetics.</li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef2bc9023\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Here's a glimpse of what this combination can look like:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef3be6151\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$ProcessSmaller = Get-Process | Select-Object -First 5\n\nNew-HTML {\n    New-HTMLTabStyle -BorderRadius 0px -TextTransform capitalize -BackgroundColorActive SlateGrey\n    New-HTMLSectionStyle -BorderRadius 0px -HeaderBackGroundColor Grey -RemoveShadow\n    New-HTMLPanelStyle -BorderRadius 0px\n    New-HTMLTableOption -DataStore JavaScript -BoolAsString -ArrayJoinString ', ' -ArrayJoin\n\n    New-HTMLHeader {\n        New-HTMLSection -Invisible {\n            New-HTMLPanel -Invisible {\n                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Class 'otehr' -Width '50%'\n            }\n            New-HTMLPanel -Invisible {\n                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Width '20%'\n            } -AlignContentText right\n        }\n    }\n    New-HTMLSection {\n        New-HTMLSection -HeaderText 'Test 1' {\n            New-HTMLTable -DataTable $ProcessSmaller\n        }\n        New-HTMLSection -HeaderText 'Test 2' {\n            New-HTMLCalendar {\n                New-CalendarEvent -Title 'Active Directory Meeting' -Description 'We will talk about stuff' -StartDate (Get-Date)\n                New-CalendarEvent -Title 'Lunch' -StartDate (Get-Date).AddDays(2).AddHours(-3) -EndDate (Get-Date).AddDays(3) -Description 'Very long lunch'\n            }\n        }\n    }\n    New-HTMLSection -Invisible {\n        New-HTMLTabPanel {\n            New-HTMLTab -Name 'PSWriteHTML from File' {\n                # as a file\n                New-HTMLSection {\n                    New-HTMLMarkdown -FilePath \"$PSScriptRoot\\..\\..\\readme.md\"\n                }\n            }\n            New-HTMLTab -Name 'ADEssentials from File' {\n                New-HTMLSection {\n                    New-HTMLMarkdown -FilePath \"C:\\Support\\GitHub\\ADEssentials\\readme.md\"\n                }\n            }\n        } -Theme elite\n    }\n\n    New-HTMLFooter {\n        New-HTMLSection -Invisible {\n            New-HTMLPanel -Invisible {\n                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Class 'otehr' -Width '50%'\n            }\n            New-HTMLPanel -Invisible {\n                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Width '20%'\n            } -AlignContentText right\n        }\n    }\n} -ShowHTML:$true -Online -FilePath $PSScriptRoot\\Example-Markdown1.html</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef4ff4141\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"PhARGNs\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f.png\"><img class=\"alignnone wp-image-18372 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-962x1024.png\" alt=\"\" width=\"962\" height=\"1024\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-962x1024.png 962w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-282x300.png 282w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-768x818.png 768w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-1442x1536.png 1442w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f.png 1850w\" sizes=\"(max-width: 962px) 100vw, 962px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef63e2732\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>This example seamlessly blends Markdown sections with interactive elements such as calendars and tables. This approach allows you to create comprehensive and visually appealing reports that cater to various aspects of your project or presentation.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6ef853\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6ef8481948\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6efa8e4882\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6efa90 \"><div class=\"wpb_wrapper thegem-custom-665370c6efa8e4882\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-paperclip\" ></span></div>\n</div>\n<h2>Tailoring Your Reports to Perfection</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6efd692140\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>Mixing and matchingMarkdown</strong> with other <strong>PSWriteHTML</strong> commands give you the freedom to tailor your reports to perfection. Whether you're delivering a project update, sharing research findings, or creating interactive documentation, <strong>PSWriteHTML</strong> empowers you to tell your story compellingly and informally.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efd692140{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efd692140{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efd692140{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efd692140{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6efe778941\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>If you don't know <a href=\"https://github.com/EvotecIT/PSWriteHTML\"><strong>PSWriteHTML</strong></a>, please read those articles below to understand how you can use its power to fulfill your goals. All the topics described above are just a small part of what <a href=\"https://github.com/EvotecIT/PSWriteHTML\"><strong>PSWriteHTML</strong></a> can do.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efe778941{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efe778941{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efe778941{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efe778941{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6eff795629\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<ul>\n<li>\n<div><a href=\"https://evotec.xyz/meet-statusimo-powershell-generated-status-page/\">Meet Statusimo – PowerShell generated Status Page</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/meet-dashimo-powershell-generated-dashboard/\">Meet Dashimo – PowerShell Generated Dashboard</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/dashimo-easy-table-conditional-formatting-and-more/\">Dashimo – Easy Table Conditional Formatting and more</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/out-htmlview-html-alternative-to-out-gridview/\">Out-HtmlView – HTML alternative to Out-GridView</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/meet-emailimo-new-way-to-send-pretty-emails-with-powershell/\">Meet Emailimo – New way to send pretty emails with PowerShell</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/all-your-html-tables-are-belong-to-us/\">All your HTML Tables are belong to us</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/sending-html-emails-with-powershell-and-zero-html-knowledge-required/\">Sending HTML emails with PowerShell and zero HTML knowledge required</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/dashimo-pswritehtml-charting-icons-and-few-other-changes/\">Dashimo (PSWriteHTML) – Charting, Icons, and few other changes</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/working-with-html-in-powershell-just-got-better/\">Working with HTML in PowerShell just got better</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/comparing-two-or-more-objects-visually-in-powershell-cross-platform/\">Comparing two or more objects visually in PowerShell (cross-platform)</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/easy-way-to-create-diagrams-using-powershell-and-pswritehtml/\">Easy way to create diagrams using PowerShell and PSWriteHTML</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/nested-tabs-diagram-updates-diagram-events-calendar-object-and-more-in-pswritehtml/\">Nested Tabs, Diagram Updates, Diagram Events, Calendar Object, and more in PSWriteHTML</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/emailimo-merged-into-pswritehtml-ie-support-and-no-dependencies/\">Emailimo merged into PSWriteHTML, IE support, and no dependencies</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/active-directory-dhcp-report-to-html-or-email-with-zero-html-knowledge/\">Active Directory DHCP Report to HTML or EMAIL with zero HTML knowledge</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/creating-office-365-migration-diagram-with-powershell/\">Creating Office 365 Migration Diagram with PowerShell</a></div>\n</li>\n<li>\n<div><a href=\"https://evotec.xyz/advanced-html-reporting-using-powershell/\">Advanced HTML reporting using PowerShell</a></div>\n</li>\n<li><a href=\"https://evotec.xyz/solving-typo-problems-with-fuzzy-search-in-pswritehtml/\">Solving typo problems with Fuzzy Search in PSWriteHTML</a></li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eff795629{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eff795629{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eff795629{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eff795629{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f012c6288\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To get yourself up to speed with <strong>PSWriteHTML,</strong> all you have to do is install the module directly from <strong>PowerShellGallery</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f02326153\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Install-Module PSWriteHTML -Force -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f02326153{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f02326153{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f02326153{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f02326153{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f032f3185\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I hope you enjoyed this blog post and the new <strong>PSWriteHTML</strong> feature.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/\">Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://baswijdenes.com/?p=29181",
            "tags": [
                "Microsoft",
                "Automation",
                "PowerShell"
            ],
            "description": "<p>Do I run the script (runbook) locally or in Azure Automation? I develop scripts or runbooks on my local machine and then run them against Microsoft Graph or Azure (REST API) and when the script is complete I upload them in Azure Automation as a runbook. I need logic in my script to see if &#8230; <a href=\"https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: Azure Automation PS 7 not recognizing environment variables</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/\">FIX: Azure Automation PS 7 not recognizing environment variables</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: Azure Automation PS 7 not recognizing environment variables",
            "link": "https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/",
            "published": "2023-09-01T12:29:40.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9260",
            "tags": [
                "Friday Fun",
                "PowerShell",
                "Training",
                "JSON",
                "teaching"
            ],
            "description": "Time to get back to the to blog. I've been working through my backlog of projects. These are things that I started writing or updating but then got pushed to the back of the line. One of these projects is a PowerShell module I wrote as a teaching tool. The idea was to create short...",
            "title": "Friday Fun with PSQuizzes",
            "link": "https://jdhitsolutions.com/blog/powershell/9260/friday-fun-with-psquizzes/",
            "published": "2023-08-25T14:15:39.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18340",
            "tags": [
                "PowerShell",
                "cleanup",
                "comment",
                "powershell",
                "remove",
                "script"
            ],
            "description": "<p>As part of my daily development, I create lots of code that I subsequently comment on and leave to ensure I understand what I tried, what worked, and what didn't. This is my usual method of solving a problem. Sure, I could commit it to git and then look it up, and I do that, but that doesn't change my behavior where I happen to have lots of \"junk\" inside of my functions that stay commented out. While this works for me, and I've accepted this as part of my process, I don't believe this should be part of the production code on PowerShellGallery or when the code is deployed.</p>\n<p>The post <a href=\"https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/\">How to Efficiently Remove Comments from Your PowerShell Script</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "How to Efficiently Remove Comments from Your PowerShell Script",
            "link": "https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/",
            "published": "2023-08-20T15:43:09.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c6f2ea7\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6f2e948962\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6f309d4483\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6f30a0 \"><div class=\"wpb_wrapper thegem-custom-665370c6f309d4483\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f326c5838\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As part of my daily development, I create lots of code that I subsequently <strong>comment</strong> on and leave to ensure I understand what I tried, what worked, and what didn't. This is my usual method of solving a problem. Sure, I could commit it to git and then look it up, and I do that, but that doesn't change my behavior where I happen to have lots of &#8220;junk&#8221; inside of my functions that stay commented out. While this works for me, and I've accepted this as part of my process, I don't believe this should be part of the production code on <strong>PowerShellGallery</strong> or when the code is deployed.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c6f353e\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c6f35083013\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6f38a49584\" ><div class=\"vc_column-inner thegem-custom-inner-665370c6f38a7 \"><div class=\"wpb_wrapper thegem-custom-665370c6f38a49584\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-check-double\" ></span></div>\n</div>\n<h2>Function to remove comments from PowerShell file</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f3d037159\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>My goal was to have a <strong>PowerShell</strong> function that removes any comment inside my code except help comments. Thankfully, with help from <strong>Chris Dent</strong>, I created a method that eliminates comments from any given file and makes it production ready. While it's part of my module builder <a href=\"https://github.com/EvotecIT/PSPublishModule\">PSPublishModule</a>, I'm attaching it if you want to try it on your own.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f3e9c7956\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">function Remove-Comments {\n    &lt;#\n    .SYNOPSIS\n    Remove comments from PowerShell file\n\n    .DESCRIPTION\n    Remove comments from PowerShell file and optionally remove empty lines\n    By default comments in param block are not removed\n    By default comments before param block are not removed\n\n    .PARAMETER SourceFilePath\n    File path to the source file\n\n    .PARAMETER Content\n    Content of the file\n\n    .PARAMETER DestinationFilePath\n    File path to the destination file. If not provided, the content will be returned\n\n    .PARAMETER RemoveEmptyLines\n    Remove empty lines if more than one empty line is found\n\n    .PARAMETER RemoveAllEmptyLines\n    Remove all empty lines from the content\n\n    .PARAMETER RemoveCommentsInParamBlock\n    Remove comments in param block. By default comments in param block are not removed\n\n    .PARAMETER RemoveCommentsBeforeParamBlock\n    Remove comments before param block. By default comments before param block are not removed\n\n    .EXAMPLE\n    Remove-Comments -SourceFilePath 'C:\\Support\\GitHub\\PSPublishModule\\Examples\\TestScript.ps1' -DestinationFilePath 'C:\\Support\\GitHub\\PSPublishModule\\Examples\\TestScript1.ps1' -RemoveAllEmptyLines -RemoveCommentsInParamBlock -RemoveCommentsBeforeParamBlock\n\n    .NOTES\n    Most of the work done by Chris Dent, with improvements by Przemyslaw Klys\n\n    #&gt;\n    [CmdletBinding(DefaultParameterSetName = 'FilePath')]\n    param(\n        [Parameter(Mandatory, ParameterSetName = 'FilePath')]\n        [alias('FilePath', 'Path', 'LiteralPath')][string] $SourceFilePath,\n\n        [Parameter(Mandatory, ParameterSetName = 'Content')][string] $Content,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [alias('Destination')][string] $DestinationFilePath,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [switch] $RemoveAllEmptyLines,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [switch] $RemoveEmptyLines,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [switch] $RemoveCommentsInParamBlock,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [switch] $RemoveCommentsBeforeParamBlock,\n\n        [Parameter(ParameterSetName = 'Content')]\n        [Parameter(ParameterSetName = 'FilePath')]\n        [switch] $DoNotRemoveSignatureBlock\n    )\n    if ($SourceFilePath) {\n        $Fullpath = Resolve-Path -LiteralPath $SourceFilePath\n        $Content = [IO.File]::ReadAllText($FullPath, [System.Text.Encoding]::UTF8)\n    }\n\n    $Tokens = $Errors = @()\n    $Ast = [System.Management.Automation.Language.Parser]::ParseInput($Content, [ref]$Tokens, [ref]$Errors)\n    #$functionDefinition = $ast.Find({ $args[0] -is [FunctionDefinitionAst] }, $false)\n    $groupedTokens = $Tokens | Group-Object { $_.Extent.StartLineNumber }\n    $DoNotRemove = $false\n    $DoNotRemoveCommentParam = $false\n    $CountParams = 0\n    $ParamFound = $false\n    $SignatureBlock = $false\n    $toRemove = foreach ($line in $groupedTokens) {\n        if ($Ast.Body.ParamBlock.Extent.StartLineNumber -gt $line.Name) {\n            continue\n        }\n        $tokens = $line.Group\n        for ($i = 0; $i -lt $line.Count; $i++) {\n            $token = $tokens[$i]\n            if ($token.Extent.StartOffset -lt $Ast.Body.ParamBlock.Extent.StartOffset) {\n                continue\n            }\n\n            # Lets find comments between function and param block and not remove them\n            if ($token.Extent.Text -eq 'function') {\n                if (-not $RemoveCommentsBeforeParamBlock) {\n                    $DoNotRemove = $true\n                }\n                continue\n            }\n            if ($token.Extent.Text -eq 'param') {\n                $ParamFound = $true\n                $DoNotRemove = $false\n            }\n            if ($DoNotRemove) {\n                continue\n            }\n            # lets find comments between param block and end of param block\n            if ($token.Extent.Text -eq 'param') {\n                if (-not $RemoveCommentsInParamBlock) {\n                    $DoNotRemoveCommentParam = $true\n                }\n                continue\n            }\n            if ($ParamFound -and ($token.Extent.Text -eq '(' -or $token.Extent.Text -eq '@(')) {\n                $CountParams += 1\n            } elseif ($ParamFound -and $token.Extent.Text -eq ')') {\n                $CountParams -= 1\n            }\n            if ($ParamFound -and $token.Extent.Text -eq ')') {\n                if ($CountParams -eq 0) {\n                    $DoNotRemoveCommentParam = $false\n                    $ParamFound = $false\n                }\n            }\n            if ($DoNotRemoveCommentParam) {\n                continue\n            }\n            # if token not comment we leave it as is\n            if ($token.Kind -ne 'Comment') {\n                continue\n            }\n\n            # kind of useless to not remove signature block if we're not removing comments\n            # this changes the structure of a file and signature will be invalid\n            if ($DoNotRemoveSignatureBlock) {\n                if ($token.Kind -eq 'Comment' -and $token.Text -eq '# SIG # Begin signature block') {\n                    $SignatureBlock = $true\n                    continue\n                }\n                if ($SignatureBlock) {\n                    if ($token.Kind -eq 'Comment' -and $token.Text -eq '# SIG # End signature block') {\n                        $SignatureBlock = $false\n                    }\n                    continue\n                }\n            }\n            $token\n        }\n    }\n    $toRemove = $toRemove | Sort-Object { $_.Extent.StartOffset } -Descending\n    foreach ($token in $toRemove) {\n        $StartIndex = $token.Extent.StartOffset\n        $HowManyChars = $token.Extent.EndOffset - $token.Extent.StartOffset\n        $content = $content.Remove($StartIndex, $HowManyChars)\n    }\n    if ($RemoveEmptyLines) {\n        # Remove empty lines if more than one empty line is found. If it's just one line, leave it as is\n        #$Content = $Content -replace '(?m)^\\s*$', ''\n        #$Content = $Content -replace \"(`r?`n){2,}\", \"`r`n\"\n        # $Content = $Content -replace \"(`r?`n){2,}\", \"`r`n`r`n\"\n        $Content = $Content -replace '(?m)^\\s*$', ''\n        $Content = $Content -replace \"(?:`r?`n|\\n|\\r)\", \"`r`n\"\n    }\n    if ($RemoveAllEmptyLines) {\n        # Remove all empty lines from the content\n        $Content = $Content -replace '(?m)^\\s*$(\\r?\\n)?', ''\n    }\n    if ($Content) {\n        $Content = $Content.Trim()\n    }\n    if ($DestinationFilePath) {\n        $Content | Set-Content -Path $DestinationFilePath -Encoding utf8\n    } else {\n        $Content\n    }\n}</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f414f150\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>This function has a couple of parameters:</p>\n<ul>\n<li><strong>SourceFilePath</strong> &#8211; provide a path to a file you want to clean up</li>\n<li><strong>Content</strong> &#8211; alternatively to file way, you can also provide a code (for example <code class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Get-Content -Raw $FilePath)</code></li>\n<li><strong>DestinationFilePath</strong> &#8211; path to file where to save the cleaned-up file. If not provided, the content will be returned directly as a string.</li>\n<li><strong>RemoveEmptyLines</strong> &#8211; as part of the cleanup, it tries to remove empty lines, but only if there's more than one. This is useful if you have help with the function</li>\n<li><strong>RemoveAllEmptyLines</strong> &#8211; removes all empty lines from a file</li>\n<li><strong>RemoveCommentsInParamBlock</strong> &#8211; by default, during cleanup, any comments inside the <strong>param</strong> block are not removed, as those are often related to help. But if you want, you can also remove those with this switch.</li>\n<li><strong>RemoveCommentsBeforeParamBlock</strong> &#8211; I don't remove anything between the function and param block by default. This ensures that the help I create for the function stays where it is. But if you want to remove it, this is how you can fix it.</li>\n<li><strong>DoNotRemoveSignatureBlock</strong> &#8211; by default, we remove any signature from a file, but if you want to prevent that from happening, you can use this switch. It won't give you much because the signature will not work after you remove anything from the file anyways &#8211; but it's there.</li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f414f150{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f414f150{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f414f150{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f414f150{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c7003db\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c7003ca5909\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7009724649\" ><div class=\"vc_column-inner thegem-custom-inner-665370c700976 \"><div class=\"wpb_wrapper thegem-custom-665370c7009724649\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-check-double\" ></span></div>\n</div>\n<h2>How does comment removal work?</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c700e4f6117\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Let's take a look how this works. This is my file that I usually have in my modules:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70102b7590\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"BhWIgAK\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png\"><img class=\"alignnone wp-image-18344 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png\" alt=\"\" width=\"1572\" height=\"1942\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png 1572w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-243x300.png 243w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-829x1024.png 829w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-768x949.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-1243x1536.png 1243w\" sizes=\"(max-width: 1572px) 100vw, 1572px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70102b7590{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70102b7590{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70102b7590{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70102b7590{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7011f16402\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>After applying comment cleanup function</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7011f16402{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7011f16402{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7011f16402{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7011f16402{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7013a29213\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Remove-Comments -FilePath \"C:\\Support\\GitHub\\PSSharedGoods\\Public\\Objects\\Format-TransposeTable.ps1\" -DestinationFilePath \"C:\\Support\\GitHub\\PSSharedGoods\\Public\\Objects\\Format-TransposeTableFixed.ps1\" -RemoveEmptyLines</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7013a29213{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7013a29213{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7013a29213{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7013a29213{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7015914810\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"awKZOwA\"><img width=\"1918\" height=\"286\" class=\"alignnone size-full wp-image-18342 \" src=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664.png\" alt=\"\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664.png 1918w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-300x45.png 300w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-1024x153.png 1024w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-768x115.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-1536x229.png 1536w\" sizes=\"(max-width: 1918px) 100vw, 1918px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7015914810{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7015914810{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7015914810{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7015914810{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7017509589\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"LcOyFhw\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png\"><img class=\"alignnone wp-image-18346 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png\" alt=\"\" width=\"1566\" height=\"1477\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png 1566w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-300x283.png 300w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-1024x966.png 1024w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-768x724.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-1536x1449.png 1536w\" sizes=\"(max-width: 1566px) 100vw, 1566px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7017509589{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7017509589{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7017509589{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7017509589{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7018be573\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you can notice, all the &#8220;junk&#8221; comments were removed, including inline comments. Comments for help were not removed, as per my requirements.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7018be573{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7018be573{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7018be573{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7018be573{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/\">How to Efficiently Remove Comments from Your PowerShell Script</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://baswijdenes.com/?p=29199",
            "tags": [
                "Microsoft",
                "PowerShell",
                "VSC"
            ],
            "description": "<p>Debugging Visual Studio Code and manually running an if else statement erroring If you look at the piece of code below, you would say this works. This works, but when you run this manually in the Visual Studio Code debugger, you get the following error: else: The term &#8216;else&#8217; is not recognized as a name &#8230; <a href=\"https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: &#8216;else&#8217; is not recognized as cmdlet Visual Studio Code debugger</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/\">FIX: &#8216;else&#8217; is not recognized as cmdlet Visual Studio Code debugger</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: ‘else’ is not recognized as cmdlet Visual Studio Code debugger",
            "link": "https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/",
            "published": "2023-08-18T09:07:00.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18300",
            "tags": [
                "PowerShell",
                "conversion",
                "hashtable",
                "ordereddictionary",
                "powershell",
                "pscustomobject"
            ],
            "description": "<p>Today I saw an article from Christian Ritter, \"PowerShell: Creating an \"empty\" PSCustomObject\" on X that got me curious. Do people create empty objects like Christian proposes? I want to offer an alternative to Christian's article, which uses OrderedDictionary and converts to PSCustomObject.</p>\n<p>The post <a href=\"https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/\">Unlocking PowerShell Magic: Different Approach to Creating &#8216;Empty&#8217; PSCustomObjects</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Unlocking PowerShell Magic: Different Approach to Creating ‘Empty’ PSCustomObjects",
            "link": "https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/",
            "published": "2023-08-10T09:27:32.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c703af9\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c703ae68217\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c703d102886\" ><div class=\"vc_column-inner thegem-custom-inner-665370c703d12 \"><div class=\"wpb_wrapper thegem-custom-665370c703d102886\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c703e9b6235\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Today I saw an article from Christian Ritter, <a href=\"https://hcritter.devdojo.com/powershell-creating-an-empty-pscustomobject\">&#8220;PowerShell: Creating an &#8220;empty&#8221; PSCustomObject&#8221;</a> on X that got me curious. Do people create empty objects like Christian proposes? I want to offer an alternative to Christian's article, which uses <strong>OrderedDictionary</strong> and converts to <strong>PSCustomObject</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c704146\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c7041357959\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7044ab9336\" ><div class=\"vc_column-inner thegem-custom-inner-665370c7044af \"><div class=\"wpb_wrapper thegem-custom-665370c7044ab9336\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-check-double\" ></span></div>\n</div>\n<h2>Converting OrderedDictionary to PSCustomObject</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70492b74\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Here's a snippet code that shows how to create a custom object using OrderedDictionary and conversion process</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70492b74{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70492b74{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70492b74{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70492b74{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704afa5560\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$CustomObject = [ordered] @{}\n$CustomObject['FirstName'] = 'John'\n$CustomObject['LastName'] = 'Doe'\n$CustomObject['UserName'] = 'John.Doe'\n[pscustomobject] $CustomObject</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704afa5560{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704afa5560{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704afa5560{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704afa5560{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704d538738\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>You can also create custom objects <strong>dynamically</strong> using a similar approach to what Christian proposed.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704d538738{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704d538738{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704d538738{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704d538738{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704f1f3100\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$propertyDefinitions = @{\n    Users   = @(\n        \"FirstName\", \"LastName\", \"UserName\", \"Title\", \"Department\",\n        \"StreetAddress\", \"City\", \"State\", \"PostalCode\", \"Country\",\n        \"PhoneNumber\", \"MobilePhone\", \"UsageLocation\", \"License\"\n    )\n    Groups  = @(\n        \"DisplayName\", \"PrimarySMTP\", \"Description\", \"Owner\", \"Type\"\n    )\n    JobRole = @(\n        \"DisplayName\", \"PrimarySMTP\", \"Description\", \"Type\"\n    )\n}\n\n\n$CustomObject2 = [ordered] @{}\nforeach ($P in $propertyDefinitions.Users) {\n    $CustomObject2[$P] = $null\n}\n[PSCustomObject] $CustomObject2\n\n$CustomObject3 = [ordered] @{}\nforeach ($P in $propertyDefinitions.Groups) {\n    $CustomObject3[$P] = $null\n}\n[PSCustomObject] $CustomObject3\n\n$CustomObject4 = [ordered] @{}\nforeach ($P in $propertyDefinitions.JobRole) {\n    $CustomObject4[$P] = $null\n}\n[PSCustomObject] $CustomObject4</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70518b1577\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>OrderedDictionary</strong> additionally offers the ability to create an object with some data and then append data on the fly in your script. This means, for example, you could create a dictionary first at the beginning of the script, and during the whole run of the script, you could append data to it without ever pre-creating it in the first place, to finally convert it to a custom object.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70518b1577{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70518b1577{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70518b1577{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70518b1577{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c705373741\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$Properties = 'Title', 'Department', 'State'\n$CustomObject1 = [ordered] @{\n    Name = 'John'\n    Age  = 30\n    City = 'New York'\n}\nforeach ($P in $Properties) {\n    $CustomObject1[$P] = $null\n}\n[pscustomobject] $CustomObject1</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705373741{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705373741{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705373741{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705373741{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7055df6793\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In a long script you could do</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7055df6793{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7055df6793{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7055df6793{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7055df6793{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7057ad1393\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$CustomObject1 = [ordered] @{\n    Name = 'John'\n    Age  = 30\n    City = 'New York'\n}\n&lt;#\nDo lots of code here\n#&gt;\n$CustomObject1['Address'] = 'New Value'\n&lt;#\nMore code here\n#&gt;\n$CustomObject1['State'] = 'New Value 2'\n# Convert to PSCustomObject\n[pscustomobject] $CustomObject1</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c705a18135\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Another benefit of using <strong>OrderedDictionary</strong> is that you can add to it inside other functions without ever having to destroy the object, overwrite it, or even knowing beforehand what it will look like.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705a18135{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705a18135{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705a18135{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705a18135{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7065d43217\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">function Add-Values {\n    [CmdletBinding()]\n    param(\n        [System.Collections.IDictionary] $Dictionary,\n        [string] $Key,\n        [object] $Value\n    )\n    $Dictionary[$Key] = $Value\n}\n\n$CustomObject1 = [ordered] @{\n    Name = 'John'\n    Age  = 30\n    City = 'New York'\n}\n&lt;#\nDo lots of code here\n#&gt;\n$CustomObject1['Address'] = 'New Value'\n&lt;#\nMore code here\n#&gt;\n$CustomObject1['State'] = 'New Value 2'\nAdd-Values -Dictionary $CustomObject1 -Key 'ZipCode' -Value 'New Value 3'\n&lt;#\nEven more code\n#&gt;\nAdd-Values -Dictionary $CustomObject1 -Key 'EmployeeID' -Value 'New Value 4'\n\n# Convert to PSCustomObject\n[pscustomobject] $CustomObject1</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7065d43217{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7065d43217{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7065d43217{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7065d43217{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70676a9958\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I hope this short blog post will help you decide between my and Christian solutions. Both solutions have their own strengths, and depending on who likes what, you may end up using one or the other. Christian solution is based on <strong>PowerShell 2.0</strong> when it was the only way to create PSCustomObject.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70676a9958{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70676a9958{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70676a9958{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70676a9958{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70686d9604\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\"># what Christian proposes\n$customObject1 = [PSCustomObject]@{} # this line is actually not needed\n$customObject1 | Select-Object -Property $PropertyNames\n\n# Idential, with just one line of code, as Select-Object creates new object on the fly\n'' | Select-Object -Property $PropertyNames</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70686d9604{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70686d9604{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70686d9604{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70686d9604{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7069de6740\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I was curious if there's any performance difference between those two solutions. Using a simple <strong>Measure-Command</strong> gives us the answer.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7069de6740{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7069de6740{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7069de6740{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7069de6740{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706ae48941\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$PropertyNames = @(\n    \"FirstName\", \"LastName\", \"UserName\", \"Title\", \"Department\",\n    \"StreetAddress\", \"City\", \"State\", \"PostalCode\", \"Country\",\n    \"PhoneNumber\", \"MobilePhone\", \"UsageLocation\", \"License\"\n)\n\nMeasure-Command {\n    for ($i = 0; $i -lt 100000; $i++) {\n        $CustomObject1 = [ordered] @{}\n        foreach ($P in $PropertyNames) {\n            $CustomObject1[$P] = $null\n        }\n        $T = [pscustomobject] $CustomObject1\n    }\n}\n\nMeasure-Command {\n    for ($i = 0; $i -lt 100000; $i++) {\n       $T2 = '' | Select-Object -Property $PropertyNames\n    }\n}</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706ae48941{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706ae48941{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706ae48941{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706ae48941{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706c593424\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In PowerShell 5.1, over 100k iterations, it takes about 1 second less for my approach than using Select-Object.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706c593424{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706c593424{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706c593424{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706c593424{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706d529700\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"bBeupkr\"><img width=\"1028\" height=\"1367\" class=\"alignnone size-full wp-image-18308 \" src=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208.png\" alt=\"\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208.png 1028w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-226x300.png 226w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-770x1024.png 770w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-768x1021.png 768w\" sizes=\"(max-width: 1028px) 100vw, 1028px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706d529700{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706d529700{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706d529700{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706d529700{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706e8b1127\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>In PowerShell 7, the difference is about 500ms which is not noticeable.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706f7f1614\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"xbyYDmJ\"><img width=\"1028\" height=\"1321\" class=\"alignnone size-full wp-image-18310 \" src=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3.png\" alt=\"\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3.png 1028w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-233x300.png 233w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-797x1024.png 797w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-768x987.png 768w\" sizes=\"(max-width: 1028px) 100vw, 1028px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7070755914\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>To summarize, both solutions work; I believe <strong>OrderedDictionary</strong> conversion has more pros and, at least for me, is easier to read and understand how everything happens. Just a thing of note &#8211; you could also use Hashtable instead of <strong>OrderedDictionary</strong>, but then the order of properties is not guaranteed, which may or may not matter to you. In the end, the choice is always yours. Enjoy</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7070755914{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7070755914{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7070755914{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7070755914{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/\">Unlocking PowerShell Magic: Different Approach to Creating &#8216;Empty&#8217; PSCustomObjects</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://devdojo.com/11228",
            "tags": [
                "powershell",
                "create",
                "pscustomobject",
                "empty",
                "function"
            ],
            "description": "<h2 id=\"simplifying-creation-of-empty-powershell-pscustomobjects-using-custom-functions\">Simplifying Creation of Empty PowerShell PSCustomObjects using Custom Functions</h2>\n<p>Creating an empty PSCustomObject in PowerShell is a common task, but the traditional approach can be verbose and repetitive. In this blog post, I'll walk you through a more structured and efficient way to achieve this using functions and property definitions.</p>\n<h2 id=\"the-traditional-approach\">The Traditional Approach</h2>\n<p>Frequently, developers, including myself, create empty PSCustomObjects like this:</p>\n<pre><code class=\"hljs powershell\">[<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Name = <span class=\"hljs-variable\">$null</span>\n    DisplayName = <span class=\"hljs-variable\">$null</span>\n    Telephone = <span class=\"hljs-variable\">$null</span>\n    EmailAddress = <span class=\"hljs-variable\">$null</span>\n    Gender = <span class=\"hljs-variable\">$null</span>\n    Street = <span class=\"hljs-variable\">$null</span>\n    City = <span class=\"hljs-variable\">$null</span>\n}\n</code></pre>\n<p>While this method works, it can become unwieldy, especially when dealing with multiple properties. It consumes screen space and lacks a clear structure.</p>\n<h2 id=\"a-structured-solution\">A Structured Solution</h2>\n<p>To address these concerns, I devised a more organized approach using a custom function New-EmptyCustomObject. This function streamlines the process of creating empty PSCustomObjects and allows for greater flexibility.</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">New-EmptyCustomObject</span></span> {\n    <span class=\"hljs-keyword\">param</span> (\n        [<span class=\"hljs-built_in\">string</span>[]]<span class=\"hljs-variable\">$PropertyNames</span>\n    )\n    \n    <span class=\"hljs-variable\">$customObject</span> = [<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{}\n    <span class=\"hljs-variable\">$customObject</span> | <span class=\"hljs-built_in\">Select-Object</span> <span class=\"hljs-literal\">-Property</span> <span class=\"hljs-variable\">$PropertyNames</span>\n}\n</code></pre>\n<p>By utilizing this function, you can now create empty objects in a more organized manner:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$propertyDefinitions</span> = <span class=\"hljs-selector-tag\">@</span>{\n    Users = <span class=\"hljs-selector-tag\">@</span>(\n        <span class=\"hljs-string\">\"FirstName\"</span>, <span class=\"hljs-string\">\"LastName\"</span>, <span class=\"hljs-string\">\"UserName\"</span>, <span class=\"hljs-string\">\"Title\"</span>, <span class=\"hljs-string\">\"Department\"</span>,\n        <span class=\"hljs-string\">\"StreetAddress\"</span>, <span class=\"hljs-string\">\"City\"</span>, <span class=\"hljs-string\">\"State\"</span>, <span class=\"hljs-string\">\"PostalCode\"</span>, <span class=\"hljs-string\">\"Country\"</span>,\n        <span class=\"hljs-string\">\"PhoneNumber\"</span>, <span class=\"hljs-string\">\"MobilePhone\"</span>, <span class=\"hljs-string\">\"UsageLocation\"</span>, <span class=\"hljs-string\">\"License\"</span>\n    )\n    Groups = <span class=\"hljs-selector-tag\">@</span>(\n        <span class=\"hljs-string\">\"DisplayName\"</span>, <span class=\"hljs-string\">\"PrimarySMTP\"</span>, <span class=\"hljs-string\">\"Description\"</span>, <span class=\"hljs-string\">\"Owner\"</span>, <span class=\"hljs-string\">\"Type\"</span>\n    )\n    JobRole = <span class=\"hljs-selector-tag\">@</span>(\n        <span class=\"hljs-string\">\"DisplayName\"</span>, <span class=\"hljs-string\">\"PrimarySMTP\"</span>, <span class=\"hljs-string\">\"Description\"</span>, <span class=\"hljs-string\">\"Type\"</span>\n    )\n}\n\n<span class=\"hljs-variable\">$usersObject</span>  = <span class=\"hljs-built_in\">New-EmptyCustomObject</span> <span class=\"hljs-literal\">-PropertyNames</span> <span class=\"hljs-variable\">$propertyDefinitions</span>.Users\n<span class=\"hljs-variable\">$groupsObject</span> = <span class=\"hljs-built_in\">New-EmptyCustomObject</span> <span class=\"hljs-literal\">-PropertyNames</span> <span class=\"hljs-variable\">$propertyDefinitions</span>.Groups\n<span class=\"hljs-variable\">$RoleObject</span>   = <span class=\"hljs-built_in\">New-EmptyCustomObject</span> <span class=\"hljs-literal\">-PropertyNames</span> <span class=\"hljs-variable\">$propertyDefinitions</span>.JobRole\n\n</code></pre>\n<p>With this approach, you effortlessly generate empty PSCustomObjects while maintaining clear property definitions. This ensures that you can easily manage and track the properties of each PSCustomObject.</p>\n<h2 id=\"wrapping-up\">Wrapping Up</h2>\n<p>In conclusion, the streamlined technique I've presented enhances the creation of empty PSCustomObjects by utilizing a custom function and well-defined property definitions. This method is not only efficient but also helps maintain a structured and organized codebase.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell: Creating an \"empty\" PSCustomObject",
            "link": "https://devdojo.com/hcritter/powershell-creating-an-empty-pscustomobject",
            "published": "2023-08-10T07:41:53.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18284",
            "tags": [
                "Active Directory",
                "Azure AD",
                "PowerShell",
                "active directory",
                "ad",
                "azure ad",
                "microsoft graph",
                "powershell"
            ],
            "description": "<p>I was scrolling X (aka Twitter) today and saw this blog post, \"PowerShell: Report On-Premises Active Directory Accounts that are Synchronized with Azure AD Connect\" by Kevin Trent. I like reading blog posts as I tend to learn some new things and see how people tend to solve their problems.</p>\n<p>The post <a href=\"https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/\">Report Active Directory Accounts that are Synchronized with Azure AD</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Report Active Directory Accounts that are Synchronized with Azure AD",
            "link": "https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/",
            "published": "2023-08-07T13:21:18.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c70a756\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c70a731936\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70aaea6568\" ><div class=\"vc_column-inner thegem-custom-inner-665370c70aaed \"><div class=\"wpb_wrapper thegem-custom-665370c70aaea6568\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70add25551\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I was scrolling X (aka Twitter) today and saw this blog post, <a href=\"https://techbloggingfool.com/2023/07/28/powershell-report-on-premises-active-directory-accounts-that-are-synchronized-with-azure-ad-connect/?utm_source=dlvr.it&utm_medium=twitter\">PowerShell: Report On-Premises Active Directory Accounts that are Synchronized with Azure AD Connect</a>, by Kevin Trent. I like reading blog posts as I tend to learn some new things and see how people tend to solve their problems. Upon reading the provided code, two things stood out to me:</p>\n<ul>\n<li>usage of the AzureAD module, which is going to stop working on March 2024 (if Microsoft won't change it again)</li>\n<li>using <strong>Get-AzureADUser</strong> inside the <strong>Select-Object</strong> statement</li>\n</ul>\n<p>Here's what that solution looks like:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70add25551{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70add25551{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70add25551{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70add25551{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b0225791\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Import-Module ActiveDirectory\nConnect-AzureAD\n\nGet-ADUser -Filter {Enabled -EQ $True} -Properties *  | \n    Select-Object DisplayName, SamAccountName, UserPrincipalName, LastLogonDate,           \n    @{N=\"AzureADSynced\"; E={(Get-AzureADUser -ObjectID $_.UserPrincipalName |\n    Select-Object -Property DirSyncEnabled).DirsyncEnabled}} | \nExport-Csv $env:userprofile\\documents\\On-Prem_CloudSynced_Accounts.csv</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b0225791{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b0225791{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b0225791{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b0225791{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b1e42457\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>While this solution will work for the next couple of months and may work for 200 users, Kevin mentioned it would have difficulty querying <strong>1000, 10000, or 50000</strong> users. It will either take hours to finish or never finish at all. Aside from the obvious that for each user, a call will need to be made to <strong>Azure AD</strong> to get just one property, <strong>Active Directory</strong> doesn't like a pipeline. It may work very well most of the time, but as soon as something runs longer, it will start throwing errors.</p>\n<ul>\n<li><a href=\"https://evotec.xyz/get-adobject-the-server-has-returned-the-following-error-invalid-enumeration-context/\">Get-ADObject : The server has returned the following error: invalid enumeration context.</a></li>\n</ul>\n<p>It will not happen every time, maybe even never, but if it will, you will spend hours debugging what's wrong and how to fix it. When working with the <strong>ActiveDirectory</strong> module, I wasted lots of time finally dropping the pipeline altogether.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c70b43c\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c70b42f6461\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70b6282174\" ><div class=\"vc_column-inner thegem-custom-inner-665370c70b62a \"><div class=\"wpb_wrapper thegem-custom-665370c70b6282174\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-check-double\" ></span></div>\n</div>\n<h2>How to do it right?</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b9206708\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>So what is the solution to both mentioned problems?</p>\n<ul>\n<li><strong>Microsoft Graph</strong>, which is the new API to query and work with data associated with <strong>Microsoft Office 365</strong> and similar</li>\n<li><strong>Hashtables</strong>/<strong>OrderedDictionary</strong> as a way to cache data and do two queries  &#8211; one to AD, one to <strong>Azure AD</strong> (aka <strong>Microsoft Entra ID</strong>)</li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b9206708{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b9206708{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b9206708{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b9206708{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ba4b9389\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>Microsoft Graph </strong>doesn't have the best marketing in the world but whether you like it or not it's here to stay. With every new technology, there are some bumps that may need to be ironed out, but once you get used to some ideas, it's pretty easy. Discussing Microsoft Graph is quite a big topic in itself so I'll focus on the essential details for this post &#8211; replicating precisely what the author achieved but using a bit different way. To get you started &#8211; install the module first:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bb4d84\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">Install-Module Microsoft.Graph.Users</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bc61692\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Once we got that out of the way, here's the code that Kevin wrote more than two lines, but probably ten times faster, using Microsoft Graph and achieving the same thing in less time.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bc61692{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bc61692{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bc61692{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bc61692{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bd574541\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Connect-MgGraph -Scopes \"User.Read.All\"\n\n$AzureUsers = Get-MgUser -All -Property 'OnPremisesSyncEnabled', 'DisplayName', 'UserPrincipalName','Id','Mail'\n$Users = Get-ADUser -Filter \"Enabled -eq '$True'\" -Properties *\n\n$CacheAzure = [ordered] @{}\nforeach ($User in $AzureUsers) {\n    $CacheAzure[$User.UserPrincipalName] = $User\n}\n$AllUsers = foreach ($User in $Users) {\n    if ($CacheAzure[$User.UserPrincipalName]) {\n        if ($CacheAzure[$User.UserPrincipalName].OnPremisesSyncEnabled) {\n            $Synchronized = $true\n        } else {\n            $Synchronized = $false\n        }\n    } else {\n        $Synchronized = $false\n    }\n    [PSCustomObject] @{\n        DisplayName       = $User.DisplayName\n        SamAccountName    = $User.SamAccountName\n        UserPrincipalName = $User.UserPrincipalName\n        LastLogonDate     = $User.LastLogonDate\n        AzureADSynced     = $Synchronized\n    }\n}\n$AllUsers | Format-Table -AutoSize</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bd574541{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bd574541{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bd574541{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bd574541{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bebd184\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Using <strong>caching with Hashtables</strong> is super fast, and using only two queries instead 201 (1 for AD and 200 per user to Azure AD) will be much quicker and less of a problem for the backend. Using Microsoft Graph on the other end will get you to switch to future Microsoft API instead of relying on deprecated modules. To summarize:</p>\n<ul>\n<li><strong>Avoid pipeline with Get-ADUser</strong> or similar cmdlets as it will bite you hard sooner or later</li>\n<li><strong>Don't use the AzureAD</strong> module and switch to Microsoft Graph</li>\n<li>Learn how <strong>Hashtables are great.</strong> You can learn from my mistakes from <a href=\"https://evotec.xyz/how-i-didnt-know-how-powerful-and-fast-hashtables-are/\">How I didn't know how powerful and fast hashtables are</a></li>\n</ul>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bebd184{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bebd184{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bebd184{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bebd184{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/\">Report Active Directory Accounts that are Synchronized with Azure AD</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://powershell.ro/?p=138",
            "tags": [
                "Automation",
                "Powershell",
                "gen10 servers",
                "HPEiLOCmdlets",
                "ilo",
                "powershell",
                "proliant",
                "vmware"
            ],
            "description": "Automation, automation, automation – this is the key, once again! Why waste 15-20 minutes configuring the ILO boards manually when we have the HPE iLO Cmdlets to automate the process? In this article, I will introduce some PowerShell cmdlets for ILO configuration. Additionally, I will continue updating the post with new ones. Prerequisites We need [&#8230;]",
            "title": "Automate your ILO configuration using HPE iLO Cmdlets",
            "link": "https://powershell.ro/automate-your-ilo-configuration-using-hpe-ilo-cmdlets/",
            "published": "2023-08-04T19:22:12.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p></p>\n\n\n\n<p>Automation, automation, automation – this is the key, once again!</p>\n\n\n\n<p>Why waste 15-20 minutes configuring the ILO boards manually when we have the HPE iLO Cmdlets to automate the process?</p>\n\n\n\n<p>In this article, I will introduce some PowerShell cmdlets for ILO configuration. Additionally, I will continue updating the post with new ones.</p>\n\n\n\n<p></p>\n\n\n\n<h4 class=\"wp-block-heading\">Prerequisites</h4>\n\n\n\n<p>We need the HPEiLOCmdlets module, which you can get from Powershell Gallery. To install the PowerCLI module, use the following command.</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n    Install-Module -Name HPEiLOCmdlets -Confirm:$false\n</pre></div>\n\n\n<p>HPE ILO Cmdlets from Powershell Gallery link is : https://www.powershellgallery.com/packages/HPEiLOCmdlets/4.2.0.0</p>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n\n<p>First we need to declare some variables and connect to our HPE ILO remote board.</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n$ILOname = &quot;your_Ilo_Name&quot;\n$Creds = Get-Credential\n$hostname = &quot;&quot;\n$domain = &quot;&quot;\n$ntpserver = &quot;&quot;\n$dnsserver1 = &quot;&quot;\n$dnsserver2 = &quot;&quot;\n\n$connection = Connect-HPEiLO -Address $ILOname -Credential $Creds -DisableCertificateAuthentication:$true -Timeout 60 -Verbose\n</pre></div>\n\n\n<p>Below you can find some usefull cmdlets and what they are doing:</p>\n\n\n\n<h6 class=\"wp-block-heading\">Power-Off the server</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\nSet-HPeiLOServerPower -Connection $connection -Power Off -Force -ErrorAction Continue\n\n#to get the status use the following cmdlet\n(Get-HPEiLOServerPower -Connection $Connection ).Power\n</pre></div>\n\n\n<h6 class=\"wp-block-heading\">IPv6 Network settings</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n#this cmdlet will disable IPV6 on the Dedicated interface\n\nSet-HPEiLOIPv6NetworkSetting -Connection $connection -InterfaceType Dedicated -RegisterDDNSServer Disabled -DHCPv6StatefulMode Disabled -DHCPv6DNSServer Disabled -DHCPv6RapidCommit Disabled -DHCPv6StatelessMode Disabled -DHCPv6SNTPSetting Disabled -DHCPv6DomainName Disabled -StatelessAddressAutoConfiguration Disabled\n</pre></div>\n\n\n<h6 class=\"wp-block-heading\">IPv4 Network Settings</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n#this cmdlet will set the DNS servers on the IPv4 dedicated interface and ILO hostname, domain and enable the PingGateway\n$dnstype = ,@(&quot;Primary&quot;,&quot;Secondary&quot;)\n$dnsserver = ,@(&quot;$dnsserver1&quot;,&quot;$dnsserver2&quot;)\nSet-HPEiLOIPv4NetworkSetting -Connection $connection -InterfaceType Dedicated -DNSName $hostname -DomainName $Domain -RegisterDDNSServer Disabled -DNSServerType $dnstype -DNSServer $dnsserver -PingGateway Enabled\n</pre></div>\n\n\n<h6 class=\"wp-block-heading\">NTP Settings</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# set the NTP server and the timezone to CET\nSet-HPEiLOSNTPSetting -Connection $connection -InterfaceType Dedicated -Timezone &quot;CET&quot; -SNTPServer &quot;$ntpserver&quot;\n</pre></div>\n\n\n<h6 class=\"wp-block-heading\">Create ILO user</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n#add a local user and set the login priviledges\nAdd-HPEiLOUser -connection $connection -LoginName &quot;ILOnewUser&quot; -Username &quot;ILOnewUser&quot; -Password &quot;ilopassword&quot; -LoginPrivilege Yes -RemoteConsolePrivilege Yes -VirtualMediaPrivilege Yes -VirtualPowerAndResetPrivilege Yes -IloConfigPrivilege Yes\n</pre></div>\n\n\n<h6 class=\"wp-block-heading\">Disconnect ILO session</h6>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n#use this cmdlet to disconnect your powershell session\nDisconnect-HPEiLO -Connection $connection \n</pre></div>\n\n\n<p></p>\n\n\n\n<p>What tasks did we covered :</p>\n\n\n\n<ol>\n<li>Shutting down the server.</li>\n\n\n\n<li>Configuring the IPv4 network settings for the Dedicated interface.</li>\n\n\n\n<li>&#8220;Disabling the IPv6 network settings for the Dedicated interface.</li>\n\n\n\n<li>Configuring the SNTP</li>\n\n\n\n<li>Adding a local user.</li>\n\n\n\n<li>Disconnecting the current session.</li>\n</ol>\n\n\n\n<p>Keep you posted !</p>\n<div class=\"pvc_clear\"></div><p id=\"pvc_stats_138\" class=\"pvc_stats all  \" data-element-id=\"138\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://baswijdenes.com/?p=29109",
            "tags": [
                "Microsoft",
                "My Way",
                "PowerShell"
            ],
            "description": "<p>My best practices, tips and tricks working with PowerShell This is a blog post that is not deeply technical. I will not go deep into the tips and tricks, because you will learn this automatically when you have more experience &#38; when you are ready. I have a seperate blog post about best practices, tips &#8230; <a href=\"https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">How to optimize and speed up your PowerShell scripts</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/\">How to optimize and speed up your PowerShell scripts</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "How to optimize and speed up your PowerShell scripts",
            "link": "https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/",
            "published": "2023-08-04T11:50:13.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18256",
            "tags": [
                "PowerShell",
                "aliases",
                "errors",
                "functions",
                "limits",
                "powershell",
                "windows powershell"
            ],
            "description": "<p>I had a long day today when my long-running script (10 hours) gave me weird errors with Microsoft Graph for Teams. Finally, I solved my mistakes and reran the hand to see if the report would be complete this time. Surprisingly, it gave me an error I'd never seen before. \"Function cannot be created because function capacity 4096 has been exceeded for this scope\". The error is at least weird because it's shown on a production server where I've just a handful of PowerShell modules installed, and I've never seen it on my development machine where I've over 200 modules.</p>\n<p>The post <a href=\"https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/\">Function cannot be created because function capacity 4096 has been exceeded for this scope</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Function cannot be created because function capacity 4096 has been exceeded for this scope",
            "link": "https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/",
            "published": "2023-08-01T06:22:34.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c70df7e\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c70df665829\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70e1c34804\" ><div class=\"vc_column-inner thegem-custom-inner-665370c70e1c5 \"><div class=\"wpb_wrapper thegem-custom-665370c70e1c34804\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e37f6836\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I had a long day today when my long-running script (10 hours) gave me weird errors with <strong>Microsoft Graph for Teams</strong>. Finally, I solved my mistakes and reran the hand to see if the report would be complete this time. Surprisingly, it gave me an error I'd never seen before. &#8220;<span style=\"text-decoration: underline;\">Function cannot be created because function capacity 4096 has been exceeded for this scope</span>&#8220;. The error is at least weird because it's shown on a production server where I've just a handful of PowerShell modules installed, and I've never seen it on my development machine where I've over 200 modules.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e4e26191\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><img class=\"alignnone size-full wp-image-18257\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736.png\" alt=\"\" width=\"1024\" height=\"76\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736-300x22.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736-768x57.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e5e55782\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The error means I've loaded more than 4096 functions within my scope, and the script was ruined after running for 4 hours. In my particular case, the ExchangeOnlineManagement module broke my script. Still, it can happen anytime if too many variables, functions, or aliases are used.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c70e8bc\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c70e8a83909\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70eb2e2916\" ><div class=\"vc_column-inner thegem-custom-inner-665370c70eb31 \"><div class=\"wpb_wrapper thegem-custom-665370c70eb2e2916\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-bug\" ></span></div>\n</div>\n<h2>Fixing Function cannot be created because function capacity 4096 has been exceeded</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ee814325\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>It seems <strong>Windows PowerShell</strong> has few built-in variables that define how many functions, aliases, and variables you can have before stopping you from using more. You can verify this with handy command <code class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Get-Variable Max*Count</code>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ee814325{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ee814325{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ee814325{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ee814325{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70efba4885\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"tYlgfOs\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png\"><img class=\"alignnone wp-image-18260 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png\" alt=\"\" width=\"1918\" height=\"401\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png 1918w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-300x63.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-1024x214.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-768x161.png 768w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-1536x321.png 1536w\" sizes=\"(max-width: 1918px) 100vw, 1918px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70efba4885{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70efba4885{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70efba4885{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70efba4885{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f0e02034\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>As you can see above, <strong>Aliases</strong>, <strong>Drives</strong>, <strong>Errors</strong>, <strong>Functions</strong>, <strong>History</strong>, and <strong>Variables</strong> all have their maximum values set. After so many years I've spent using PowerShell, I've never exceeded those values. I guess it's the first time for everything. Fortunately, it's an easy fix. We need to change maximum values to something sane.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f1fc4306\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$MaximumFunctionCount = 8192\n$MaximumVariableCount = 8192</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f3044234\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>After using those two lines of code before running my time-consuming report &#8211; my problems were <strong>NOT</strong> solved! After investigation, I realized that I was connecting to Exchange which triggers imports of commands inside the module scope and not as part of the Global scope. This means I need to change it as part of the module and make sure to target the Script scope.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f3044234{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f3044234{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f3044234{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f3044234{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f40e5868\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">if ($PSVersionTable.PSEdition -eq 'Desktop') {\n    $Script:MaximumFunctionCount = 18000\n    $Script:MaximumVariableCount = 18000\n}</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f5466441\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Remember that this fix only applies to Windows PowerShell and not PowerShell 7. PowerShell 7 is unaffected by this as those values were sometimes removed in 2016 in PR &#8211; <a href=\"https://github.com/PowerShell/PowerShell/pull/2363\">Remove most Maximum* capacity variables #2363</a>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f5466441{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f5466441{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f5466441{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f5466441{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c70f82e\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c70f81d2087\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70fa871162\" ><div class=\"vc_column-inner thegem-custom-inner-665370c70fa89 \"><div class=\"wpb_wrapper thegem-custom-665370c70fa871162\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-list-ol\" ></span></div>\n</div>\n<h2>How many functions module have?</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70fdb63058\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>While my problem was solved, I was curious about what module has the highest number of functions and how it was even possible that I could reach this limit. After a simple query as below &#8211; it seems the biggest offenders are the newest <strong>Microsoft. Graph</strong> PowerShell modules that have even 800 functions in one module. Just using a few of those can quickly get you in trouble. Fortunately, I usually use PowerShell 7 as my daily driver unless there's a specific reason not to. Unfortunately, I have other issues with PS 7 that sometimes force me back to PowerShell 5.1, like incompatibility between modules and DLL conflicts. But that's a story for another time.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ff466380\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$Modules = Get-Module -ListAvailable\n$ListModules = foreach ($Module in $Modules) {\n    [PScustomObject] @{\n        Name          = $Module.Name\n        Version       = $Module.Version\n        FunctionCount = ($Module.ExportedFunctions).Count\n    }\n}\n$ListModules | Sort-Object -Property FunctionCount -Descending | Format-Table -AutoSize</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ff466380{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ff466380{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ff466380{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ff466380{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7100f68599\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"rgGsiQV\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png\"><img class=\"alignnone wp-image-18264 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png\" alt=\"\" width=\"1918\" height=\"2098\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png 1918w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-274x300.png 274w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-936x1024.png 936w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-768x840.png 768w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-1404x1536.png 1404w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-1872x2048.png 1872w\" sizes=\"(max-width: 1918px) 100vw, 1918px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7100f68599{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7100f68599{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7100f68599{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7100f68599{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/\">Function cannot be created because function capacity 4096 has been exceeded for this scope</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://powershell.ro/?p=82",
            "tags": [
                "Automation",
                "Powershell",
                "VMWare",
                "alarms",
                "esxi",
                "powercli",
                "powershell",
                "vcenter",
                "vmware"
            ],
            "description": "Recently, I had a fascinating coding experience with a script that checks alarms on all ESXi hosts from vCenters. You might wonder why I needed such a script. Well, many of us use monitoring tools, and sometimes, to avoid constant alerts while working, we disable alarms on objects in vCenter. The problem is that we [&#8230;]",
            "title": "Check the alarms on all ESXi Hosts via Powershell",
            "link": "https://powershell.ro/check-the-alarms-on-all-esxi-hosts-via-powershell/",
            "published": "2023-07-29T04:51:37.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p></p>\n\n\n\n<p>Recently, I had a fascinating coding experience with a script that checks alarms on all ESXi hosts from vCenters. You might wonder why I needed such a script. Well, many of us use monitoring tools, and sometimes, to avoid constant alerts while working, we disable alarms on objects in vCenter. The problem is that we often forget to turn them back on once we&#8217;re done.</p>\n\n\n\n<p>To address this issue, I designed a script with several parts. First, it imports the essential PowerCLI module. Then, it connects to each vCenter from a list. After that, it cleverly retrieves the alarm status for each host and cluster. This way, we can stay focused on our work without getting overwhelmed by alerts and avoid missing critical alarms once our tasks are completed. It&#8217;s a simple yet practical script that can significantly improve our workflow!</p>\n\n\n\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n\n\n\n<h2 class=\"wp-block-heading\">Prerequisites</h2>\n\n\n\n<h4 class=\"wp-block-heading\">PowerCLI module</h4>\n\n\n\n<p>To install the PowerCLI module, use the following command.</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n    Install-Module -Name VMware.PowerCLI -Force -AllowClobber -Confirm:$false\n</pre></div>\n\n\n<p>Afterward, run the following command to avoid SSL connection issues with vCenter.</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\nSet-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode Multiple -Scope User -InvalidCertificateAction Ignore -Confirm:$false | Out-Null\n</pre></div>\n\n\n<p>The primary two properties which we are querying it are:</p>\n\n\n\n<ul>\n<li>The first property, &#8220;ExtensionData.AlarmActionsEnabled,&#8221; helps us determine whether the Alarm on the object is set to TRUE or FALSE. This means we can check if the Alarm is active or not, giving us valuable insights into its current state.</li>\n\n\n\n<li>The second property, &#8220;ConnectionState,&#8221; serves a different purpose. It allows us to check whether the Host is in maintenance mode or not. Specifically, we are interested in the &#8220;Connected&#8221; state, which tells us that the Host is up and running smoothly.</li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\">Script functionality:</h2>\n\n\n\n<ul>\n<li>Import the PowerCLI module</li>\n\n\n\n<li>Connects to each vCenter defined into the $vCenters array.</li>\n\n\n\n<li>For each ESXI host and Cluster found in the vCenter, it retrieves the value of the &#8220;ExtensionData.AlarmActionsEnabled&#8221; property.</li>\n\n\n\n<li>The script will export the results to a CSV file, making it super easy to analyze the data later. Specifically, it will focus on the objects where Alarms are Disabled or the ConnectionState is not Connected.</li>\n</ul>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# Ensure PowerCLI module is installed\nif (-not (Get-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue)) {\n    Install-Module -Name VMware.PowerCLI -Force -AllowClobber -Confirm:$false\n}\n\n# Import the PowerCLI module\nImport-Module -Name VMware.PowerCLI -ErrorAction SilentlyContinue\n\n# Set PowerCLI Configuration\nSet-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode Multiple -Scope User -InvalidCertificateAction Ignore -Confirm:$false | Out-Null\n\n# Get credentials from command line arguments\n$Username = &quot;&quot;\n$Password = &quot;&quot;\n\n# Get the current date in yyyy.M.d format\n$CurrentDate = Get-Date -Format 'yyyy.M.d'\n\n# List of vCenters to connect to\n$VCenters = @(\n    &quot;VCSA1&quot;,\n    &quot;VCSA2&quot;\n)\n\nforeach ($VCU in $VCenters) {\n    # Connect to vCenter\n    try {\n        Connect-VIServer -Server $VCU -User $Username -Password $Password -ErrorAction Stop | Out-Null\n    } catch &#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {\n        Write-Host &quot;Cannot connect to $VCU with provided credentials&quot; -ForegroundColor Red\n        Continue\n    } catch &#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {\n        Write-Host &quot;Cannot connect to $VCU - check IP/FQDN&quot; -ForegroundColor Red\n        Continue\n    } catch {\n        Write-Host &quot;Cannot connect to $VCU - Unknown error&quot; -ForegroundColor Red\n        Continue\n    }\n\n    $output = @()\n    $hosts = Get-VMHost\n\n    # Loop through each ESX host\n    foreach ($ESXHost in $hosts) {\n        $cluster = Get-Cluster -VMHost $ESXHost\n        $alarms = $ESXHost.ExtensionData.AlarmActionsEnabled\n        $alarma = if ($alarms -eq &quot;True&quot;) { &quot;Enabled&quot; } else { &quot;Disabled&quot; }\n\n        $property = &#x5B;ordered]@{\n            &quot;vCenter&quot; = $VCU\n            &quot;Host&quot; = $ESXHost.Name\n            &quot;Cluster&quot; = $cluster\n            &quot;Alarms&quot; = $alarma\n            &quot;ConnectionState&quot; = $ESXHost.ConnectionState\n        }\n        $output += New-Object -TypeName PSObject -Property $property\n    }\n\n    # Loop through each cluster\n    $clusters = Get-Cluster\n    foreach ($ClusterClu in $clusters) {\n        $alarmsClu = $ClusterClu.ExtensionData.AlarmActionsEnabled\n        $alarmaClu = if ($alarmsClu -eq &quot;True&quot;) { &quot;Enabled&quot; } else { &quot;Disabled&quot; }\n\n        $property = &#x5B;ordered]@{\n            &quot;vCenter&quot; = $VCU\n            &quot;Host&quot; = &quot;N/A&quot;\n            &quot;Cluster&quot; = $ClusterClu\n            &quot;Alarms&quot; = $alarmaClu\n            &quot;ConnectionState&quot; = &quot;N/A&quot;\n        }\n        $output += New-Object -TypeName PSObject -Property $property\n    }\n\n    # Export to CSV where Alarms are Disabled or ConnectionState is not Connected\n    $output | Where-Object { $_.Alarms -eq &quot;Disabled&quot; -or $_.ConnectionState -ne &quot;Connected&quot; } |\n        Export-Csv &quot;C:\\temp\\MailReport\\MailReport_$($CurrentDate)_SAM.csv&quot; -NoTypeInformation -Append\n\n    # Disconnect from vCenter\n    Disconnect-VIServer -Server $VCU -Confirm:$false\n}\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_82\" class=\"pvc_stats all  \" data-element-id=\"82\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://blog.darrenjrobinson.com/?p=49216",
            "tags": [
                "Identity and Access Management",
                "PowerShell",
                "1Password"
            ],
            "description": "<p>Over two years ago I authored a PowerShell Module that enabled the automation of 1Password. I created the module because I wanted to be able to:</p>\n<ul>\n<li>Securely store locally a configuration for accessing a 1Password online Vault</li>\n<li>Automate authentication and retrieve a Session Token for interaction with a 1Password online Vault</li>\n<li>Automatically renew the Session Token if it expires</li>\n<li>Have multiple profile configurations for multiple 1Password Accounts</li>\n<li>Work in Windows PowerShell (5.x)</li>\n</ul>\n<p>&#8230; <a href=\"https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/\" class=\"read-more\">keep reading </a></p>\n<p>The post <a href=\"https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/\">Orchestrating 1Password with PowerShell</a> appeared first on <a href=\"https://blog.darrenjrobinson.com\">darrenjrobinson - Bespoke Identity and Access Management Solutions</a>.</p>",
            "title": "Orchestrating 1Password with PowerShell",
            "link": "https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/",
            "published": "2023-07-26T21:00:00.000Z",
            "author": {
                "#text": "Darren Robinson",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://powershell.ro/?p=84",
            "tags": [
                "Automation",
                "Powershell",
                "Uncategorized",
                "VMWare",
                "certificate",
                "cmdlets",
                "hpe ilo",
                "pkcs7",
                "powercli"
            ],
            "description": "I want to present a PowerShell script created to facilitate the import of custom SSL Certificates on your ILO remote boards. After several days of dedicated work, I am confident that this script will significantly reduce manual efforts and help the certificate import process for your ILO boards. The script was tested on over 50 [&#8230;]",
            "title": "Import custom SSL Certificate on HPE ILO through Powershell script",
            "link": "https://powershell.ro/import-custom-ssl-certificate-on-hpe-ilo-through-powershell-script/",
            "published": "2023-07-26T18:37:36.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>I want to present a PowerShell script created to facilitate the import of custom SSL Certificates on your ILO remote boards. After several days of dedicated work, I am confident that this script will significantly reduce manual efforts and help the certificate import process for your ILO boards.</p>\n\n\n\n<p>The script was <strong>tested </strong>on over <strong>50 ILOs simultaneously</strong>, each with its pkcs7 file certificate. It demonstrated exceptional performance, smoothly importing the certificates for all ILOs directly.</p>\n\n\n\n<p>Script Functionality: The functionality of this PowerShell script is straightforward. To get started, simply copy all the pkcs7 files into the &#8220;ImportCerts&#8221; directory. The script will then take care of the rest:</p>\n\n\n\n<ol>\n<li>Export .CER Files: For each certificate found in the &#8220;ImportCerts&#8221; folder, the script will run the OpenSSL executable to export the corresponding .CER file into the &#8220;Output&#8221; directory.</li>\n\n\n\n<li>SSL Certificate Import: Taking the content of the .CER file, the script will make use of the PowerCLI cmdlet to establish a secure connection to the ILO using the specified credentials. Afterwards will import the SSL certificate onto the target ILO board.</li>\n</ol>\n\n\n\n<p>Once initiated, the script will perform its magic, connecting to each ILO, importing the SSL certificate, and then gracefully disconnecting. That&#8217;s all there is to it! With this process, you can import multiple certificates, saving valuable time and effort on manual tasks.</p>\n\n\n\n<p></p>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n# Define input and output directories\n$ImportDir = &quot;C:\\temp\\InstallCert\\ImportCERTS&quot;\n$ExportDir = &quot;C:\\temp\\InstallCert\\Output&quot;\n\n# Get a list of certificates from the import directory\n$ImportCerts = Get-ChildItem -Path $ImportDir\n\n# Load HPEiLOCmdlets module\nWrite-Host &quot;Loading module: HPEiLOCmdlets&quot;\nImport-Module -Name &quot;C:\\Program Files\\WindowsPowerShell\\Modules\\hpeilocmdlets.4.0.0\\HPEiLOCmdlets.psd1&quot;\n\n# Set target ILO username and password\n$targetILOUsername = &quot;&quot;\n$targetILOPassword = &quot;&quot;\n\n# Generate a date string for log file naming\n$dateString = Get-Date -Format &quot;yyyy-MM-dd_hh-mm-ss&quot;\n\n# Loop through each certificate in the import directory\nforeach ($certificate in $ImportCerts) {\n    $inputPath = $certificate.FullName\n    $certName = $certificate.BaseName\n    $tempCER = &quot;$ExportDir\\$certName&quot; + &quot;_temp.cer&quot;\n    $TempCer2 = &quot;$ExportDir\\$certName&quot; + &quot;_temp2.cer&quot;\n    $outputCER = &quot;$ExportDir\\$certName&quot; + &quot;.cer&quot;\n    \n    # Use openssl to extract the certificate from pkcs7 format\n    &amp; &quot;C:\\temp\\InstallCert\\openssl\\openssl.exe&quot; pkcs7 -inform PEM -outform PEM -in $inputPath -print_certs -out $tempCER\n\n    # Split the certificate bundle and find the specific certificate\n    $certificateBundle = Get-Content $tempCER | Out-String\n    $certificates = $certificateBundle -Split &quot;(?&lt;=&quot; + &quot;-----END CERTIFICATE-----&quot; + &#x5B;System.Environment]::NewLine + &#x5B;System.Environment]::NewLine + &quot;)&quot;\n    $certificate = $certificates | Where-Object { $_ -like &quot;*$certName*&quot; }\n    $certificate | Set-Content -Path $TempCer2 -Encoding Ascii\n\n    # Clean up temporary files\n    Remove-Item $tempCER\n\n    # Extract the individual certificate content\n    $certContent = Get-Content $TempCer2 -Raw\n    Remove-Item $TempCer2\n    $start = &quot;-----BEGIN CERTIFICATE-----&quot;\n    $end = &quot;-----END CERTIFICATE-----&quot;\n    $startIndex = $certContent.IndexOf($start)\n    $endIndex = $certContent.IndexOf($end, $startIndex + $start.Length)\n    $cert = $certContent.Substring($startIndex + $start.Length, $endIndex - $startIndex - $start.Length)\n    $certVariable = &quot;-----BEGIN CERTIFICATE-----$cert-----END CERTIFICATE-----&quot;\n    $certVariable | Set-Content -Path $outputCER -Encoding Ascii\n\n    # Connect to the target ILO using HPEiLOCmdlets and import the certificate\n    Write-Host &quot;`nConnecting using Connect-HPEiLO`n&quot; -ForegroundColor Green\n    $connect = Connect-HPEiLO -IP $certName -Username $targetILOUsername -Password $targetILOPassword -DisableCertificateAuthentication\n    Import-HPEiLOCertificate -Connection $connect -Certificate $certVariable\n\n    # Disconnect from ILO\n    if ($connect -ne $null) {\n        Write-Host &quot;Disconnect using Disconnect-HPEiLO`n&quot; -ForegroundColor Yellow\n        $disconnect = Disconnect-HPEiLO -Connection $connect\n        $disconnect | Format-List\n        Write-Host &quot;Connection disconnected successfully.`n&quot;\n    }\n}\n\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_84\" class=\"pvc_stats all  \" data-element-id=\"84\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://powershell.ro/?p=75",
            "tags": [
                "Automation",
                "Powershell",
                "VMWare",
                "ntp server",
                "ntp service",
                "powercli",
                "powershell",
                "script"
            ],
            "description": "An effective approach for checking the NTP server and NTP Service on all ESXi hosts from a vCenter server is through a Powershell script. This Powershell script has been developed to perform the following tasks: To automate the process, the script can be configured to run as a Scheduled Task on a Windows server. Furthermore, [&#8230;]",
            "title": "Check the NTP Server on all ESXi Hosts via Powershell",
            "link": "https://powershell.ro/check-the-ntp-server-on-all-esxi-hosts-via-powershell/",
            "published": "2023-07-26T18:32:37.000Z",
            "author": {
                "#text": "Catalin Cristescu",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>An effective approach for checking the NTP server and NTP Service on all ESXi hosts from a vCenter server is through a Powershell script.</p>\n\n\n\n<p>This Powershell script has been developed to perform the following tasks:</p>\n\n\n\n<ol>\n<li>Establish a connection to a vCenter server.</li>\n\n\n\n<li>Query all the ESXi hosts to retrieve the configured NTP Server information.</li>\n\n\n\n<li>Query all the ESXi hosts to obtain the status of the NTP Service.</li>\n\n\n\n<li>Compile the gathered information into a list and dispatch it via mail to a designated distribution list.</li>\n</ol>\n\n\n\n<p>To automate the process, the script can be configured to run as a Scheduled Task on a Windows server.</p>\n\n\n\n<p>Furthermore, for scalability, the script can be modified with the option to set up a list of vCenters and iterate through them using a foreach loop in the script.</p>\n\n\n\n<p class=\"has-text-align-center\"><h3 class=\"wp-block-heading has-text-align-center\">Script</h3></p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: powershell; title: ; notranslate\">\n#requires -modules VMware.VimAutomation.Core\n \nparam (\n    &#x5B;CmdletBinding()]\n    &#x5B;Parameter(Mandatory = $true)]\n    &#x5B;string]$VCenter,\n      \n    &#x5B;Parameter(Mandatory = $true)]\n    &#x5B;string]$Username,\n      \n    &#x5B;Parameter(Mandatory = $true)]\n    &#x5B;string]$Password,\n      \n    &#x5B;Parameter(Mandatory = $false)]\n    &#x5B;string]$Email\n)\n  \nImport-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue\nSet-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode multiple -Scope User -InvalidCertificateAction ignore -Confirm:$false | Out-Null\n  \n# Connection to vCenter\ntry {\n    Connect-VIServer -Server $VCenter -User $Username -Password $Password -ErrorAction Stop | Out-Null\n}\ncatch &#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {\n    Write-Host &quot;Cannot connect to $VCenter with provided credentials&quot; -ForegroundColor Red\n    Continue\n}\ncatch &#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {\n    Write-Host &quot;Cannot connect to $VCenter - check IP/FQDN&quot; -ForegroundColor Red\n    Continue\n}\ncatch {\n    Write-Host &quot;Cannot connect to $VCenter - Unknown error&quot; -ForegroundColor Red\n    Continue\n}\n\n$NTPdetails = Get-VMHost | Sort-Object Name | Select-Object Name, \n           @{Name=&quot;NTPServer&quot;;Expression={ $_ | Get-VMHostNtpServer }},\n           @{Name=&quot;ServiceStatus&quot;;Expression={(Get-VMHostService -VMHost $_ | Where-Object {$_.key -eq &quot;ntpd&quot; }).Running }}\n\n\n# Email global variables\n    $ReportTime = Get-Date -Format yyyy.M.d\n    $MailTitle = &quot;NTP status from $vcenter&quot;\n\n    $SMTPServer = &quot;SMTP_SERVER&quot;\n    $From = &quot;noreply@youremail.com&quot;\n    $Timeout = &quot;60&quot;\n    $Subject = &quot;$MailTitle $((Get-Date).ToShortDateString())&quot;\n    $Message = New-Object System.Net.Mail.MailMessage\n  \n    $Body = $NTPdetails | ConvertTo-Html\n    $Message.Subject = $Subject\n    $Message.Body = $Body\n    $Message.IsBodyHtml = $true\n    $Message.To.Add($Email)\n    $Message.From = $From\n    $Message.Attachments.Add($AttachmentFile)\n    $SMTP = New-Object System.Net.Mail.SmtpClient $SMTPServer\n    $SMTP.Send($Message)\n}\n\nDisconnect-VIServer -Server $vcenter -Confirm:$false\n</pre></div><div class=\"pvc_clear\"></div><p id=\"pvc_stats_75\" class=\"pvc_stats all  \" data-element-id=\"75\" style=\"\"><i class=\"pvc-stats-icon medium\" aria-hidden=\"true\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-chart-bar fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\" class=\"\"></path></svg></i> <img loading=\"lazy\" decoding=\"async\" width=\"16\" height=\"16\" alt=\"Loading\" src=\"https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif\" border=0 /></p><div class=\"pvc_clear\"></div>"
        },
        {
            "id": "https://blog.darrenjrobinson.com/?p=49233",
            "tags": [
                "Azure AD",
                "Entra",
                "Entra ID",
                "Identity and Access Management",
                "PowerShell",
                "AzureAD"
            ],
            "description": "<p>Buried in my <a href=\"https://blog.darrenjrobinson.com/powershell-snippets-vol-4/\" target=\"_blank\" rel=\"noreferrer noopener\">PowerShell Snippets Vol 4</a> post from 2021 is the PowerShell script and a link to a PowerShell Module I authored named <a href=\"https://github.com/darrenjrobinson/AzureADTenantID\" target=\"_blank\" rel=\"noreferrer noopener\">AzureADTenantID</a>. Its sole purpose was to take a domain name (e.g., darrenjrobinson.com) and lookup return any associated Azure AD (now Entra ID) TenantID.&#8230; <a href=\"https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/\" class=\"read-more\">keep reading </a></p>\n<p>The post <a href=\"https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/\">Entra ID Tenant ID &#038; Custom Domains PowerShell Module</a> appeared first on <a href=\"https://blog.darrenjrobinson.com\">darrenjrobinson - Bespoke Identity and Access Management Solutions</a>.</p>",
            "title": "Entra ID Tenant ID & Custom Domains PowerShell Module",
            "link": "https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/",
            "published": "2023-07-21T01:01:28.000Z",
            "author": {
                "#text": "Darren Robinson",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18223",
            "tags": [
                "Microsoft Graph",
                "PowerShell",
                "connet-mggraph",
                "graph",
                "graph-sdk",
                "microsoft graph",
                "powershell"
            ],
            "description": "<p>I had this little issue today when I tried to schedule the Microsoft Graph script to run as a service account on a certificate. To my surprise, even tho I had all permissions required, I was getting this error message: Connect-MgGraph: Keyset does not exist. Something that didn't show up for my user.</p>\n<p>The post <a href=\"https://evotec.xyz/connect-mggraph-keyset-does-not-exist/\">Connect-MgGraph: Keyset does not exist</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Connect-MgGraph: Keyset does not exist",
            "link": "https://evotec.xyz/connect-mggraph-keyset-does-not-exist/",
            "published": "2023-07-20T07:07:41.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c712448\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c71243020\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71266f4361\" ><div class=\"vc_column-inner thegem-custom-inner-665370c712671 \"><div class=\"wpb_wrapper thegem-custom-665370c71266f4361\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7128103534\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>I had this little issue today when I tried to schedule the Microsoft Graph script to run as a service account on a certificate. To my surprise, even tho I had all permissions required, I was getting this error message: <strong>Connect-MgGraph: Keyset does not exist</strong>. Something that didn't show up for my user.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7128103534{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7128103534{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7128103534{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7128103534{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7129624303\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"bBBpqud\"><img class=\"alignnone wp-image-18224 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd.png\" alt=\"\" width=\"1377\" height=\"75\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd.png 1377w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-300x16.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-1024x56.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-768x42.png 768w\" sizes=\"(max-width: 1377px) 100vw, 1377px\" /></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7129624303{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7129624303{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7129624303{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7129624303{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c712a935247\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The message indicated my process has difficulty reaching the key of my chosen certificate. Trying to run the scheduled task with the highest privileges didn't change anything. Since <strong>Connect-MGGraph</strong> doesn't support PFX files, you must upload the certificate to the <strong>Local Machine store</strong> and refer to it via <strong>Thumbprint</strong>.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c712a935247{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c712a935247{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c712a935247{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c712a935247{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c712cd1\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c712cc58421\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c712f2c6019\" ><div class=\"vc_column-inner thegem-custom-inner-665370c712f2e \"><div class=\"wpb_wrapper thegem-custom-665370c712f2c6019\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-bug\" ></span></div>\n</div>\n<h2>Fixing Connect-MgGraph: Keyset does not exist</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713235143\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>When using <strong>certificates as a standard user,</strong> I usually do it in the following way:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713235143{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713235143{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713235143{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713235143{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71334f5056\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Connect-MgGraph -CertificateThumbprint '9135E5CF311C051A' -ClientId 'a7b8a419' -TenantId '5e94ad53'</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71334f5056{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71334f5056{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71334f5056{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71334f5056{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71348c5871\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>The problem is &#8211; it only works for certificates in the user store. When you switch to <strong>Local Machine Store</strong>, <strong>Connect-MGGraph</strong> no longer sees the certificate, so you need to change to a different connection method.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71348c5871{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71348c5871{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71348c5871{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71348c5871{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7135b55045\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$Thumbprint = '9135E5CF'\n$LocalMachineCert = Get-ChildItem -Path Cert:\\LocalMachine -Recurse | Where-Object { $_.Thumbprint -eq $Thumbprint }\nConnect-MgGraph -ClientId 'a7b8a419' -TenantId '5e94ad53' -Certificate $LocalMachineCert</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7135b55045{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7135b55045{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7135b55045{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7135b55045{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7136fd785\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>This way, we tell <strong>Connect-MgGaph</strong> to use the <strong>LocalMachine</strong> Certificate store, but while it worked for me when testing it using my account, things were not so great when trying it as a service account. Fortunately, there's an easy fix for that. We need to allow that particular service account access to private keys for that specific certificate.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7136fd785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7136fd785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7136fd785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7136fd785{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71384e884\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"MQCHOPd\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png\"><img class=\"alignnone wp-image-18227 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png\" alt=\"\" width=\"1245\" height=\"555\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png 1245w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-300x134.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-1024x456.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-768x342.png 768w\" sizes=\"(max-width: 1245px) 100vw, 1245px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71384e884{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71384e884{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71384e884{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71384e884{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7139505430\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Add a missing service account with proper permissions, and you're ready!</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7139505430{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7139505430{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7139505430{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7139505430{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713ab24746\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"LHQXTrJ\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png\"><img class=\"alignnone wp-image-18229 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png\" alt=\"\" width=\"1276\" height=\"584\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png 1276w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-300x137.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-1024x469.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-768x351.png 768w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713ab24746{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713ab24746{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713ab24746{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713ab24746{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713cbc2927\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Of course, you need to do it on your proper certificate, not the Razer Chroma SDK certificate, as shown in the screenshot.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/connect-mggraph-keyset-does-not-exist/\">Connect-MgGraph: Keyset does not exist</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://baswijdenes.com/?p=29140",
            "tags": [
                "Microsoft",
                "Automation",
                "My Way",
                "PowerShell"
            ],
            "description": "<p>FIX: The term &#8216;AZ.ACCOUNTS CMDLET&#8216; is not recognized as a name of a cmdlet, function, script file, or executable program I&#8217;m getting several errors in an Azure Automation runbook job, all of which amount to the same thing. I made a seperate error messages section, because it&#8217;s too much for the intro section! But the &#8230; <a href=\"https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: Import-Module Az.Accounts in Azure Automation sandbox</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/\">FIX: Import-Module Az.Accounts in Azure Automation sandbox</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: Import-Module Az.Accounts in Azure Automation sandbox",
            "link": "https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/",
            "published": "2023-07-14T11:04:00.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=7077",
            "tags": [
                "Learn"
            ],
            "description": "<p>Outlook users may face an issue when trying to connect to Exchange Server, where Outlook won&#8217;t start and instead shows the following error message &#8220;Cannot Start Microsoft Outlook. Cannot open the Outlook Window. The set of folders cannot be opened. The attempt to log on to Microsoft Exchange has failed&#8220; In this post, you will...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/\">QuickFix: Cannot Start Microsoft Outlook. The set of Folder cannot be opened, using PowerShell</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "QuickFix: Cannot Start Microsoft Outlook. The set of Folder cannot be opened, using PowerShell",
            "link": "https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/",
            "published": "2023-07-07T13:40:16.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "4ff94561c4aaf2f6d6ca85ec:54265bcbe4b09ad45b272dbf:648be1d85ad34e0ff498a507",
            "tags": [
                "PowerShell"
            ],
            "description": "<p>Hi Everyone,</p><p>I was a long-term user of <a href=\"https://www.monitor-io.com/\">Monitor-io</a>, and I was saddened to hear that had planned to shutdown their services on April 15, 2023. I was excited to hear that unlike many IoT vendors, Monitor-io had made the decision to provide an option for their customers to continue to use their devices in a standalone manner.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n  \n    \n\n      \n\n      \n        <figure class=\"\n              sqs-block-image-figure\n              intrinsic\n            \"\n        >\n          \n        \n        \n\n        \n          \n            \n          \n            \n                \n                \n                \n                \n                \n                \n                \n                <img data-stretch=\"false\" data-image=\"https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png\" data-image-dimensions=\"540x295\" data-image-focal-point=\"0.5,0.5\" alt=\"\" data-load=\"false\" elementtiming=\"system-image-block\" src=\"https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1000w\" width=\"540\" height=\"295\" sizes=\"(max-width: 640px) 100vw, (max-width: 767px) 100vw, 100vw\" onload=\"this.classList.add(&quot;loaded&quot;)\" srcset=\"https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=2500w 2500w\" loading=\"lazy\" decoding=\"async\" data-loader=\"sqs\">\n\n            \n          \n        \n          \n        \n\n        \n          \n          <figcaption class=\"image-caption-wrapper\">\n            <p class=\"\">A Monitor-io showing its local IP address</p>\n          </figcaption>\n        \n      \n        </figure>\n      \n\n    \n  \n\n\n  \n\n\n<p>The Monitor-io unit consists of an <a href=\"http://www.orangepi.org/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-One.html\">Orange PI One</a> and an LCD screen. The Orange Pi One is features an ARM processor – H3 Quad-core Cortex-A7, 512mb of DDR, 10/100mpbs Ethernet, and supports up to 32Gb of storage via micro-SD card. The Cortex-A7 is based off the 32bit ARMv7 instruction set, for those familiar with the Raspberry Pi, this is the same instruction set as the Pi 2 Model B.</p><p>Monitor-io provided an image based upon <a href=\"https://www.armbian.com/orange-pi-one/\">Armbian</a>, and a shell script (<code>netmonitor.sh</code>) that provides basic ping checks to a list of targets listed in the <code>targets.conf</code> file using <code>fping</code>. The script updates the LCD display based upon the results from <code>fping</code>.</p><p>Before I started, I wanted to get PowerShell running. PowerShell doesn’t officially support the Orange Pi One, but there is a shared architecture, so I hopped for the best managed to get PowerShell 7.3.4 up and running.</p><p>The process was very similar to <a href=\"https://learn.microsoft.com/en-au/powershell/scripting/install/install-raspbian?view=powershell-7.3\">Installing on Raspberry Pi OS</a>, use the following shell commands to download, and install the package. You will need to change the URL to match the right PowerShell version that you want to install.</p><pre><code class=\"lang-sh\">###################################\n# Prerequisites\n\n# Update package lists\nsudo apt-get update\n\n###################################\n# Download and extract PowerShell\n\n# Grab the latest tar.gz\nwget https://github.com/PowerShell/PowerShell/releases/download/v7.3.4/powershell-7.3.4-linux-arm32.tar.gz\n\n# Make folder to put powershell\nmkdir ~/powershell\n\n# Unpack the tar.gz file\ntar -xvf ./powershell-7.3.4-linux-arm32.tar.gz -C ~/powershell\n\n###################################\n# Optional - Create a symbolic link to start PowerShell without specifing path to pwsh bindar\nsudo ln -s ~/powershell/pwsh /usr/bin/pwsh</code></pre><p>I haven't fully tested and validated that everything is working, however items like <code>Invoke-WebRequest</code>, and <code>Invoke-RestMethod</code> both appear to function correctly. Most other basic commands also seem to be running without any issues.</p>",
            "title": "Installing PowerShell on Orange PI One",
            "link": "http://poshsecurity.com/blog/installing-powershell-on-orange-pi-one",
            "published": "2023-06-17T04:15:00.000Z",
            "author": {
                "#text": "Kieran Jacobsen",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "http://itluke.online/?p=6904",
            "tags": [
                "AD DS - Active Directory Domain Services",
                "Powershell",
                "Active Directory",
                "Cmdlet",
                "File System",
                "Module",
                "Registry"
            ],
            "description": "Display Active Directory, Registry, VMWare, File System, and more trees with PowerShell...",
            "title": "Display any tree with PowerShell",
            "link": "https://itluke.online/2023/06/02/display-any-tree-with-powershell/",
            "published": "2023-06-02T16:11:39.000Z",
            "author": {
                "#text": "Luke",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "image": {
                "src": "https://itluke.files.wordpress.com/2023/06/show-tree.png",
                "type": "image"
            },
            "media": [
                {
                    "src": "https://itluke.files.wordpress.com/2023/06/show-tree.png",
                    "type": "image"
                },
                {
                    "src": "https://0.gravatar.com/avatar/04d87969d7cbefc3b3d31e2c306f0535dff727fe4ce7748e6980b78652a0a35a?s=96&d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&r=G",
                    "type": "image"
                }
            ]
        },
        {
            "id": "https://dfinke.github.io/powershell,%20importexcel,%20excel%20tables,%20excel/2023/05/31/Excel-Tables-and-PowerShell-ImportExcel-A-Powerful-Combination-for-Data-Analysis",
            "tags": [
                "PowerShell, ImportExcel, Excel Tables, Excel",
                "PowerShell, ImportExcel, Excel Tables, Excel"
            ],
            "description": "Excel Tables and PowerShell Import-Excel",
            "title": "Excel Tables and PowerShell ImportExcel: A Powerful Combination for Data Analysis",
            "link": "https://dfinke.github.io/powershell,%20importexcel,%20excel%20tables,%20excel/2023/05/31/Excel-Tables-and-PowerShell-ImportExcel-A-Powerful-Combination-for-Data-Analysis.html",
            "published": "2023-05-31T10:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10976",
            "tags": [
                "performance",
                "powershell",
                "where",
                "equals",
                "eq",
                "like"
            ],
            "description": "<h4 id=\"when-using-powershell-many-users-often-rely-on-the-like-comparison-in-a-where-statement-for-querying-data\">When using PowerShell, many users often rely on the like comparison in a where statement for querying data.</h4>\n<p>However, there is an alternative method that can be faster, especially when searching for strings that start with specific letters. This method involves using the 'equals' comparison instead.</p>\n<p>To begin, let's create some data to query. I have generated a list of '1048576' words, each consisting of 20 characters:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$BunchOfWords</span> = <span class=\"hljs-variable\">$</span>(\n    (<span class=\"hljs-number\">1</span>..<span class=\"hljs-number\">1</span>mb).ForEach({\n        <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span> <span class=\"hljs-literal\">-Count</span> <span class=\"hljs-number\">20</span>).ForEach({\n            [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$PSItem</span>\n        }) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">''</span>\n    })\n)\n</code></pre>\n<p>Next, we will perform queries on this list to find words that start with the letter 'w', using both the like and equals methods. We can use the first element in the string array, '$PSItem[0]', to achieve this:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#Where method with -eq</span>\n<span class=\"hljs-variable\">$W2</span> = <span class=\"hljs-variable\">$BunchOfWords</span> | <span class=\"hljs-built_in\">where-Object</span>{<span class=\"hljs-variable\">$psitem</span>[<span class=\"hljs-number\">0</span>] <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"W\"</span>}\n<span class=\"hljs-comment\">#Where method with -like</span>\n<span class=\"hljs-variable\">$W</span> = <span class=\"hljs-variable\">$BunchOfWords</span> | <span class=\"hljs-built_in\">Where-Object</span>{<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"W*\"</span>}\n</code></pre>\n<p>To query words with multiple specific characters, we can utilize the 'Substring()' method on '$PSItem':</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#Where method with -eq (Substring)</span>\n<span class=\"hljs-variable\">$WED2</span> = <span class=\"hljs-variable\">$BunchOfWords</span> | <span class=\"hljs-built_in\">where-Object</span>{<span class=\"hljs-variable\">$psitem</span>.Substring(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">3</span>) <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"WED\"</span>}\n<span class=\"hljs-comment\">#Where method with -like</span>\n<span class=\"hljs-variable\">$WED</span> = <span class=\"hljs-variable\">$BunchOfWords</span> | <span class=\"hljs-built_in\">Where-Object</span>{<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"WED*\"</span>}\n</code></pre>\n<p>Finally, let's examine the results:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Method</th>\n<th align=\"left\">RuntimeMS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">SingeLetter EQ StringArray pos 0</td>\n<td align=\"left\">13350</td>\n</tr>\n<tr>\n<td align=\"left\">SingeLetter like Query</td>\n<td align=\"left\">16739</td>\n</tr>\n<tr>\n<td align=\"left\">MultipleLetter EQ Substring</td>\n<td align=\"left\">14713</td>\n</tr>\n<tr>\n<td align=\"left\">MultipleLetter like Query</td>\n<td align=\"left\">17835</td>\n</tr>\n</tbody>\n</table>\n<p>As you can observe, the 'equals' comparison method is consistently around 3 seconds faster when dealing with our large list of words. This holds true even when utilizing a substring in the multiple letter test.</p>\n<p>That concludes our performance test.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell Performance-Test: Like and Equals string comparison methods.",
            "link": "https://devdojo.com/hcritter/powershell-performance-test-like-and-equals-string-comparison-methods",
            "published": "2023-05-30T09:18:16.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://evotec.xyz/?p=18093",
            "tags": [
                "Active Directory",
                "PowerShell",
                "Windows",
                "active directory",
                "ad",
                "dsinternals",
                "html",
                "password quality",
                "passwordsolution",
                "powershell",
                "scan",
                "security"
            ],
            "description": "<p>PasswordSolution uses the DSInternals PowerShell module to gather Active Directory hashes and then combines that data into a prettified report. If you have ever used DSInternals, you know that while very powerful, it comes with raw data that is hard to process and requires some skills to get it into a state that can be shown to management or security.</p>\n<p>The post <a href=\"https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/\">Strengthening Password Security in Active Directory: A PowerShell-Powered Approach</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>",
            "title": "Strengthening Password Security in Active Directory: A PowerShell-Powered Approach",
            "link": "https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/",
            "published": "2023-05-28T14:40:25.000Z",
            "author": {
                "#text": "Przemyslaw Klys",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<div class=\"wpb-content-wrapper\"><div id=\"vc_row-665370c71622f\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c716218218\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7164756282\" ><div class=\"vc_column-inner thegem-custom-inner-665370c716478 \"><div class=\"wpb_wrapper thegem-custom-665370c7164756282\">\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7166c11250\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>Active Directory</strong> plays a central role for many organizations: those with twenty users and those with thousands of them. While everyone is looking at <strong>Azure AD</strong> as a replacement, it will not happen for most organizations for a very long time, and most organizations will stay in a hybrid environment. Over recent years there was a push to split the roles in Active Directory so that Administrators don't use their standard account to manage <strong>Active Directory</strong> but have their particular account for different Tier to enhance security. Users were also pushed to make sure they use more complicated passwords, changed less often. Suppose your organization is lucky enough to implement this correctly and has users and administrators who care. In that case, you now have <strong>Active Directory</strong> with <strong>unique</strong>, <strong>complex passwords</strong> or an even better password-less environment. If you're less lucky, your <strong>Admins</strong> use the same passwords for all their <strong>AD</strong> accounts, whether this is to open an email or update Active Directory Schema. On the other hand, your users don't care at all and often use the same password you gave them the first day, and once it expires, they ask for another reset and continue using what is provided to them. <a href=\"https://github.com/EvotecIT/PasswordSolution\"><strong>PasswordSolution</strong></a> module can help you find those people and try to reason with them to enhance your company's security posture.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7166c11250{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7166c11250{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7166c11250{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7166c11250{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71682a3618\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Today I would like to offer you an easy way to verify whether your environment password posture is good enough or requires some work. I wrote a PowerShell module called <a href=\"https://github.com/EvotecIT/PasswordSolution\">PasswordSolution</a>, which has two main features:</p>\n<ul>\n<li>Enterprise ready, password notifications to users, service account owners, and administrators when their password expires (<strong>not part of this blog post</strong>)</li>\n<li>Analyze password quality by providing information on the usage of <strong>Duplicate Passwords</strong>, <strong>Weak Passwords</strong>, <strong>Empty Passwords</strong>, <strong>Clear Text Passwords</strong>, <strong>LMHashes</strong>, and other data.</li>\n</ul>\n<p><a href=\"https://github.com/EvotecIT/PasswordSolution\"><strong>PasswordSolution</strong></a> uses the <a href=\"https://github.com/MichaelGrafnetter/DSInternals\"><strong>DSInternals</strong></a> PowerShell module to gather <strong>Active Directory</strong> hashes and then combines that data into a prettified report. If you have ever used <strong>DSInternals</strong>, you know that while very powerful, it comes with raw data that is hard to process and requires some skills to get it into a state that can be shown to management or security.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71682a3618{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71682a3618{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71682a3618{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71682a3618{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c716aa0\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c716a952924\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c716ced9941\" ><div class=\"vc_column-inner thegem-custom-inner-665370c716cf0 \"><div class=\"wpb_wrapper thegem-custom-665370c716ced9941\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-key\" ></span></div>\n</div>\n<h2>TL;DR - Too long; didn't read summary</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c716fe02813\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Here's an <strong>HTML-based</strong> report from my test Active Directory to give you a taste of what <strong>PasswordSolution</strong> can offer. The report is split into five sections:</p>\n<ul>\n<li>Summary for detected issues by <strong>DSInternals</strong> along with chart with distinct information on enabled vs. disabled accounts</li>\n<li>A list of all users in <strong>Active Directory</strong> and preliminary information about the account such as whether the user is enabled, last login date, last password date change, password never expires, all the detections around weak passwords, duplicate password groups, <strong>AES Keys</strong> missing, <strong>DES Encryption</strong>, <strong>LMHash</strong> usage, <strong>Kerberoastable</strong> detection, who's the manager of the user, and whether that manager is active or not. The table is fully exportable to <strong>Excel</strong> and <strong>CSV</strong> and can sort and filter.</li>\n<li>Summary for <strong>Duplicate Password Groups</strong> where each group is a separate line in a table with information on whether that password is also a weak password, which users are in that group, and from which country.</li>\n<li>The fourth section provides country/continent maps/tables for increased analysis of Duplicate Password Groups or Weak Passwords.</li>\n<li>The final section is just a log output from a given run. The same that you would see while the script runs in a console.</li>\n</ul>\n<p>Here's what the output looks like:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c716fe02813{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c716fe02813{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c716fe02813{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c716fe02813{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7171477321\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"zeHacNr\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508.png\"><img class=\"alignnone wp-image-18102 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1024x802.png\" alt=\"\" width=\"1024\" height=\"802\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1024x802.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-300x235.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-768x602.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1536x1203.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508.png 1823w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7171477321{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7171477321{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7171477321{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7171477321{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7172605237\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"GztBCLa\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667.png\"><img class=\"alignnone wp-image-18104 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1024x668.png\" alt=\"\" width=\"1024\" height=\"668\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1024x668.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-300x196.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-768x501.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1536x1001.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667.png 1819w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7172605237{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7172605237{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7172605237{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7172605237{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7173764900\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Please NOTE that <strong>Duplicate Password Groups</strong> are essentially two or more accounts with the same passwords. <strong>Weak passwords</strong> are in their clear text form that is usually handed over to your users by your Service Desk or any other process you have in your company. Those can also be passwords used over the years as solid passwords that users adopted for their needs thinking they will be safe.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7173764900{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7173764900{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7173764900{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7173764900{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7174749246\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"UMxYfXp\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c.png\"><img class=\"alignnone wp-image-18106 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1024x658.png\" alt=\"\" width=\"1024\" height=\"658\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1024x658.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-300x193.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-768x494.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1536x987.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c.png 1797w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7174749246{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7174749246{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7174749246{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7174749246{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71756e2389\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"hFPxRyB\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f.png\"><img class=\"alignnone wp-image-18110 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1024x387.png\" alt=\"\" width=\"1024\" height=\"387\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1024x387.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-300x114.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-768x291.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1536x581.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f.png 1821w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71756e2389{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71756e2389{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71756e2389{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71756e2389{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71775a6016\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"XlkSVFz\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16.png\"><img class=\"alignnone wp-image-18124 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1024x593.png\" alt=\"\" width=\"1024\" height=\"593\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1024x593.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-300x174.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-768x445.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1536x890.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16.png 1819w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71775a6016{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71775a6016{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71775a6016{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71775a6016{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71796a7477\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"XQqUezN\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095.png\"><img class=\"alignnone wp-image-18114 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1024x699.png\" alt=\"\" width=\"1024\" height=\"699\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1024x699.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-300x205.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-768x524.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1536x1048.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095.png 1823w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71796a7477{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71796a7477{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71796a7477{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71796a7477{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c717c8a\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c717c778933\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c717e871398\" ><div class=\"vc_column-inner thegem-custom-inner-665370c717e89 \"><div class=\"wpb_wrapper thegem-custom-665370c717e871398\"><div class=\"vc_message_box vc_message_box-standard vc_message_box-rounded vc_color-warning vc_do_message\" ><div class=\"vc_message_box-icon\"><i class=\"fas fa-exclamation\"></i></div><p>Please consult your <strong>security department</strong> before running this tool for approval. It's playing with user password hashes which may be against your company rules. Before running it on production, please test it in your test environment to understand what it's doing!</p>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7182c85777\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>DSInternals</strong> lights up your security tools like a Christmas tree. Before installing and running the modules below, please understand what it's doing, review sources, and contact your internal security department before running this on production. All the heavy lifting done by <strong>DSInternals</strong> (exporting of hashes and first analysis) requires special rights in Active Directory:</p>\n<ul>\n<li><strong>Replicating Directory Changes All</strong></li>\n<li>Alternatively, you can use <strong>Domain Admin/Enterprise Admin</strong>, which is unnecessary and discouraged.</li>\n</ul>\n<p><strong>PasswordSolution</strong> only queries AD as a standard user to fill the holes that DSInternals doesn't care about. Password solution goes thru multiple steps, but simplified way to understand what it's doing behind the curtains:</p>\n<ul>\n<li>Use <strong>Get-ADForest</strong> (ActiveDirectory module) to get forest information</li>\n<li>Use <strong>Get-ADDomain</strong> (ActiveDirectory module) to obtain domain information</li>\n<li>Use <strong>Get-ADUser</strong> (ActiveDirectory module) from all domains in a forest</li>\n<li>Use <strong>Get-ADObject</strong> (ActiveDirectory module) to get contacts for managers</li>\n<li>Use <strong>Get-ADReplAccount -All</strong> (DSInternals module) to get replication data from AD</li>\n<li>Use <strong>Test-PasswordQuality</strong> (DSInternals module) on that data to get details about what's wrong</li>\n<li>Keep in mind that while, at this stage, hashes of the accounts are available in the module, we are not doing anything to them and use <strong>Test-PasswordQuality</strong> data output instead.</li>\n<li>Merge data from all the above commands and mash them into a pretty HTML report using <strong>PSWriteHTML</strong>.</li>\n</ul>\n<p>That's it. It also means to run this tool; you will need the <strong>RSAT Active Directory</strong> module. It's advised to run it on a Tier 0 server, not a Domain Controller, with just enough permissions to get it up and running. The machine doesn't require internet, and there's no data transfer anywhere. The online switch below is only for <strong>CSS/JS</strong> code and nothing else.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7182c85777{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7182c85777{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7182c85777{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7182c85777{position: relative !important;}}</style>\n\t\t</div>\n\t\n<div class=\"vc_message_box vc_message_box-standard vc_message_box-rounded vc_color-warning vc_do_message\" ><div class=\"vc_message_box-icon\"><i class=\"fas fa-exclamation\"></i></div><p>Please consult your <strong>security department</strong> before running this tool for approval. It's playing with user password hashes which may be against your company rules. Before running it on production, please test it in your test environment to understand what it's doing!</p>\n</div></div></div></div></div><div id=\"vc_row-665370c71861c\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c7186119783\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7187e24860\" ><div class=\"vc_column-inner thegem-custom-inner-665370c7187e4 \"><div class=\"wpb_wrapper thegem-custom-665370c7187e24860\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-cloud-download-alt\" ></span></div>\n</div>\n<h3>Installing PasswordSolution and DSIntenals</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718acd1781\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p><strong>PasswordSolution</strong> is very simple to use and get it up and running in your environment. All you have to do is installed two <strong>PowerShell</strong> modules and run a single command.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718acd1781{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718acd1781{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718acd1781{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718acd1781{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718bed7392\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Install-Module PasswordSolution -Verbose\nInstall-Module DSInternals -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718bed7392{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718bed7392{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718bed7392{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718bed7392{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718d042781\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Alternatively, if you don't have internet access on the machine you will be running it on, you can save the modules to a local folder and then move them to another device.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718d042781{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718d042781{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718d042781{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718d042781{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718e04201\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">mkdir C:\\DownloadModules\nSave-Module PasswordSolution -Path C:\\DownloadModules -Verbose\nSave-Module DSInternals -Path C:\\DownloadModules -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718e04201{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718e04201{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718e04201{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718e04201{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718f0b9875\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"pUtStzc\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d.png\"><img class=\"alignnone wp-image-18117 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1024x288.png\" alt=\"\" width=\"1024\" height=\"288\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1536x432.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7190078785\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Remember that while you download <a href=\"https://github.com/EvotecIT/PasswordSolution\">PasswordSolution</a>, actually two more <strong>PowerShell</strong> modules will download. One is <a href=\"https://github.com/EvotecIT/PSWriteHTML\">PSWriteHTML</a>, responsible for the pretty <strong>HTML</strong> output you see above. It's effortless to build HTML reports with it, just in case you would like to use it for your purpose. The other one is <a href=\"https://github.com/EvotecIT/Mailozaurr\">Mailozaurr</a>, which replaces the built-in <strong>Send-MailMessage</strong> with a modern approach supporting <strong>oAuth2</strong>, <strong>Microsoft Graph</strong>, <strong>SendGrid</strong>, and other features. While it's not used during the <strong>Password Quality</strong> scan, it's used by the password notification option, so it's an integral part of this module. Once you have downloaded all required modules, copy them to <strong>C:\\Program Files\\WindowsPowerShell\\Modules</strong> on your target server for easy usage.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7190078785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7190078785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7190078785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7190078785{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c71923f\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c7192342633\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7194198137\" ><div class=\"vc_column-inner thegem-custom-inner-665370c71941b \"><div class=\"wpb_wrapper thegem-custom-665370c7194198137\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-running\" ></span></div>\n</div>\n<h3>Running Password Quality Scan in Active Directory</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71970c6831\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Once you have the required modules installed, using <strong>PasswordSolution</strong> is super easy. It's just one command with multiple parameters that enable or disable functionality. While you could type <strong>Show-PasswordQuality</strong> in the console and just let it run, adding additional parameters to control this process is advised.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71970c6831{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71970c6831{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71970c6831{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71970c6831{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71983d4195\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"NyqMbws\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d.png\"><img class=\"alignnone wp-image-18120 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-1024x441.png\" alt=\"\" width=\"1024\" height=\"441\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-1024x441.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-300x129.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-768x331.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d.png 1436w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71983d4195{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71983d4195{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71983d4195{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71983d4195{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7199669518\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Show-PasswordQuality -FilePath $PSScriptRoot\\Reporting\\PasswordQuality.html -Online -WeakPasswords \"Test1\", \"Test2\", \"Test3\" -Verbose -SeparateDuplicateGroups -AddWorldMap</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7199669518{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7199669518{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7199669518{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7199669518{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719a9a1348\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Or, if you prefer, a more readable method using SPLAT.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719c312280\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$showPasswordQualitySplat = @{\n    FilePath                = \"$PSScriptRoot\\Reporting\\PasswordQuality_$(Get-Date -f yyyy-MM-dd_HHmmss).html\"\n    WeakPasswords           = \"Test1\", \"Test2\", \"Test3\", 'February2023!#!@ok', $Passwords | ForEach-Object { $_ }\n    SeparateDuplicateGroups = $true\n    PassThru                = $true\n    AddWorldMap             = $true\n    LogPath                 = \"$PSScriptRoot\\Logs\\PasswordQuality_$(Get-Date -f yyyy-MM-dd_HHmmss).log\"\n    Online                  = $true\n    LogMaximum              = 5\n}\n\nShow-PasswordQuality @showPasswordQualitySplat</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719c312280{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719c312280{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719c312280{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719c312280{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719d732614\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Additional parameters allow you to <strong>specify weak passwords</strong>, whether to enable <strong>separate duplicate groups</strong> or <strong>add a world map</strong> (if you happen to have an organization spread over multiple countries). You can also use <strong>Verbose</strong> and <strong>PassThru</strong> parameters to see more of what is happening while the scan is in progress and get raw data you can automate.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719d732614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719d732614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719d732614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719d732614{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719e742054\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Show-PasswordQuality -FilePath C:\\Temp\\PasswordQuality.html -Online -WeakPasswords \"Test1\", \"Test2\", \"Test3\" -Verbose -SeparateDuplicateGroups -AddWorldMap -PassThru</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719e742054{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719e742054{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719e742054{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719e742054{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719fa46309\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"ieHpntE\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e.png\"><img class=\"alignnone wp-image-18132 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1024x288.png\" alt=\"\" width=\"1024\" height=\"288\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1536x432.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e.png 1918w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719fa46309{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719fa46309{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719fa46309{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719fa46309{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a0b24705\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"vHPLXgx\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png\"><img class=\"alignnone wp-image-18134 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png\" alt=\"\" width=\"1918\" height=\"539\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png 1918w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-1536x432.png 1536w\" sizes=\"(max-width: 1918px) 100vw, 1918px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a20f5208\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"oHpEhYp\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png\"><img class=\"alignnone wp-image-18136 size-full\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png\" alt=\"\" width=\"1918\" height=\"654\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png 1918w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-300x102.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-1024x349.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-768x262.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-1536x524.png 1536w\" sizes=\"(max-width: 1918px) 100vw, 1918px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a314743\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Please note that the <strong>ONLINE</strong> switch you see in the examples has nothing to do with the requirement of being <strong>online</strong> to run the password quality scan. It simply instructs <strong>PSWriteHTML</strong> to use <strong>CDN</strong> for <strong>JS</strong> and <strong>CSS</strong> libraries. If the <strong>ONLINE</strong> switch is skipped, it bundles all required <strong>CSS/JS</strong> code into a single <strong>HTML</strong>, making the report about <strong>3MB bigger</strong>. This means instead of <strong>CDN</strong> links:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a314743{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a314743{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a314743{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a314743{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a43b934\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"LUJoOOD\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0.png\"><img class=\"alignnone wp-image-18139 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1024x514.png\" alt=\"\" width=\"1024\" height=\"514\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1024x514.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-300x151.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-768x386.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1536x772.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0.png 1877w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a43b934{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a43b934{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a43b934{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a43b934{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a5972530\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>You get unreadable HTML source:</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a5972530{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a5972530{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a5972530{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a5972530{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a6da6973\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p id=\"bQduYzY\"><a href=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0.png\"><img class=\"alignnone wp-image-18141 size-large\" src=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-1024x420.png\" alt=\"\" width=\"1024\" height=\"420\" srcset=\"https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-1024x420.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-300x123.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-768x315.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0.png 1331w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c71aa7b\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c71aa6d7466\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71ac774963\" ><div class=\"vc_column-inner thegem-custom-inner-665370c71ac79 \"><div class=\"wpb_wrapper thegem-custom-665370c71ac774963\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-random\" ></span></div>\n</div>\n<h3>Generating a list of weak passwords</h3><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71af1f3938\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>If you are struggling to provide weak passwords that your users may use, here's a sample weak password generator that will generate passwords such as <strong>January2023!</strong> Or <strong>February2020@</strong>, that would pass the <strong>complexity check built-in in Active Directory</strong>. It generates about <strong>180k</strong> passwords that will be verified against your user's passwords.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b03f5506\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">$Months = @(\n    # english\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    # polish\n    \"Styczen\", \"Luty\", \"Marzec\", \"Kwiecien\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpien\", \"Wrzesien\", \"Pazdziernik\", \"Listopad\", \"Grudzien\"\n    # spanish\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'\n    # german\n    \"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"\n    # russian\n    \"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"\n    # french\n    'Janvier', 'Fevrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Decembre'\n) | Sort-Object -Unique\n$Numbers = 0..9\n$Years = 2020..2023\n$SpecialChar = @(\"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"_\", \"-\", \"+\", \"=\", \"[\", \"]\", \"{\", \"}\", \"|\", \"\\\")\n\n$Passwords = foreach ($Year in $Years) {\n    Write-Color -Text \"Year: \", $Year -Color Yellow, White\n    $YearPasswords = foreach ($month in $months) {\n        foreach ($number in $numbers) {\n            foreach ($special in $SpecialChar) {\n                $month + $Year.ToString() + $number.ToString() + $special\n                $Year.ToString() + $month + $number.ToString() + $special\n                $month + $Year.ToString() + $special\n            }\n        }\n    }\n    Write-Color -Text \"Year: \", $Year, \" passwords created: \", $YearPasswords.Count -Color Yellow, White\n    $YearPasswords\n}\n$Passwords.Count</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b19d6919\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>Once generated, you can use the <strong>$Passwords</strong> variable to pass as weak passwords to the <strong>Show-PasswordQuality</strong> command.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div><div id=\"vc_row-665370c71b3b5\" class=\"vc_row wpb_row vc_row-fluid thegem-custom-665370c71b3ab6404\"><div class=\"wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71b58b8060\" ><div class=\"vc_column-inner thegem-custom-inner-665370c71b58d \"><div class=\"wpb_wrapper thegem-custom-665370c71b58b8060\"><div class=\"vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text\"><span class=\"vc_sep_holder vc_sep_holder_l\"><span  class=\"vc_sep_line\"></span></span><div\n\tclass=\"vc_icon_element vc_icon_element-outer vc_icon_element-align-left\" >\n\t<div class=\"vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey\">\n\t\t<span class=\"vc_icon_element-icon fas fa-chalkboard-teacher\" ></span></div>\n</div>\n<h2>Installing / Updating PasswordSolution</h2><span class=\"vc_sep_holder vc_sep_holder_r\"><span  class=\"vc_sep_line\"></span></span>\n</div>\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b80a3849\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>PasswordSolution is available from <a href=\"https://www.powershellgallery.com/packages/PasswordSolution\">PowerShellGallery</a> or a download from <a href=\"https://github.com/EvotecIT/PasswordSolution\">GitHub</a>. I recommend <strong>PowerShellGallery</strong> as the source for daily work and GitHub if you wish to play with sources or expand what is already there. Also, any issues, feature requests, and discussions should be pushed to <strong>GitHub</strong>, as it's the proper way to get support.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b9143123\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Install-Module PasswordSolution -Force -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b9143123{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b9143123{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b9143123{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b9143123{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71ba112006\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>When you use <strong>Force</strong>, the module will be installed, but when you rerun the command, it will redownload it repeatedly. If there's a new version, it will download the more recent version and leave the old one in place. This makes sure your module is always up to date. Of course, you shouldn't blindly update modules in production. Please test every version before doing the Install-module/Update-module in production.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71ba112006{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71ba112006{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71ba112006{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71ba112006{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71bb363523\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"powershell\">Install-Module PasswordSolution -Scope CurrentUser -Verbose</pre>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bb363523{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bb363523{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bb363523{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bb363523{position: relative !important;}}</style>\n\t\t</div>\n\t\n\n\t\n\t\t<div class=\"wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71bc578661\"  >\n\t\t\t<div class=\"wpb_wrapper\">\n\t\t\t\t<p>This module doesn't require Administrative rights on the machine, so you can use the <strong>CurrentUser</strong> scope, as shown above, to install it as a standard user. However, this module requires proper permissions on <strong>Active Directory</strong> to run it.</p>\n\n\t\t\t</div>\n\t\t\t<style>@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bc578661{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bc578661{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bc578661{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bc578661{position: relative !important;}}</style>\n\t\t</div>\n\t\n</div></div></div></div></div><p>The post <a href=\"https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/\">Strengthening Password Security in Active Directory: A PowerShell-Powered Approach</a> appeared first on <a href=\"https://evotec.xyz\">Evotec</a>.</p>"
        },
        {
            "id": "https://www.powershellcenter.com/?p=7053",
            "tags": [
                "Learn"
            ],
            "description": "<p>The Get-IISAppPool cmdlet helps to access and configure Internet Information Services (IIS) application pools. This cmdlet is available within the IISAdministration PowerShell module. It enables users to retrieve information, such as application pool name, .Net framework version, runtime version, state, and recycling settings of an existing IIS application pool. This cmdlet examines the applicationHost.config configuration...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/\">Using Get-IISAppPool PowerShell Cmdlet</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "Using Get-IISAppPool PowerShell Cmdlet",
            "link": "https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/",
            "published": "2023-05-27T07:03:44.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9247",
            "tags": [
                "PowerShell",
                "get-member",
                "objects",
                "Scripting"
            ],
            "description": "Earlier this Spring, I released a new function called Get-TypeMember. The function is in the PSScriptTools module. I wrote about that release here. This command is an alternative to Get-Member that includes more details. The other day I pushed a new version that makes it easier to identify properties that are enumerations. The function has...",
            "title": "Discover Enums with Get-TypeMember",
            "link": "https://jdhitsolutions.com/blog/powershell/9247/discover-enums-with-get-typemember/",
            "published": "2023-05-26T14:57:13.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=7026",
            "tags": [
                "Powershell - Systems",
                "PS - Quick tip"
            ],
            "description": "<p>This is a quick, simple post. The requirement is simple. Get a report from all the computers in the network reporting the last Windows update date, Windows update installed KB, and the Windows uptime. The script gets the content from a file containing all the computer names as an array and saves the result on...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/05/09/winupdateanduptime/\">QuickScript: Get installed Update and Machine Uptime Using PowerShell.</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "QuickScript: Get installed Update and Machine Uptime Using PowerShell.",
            "link": "https://www.powershellcenter.com/2023/05/09/winupdateanduptime/",
            "published": "2023-05-09T19:45:48.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "http://powershell.city/2023/05/06/aws-ec2-powershell-tips/",
            "tags": [
                "Powershell",
                "Automation",
                "AWS",
                "Microsoft",
                "script"
            ],
            "description": "Ever find yourself looking for ways to use powerShell? maybe that’s just me. Hahaha Recently I was supporting some EC2 in the cloud testing some new AWS features and services and I found my self locked out and released this machine was not domain joined but I couldn’t login. With the windows PowerShell cmdlets swirling<a class=\"more-link\" href=\"https://powershell.city/2023/05/06/aws-ec2-powershell-tips/\">Continue reading <span class=\"screen-reader-text\">\"AWS EC2 powerShell&#160;tips\"</span></a>",
            "title": "AWS EC2 powerShell tips",
            "link": "https://powershell.city/2023/05/06/aws-ec2-powershell-tips/",
            "published": "2023-05-06T12:16:06.000Z",
            "author": {
                "#text": "Xajuan Smith",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [
                {
                    "src": "https://1.gravatar.com/avatar/14d698e08780443e22321a389cc16e04e0c7c19bed371e5d4bbcd3248a42678e?s=96&d=identicon&r=G",
                    "type": "image"
                }
            ],
            "content": "<p>Ever find yourself looking for ways to use powerShell? maybe that’s just me. Hahaha</p>\n\n\n\n<p>Recently I was supporting some EC2 in the cloud testing some new AWS features and services and I found my self locked out and released this machine was not domain joined but I couldn’t login. </p>\n\n\n\n<p>With the windows PowerShell cmdlets swirling around my head I recalled a similar situation with a dev hyper-v client. This made me remember the root cause was an expired local user password. </p>\n\n\n\n<p>I am not sure if I have ever had the chance to share the:</p>\n\n\n\n<pre class=\"wp-block-preformatted has-background-color has-secondary-background-color has-text-color has-background\">Get-LocalUser<br>Set-LocaUser</pre>\n\n\n\n<p>These two commands are a good way to quickly check users and set passwords. Let’s see if you can make use of these by tapping into </p>\n\n\n\n<pre class=\"wp-block-preformatted has-foreground-background-color has-background\">get-Help</pre>\n\n\n\n<p>My issue was resolved by using amazons PowerShell in the browser and changing the local users password expiration policy. I am sure other sys admins and cloud admins can leverage this using various powerShell cloud instances to connect to their cloud servers and clients. Expiration policy comes in handy when you only want the user to access the infra temporarily for development purposes. </p>\n\n\n\n<p>I hope this finds that local user experience easier to manage due to the considerable amount time the powerShell devs put in to do this for admins. </p>\n\n\n\n<p>Let me know if you used this differently, like script disabling and creating local accounts or the default administrator account. </p>"
        },
        {
            "id": "https://devdojo.com/10907",
            "tags": [
                "script",
                "powershell",
                "wifi",
                "netsh",
                "localization"
            ],
            "description": "<h3 id=\"powershell-is-a-powerful-scripting-language-that-can-be-used-to-automate-a-variety-of-tasks\">PowerShell is a powerful scripting language that can be used to automate a variety of tasks.</h3>\n<h4 id=\"in-this-blog-post-we-will-explore-my-get-wifipassword-script-that-retrieves-stored-wifi-passwords-on-windows-machines-the-script-overcomes-the-issue-of-localization-that-arises-when-parsing-the-output-of-the-netsh-exe-command\">In this blog post, we will explore my Get-WifiPassword script that retrieves stored Wifi passwords on Windows machines. The script overcomes the issue of localization that arises when parsing the output of the 'netsh.exe' command.</h4>\n<p>To retrieve the stored Wifi passwords, most users rely on the 'netsh.exe' command. This command can be parsed with PowerShell by looking for the 'key content' line and splitting it by ':' to obtain the password of the Wifi profile. However, this approach fails on non-English Windows machines, where the 'key content' line may be labeled differently.</p>\n<p>I initially tried to call the 'netsh.exe' command in a consistent language to solve this problem, but this proved unsuccessful. I then sought the help of ChatGPT, which recommended using CIM-Classes. However, this approach also failed, and I decided to analyze the 'netsh.exe' command more closely.</p>\n<p>I discovered that the 'netsh.exe' command has an export argument that exports all profiles at once. The output is in the form of several XML files, all in English. This led me to read all the XML files, extract the Wifi-SID and password, and store them as 'pscustomobjects' to output them.</p>\n<p>Overall, my Get-WifiPassword script is an excellent example of how to overcome localization issues in PowerShell scripting. By exporting all profiles at once, my script is able to obtain the stored Wifi passwords in a consistent language, regardless of the language of the underlying operating system.</p>\n<p>The final script looks like this now:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">&lt;#\n    <span class=\"hljs-doctag\">.SYNOPSIS</span>\n    This function displays all stored WIFI passwords on the client\n    <span class=\"hljs-doctag\">.DESCRIPTION</span>\n    This function gets the output of netsh command and will trim it to display all SSID`s and also the passwords.\n    If a profile has no password it will inform the user.\n    <span class=\"hljs-doctag\">.EXAMPLE</span>\n    Get-WIFIPassword\n#&gt;</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Get-WifiPassword</span></span> {\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">CmdletBinding</span>()]</span>\n    <span class=\"hljs-keyword\">param</span> (\n        \n    )\n    \n    <span class=\"hljs-keyword\">begin</span> {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\"># Export all Wifi profiles and collect their XML file paths</span>\n            <span class=\"hljs-variable\">$netshOutput</span> = <span class=\"hljs-variable\">$</span>(netsh wlan export profile key=clear)\n            <span class=\"hljs-variable\">$XmlFilePaths</span> = <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$line</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$netshOutput</span>){\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$line</span> <span class=\"hljs-operator\">-match</span> <span class=\"hljs-string\">'\\\"(.*?\\\\.*?\\.xml)(?=\\\")'</span>){\n                    <span class=\"hljs-variable\">$matches</span>[<span class=\"hljs-number\">1</span>]\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">catch</span> {\n            <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">\"Failed to export Wifi profiles: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message)\"</span>\n            <span class=\"hljs-keyword\">return</span>\n        }\n        \n    }\n    \n    <span class=\"hljs-keyword\">process</span> {\n        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$XmlFilePath</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$XmlFilePaths</span>) {\n            <span class=\"hljs-keyword\">try</span> {\n                <span class=\"hljs-comment\"># Read the XML file and extract the Wifi profile name and password</span>\n                <span class=\"hljs-variable\">$Xml</span> = [<span class=\"hljs-built_in\">xml</span>](<span class=\"hljs-built_in\">Get-Content</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-variable\">$XmlFilePath</span>)\n\n                <span class=\"hljs-comment\"># Output the profile name, password, and whether the operation succeeded</span>\n                [<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n                    Name = <span class=\"hljs-variable\">$Xml</span>.WLANProfile.Name\n                    Password = <span class=\"hljs-variable\">$Password</span> = <span class=\"hljs-variable\">$Xml</span>.WLANProfile.MSM.Security.SharedKey.KeyMaterial\n                    Succeed = [<span class=\"hljs-built_in\">bool</span>]<span class=\"hljs-variable\">$Password</span>\n                }\n                <span class=\"hljs-comment\"># Remove the XML file</span>\n                <span class=\"hljs-built_in\">Remove-Item</span> <span class=\"hljs-variable\">$XmlFilePath</span> <span class=\"hljs-literal\">-ErrorAction</span> Stop\n            }\n            <span class=\"hljs-keyword\">catch</span> {\n                <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">\"Failed to read Wifi profile from '<span class=\"hljs-variable\">$XmlFilePath</span>': <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message)\"</span>\n            }\n        }\n    }\n    \n    <span class=\"hljs-keyword\">end</span> {\n        \n    }\n}\n</code></pre>\n<p>I want to mention that I am aware of the 'wlanapi.dll', which is a C-Library on Windows that could also be used for this task. However, my goal was to keep the script as simple as possible without adding tons of confusing code.</p>\n<p>If you have any ideas to improve this script, please feel free to raise an issue on <a href=\"https://github.com/HCRitter/Get-WIFIPassword\">Github</a>, or share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>. I am always looking to improve my scripts and welcome any feedback or suggestions.</p>\n<p>Best regards,</p>\n<p>Christian</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>",
            "title": "PowerShell-Script Showcase: Get-WifiPassword",
            "link": "https://devdojo.com/hcritter/powershell-script-showcase-get-wifipassword",
            "published": "2023-05-03T21:46:15.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://blog.darrenjrobinson.com/?p=49181",
            "tags": [
                "How-to",
                "PowerShell",
                "ChatGPT",
                "Generative AI",
                "OpenAI"
            ],
            "description": "<p>Unless you&#8217;ve been off the grid on a long sabbatical the last six months you&#8217;ve surely heard of ChatGPT. Like many I started exploring the possibilities of <a href=\"https://openai.com/blog/chatgpt\" target=\"_blank\" rel=\"noreferrer noopener\">OpenAI ChatGPT</a> when it hit the world by storm last year. Pretty quickly I saw the power of it, but also wondered about using it via API.&#8230; <a href=\"https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/\" class=\"read-more\">keep reading </a></p>\n<p>The post <a href=\"https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/\">Generative AI (ChatGPT) with PowerShell</a> appeared first on <a href=\"https://blog.darrenjrobinson.com\">darrenjrobinson - Bespoke Identity and Access Management Solutions</a>.</p>",
            "title": "Generative AI (ChatGPT) with PowerShell",
            "link": "https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/",
            "published": "2023-04-25T23:00:00.000Z",
            "author": {
                "#text": "Darren Robinson",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.thelazyadministrator.com/?p=2946",
            "tags": [
                "Intune",
                "Accounts",
                "Graph",
                "LAPS",
                "PowerShell"
            ],
            "description": "<p>Windows Local Administrator Password Solution (Windows LAPS) is a Windows Feature that allows IT Administrators to secure and protect local administrator passwords. This includes automatic rotation of passwords as well as backing up the passwords to Azure Active Directory or Active Directory. You can configure Windows LAPS on your Windows endpoints using Microsoft Intune.</p>\n<h2 class=\"wp-block-heading\">Pre-requisites</h2>\n<p>To use Windows LAPS in Intune, ensure you’re using a supported Windows platform:</p>\n<ul>\n<li>Windows 10 20H2 and later with&#160;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025221-os-builds-19042-2846-19044-2846-and-19045-2846-b00c3356-baac-4a41-8342-7f97ec83445a\" target=\"_blank\" rel=\"noreferrer noopener\">April 11, 2023 security updates</a>&#160;installed</li>\n<li>Windows 11 21H2 and later with&#160;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025224-os-build-22000-1817-ebc75372-608d-4a77-a6e0-cb1e15f117fc\" target=\"_blank\" rel=\"noreferrer noopener\">April 11, 2023 security updates</a>&#160;installed</li>\n<li>Windows Server 2019 and later with&#160;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025229-os-build-17763-4252-e8ead788-2cd3-4c9b-8c77-d677e2d8744f\">April 11, 2023 security updates</a>&#160;installed</li>\n</ul>\n<p>You might also have to enable Azure AD Local Administrator Password Solution (LAPS) within your Azure Tenant. </p>\n<ul>\n<li><strong>Azure Active Directory</strong>&#160;&#62;&#160;<strong>Devices</strong>&#160;&#62;&#160;<strong>Device Settings</strong>&#160;&#62;&#160;<strong>Azure AD Local Administrator Password Solution (LAPS)</strong><br /><em><strong>Note</strong>: You may not have to do this once the product is </em></li>\n</ul>\n<p>&#8230; <a href=\"https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/\" class=\"read-more\">Continue... </a></p>\n<p>The post <a href=\"https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/\">Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>",
            "title": "Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune",
            "link": "https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/",
            "published": "2023-04-22T16:12:16.000Z",
            "author": {
                "#text": "Brad Wyatt",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>Windows Local Administrator Password Solution (Windows LAPS) is a Windows Feature that allows IT Administrators to secure and protect local administrator passwords. This includes automatic rotation of passwords as well as backing up the passwords to Azure Active Directory or Active Directory. You can configure Windows LAPS on your Windows endpoints using Microsoft Intune.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Pre-requisites</h2>\n\n\n\n<p>To use Windows LAPS in Intune, ensure you’re using a supported Windows platform:</p>\n\n\n\n<ul>\n<li>Windows 10 20H2 and later with&nbsp;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025221-os-builds-19042-2846-19044-2846-and-19045-2846-b00c3356-baac-4a41-8342-7f97ec83445a\" target=\"_blank\" rel=\"noreferrer noopener\">April 11, 2023 security updates</a>&nbsp;installed</li>\n\n\n\n<li>Windows 11 21H2 and later with&nbsp;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025224-os-build-22000-1817-ebc75372-608d-4a77-a6e0-cb1e15f117fc\" target=\"_blank\" rel=\"noreferrer noopener\">April 11, 2023 security updates</a>&nbsp;installed</li>\n\n\n\n<li>Windows Server 2019 and later with&nbsp;<a href=\"https://support.microsoft.com/topic/april-11-2023-kb5025229-os-build-17763-4252-e8ead788-2cd3-4c9b-8c77-d677e2d8744f\">April 11, 2023 security updates</a>&nbsp;installed</li>\n</ul>\n\n\n\n<p>You might also have to enable Azure AD Local Administrator Password Solution (LAPS) within your Azure Tenant. </p>\n\n\n\n<ul>\n<li><strong>Azure Active Directory</strong>&nbsp;&gt;&nbsp;<strong>Devices</strong>&nbsp;&gt;&nbsp;<strong>Device Settings</strong>&nbsp;&gt;&nbsp;<strong>Azure AD Local Administrator Password Solution (LAPS)</strong><br /><em><strong>Note</strong>: You may not have to do this once the product is </em></li></ul>&hellip; <a href=\"https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/\" class=\"read-more\">Continue... </a><p>The post <a href=\"https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/\">Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune</a> first appeared on <a href=\"https://www.thelazyadministrator.com\">The Lazy Administrator</a>.</p>"
        },
        {
            "id": "https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20gpt-4,%20chatgpt/2023/04/13/Fixing%20JSON%20Syntax%20Errors%20with%20the%20PowerShellAI%20Module",
            "tags": [
                "PowerShell, PowerShellAI, OpenAI, Azure OpenAI, GPT-4, ChatGPT",
                "PowerShell, PowerShellAI, OpenAI, Azure OpenAI, GPT-4, ChatGPT"
            ],
            "title": "Fixing JSON Syntax Errors with the PowerShellAI Module",
            "link": "https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20gpt-4,%20chatgpt/2023/04/13/Fixing-JSON-Syntax-Errors-with-the-PowerShellAI-Module.html",
            "published": "2023-04-13T09:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10836",
            "tags": [
                "powershell",
                "book-review",
                "practical automation with powershell",
                "matthew dowst"
            ],
            "description": "<p>Lately I had the chance to get a copy of the book: \"Practical Automation with PowerShell\". This is not a paid review just my honest thoughts about it, because after reading I am still impressed.</p>\n<hr>\n<p>If you're looking to dive into the world of automation and want a comprehensive guide to get started, then <a href=\"https://www.manning.com/books/practical-automation-with-powershell\">\"Practical Automation with PowerShell\"</a>  by  <a href=\"https://twitter.com/MDowst\">Matthew Dowst</a> is a must-read.</p>\n<p>What sets this book apart is its clear and structured approach, which caters to both beginners and advanced users. It targets a specific crowd who are interested in automation and delivers the concepts of larger enterprise-ready automation.</p>\n<p>The book is divided into three parts, making it easy to cherry-pick specific topics or follow the chapters straight through. Most of the examples provided are for PowerShell Version 7.X, so no one is left behind if the person is automating on something else than a Windows PC.</p>\n<p>The book goes beyond just providing code snippets and examples. It also delves into the mindset necessary to develop solutions alone or in a team. The author's background in the IT-Industry and working with companies focused on software development adds to the book's credibility.</p>\n<p>One of the book's strengths is its diagrams and figures, which are not overloaded and convey the message in a clear and concise manner. The book covers efficiency and code quality, with the author providing valuable insights into best practices that he has used throughout his career.</p>\n<p>The author's attention to detail shines through in the book, with code snippets and examples explained not only by code comments but also with arrows and short sentences. Additionally, the book covers the structuring of a project on a folder and file basis, handling sensitive data and inputs, and the latest state-of-the-art security standards.</p>\n<p>The book also covers remoting in all its methods with pros and cons, data reading and storing, converting for exporting to other systems and services, and a big spoon of SQL. Furthermore, the author provides well-structured step-by-step guidance for cloud-based automation with all its capabilities.</p>\n<p>Sharing scripts and whole projects with team members is another key aspect covered in the book, providing different ways to optimize it for your own company. One of the last sections of the book covers the important topic of testing/unit testing, with the author referring to the great Pester-Framework and providing readers with a basic understanding of how unit testing with Pester works.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Overall, \"Practical Automation with PowerShell\" is an excellent book that covers all aspects of automation, providing readers with valuable insights, best practices, and step-by-step guidance. Whether you are a beginner or an advanced user, this book is a must-read for anyone interested in automation.</p>",
            "title": "Book-Review: Practical Automation with PowerShell",
            "link": "https://devdojo.com/hcritter/book-review-practical-automation-with-powershell",
            "published": "2023-04-11T22:37:53.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://nocolumnname.blog/?p=10858",
            "tags": [
                "General",
                "Powershell",
                "sql-server",
                "T-SQL Tuesday"
            ],
            "description": "Words: 1,283 Time to read: ~ 7 minutes Welcome to T-SQL Tuesday, the monthly blogging party where a host provides a topic, and we blog about it. This month we have Reitse Eskens ( blog &#124; twitter &#124; mastadon ) asking us to talk about something fun we have done with T-SQL. It has been &#8230; <a href=\"https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/\" class=\"more-link\">Continue reading<span class=\"screen-reader-text\"> \"T-SQL Tuesday 161: Having Fun with SQL\"</span></a>",
            "title": "T-SQL Tuesday 161: Having Fun with SQL",
            "link": "https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/",
            "published": "2023-04-11T22:13:34.000Z",
            "author": {
                "#text": "Shane O'Neill",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/soft-skills-part-3",
            "tags": [
                "powershell",
                "soft skills",
                "career"
            ],
            "description": "On the Road to DevOps, Don't Forget the Soft Skills",
            "title": "Soft Skills - Part 3 - Motivation and Inspiration",
            "link": "https://thedavecarroll.com/powershell/soft-skills-part-3/",
            "published": "2023-04-10T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://dfinke.github.io/powershellai,%20powershell,%20chatgpt/2023/04/04/PowerShellAI-ChatGPT-Conversation-Mode",
            "tags": [
                "PowerShellAI, PowerShell, ChatGPT",
                "PowerShellAI, PowerShell, ChatGPT"
            ],
            "description": "&lt;!– https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/chatgpt",
            "title": "PowerShellAI ChatGPT Conversation Mode",
            "link": "https://dfinke.github.io/powershellai,%20powershell,%20chatgpt/2023/04/04/PowerShellAI-ChatGPT-Conversation-Mode.html",
            "published": "2023-04-04T15:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10799",
            "tags": [
                "powershell",
                "technique",
                "get-random"
            ],
            "description": "<h3 id=\"powershell-technique-randomizing\">PowerShell-Technique: Randomizing</h3>\n<h4 id=\"powershell-is-a-powerful-tool-for-automating-tasks-and-managing-systems-and-one-of-its-useful-features-is-its-ability-to-generate-random-values-in-this-post-we-ll-take-a-closer-look-at-the-get-random-cmdlet-and-explore-some-of-its-lesser-known-features\">PowerShell is a powerful tool for automating tasks and managing systems, and one of its useful features is its ability to generate random values. In this post, we'll take a closer look at the Get-Random cmdlet and explore some of its lesser-known features.</h4>\n<p>To generate a random number between two values using Get-Random, you can use the -Minimum and -Maximum parameters. For example, to generate a random number between 1 and 10, you can run the following command:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<p>But did you know that you can also use the -Count parameter to generate multiple random values at once? For example, the following command generates three random numbers between 1 and 10 and stores them in an array:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">10</span> <span class=\"hljs-literal\">-Count</span> <span class=\"hljs-number\">3</span>\n</code></pre>\n<p>You can also pipe values to the Get-Random cmdlet, including strings, PSObjects, and other data types. The resulting output will depend on the input type, and there may be some typecasting involved. For example:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-string\">\"one\"</span>,<span class=\"hljs-variable\">$</span>([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Test = <span class=\"hljs-string\">\"test\"</span>\n    Test2 = <span class=\"hljs-number\">4</span>\n}),<span class=\"hljs-number\">3</span> | <span class=\"hljs-built_in\">get-random</span>\n</code></pre>\n<p>In addition to these features, Get-Random also includes a -Shuffle parameter that can be used to randomize the order of an input collection. While it may not always have a practical use case, it can be a fun way to mix things up.</p>\n<p>The results are based on the input type, but it's important to be aware that typecasting can occur with certain input types.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Input Type</th>\n<th align=\"center\">Output Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">SByte</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Byte</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Int16</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">UInt16</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Int32</td>\n<td align=\"center\">Int32</td>\n</tr>\n<tr>\n<td align=\"center\">UInt32</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Int64</td>\n<td align=\"center\">Int64</td>\n</tr>\n<tr>\n<td align=\"center\">UInt64</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Double</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\">Single</td>\n<td align=\"center\">Double</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.4/Microsoft.PowerShell.Utility/Get-Random.md\">Get-Help online reference</a></td>\n<td align=\"center\"></td>\n</tr>\n</tbody>\n</table>\n<p>Perhaps this was no new information for you, but it demonstrates the value of reading the help page for even the most familiar cmdlets, as there may be useful features or parameters that you were not aware of before.</p>\n<p>Thats all for now.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: Randomizing",
            "link": "https://devdojo.com/hcritter/powershell-technique-randomizing",
            "published": "2023-04-03T21:28:02.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/soft-skills-part-2",
            "tags": [
                "powershell",
                "soft skills",
                "career",
                "collaboration"
            ],
            "description": "On the Road to DevOps, Don't Forget the Soft Skills",
            "title": "Soft Skills - Part 2 - Collaboration",
            "link": "https://thedavecarroll.com/powershell/soft-skills-part-2/",
            "published": "2023-04-03T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10791",
            "tags": [
                "powershell",
                "methods",
                "reading",
                "files",
                "filecontent"
            ],
            "description": "<h3 id=\"powershell-performance-test-file-reading-which-method-reads-a-file-the-fastest\">PowerShell Performance-Test: File Reading - Which method reads a file the fastest?</h3>\n<h4 id=\"there-are-several-methods-and-ways-to-read-the-content-of-a-file-in-powershell-with-the-most-commonly-used-being-get-content\">There are several methods and ways to read the content of a file in PowerShell, with the most commonly used being Get-Content.</h4>\n<p>I have to point out that all of the tests regards to read a file line by line. Thanks for that hint to: <a href=\"https://twitter.com/nohwnd\">nohwnd</a>.</p>\n<p>However, there are faster ways to read files that are not as widely known. In this article, we will compare six different methods for reading files in PowerShell and determine which one is the fastest. The following methods were tested:</p>\n<ul>\n<li>Get-Content</li>\n<li>[System.IO.StreamReader]::ReadLine() - Classic Way</li>\n<li>[System.IO.StreamReader]::ReadLine() - Peek</li>\n<li>[System.IO.StreamReader]::ReadLine() - End Of Stream</li>\n<li>Switch-Statement -File\nAll tests were performed using a file containing 500000 lines.</li>\n</ul>\n<h4 id=\"get-content\">Get-Content</h4>\n<p>The most typical PowerShell way to read a file is to use Get-Content:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$File</span> = <span class=\"hljs-built_in\">Get-Content</span> <span class=\"hljs-variable\">$LargeFile</span>\n<span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$Line</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$File</span>){\n\t<span class=\"hljs-variable\">$lines</span>++\n}\n</code></pre>\n<p>In this method, we first have to store the file content into a variable, and then we can iterate through it.</p>\n<h4 id=\"system-io-file-readalllines\">System.IO.File::ReadAllLines()</h4>\n<p>The second most common way is to use the [System.IO.File] class with the ReadAllLines() method:</p>\n<pre><code class=\"hljs php\">$File = [system.io.file]::ReadAllLines($LargeFile)\n<span class=\"hljs-keyword\">foreach</span> ($Line in $File){\n\t$lines++\n}\n</code></pre>\n<p>Similarly to Get-Content, we have to read all lines first and then iterate through them.</p>\n<h4 id=\"system-io-streamreader-readline-classic-way\">[System.IO.StreamReader]::ReadLine() - Classic Way</h4>\n<p>The following three methods are variations of the System.IO.StreamReader class with the ReadLine() method. The most common way to use it is:</p>\n<pre><code class=\"hljs ruby\">$sread = [System.IO.StreamReader]<span class=\"hljs-symbol\">:</span><span class=\"hljs-symbol\">:new</span>($largefile) \n<span class=\"hljs-keyword\">while</span> ($sread.ReadLine()) {\n    $lines++\n}\n</code></pre>\n<p>In this method, we initialize the StreamReader object and iterate right through, which should be quite fast. However, issues can appear with this method, such as empty lines not being read, as demonstrated in <a href=\"https://twitter.com/cj_berlin/\">Evgenij Smirnov`s</a> <a href=\"https://it-pro-berlin.de/2020/03/powershell-streamreader-readline-und-leere-zeilen/\">Blog-Post</a>. To solve this problem, Evgenij provides two other methods using the StreamReader class.</p>\n<h4 id=\"system-io-streamreader-readline-peek\">[System.IO.StreamReader]::ReadLine() - Peek</h4>\n<p>The first of these methods is the Peek() method:</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$sread</span> = [<span class=\"hljs-type\">System.IO.StreamReader</span>]::new(<span class=\"hljs-variable\">$largefile</span>) \n<span class=\"hljs-keyword\">while</span> (<span class=\"hljs-variable\">$sread</span>.Peek() <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-literal\">-1</span>) {\n    <span class=\"hljs-variable\">$sread</span>.ReadLine() | <span class=\"hljs-built_in\">Out-Null</span>\n    <span class=\"hljs-variable\">$lines</span>++\n}\n</code></pre>\n<p>This method uses the Peek() method to check if there are any characters left to read, and then reads the line and increments the line count.</p>\n<h4 id=\"system-io-streamreader-readline-end-of-stream\">[System.IO.StreamReader]::ReadLine() - End Of Stream</h4>\n<p>The second method uses the EndOfStream property:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$sread</span> = [<span class=\"hljs-type\">System.IO.StreamReader</span>]::new(<span class=\"hljs-variable\">$largefile</span>) \n<span class=\"hljs-keyword\">while</span> (<span class=\"hljs-variable\">$sread</span>.EndOfStream <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-variable\">$false</span>) {\n    <span class=\"hljs-variable\">$line</span> = <span class=\"hljs-variable\">$sread</span>.ReadLine()\n    <span class=\"hljs-variable\">$lines</span>++\n}\n</code></pre>\n<p>This method checks if the EndOfStream property is false and then reads the line and increments the line count.</p>\n<h4 id=\"switch-statement-file\">Switch-Statement -File</h4>\n<p>One uncommon but useful way to read a file in PowerShell is to use a switch statement with the -File parameter. The switch statement can then be used to perform different actions based on the contents of the file.</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-keyword\">switch</span> <span class=\"hljs-operator\">-File</span> (<span class=\"hljs-variable\">$LargeFile</span>){\n    Default {\n        <span class=\"hljs-variable\">$lines</span>++\n    }\n}\n</code></pre>\n<p>To compare the performance of this method with other popular ways of reading files, we conducted a test on a file with 500,001 lines. Here are the results:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Lines</th>\n<th align=\"left\">Method</th>\n<th align=\"left\">Time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">Get-Content</td>\n<td align=\"left\">10815</td>\n</tr>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">[System.IO.File]::ReadAllLines()</td>\n<td align=\"left\">3374</td>\n</tr>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">[System.IO.StreamReader]::ReadLine() - Classic Way</td>\n<td align=\"left\">3644</td>\n</tr>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">[System.IO.StreamReader]::ReadLine() - Peek</td>\n<td align=\"left\">10278</td>\n</tr>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">[System.IO.StreamReader]::ReadLine() - End Of Stream</td>\n<td align=\"left\">4619</td>\n</tr>\n<tr>\n<td align=\"left\">500001</td>\n<td align=\"left\">Switch-Statement -File</td>\n<td align=\"left\">1356</td>\n</tr>\n</tbody>\n</table>\n<p>Surprisingly, the switch statement with the -File parameter was the fastest method. The peek and end-of-stream methods had a much larger difference in performance.</p>\n<p>It's always good to keep different methods in mind when working with files and choosing the right one for the task at hand. Who knows, in the future we might discover even faster ways to read files!</p>\n<p>Thats all for now.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p>\n<p>Christian.</p>",
            "title": "PowerShell Performance-Test: File Reading",
            "link": "https://devdojo.com/hcritter/powershell-performance-test-file-reading",
            "published": "2023-04-02T18:50:01.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10782",
            "tags": [
                "powershell",
                "technique",
                "switch"
            ],
            "description": "<h3 id=\"enhance-your-powershell-scripting-with-switch-statements\">Enhance Your PowerShell Scripting with Switch Statements</h3>\n<h4 id=\"have-you-ever-found-yourself-writing-a-lot-of-if-elseif-else-statements-in-your-powershell-script-you-may-have-heard-of-the-switch-statement-as-an-alternative-but-do-you-know-all-of-its-capabilities\">Have you ever found yourself writing a lot of if/elseif/else statements in your PowerShell script? You may have heard of the switch statement as an alternative, but do you know all of its capabilities?</h4>\n<p>Let's start with an example that uses if/elseif/else statements:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$Age</span> = <span class=\"hljs-number\">16</span>\n<span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-variable\">$Null</span>\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$Age</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">16</span>){\n    <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"Soft Drink\"</span>\n}<span class=\"hljs-keyword\">elseif</span>(<span class=\"hljs-variable\">$Age</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">18</span>){\n    <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"SoftDrink\"</span>,<span class=\"hljs-string\">\"Wine\"</span>,<span class=\"hljs-string\">\"Beer\"</span>\n}<span class=\"hljs-keyword\">else</span>{\n    <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"SoftDrink\"</span>,<span class=\"hljs-string\">\"Wine\"</span>,<span class=\"hljs-string\">\"Beer\"</span>, <span class=\"hljs-string\">\"Booze\"</span>\n}\n</code></pre>\n<p>While this code works and achieves our goal, it can quickly become difficult to read and maintain as the number of conditions increases. Fortunately, the switch statement can simplify our code and make it easier to read:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$Age</span> = <span class=\"hljs-number\">16</span>\n<span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-variable\">$Null</span>\n\n<span class=\"hljs-keyword\">switch</span> (<span class=\"hljs-variable\">$Age</span>) {\n    { <span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">16</span> } { <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"Soft Drink\"</span>; <span class=\"hljs-keyword\">break</span> }\n    { <span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">18</span> } { <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"SoftDrink\"</span>,<span class=\"hljs-string\">\"Wine\"</span>,<span class=\"hljs-string\">\"Beer\"</span>; <span class=\"hljs-keyword\">break</span> }\n    default { <span class=\"hljs-variable\">$Drink</span> = <span class=\"hljs-string\">\"SoftDrink\"</span>,<span class=\"hljs-string\">\"Wine\"</span>,<span class=\"hljs-string\">\"Beer\"</span>, <span class=\"hljs-string\">\"Booze\"</span> }\n}\n</code></pre>\n<p>This code is more readable, structured, and aesthetically pleasing. Additionally, the switch statement allows us to use regular expressions to match patterns, as shown in the following example:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$logFile</span> = <span class=\"hljs-string\">\"C:\\Logs\\access.log\"</span>\n<span class=\"hljs-variable\">$ipAddresses</span> = <span class=\"hljs-selector-tag\">@</span>()\n<span class=\"hljs-variable\">$urls</span> = <span class=\"hljs-selector-tag\">@</span>()\n<span class=\"hljs-variable\">$emailAddresses</span> = <span class=\"hljs-selector-tag\">@</span>()\n\n<span class=\"hljs-keyword\">switch</span> <span class=\"hljs-operator\">-regex</span> (<span class=\"hljs-built_in\">Get-Content</span> <span class=\"hljs-variable\">$logFile</span>) {\n    <span class=\"hljs-string\">\"\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b\"</span> { <span class=\"hljs-variable\">$ipAddresses</span> += <span class=\"hljs-variable\">$matches</span>[<span class=\"hljs-number\">0</span>] }\n    <span class=\"hljs-string\">\"http(s)?://[^\\s]*\"</span>                     { <span class=\"hljs-variable\">$urls</span> += <span class=\"hljs-variable\">$matches</span>[<span class=\"hljs-number\">0</span>] }\n    <span class=\"hljs-string\">\"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b\"</span> { <span class=\"hljs-variable\">$emailAddresses</span> += <span class=\"hljs-variable\">$matches</span>[<span class=\"hljs-number\">0</span>] }\n    default                                 { <span class=\"hljs-keyword\">continue</span> }\n}\n</code></pre>\n<p>In this example, we use the -regex parameter to match IP addresses, URLs, and email addresses in a log file and store them in separate arrays. The switch statement makes it easy to execute different code for each pattern.</p>\n<p>Finally, we can use wildcards as conditions in a switch statement. The following example demonstrates how to use wildcards to check for different file versions:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$fileName</span> = <span class=\"hljs-string\">\"example_file_v1.2.csv\"</span>\n\n<span class=\"hljs-keyword\">switch</span> <span class=\"hljs-operator\">-wildcard</span> (<span class=\"hljs-variable\">$fileName</span>) {\n    <span class=\"hljs-string\">\"*_v1.*\"</span> { <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"This is version 1 of the file.\"</span> }\n    <span class=\"hljs-string\">\"*_v2.*\"</span> { <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"This is version 2 of the file.\"</span> }\n    <span class=\"hljs-string\">\"*_v3.*\"</span> { <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"This is version 3 of the file.\"</span> }\n    default  { <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"This is an unknown version of the file.\"</span> }\n}\n</code></pre>\n<p>In this example, we use the -wildcard parameter to check if a file name contains a specific keyword. The switch statement makes it easy to match patterns against a string and execute different code based on the matching pattern.</p>\n<p>By using switch statements in PowerShell, you can simplify your code, improve its readability, and take advantage of its powerful features, such as regular expressions and wildcards.</p>\n<p>Thats all for now.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: Switching",
            "link": "https://devdojo.com/hcritter/powershell-technique-switching",
            "published": "2023-03-30T21:47:38.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10772",
            "tags": [
                "powershell",
                "update-typedata",
                "objects"
            ],
            "description": "<h3 id=\"enhancing-powershell-objects-with-update-typedata\">Enhancing PowerShell objects with Update-TypeData</h3>\n<h4 id=\"sometimes-the-objects-that-powershell-cmdlets-return-don-t-have-all-the-properties-and-methods-that-you-need\">Sometimes the objects that PowerShell cmdlets return don't have all the properties and methods that you need.</h4>\n<p>Fortunately, PowerShell provides a way to extend these objects using a feature called extended type data (ETD). ETD lets you add, remove, or modify properties and methods of a type, such as a .NET class or a PowerShell object.</p>\n<p>One way to add new properties to PowerShell objects is by using the Update-TypeData cmdlet. Here's an example that shows how to add a new property to every System.IO.DirectoryInfo object returned by the Get-ChildItem cmdlet:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$agedFiveDaysScript</span> = {\n    <span class=\"hljs-keyword\">if</span> ((<span class=\"hljs-built_in\">Get-ChildItem</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-keyword\">$this</span>.FullName).CreationTime <span class=\"hljs-operator\">-lt</span> (<span class=\"hljs-built_in\">Get-Date</span>).AddDays(<span class=\"hljs-literal\">-5</span>)) {\n        <span class=\"hljs-variable\">$true</span>\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-variable\">$false</span>\n    }\n}\n\n<span class=\"hljs-variable\">$etd</span> = <span class=\"hljs-selector-tag\">@</span>{\n    TypeName = <span class=\"hljs-string\">'System.IO.DirectoryInfo'</span>\n    MemberType = <span class=\"hljs-string\">'ScriptProperty'</span>\n    MemberName = <span class=\"hljs-string\">'AgedFiveDays'</span>\n    Value = <span class=\"hljs-variable\">$agedFiveDaysScript</span>\n}\n\n<span class=\"hljs-built_in\">Update-TypeData</span> @etd\n\n<span class=\"hljs-built_in\">Get-ChildItem</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-string\">'C:\\Temp'</span> <span class=\"hljs-literal\">-Directory</span> | <span class=\"hljs-built_in\">Select-Object</span> FullName, AgedFiveDays\n</code></pre>\n<p>In this example, a new script property called AgedFiveDays is added to the System.IO.DirectoryInfo type using ETD. The AgedFiveDays property returns $true if the directory contains any items that were created more than 5 days ago, or $false if all items were created less than 5 days ago. This could be useful for finding old directories in a file share for cleanup, for example.</p>\n<p>Note that the assignment of the ETD definition only exists in the current PowerShell session and will affect every object of the defined type created afterwards. This means that it could cause compatibility issues with other cmdlets or functions that return objects of the same type.</p>\n<p>Alternatively, you can pipe a cmdlet directly to the Update-TypeData command, without using a variable. However, be aware that the returned object could contain other types in addition to the expected one, like Get-ChildItem.</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">Get-Process</span> | <span class=\"hljs-built_in\">Update-TypeData</span> <span class=\"hljs-literal\">-TypeName</span> System.Diagnostics.Process <span class=\"hljs-literal\">-MemberType</span> NoteProperty <span class=\"hljs-literal\">-MemberName</span> MyCustomProperty <span class=\"hljs-literal\">-Value</span> <span class=\"hljs-string\">'Hello, world!'</span>\n\n<span class=\"hljs-built_in\">Get-Process</span> | <span class=\"hljs-built_in\">Select-Object</span> <span class=\"hljs-literal\">-First</span> <span class=\"hljs-number\">1</span> | <span class=\"hljs-built_in\">ForEach-Object</span> {\n    <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"Process ID: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Id)\"</span>\n    <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"Process name: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.ProcessName)\"</span>\n    <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"My custom property value: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.MyCustomProperty)\"</span>\n}\n</code></pre>\n<p>In this example, a new note property called MyCustomProperty is added to the System.Diagnostics.Process type. The MyCustomProperty property is not defined by default, so we add it using ETD with a simple string value. Then, we use Select-Object and ForEach-Object to show the value of the new property for the first process returned by Get-Process cmdlet.</p>\n<p>ETD can be a powerful tool for modifying and enhancing objects in PowerShell, but use it with caution to avoid compatibility issues.</p>\n<p>Thats all for now.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: Update-TypeData",
            "link": "https://devdojo.com/hcritter/powershell-technique-update-typedata",
            "published": "2023-03-28T13:35:51.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10765",
            "tags": [
                "powershell",
                "technique",
                "trap",
                "trapping"
            ],
            "description": "<h3 id=\"enhance-your-powershell-scripting-with-trapping\">Enhance Your PowerShell Scripting with Trapping</h3>\n<h4 id=\"this-blog-post-explains-how-to-use-the-trap-statement-in-powershell-to-improve-error-handling-reduce-code-size-and-make-scripts-more-organized-and-readable\">This blog post explains how to use the trap statement in PowerShell to improve error handling, reduce code size, and make scripts more organized and readable.</h4>\n<p>PowerShell's $trap statement is one of the most underutilized features, in my opinion. It can reduce code size, increase readability, and improve organization in your scripts. In this post, I will demonstrate how to use trapping to respond to errors in a uniform manner and handle different error types.</p>\n<p>Let's start with a simple example:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-keyword\">trap</span> {\n    <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">\"An error occurred, Error-Message: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message)\"</span>\n    <span class=\"hljs-built_in\">Write-EventLog</span> <span class=\"hljs-literal\">-LogName</span> Application <span class=\"hljs-literal\">-Source</span> MyScript <span class=\"hljs-literal\">-EventId</span> <span class=\"hljs-number\">1001</span> <span class=\"hljs-literal\">-EntryType</span> Error <span class=\"hljs-literal\">-Message</span> <span class=\"hljs-string\">\"An error occurred, Error-Message: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message)\"</span>\n    <span class=\"hljs-keyword\">Break</span>\n}\n</code></pre>\n<p>In this example, every time an error occurs, we write an error message to the user and generate an 'Eventlog' entry with our error message. This makes error handling more consistent across your script.</p>\n<p>But what if we want to respond differently to specific exception types? We can define them in the trap statement as well:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-keyword\">trap</span> [<span class=\"hljs-type\">System.IO.FileNotFoundException</span>] {\n    <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">\"The specified file or folder could not be found: <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Exception.Message)\"</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1002</span>\n}\n</code></pre>\n<p>In this example, we respond specifically to the System.IO.FileNotFoundException exception type, which is commonly encountered when working with files and folders. We return a unique exit code, 1002, which can be used by monitoring systems or other scripts.</p>\n<p>We can define traps for other exception types as well as a 'generic' trap for any exception that does not have a specific type. By using this technique, we do not need to treat every single exception in a catch statement of a try-catch-block, which can simplify our code and make it more readable.</p>\n<p>In summary, using trapping in your PowerShell scripts can greatly improve error handling, reduce code size, and make your scripts more organized and readable.</p>\n<p>Thats all for now.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: Trapping",
            "link": "https://devdojo.com/hcritter/powershell-technique-trapping",
            "published": "2023-03-27T08:00:08.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10763",
            "tags": [
                "powershell",
                "$psdefaultparametervalues",
                "default values",
                "technique"
            ],
            "description": "<h3 id=\"enhance-your-powershell-scripting-with-default-parameter-values\">Enhance Your PowerShell Scripting with Default Parameter Values</h3>\n<h4 id=\"in-this-post-we-ll-take-a-closer-look-at-the-benefits-of-using-default-parameter-values-in-powershell-as-we-previously-explored-in-our-discussion-of-splatting-setting-default-values-for-parameters-in-your-commandlets-or-functions-can-make-your-scripts-more-efficient-and-easier-to-maintain\">In this post, we'll take a closer look at the benefits of using default parameter values in PowerShell. As we previously explored in our discussion of splatting, setting default values for parameters in your commandlets or functions can make your scripts more efficient and easier to maintain.</h4>\n<p>To set default parameter values in PowerShell, you can use the $PSDefaultParameterValues preference variable. This allows you to define default values for parameters without having to specify them in the function call. For example, let's say we want to set default headers for an Invoke-RestMethod command. We can define a $headers object and then set the default headers for Invoke-RestMethod like this:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$headers</span> = <span class=\"hljs-selector-tag\">@</span>{\n        <span class=\"hljs-string\">\"Authorization\"</span> = <span class=\"hljs-string\">\"Bearer <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$Token</span>.access_token)\"</span>\n        <span class=\"hljs-string\">\"Content-type\"</span>  = <span class=\"hljs-string\">\"application/json\"</span>\n}\n<span class=\"hljs-variable\">$PSDefaultParameterValues</span> = <span class=\"hljs-selector-tag\">@</span>{\n    <span class=\"hljs-string\">\"Invoke-RestMethod:Headers\"</span> = <span class=\"hljs-variable\">$Headers</span>\n}\n</code></pre>\n<p>Now, every time we use Invoke-RestMethod in our session, the headers parameter will be automatically filled with the $headers object we defined above.</p>\n<p>One of the biggest advantages of using default parameter values over splatting is that you can easily override default values without changing them permanently. In a splat, you must change the values permanently, but with default parameter values, you can easily overwrite them as needed. For instance, you might want to switch out the $headers object for a different set of headers in a particular command call.</p>\n<p>It's also worth noting that you can define default parameter values for multiple functions or commandlets in the same hashtable, as well as use wildcards for the property name, which is always a combination of the function or commandlet name and the parameter name. For example:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$PSDefaultParameterValues</span> = <span class=\"hljs-selector-tag\">@</span>{\n    <span class=\"hljs-string\">\"Invoke-*:Headers\"</span> = <span class=\"hljs-variable\">$Headers</span>\n}\n</code></pre>\n<p>This sets the default Headers value for all cmdlets with a name that starts with \"Invoke\".</p>\n<p>While default parameter values can simplify your code, it's important to be cautious when using wildcards in the $PSDefaultParameterValues hashtable. It can be tricky to predict how wildcard matches will affect other cmdlets or functions.</p>\n<p>Another thing to keep in mind is that when working on larger projects with multiple collaborators, default parameter values defined by one person may not be well-documented or understood by others. This can lead to confusion and bugs down the line.</p>\n<p>In summary, using default parameter values can make your PowerShell scripting more efficient and streamlined. Just be mindful of the potential risks and communicate clearly with your team when using this technique.</p>\n<p>Thats all for now.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: $PSDefaultParameterValues",
            "link": "https://devdojo.com/hcritter/powershell-technique-psdefaultparametervalues",
            "published": "2023-03-26T21:42:16.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/soft-skills-part-1",
            "tags": [
                "powershell",
                "soft skills",
                "career",
                "communication"
            ],
            "description": "On the Road to DevOps, Don't Forget the Soft Skills",
            "title": "Soft Skills - Part 1 - Communication",
            "link": "https://thedavecarroll.com/powershell/soft-skills-part-1/",
            "published": "2023-03-25T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10754",
            "tags": [
                "powershell",
                "splatting"
            ],
            "description": "<h3 id=\"how-splatting-in-powershell-can-improve-your-code-s-aesthetics-and-reduce-volume\">How Splatting in PowerShell Can Improve Your Code's Aesthetics and Reduce Volume</h3>\n<h4 id=\"have-you-ever-found-yourself-struggling-with-long-unwieldy-powershell-commands-you-re-not-alone-backticking-can-be-a-tempting-solution-but-it-can-also-make-your-code-harder-to-read-and-maintain\">Have you ever found yourself struggling with long, unwieldy PowerShell commands? You're not alone. Backticking can be a tempting solution, but it can also make your code harder to read and maintain.</h4>\n<p>Splatting is a technique that uses a hash table to pass a set of parameters to a command. Instead of passing each parameter as a separate argument, you can pass a hash table with the parameter names and values, and then use the splatting operator (@) to expand the hash table as arguments to the command. Here are some benefits of splatting in PowerShell:</p>\n<h5 id=\"aesthetics\">Aesthetics</h5>\n<p>Splatting can make your code more aesthetically pleasing by separating the parameter values from the command. Compare the following long command:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">New-ADUser</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">\"Clark.Kent\"</span> <span class=\"hljs-literal\">-Accountpassword</span> (<span class=\"hljs-built_in\">Read-Host</span> <span class=\"hljs-literal\">-AsSecureString</span> <span class=\"hljs-string\">\"I4mSuP3rMan!\"</span>) <span class=\"hljs-literal\">-Enabled</span> <span class=\"hljs-variable\">$true</span> <span class=\"hljs-literal\">-EmailAddress</span> <span class=\"hljs-string\">\"Clark.Kent@NotSuperman.com\"</span> <span class=\"hljs-literal\">-ChangePasswordAtLogon</span> <span class=\"hljs-variable\">$True</span> <span class=\"hljs-literal\">-EmployeeID</span> <span class=\"hljs-string\">\"1337\"</span> <span class=\"hljs-literal\">-Department</span> <span class=\"hljs-string\">\"Journalist\"</span> <span class=\"hljs-literal\">-DisplayName</span> <span class=\"hljs-string\">\"Clark Kent\"</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">\"Clark\"</span> <span class=\"hljs-literal\">-SurName</span> <span class=\"hljs-string\">\"Kent\"</span> <span class=\"hljs-literal\">-City</span> <span class=\"hljs-string\">\"Metropolis\"</span>\n</code></pre>\n<p>To the same command written with backticks:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">New-ADUser</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">\"Clark.Kent\"</span> <span class=\"hljs-literal\">-Accountpassword</span> (<span class=\"hljs-built_in\">Read-Host</span> <span class=\"hljs-literal\">-AsSecureString</span> <span class=\"hljs-string\">\"I4mSuP3rMan!\"</span>)`\n<span class=\"hljs-literal\">-Enabled</span> <span class=\"hljs-variable\">$true</span> <span class=\"hljs-literal\">-EmailAddress</span> <span class=\"hljs-string\">\"Clark.Kent@NotSuperman.com\"</span> <span class=\"hljs-literal\">-ChangePasswordAtLogon</span> <span class=\"hljs-variable\">$True</span>`\n<span class=\"hljs-literal\">-EmployeeID</span> <span class=\"hljs-string\">\"1337\"</span> <span class=\"hljs-literal\">-Department</span> <span class=\"hljs-string\">\"Journalism\"</span> <span class=\"hljs-literal\">-DisplayName</span> <span class=\"hljs-string\">\"Clark Kent\"</span>`\n<span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">\"Clark\"</span> <span class=\"hljs-literal\">-SurName</span> <span class=\"hljs-string\">\"Kent\"</span> <span class=\"hljs-literal\">-City</span> <span class=\"hljs-string\">\"Metropolis\"</span>\n</code></pre>\n<p>The backticks make the code harder to read and can cause errors if they are not used correctly. On the other hand, splatting allows you to define your parameters in a hash table, which can be modified or reused as needed, and can make your code more flexible and modular.</p>\n<h5 id=\"code-volume\">Code Volume</h5>\n<p>Splatting can also reduce the volume of your code. In the above example, the command with backticks is shorter than the long command, but it's still not very readable. However, the same command with splatting is even shorter and easier to read:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$ParamsNewADUser</span> = <span class=\"hljs-selector-tag\">@</span>{\n    Name                    = <span class=\"hljs-string\">\"Clark.Kent\"</span>\n    AccountPassword         = <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Read-Host</span> <span class=\"hljs-literal\">-AsSecureString</span> <span class=\"hljs-string\">\"I4mSuP3rMan!\"</span>)\n    Enabled                 = <span class=\"hljs-variable\">$True</span>\n    EmailAddress            = <span class=\"hljs-string\">\"Clark.Kent@NotSuperman.com\"</span>\n    ChangePasswordAtLogon   = <span class=\"hljs-variable\">$True</span>\n    EmployeeID              = <span class=\"hljs-string\">\"1337\"</span> \n    Department              = <span class=\"hljs-string\">\"Journalism\"</span>\n    Displayname             = <span class=\"hljs-string\">\"Clark Kent\"</span>\n    Name                    = <span class=\"hljs-string\">\"Clark\"</span>\n    SurName                 = <span class=\"hljs-string\">\"Kent\"</span>\n    City                    = <span class=\"hljs-string\">\"Metropolis\"</span>\n}\n<span class=\"hljs-built_in\">New-ADUser</span> @ParamsNewADUser\n</code></pre>\n<h5 id=\"reusability-and-testing\">Reusability and Testing</h5>\n<p>Another benefit of splatting is that you can reuse the hash table ($ParamsNewADUser in the above example) and modify its values as needed.</p>\n<pre><code class=\"hljs powershell\">    <span class=\"hljs-variable\">$ParamsNewADUser</span>.Name = <span class=\"hljs-string\">\"Kent.Clark\"</span>\n</code></pre>\n<p>This makes your code more maintainable and can help you avoid repeating yourself. Splatting can also help with testing because it allows you to define and modify your parameters in a hash table, which can be easily tested and verified in isolation from the command.</p>\n<p>In summary, splatting is a powerful technique in PowerShell that can make your code more readable, flexible, maintainable, and testable.</p>\n<p>Thats all for now.</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.\nBest regards,</p>\n<p>Christian.</p>",
            "title": "PowerShell-Technique: Splatting",
            "link": "https://devdojo.com/hcritter/powershell-technique-splatting",
            "published": "2023-03-24T12:32:25.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI",
            "tags": [
                "PowerShellAI, PowerShell, ChatGPT, Windows Terminal",
                "PowerShellAI, PowerShell, ChatGPT, Windows Terminal"
            ],
            "description": "How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI",
            "title": "How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI",
            "link": "https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI.html",
            "published": "2023-03-24T09:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10750",
            "tags": [
                "performance",
                "powershell",
                "linq",
                "where",
                "where-object"
            ],
            "description": "<h3 id=\"dotnet-or-not-dotnet-this-is-the-question-we-will-ask-in-this-post\">Dotnet or not Dotnet this is the question we will ask in this post</h3>\n<h4 id=\"lets-find-out-if-the-net-where-method-is-significantly-faster-than-their-equivalent-in-native-powershell\">Lets find out if the .NET .Where() method is significantly faster than their equivalent in native PowerShell</h4>\n<p>In this post, we'll compare the performance of native PowerShell methods with their .NET counterparts, specifically focusing on the .Where() method. We'll also use the [Linq.Enumerable] class to analyze a different dataset – passenger data from the Titanic – instead of the usual Active Directory user data.</p>\n<p>Before we dive in, I want to give a shoutout to the <a href=\"https://twitter.com/hhpsug\">Hamburg PowerShell User Group</a>, where I participated in my first PowerShell Hackathon in 2022 for bringing up the idea. We analyzed public transportation data from Hamburg, which was a fun challenge. If you're interested in using the Titanic data for your own analysis, check out <a href=\"https://github.com/awesomedata/awesome-public-datasets/blob/master/Datasets/titanic.csv.zip\">awesomdata Github</a></p>\n<h4 id=\"the-code\">The Code</h4>\n<p>We'll be using three different methods to compare performance:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#linq method</span>\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n<span class=\"hljs-variable\">$delegate</span> = [<span class=\"hljs-type\">Func</span>[<span class=\"hljs-type\">object</span>,<span class=\"hljs-built_in\">bool</span>]] { <span class=\"hljs-variable\">$args</span>[<span class=\"hljs-number\">0</span>].Sex <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"male\"</span> }\n<span class=\"hljs-variable\">$Result</span> = [<span class=\"hljs-type\">Linq.Enumerable</span>]::Where(<span class=\"hljs-variable\">$Import</span>, <span class=\"hljs-variable\">$delegate</span>)\n<span class=\"hljs-variable\">$Result</span> = [<span class=\"hljs-type\">Linq.Enumerable</span>]::ToList(<span class=\"hljs-variable\">$Result</span>)\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"Linq Where-Method\"</span>\n    ResultCounter = <span class=\"hljs-variable\">$Result</span>.Count\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n\n<span class=\"hljs-comment\">#Piped Where Method</span>\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n<span class=\"hljs-variable\">$Result</span> = <span class=\"hljs-variable\">$Import</span> | <span class=\"hljs-built_in\">Where-Object</span>{<span class=\"hljs-variable\">$_</span>.Sex <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"male\"</span>}\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"Piped Where-Method\"</span>\n    ResultCounter = <span class=\"hljs-variable\">$Result</span>.Count\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n\n<span class=\"hljs-comment\">#.Where() Method</span>\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n<span class=\"hljs-variable\">$Result</span> = <span class=\"hljs-variable\">$Import</span>.Where({<span class=\"hljs-variable\">$_</span>.Sex <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-string\">\"male\"</span>})\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\".where()-Method\"</span>\n    ResultCounter = <span class=\"hljs-variable\">$Result</span>.Count\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n</code></pre>\n<h4 id=\"a-scary-realization-inconsistent-execution-times\">A Scary Realization: Inconsistent Execution Times</h4>\n<p>As I was checking the results and testing the reliability of my code, I executed my code segments multiple times. I noticed that there were times when there was another winner when it comes to execution time, and the results were somewhat different each time I ran the code. I was wondering how this could happen, so I decided to switch from PowerShell Version 7.x to 5.1, but the results were nearly the same.</p>\n<p>To investigate this further, I performed the same action 101 times for each version of PowerShell on my machine and took the average of each 101 runs, and put them into a table.</p>\n<h4 id=\"the-results-comparing-powershell-versions-7-x-and-5-1\">The Results: Comparing PowerShell Versions 7.X and 5.1</h4>\n<p>Here are the results of my tests:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">AverageOf101ms</th>\n<th align=\"left\">Method</th>\n<th align=\"left\">PSVersion</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">3,0495049504950495</td>\n<td align=\"left\">Linq Where-Method</td>\n<td align=\"left\">7</td>\n</tr>\n<tr>\n<td align=\"left\">5,851485148514851</td>\n<td align=\"left\">Piped Where-Method</td>\n<td align=\"left\">7</td>\n</tr>\n<tr>\n<td align=\"left\">1,3465346534653466</td>\n<td align=\"left\">.where()-Method</td>\n<td align=\"left\">7</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"powershell-version-5-1\">PowerShell Version 5.1</h5>\n<table>\n<thead>\n<tr>\n<th align=\"left\">AverageOf101ms</th>\n<th align=\"left\">Method</th>\n<th align=\"left\">PSVersion</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">6,88118811881188</td>\n<td align=\"left\">Linq Where-Method</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">11,2871287128713</td>\n<td align=\"left\">Piped Where-Method</td>\n<td align=\"left\">5</td>\n</tr>\n<tr>\n<td align=\"left\">3,88118811881188</td>\n<td align=\"left\">.where()-Method</td>\n<td align=\"left\">5</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"the-conclusion-optimal-methods-and-versions\">The Conclusion: Optimal Methods and Versions</h4>\n<p>Based on my tests, all methods are optimized for PowerShell version 7.X, but in the test cases, the .where() method was the winner. This was also predicted by <a href=\"https://twitter.com/guyrleech\">@guyrleech</a> on Twitter, which confirms the reliability of the test results. It is also noteworthy that the piped method was slower than the rest, especially in PowerShell 5.1. In terms of write- and readability, the Linq way is somewhat challenging.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>Best regards,</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>\n<p>Christian.</p>",
            "title": ".NET or not .NET - Where",
            "link": "https://devdojo.com/hcritter/net-or-not-net-where",
            "published": "2023-03-23T15:48:20.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10744",
            "tags": [
                "performance",
                "powershell",
                "strings",
                "stringbuilder",
                "concat"
            ],
            "description": "<h3 id=\"string-concatenation-performance-boosting-is-this-too-much-ado-about-nothing\">String concatenation performance boosting - is this too much ado about nothing?</h3>\n<h4 id=\"concatenating-strings-is-a-common-operation-in-programming-but-did-you-know-that-there-are-different-methods-you-can-use-to-do-it-in-this-post-we-will-explore-four-popular-methods-for-string-concatenation-in-powershell-and-compare-their-performance\">Concatenating strings is a common operation in programming, but did you know that there are different methods you can use to do it? In this post, we will explore four popular methods for string concatenation in PowerShell and compare their performance.</h4>\n<hr>\n<h5 id=\"the-methods\">The Methods</h5>\n<p>The four methods we will focus on are:</p>\n<ul>\n<li>+= operator</li>\n<li>-join operator</li>\n<li>[string]::Concat() method</li>\n<li>StringBuilder class with the .append() method</li>\n</ul>\n<p>To test these methods, we will generate a 9-character long string by randomly selecting characters between ASCII codes 65 and 90, and then concatenate this string 10,000 times. We will time each method and compare their performance.\nHere's the code we'll use to generate the strings:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).foreach({\n        [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>)\n}) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\"\"</span>)\n</code></pre>\n<hr>\n<h5 id=\"the-test\">The Test</h5>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#classic += method</span>\n<span class=\"hljs-variable\">$Superlongstring</span> = [<span class=\"hljs-built_in\">string</span>]::empty\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n(<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">10000</span>).foreach({\n    <span class=\"hljs-variable\">$Superlongstring</span> +=<span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).foreach({\n        [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>)\n    }) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\"\"</span>)\n})\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"+= method\"</span>\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n\n<span class=\"hljs-comment\">#join string method</span>\n<span class=\"hljs-variable\">$Superlongstring</span> = [<span class=\"hljs-built_in\">string</span>]::empty\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n(<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">10000</span>).foreach({\n    <span class=\"hljs-variable\">$Superlongstring</span> = <span class=\"hljs-operator\">-join</span>(<span class=\"hljs-variable\">$Superlongstring</span>,<span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).foreach({\n        [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>)\n    })))\n})\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"-join method\"</span>\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n\n<span class=\"hljs-comment\">#string concat method</span>\n<span class=\"hljs-variable\">$Superlongstring</span> = [<span class=\"hljs-built_in\">string</span>]::empty\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n(<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">10000</span>).foreach({\n    <span class=\"hljs-variable\">$Superlongstring</span> = [<span class=\"hljs-built_in\">string</span>]::Concat(<span class=\"hljs-variable\">$Superlongstring</span>,<span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).foreach({\n        [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>)\n    }) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\"\"</span>))\n})\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"string concat method\"</span>\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n\n<span class=\"hljs-comment\">#stringbuilder class method</span>\n<span class=\"hljs-variable\">$Superlongstring</span> =  [<span class=\"hljs-type\">System.Text.StringBuilder</span>]::new()\n<span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n<span class=\"hljs-variable\">$StopWatch</span>.Start()\n(<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">10000</span>).foreach({\n    <span class=\"hljs-variable\">$Superlongstring</span>.append(<span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).foreach({\n        [<span class=\"hljs-built_in\">char</span>]<span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>)\n    }) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\"\"</span>)) | <span class=\"hljs-built_in\">Out-Null</span>\n})\n<span class=\"hljs-variable\">$Superlongstring</span> = <span class=\"hljs-variable\">$Superlongstring</span>.tostring()\n<span class=\"hljs-variable\">$StopWatch</span>.Stop()\n<span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n    Method = <span class=\"hljs-string\">\"stringbuilder class method\"</span>\n    TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n    TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n})\n</code></pre>\n<hr>\n<h5 id=\"the-results\">The Results</h5>\n<p>After running the test, we get the following results:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Method</th>\n<th align=\"left\">TimeElapsed</th>\n<th align=\"left\">TimeElapsedMS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">+= method</td>\n<td align=\"left\">00:00:02.9537727</td>\n<td align=\"left\">2953</td>\n</tr>\n<tr>\n<td align=\"left\">-join method</td>\n<td align=\"left\">00:00:04.5625753</td>\n<td align=\"left\">4562</td>\n</tr>\n<tr>\n<td align=\"left\">string concat method</td>\n<td align=\"left\">00:00:05.0997880</td>\n<td align=\"left\">5099</td>\n</tr>\n<tr>\n<td align=\"left\">stringbuilder class method</td>\n<td align=\"left\">00:00:02.4714697</td>\n<td align=\"left\">2471</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h5 id=\"the-conclusion\">The Conclusion</h5>\n<p>The second fastest method was the += operator, but the fastest was the StringBuilder class with the .append() method. It's worth noting that with the StringBuilder method, we needed to convert the object back to a string using the .ToString() method, but even with this additional step, it was still faster than the other methods.</p>\n<p>If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at <a href=\"https://twitter.com/blackboxcoder/\">Christian Ritter</a>.</p>\n<p>All tests were conducted using PowerShell 7.x.</p>\n<p>Best regards,</p>\n<p>Christian.</p>\n<div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>",
            "title": "String concatenation performance boosting",
            "link": "https://devdojo.com/hcritter/string-concatenation-performance-boosting",
            "published": "2023-03-22T21:09:25.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10740",
            "tags": [
                "foreach",
                "dotnet",
                "powershell",
                "loops",
                "net"
            ],
            "description": "<h3 id=\"net-or-not-net-this-is-the-question-we-will-ask-in-this-post\">.NET or not .NET this is the question, we will ask in this post</h3>\n<h4 id=\"lets-find-out-if-the-net-foreach-method-is-significantly-faster-than-their-equivalent-in-native-powershell\">Lets find out if the .NET .ForEach() method is significantly faster than their equivalent in native PowerShell</h4>\n<p>The most of us are interested in making the code faster, with that in mind I want to have a look about foreach loops and and their .NET equivalent. I also want to see if the piped ForeachEach-Object{} may be is a game changer.\nLets create some dummy-data first for looping, 3 simple files (100 lines, 10000 lines and 100000 lines) should be ok:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#create random files</span>\n<span class=\"hljs-variable\">$Sizes</span> = <span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">10000</span>,<span class=\"hljs-number\">100000</span>\n<span class=\"hljs-variable\">$Sizes</span>.foreach({\n    <span class=\"hljs-variable\">$Size</span> = <span class=\"hljs-variable\">$_</span>\n    (<span class=\"hljs-number\">0</span>..<span class=\"hljs-variable\">$Size</span>).ForEach({\n        <span class=\"hljs-variable\">$</span>((<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">8</span>).ForEach({\n            [<span class=\"hljs-built_in\">char</span>] <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Random</span> <span class=\"hljs-literal\">-Minimum</span> <span class=\"hljs-number\">65</span> <span class=\"hljs-literal\">-Maximum</span> <span class=\"hljs-number\">90</span>) \n        })) <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\"\"</span>\n    }) | <span class=\"hljs-built_in\">Out-File</span> <span class=\"hljs-literal\">-FilePath</span> <span class=\"hljs-string\">\"C:\\Temp\\Perftest\\<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$Size</span>)lines.txt\"</span> <span class=\"hljs-literal\">-Encoding</span> utf8\n})\n</code></pre>\n<p>Now we will create our performance table:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$TestList</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-TypeName</span> <span class=\"hljs-string\">\"System.Collections.Generic.List[pscustomobject]\"</span>\n<span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$File</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">Get-Childitem</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-string\">\"C:\\Temp\\Perftest\"</span>){\n    <span class=\"hljs-variable\">$FileContent</span> = <span class=\"hljs-built_in\">Get-Content</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-variable\">$File</span>.FullName <span class=\"hljs-literal\">-Encoding</span> utf8\n\n    <span class=\"hljs-comment\">#native foreach loop</span>\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$TempCollectionList</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-TypeName</span> <span class=\"hljs-string\">\"System.Collections.Generic.List[string]\"</span>\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$line</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$FileContent</span>){\n        <span class=\"hljs-variable\">$TempCollectionList</span>.Add(<span class=\"hljs-variable\">$Line</span>)\n    }\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        Method = <span class=\"hljs-string\">\"Native foreach loop\"</span>\n        Size = <span class=\"hljs-variable\">$File</span>.BaseName\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n    \n    <span class=\"hljs-comment\">#.NET foreach Loop</span>\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$TempCollectionList</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-TypeName</span> <span class=\"hljs-string\">\"System.Collections.Generic.List[string]\"</span>\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-variable\">$FileContent</span>.Foreach({\n        <span class=\"hljs-variable\">$TempCollectionList</span>.Add(<span class=\"hljs-variable\">$Line</span>)\n    })\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        Method = <span class=\"hljs-string\">\".NET foreach loop\"</span>\n        Size = <span class=\"hljs-variable\">$File</span>.BaseName\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n    \n    <span class=\"hljs-comment\">#Piped foreach Loop</span>\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$TempCollectionList</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-TypeName</span> <span class=\"hljs-string\">\"System.Collections.Generic.List[string]\"</span>\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-variable\">$FileContent</span> | <span class=\"hljs-built_in\">ForEach-Object</span>{\n        <span class=\"hljs-variable\">$TempCollectionList</span>.Add(<span class=\"hljs-variable\">$_</span>)\n    }\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$TestList</span>.add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        Method = <span class=\"hljs-string\">\"Piped foreach loop\"</span>\n        Size = <span class=\"hljs-variable\">$File</span>.BaseName\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n}\n</code></pre>\n<p>Finally we can analyze our performance table:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Size</th>\n<th>TimeElapsed</th>\n<th>TimeElapsedMS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Native foreach loop</td>\n<td>100000lines</td>\n<td>00:00:00.1438553</td>\n<td>143</td>\n</tr>\n<tr>\n<td>.NET foreach loop</td>\n<td>100000lines</td>\n<td>00:00:00.2146542</td>\n<td>214</td>\n</tr>\n<tr>\n<td>Piped foreach loop</td>\n<td>100000lines</td>\n<td>00:00:00.4116282</td>\n<td>411</td>\n</tr>\n<tr>\n<td>Native foreach loop</td>\n<td>10000lines</td>\n<td>00:00:00.0200892</td>\n<td>20</td>\n</tr>\n<tr>\n<td>.NET foreach loop</td>\n<td>10000lines</td>\n<td>00:00:00.0388348</td>\n<td>38</td>\n</tr>\n<tr>\n<td>Piped foreach loop</td>\n<td>10000lines</td>\n<td>00:00:00.0354476</td>\n<td>35</td>\n</tr>\n<tr>\n<td>Native foreach loop</td>\n<td>100lines</td>\n<td>00:00:00.0000751</td>\n<td>0</td>\n</tr>\n<tr>\n<td>.NET foreach loop</td>\n<td>100lines</td>\n<td>00:00:00.0001173</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Piped foreach loop</td>\n<td>100lines</td>\n<td>00:00:00.0002555</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<p>So we can say that in this test scenario the native foreach loop beats the .NET Method right away. Whats interesting here is, that the piped method is slightly faster in medium sized files in comparison to the .NET method.\nAll tests have been made with PowerShell Version 7.x. If you like you can do this as well with an older version or with more complicated objects to iterate through. Let me know.</p>\n<p>Thats all for now, best regards\nChristian</p>",
            "title": ".NET or not .NET - ForEach",
            "link": "https://devdojo.com/hcritter/net-or-not-net-foreach",
            "published": "2023-03-22T10:17:33.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/powershell-summit-2023",
            "tags": [
                "powershell",
                "powershell-summit-2023",
                "powershell-summit",
                "powershell-community",
                "learn-powershell",
                "conference"
            ],
            "description": "I'm attending my first PowerShell Summit!",
            "title": "PowerShell Summit 2023",
            "link": "https://thedavecarroll.com/powershell/powershell-summit-2023/",
            "published": "2023-03-22T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://devdojo.com/10731",
            "tags": [
                "logging",
                "powershell",
                "padding",
                "parameter"
            ],
            "description": "<h3 id=\"today-i-would-like-to-show-you-special-interest-topic-padding-and-parameters\">Today I would like to show you special interest topic: Padding and Parameters</h3>\n<h4 id=\"this-post-won-t-cover-all-off-the-aspects-of-parameters-in-powershell-or-neither-everything-you-can-do-with-the-padding-of-a-string\">This post won't cover all off the aspects of parameters in PowerShell or neither everything you can do with the padding of a string.</h4>\n<hr>\n<p>Sometime ago I created a little logging function, please don't tell: @FredWeinmann the creator of the fantastic: <a href=\"https://psframework.org/\">PSFramework</a>.</p>\n<p>By doing this I struggled with the textual output of the log to the console. My logging function hat a $Type parameter with different types of logging: Info, Success, Error, Warning..\nThe output in the console looked like this:</p>\n<pre><code class=\"hljs ruby\"><span class=\"hljs-number\">20.03</span>.<span class=\"hljs-number\">2023</span><span class=\"hljs-params\">|04:00:33|</span>Error<span class=\"hljs-params\">|Test message [Error]\n20.03.2023|</span><span class=\"hljs-number\">04</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">00</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-params\">|Warning|</span>Test message [Warning]\n<span class=\"hljs-number\">20.03</span>.<span class=\"hljs-number\">2023</span><span class=\"hljs-params\">|04:00:33|</span>Info<span class=\"hljs-params\">|Test message [Info]\n20.03.2023|</span><span class=\"hljs-number\">04</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">00</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-params\">|Success|</span>Test message [Success]\n</code></pre>\n<p>As you can see the selected type parameter was not beautiful aligned by the dividing dash/pipe to the message, which makes reading a bit harder in my opinion. So I decided to work with padding. Padding in a string as Method can add one or multiple extra characters to the left or the right of the string, like:</p>\n<pre><code class=\"hljs php\">$Samplestrings = (<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"13\"</span>,<span class=\"hljs-string\">\"156\"</span>)\n$Samplestrings.<span class=\"hljs-keyword\">foreach</span>({\n    $_.PadLeft(<span class=\"hljs-number\">3</span>,<span class=\"hljs-string\">\"0\"</span>)\n})\n</code></pre>\n<p>The output looks like this:</p>\n<pre><code class=\"hljs \">001\n013\n156\n</code></pre>\n<p>back to the starting topic my function looked a way like this:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Write-Log</span></span> {\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">CmdletBinding</span>()]</span>\n    <span class=\"hljs-keyword\">param</span> (\n        [<span class=\"hljs-built_in\">string</span>] <span class=\"hljs-variable\">$Message</span>,\n        [<span class=\"hljs-type\">Validateset</span>(<span class=\"hljs-string\">\"Warning\"</span>,<span class=\"hljs-string\">\"Info\"</span>,<span class=\"hljs-string\">\"Error\"</span>,<span class=\"hljs-string\">\"Success\"</span>)]\n        <span class=\"hljs-variable\">$Type</span>\n    )\n    \n    <span class=\"hljs-keyword\">begin</span> {\n        \n    }\n    \n    <span class=\"hljs-keyword\">process</span> {\n        <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(Get-Date -format 'dd.MM.yyyy')|<span class=\"hljs-variable\">$</span>(Get-Date -format 'hh:mm:ss')|<span class=\"hljs-variable\">$Type</span>|<span class=\"hljs-variable\">$Message</span>\"</span>\n    }\n    \n    <span class=\"hljs-keyword\">end</span> {\n        \n    }\n}\n</code></pre>\n<p>And if we now would align the divider properly, we have to find out what is the length of the longest string in the <strong>$type</strong> parameter to add dynamically whitespaces via padding. My attempt looks like this:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Write-Log</span></span> {\n    <span class=\"hljs-function\">[<span class=\"hljs-type\">CmdletBinding</span>()]</span>\n    <span class=\"hljs-keyword\">param</span> (\n        [<span class=\"hljs-built_in\">string</span>] <span class=\"hljs-variable\">$Message</span>,\n        [<span class=\"hljs-type\">Validateset</span>(<span class=\"hljs-string\">\"Warning\"</span>,<span class=\"hljs-string\">\"Info\"</span>,<span class=\"hljs-string\">\"Error\"</span>,<span class=\"hljs-string\">\"Success\"</span>)]\n        <span class=\"hljs-variable\">$Type</span>\n    )\n    \n    <span class=\"hljs-keyword\">begin</span> {\n        <span class=\"hljs-variable\">$MaxLengthType</span> = <span class=\"hljs-number\">0</span>\n        (<span class=\"hljs-built_in\">Get-Variable</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">\"Type\"</span>).Attributes.ValidValues.foreach({\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$MaxLengthType</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-variable\">$_</span>.tostring().length){\n                <span class=\"hljs-variable\">$MaxLengthType</span> = [<span class=\"hljs-built_in\">int</span>]<span class=\"hljs-variable\">$_</span>.tostring().length\n            }\n        })\n        <span class=\"hljs-variable\">$TypeToDisplay</span> = <span class=\"hljs-variable\">$Type</span>.PadRight(<span class=\"hljs-variable\">$MaxLengthType</span>,<span class=\"hljs-string\">\" \"</span>)\n    }\n    \n    <span class=\"hljs-keyword\">process</span> {\n        <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(Get-Date -format 'dd.MM.yyyy')|<span class=\"hljs-variable\">$</span>(Get-Date -format 'hh:mm:ss')|<span class=\"hljs-variable\">$TypeToDisplay</span>|<span class=\"hljs-variable\">$Message</span>\"</span>\n    }\n    \n    <span class=\"hljs-keyword\">end</span> {\n        \n    }\n}\n</code></pre>\n<p>Our console now looks like this:</p>\n<pre><code class=\"hljs ruby\"><span class=\"hljs-number\">20.03</span>.<span class=\"hljs-number\">2023</span><span class=\"hljs-params\">|04:00:33|</span>Error  <span class=\"hljs-params\">|Test message [Error]\n20.03.2023|</span><span class=\"hljs-number\">04</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">00</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-params\">|Warning|</span>Test message [Warning]\n<span class=\"hljs-number\">20.03</span>.<span class=\"hljs-number\">2023</span><span class=\"hljs-params\">|04:00:33|</span>Info   <span class=\"hljs-params\">|Test message [Info]\n20.03.2023|</span><span class=\"hljs-number\">04</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">00</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">33</span><span class=\"hljs-params\">|Success|</span>Test message [Success]\n</code></pre>\n<p>It is a way more static and increases the readability a lot</p>\n<p>Best regards,\nChristian</p><div class=\"p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950\">\n    <div class=\"absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]\">🤩 Our Amazing Sponsors 👇</div>\n    <div class=\"max-w-5xl mx-auto\">\n        <div class=\"max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose\">\n            <a href=\"https://m.do.co/c/dc19b9819d06\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/digital-ocean.svg\" alt=\"DigitalOcean\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.</span>\n        </a>\n            <a href=\"https://laravel-news.com/?utm_source=devdojo.com\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news\" alt=\"Laravel News\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.</span>\n        </a>\n            <a href=\"https://github.com/thedevdojo/genesis\" target=\"_blank\" class=\"relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group\">\n            <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30\"></span>\n            <div class=\"flex items-center justify-between w-full mb-4 \">\n                <img src=\"https://cdn.devdojo.com/sponsors/genesis.svg\" alt=\"Genesis\" class=\"relative h-5 md:h-6\">\n                <span class=\"opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center\">\n                    <span>View Website</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-3 translate-x-0.5 h-3\"><path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" /></svg>\n                </span>\n            </div>\n            <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.</span>\n        </a>\n        <a href=\"/sponsorship\" target=\"_blank\" class=\"relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group\">\n        <span class=\"absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50\"></span>\n        <svg class=\"relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100\" viewBox=\"0 0 57 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z\" /></svg>\n        <span class=\"relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400\">Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.</span>\n    </a>\n</div>    </div>\n</div>",
            "title": "Padding and Parameters",
            "link": "https://devdojo.com/hcritter/padding-and-parameters",
            "published": "2023-03-20T15:29:26.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "https://devdojo.com/10725",
            "tags": [
                "list",
                "powershell",
                "sort-object",
                "unique",
                "dontnet-class",
                "hashset"
            ],
            "description": "<h3 id=\"today-i-would-like-to-show-you-a-performance-table-comparing-different-ways-to-sort-a-list-array-unique\">Today I would like to show you a performance table comparing different ways to sort a list/array unique.</h3>\n<h4 id=\"sometimes-it-is-necessary-to-sort-a-list-or-an-array-unique-to-get-rid-of-duplicates-this-can-be-a-time-consuming-task\">Sometimes it is necessary to sort a list or an array unique to get rid of duplicates this can be a time consuming task</h4>\n<hr>\n<p>In this post we will have a look at 3 ways to sort a list unique.</p>\n<ul>\n<li>Sort-Object -Unique</li>\n<li>Get-Unique</li>\n<li>HashSet-Class</li>\n</ul>\n<p>First we will create 3 different lists containing random strings in several sizes (small, medium, large)</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-comment\">#List elements</span>\n<span class=\"hljs-variable\">$ListOptionA</span> =<span class=\"hljs-string\">\"Blue\"</span>,<span class=\"hljs-string\">\"Red\"</span>,<span class=\"hljs-string\">\"Green\"</span>\n<span class=\"hljs-variable\">$ListOptionb</span> =<span class=\"hljs-string\">\"Dog\"</span>,<span class=\"hljs-string\">\"Horse\"</span>,<span class=\"hljs-string\">\"Cat\"</span>\n\n<span class=\"hljs-comment\">#Create a small set of strings based on list elemtents and a random number</span>\n<span class=\"hljs-variable\">$ListSmall</span> = (<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">100</span>).ForEach({\n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionA</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionA</span>.count-1))])_<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionB</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionB</span>.count-1))])_<span class=\"hljs-variable\">$</span>(Get-Random -Maximum 10 -Minimum 0)\"</span>\n})\n\n<span class=\"hljs-comment\">#Create a medium set of strings based on list elemtents and a random number</span>\n<span class=\"hljs-variable\">$ListMedium</span> = (<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">10000</span>).ForEach({\n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionA</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionA</span>.count-1))])_<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionB</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionB</span>.count-1))])_<span class=\"hljs-variable\">$</span>(Get-Random -Maximum 10 -Minimum 0)\"</span>\n})\n\n<span class=\"hljs-comment\">#Create a large set of strings based on list elemtents and a random number</span>\n<span class=\"hljs-variable\">$ListLarge</span> = (<span class=\"hljs-number\">0</span>..<span class=\"hljs-number\">1000000</span>).ForEach({\n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionA</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionA</span>.count-1))])_<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptionB</span>[<span class=\"hljs-variable\">$</span>(Get-Random -Minimum 0 -Maximum (<span class=\"hljs-variable\">$ListOptionB</span>.count-1))])_<span class=\"hljs-variable\">$</span>(Get-Random -Maximum 10 -Minimum 0)\"</span>\n})\n</code></pre>\n<hr>\n<p>Now we can start to fetch results:</p>\n<pre><code class=\"hljs powershell\"><span class=\"hljs-variable\">$Results</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-TypeName</span> System.Collections.Generic.List[<span class=\"hljs-type\">PSCustomObject</span>]\n\n<span class=\"hljs-variable\">$ListOptions</span> = <span class=\"hljs-string\">\"Small\"</span>,<span class=\"hljs-string\">\"Medium\"</span>,<span class=\"hljs-string\">\"Large\"</span>\n<span class=\"hljs-variable\">$Method</span> = <span class=\"hljs-string\">\"Sort-Object -Unique\"</span>\n<span class=\"hljs-variable\">$Index</span> = <span class=\"hljs-number\">0</span>\n(<span class=\"hljs-variable\">$ListSmall</span>,<span class=\"hljs-variable\">$ListMedium</span>,<span class=\"hljs-variable\">$ListLarge</span>).ForEach({\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-variable\">$UniqueList</span> = <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span> | <span class=\"hljs-built_in\">Sort-Object</span> <span class=\"hljs-literal\">-Unique</span>)\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$Results</span>.Add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        MethodName = <span class=\"hljs-variable\">$Method</span>\n        ListSize = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptions</span>[<span class=\"hljs-variable\">$Index</span>]) <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Count)\"</span>\n        Result = <span class=\"hljs-variable\">$UniqueList</span>.count\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n    <span class=\"hljs-variable\">$Index</span>++\n})\n<span class=\"hljs-variable\">$Method</span> = <span class=\"hljs-string\">\"get-unique\"</span>\n<span class=\"hljs-variable\">$Index</span> = <span class=\"hljs-number\">0</span>\n(<span class=\"hljs-variable\">$ListSmall</span>,<span class=\"hljs-variable\">$ListMedium</span>,<span class=\"hljs-variable\">$ListLarge</span>).ForEach({\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-variable\">$UniqueList</span> = <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span> | <span class=\"hljs-built_in\">Sort-Object</span> | <span class=\"hljs-built_in\">get-Unique</span>)\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$Results</span>.Add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        MethodName = <span class=\"hljs-variable\">$Method</span>\n        ListSize = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptions</span>[<span class=\"hljs-variable\">$Index</span>]) <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Count)\"</span>\n        Result = <span class=\"hljs-variable\">$UniqueList</span>.count\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n    <span class=\"hljs-variable\">$Index</span>++\n})\n<span class=\"hljs-variable\">$Method</span> = <span class=\"hljs-string\">\"Hashset\"</span>\n<span class=\"hljs-variable\">$Index</span> = <span class=\"hljs-number\">0</span>\n(<span class=\"hljs-variable\">$ListSmall</span>,<span class=\"hljs-variable\">$ListMedium</span>,<span class=\"hljs-variable\">$ListLarge</span>).ForEach({\n    <span class=\"hljs-variable\">$StopWatch</span> = <span class=\"hljs-built_in\">New-Object</span> System.Diagnostics.Stopwatch\n    <span class=\"hljs-variable\">$StopWatch</span>.Start()\n    <span class=\"hljs-variable\">$HashSet</span> = <span class=\"hljs-built_in\">New-Object</span> System.Collections.Generic.HashSet<span class=\"hljs-function\">[<span class=\"hljs-built_in\">string</span>]</span>\n    <span class=\"hljs-keyword\">foreach</span>(<span class=\"hljs-variable\">$Listelement</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$_</span>){\n        <span class=\"hljs-variable\">$HashSet</span>.Add(<span class=\"hljs-variable\">$Listelement</span>) | <span class=\"hljs-built_in\">Out-Null</span>\n    }\n    <span class=\"hljs-variable\">$StopWatch</span>.Stop()\n    <span class=\"hljs-variable\">$Results</span>.Add([<span class=\"hljs-type\">PSCustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n        MethodName = <span class=\"hljs-variable\">$Method</span>\n        ListSize = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$ListOptions</span>[<span class=\"hljs-variable\">$Index</span>]) <span class=\"hljs-variable\">$</span>(<span class=\"hljs-variable\">$_</span>.Count)\"</span>\n        Result = <span class=\"hljs-variable\">$HashSet</span>.count\n        TimeElapsed = <span class=\"hljs-variable\">$StopWatch</span>.Elapsed\n        TimeElapsedMS = <span class=\"hljs-variable\">$StopWatch</span>.ElapsedMilliseconds\n    })\n    <span class=\"hljs-variable\">$Index</span>++\n})\n</code></pre>\n<hr>\n<p>The result from this run looks on my machine like this:</p>\n<table>\n<thead>\n<tr>\n<th>MethodName</th>\n<th>ListSize</th>\n<th>Result</th>\n<th>TimeElapsed</th>\n<th>TimeElapsedMS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Sort-Object -Unique</td>\n<td>Small 101</td>\n<td>34</td>\n<td>00:00:00.0003934</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Sort-Object -Unique</td>\n<td>Medium 10001</td>\n<td>40</td>\n<td>00:00:00.0582319</td>\n<td>58</td>\n</tr>\n<tr>\n<td>Sort-Object -Unique</td>\n<td>Large 1000001</td>\n<td>40</td>\n<td>00:00:12.6371431</td>\n<td>12637</td>\n</tr>\n<tr>\n<td>get-unique</td>\n<td>Small 101</td>\n<td>34</td>\n<td>00:00:00.0005651</td>\n<td>0</td>\n</tr>\n<tr>\n<td>get-unique</td>\n<td>Medium 10001</td>\n<td>40</td>\n<td>00:00:00.0877467</td>\n<td>87</td>\n</tr>\n<tr>\n<td>get-unique</td>\n<td>Large 1000001</td>\n<td>40</td>\n<td>00:00:15.0103995</td>\n<td>15010</td>\n</tr>\n<tr>\n<td>Hashset</td>\n<td>Small 101</td>\n<td>34</td>\n<td>00:00:00.0050367</td>\n<td>5</td>\n</tr>\n<tr>\n<td>Hashset</td>\n<td>Medium 10001</td>\n<td>40</td>\n<td>00:00:00.0995172</td>\n<td>99</td>\n</tr>\n<tr>\n<td>Hashset</td>\n<td>Large 1000001</td>\n<td>40</td>\n<td>00:00:07.8959100</td>\n<td>7895</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>Which conclusion can we get from this table above? At first not one of them is the best solution for any situation. We should choose <strong>Sort-Object -unique</strong> for lists from 0 up to 1000 elements. If the list increases dramatically we should choose the Hashset approach. Also we should not use get-unique, because to make this work we have to sort the list first and this is more time consuming as to use the plain sort-object method like you can see this in the result-table.</p>\n<p>Best regards,\nChristian</p>",
            "title": "3 ways to sort a list unique",
            "link": "https://devdojo.com/hcritter/3-ways-to-sort-a-list-unique",
            "published": "2023-03-20T09:25:18.000Z",
            "author": "Christian Ritter",
            "media": []
        },
        {
            "id": "http://itluke.online/?p=6700",
            "tags": [
                "Powershell",
                "PowerShell Core   PowerShell 7",
                "One-liner",
                "Oneliner"
            ],
            "description": "Here is a method to build a global array at the same time you collect data from various parts of a tree.\nNo need for additional code to concatenate the data.",
            "title": "Concatenate PowerShell arrays on the fly",
            "link": "https://itluke.online/2023/03/20/concatenate-powershell-arrays-on-the-fly/",
            "published": "2023-03-20T09:25:00.000Z",
            "author": {
                "#text": "Luke",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [
                {
                    "src": "https://0.gravatar.com/avatar/04d87969d7cbefc3b3d31e2c306f0535dff727fe4ce7748e6980b78652a0a35a?s=96&d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&r=G",
                    "type": "image"
                }
            ]
        },
        {
            "id": "https://www.powershellcenter.com/?p=6992",
            "tags": [
                "Learn",
                "Powershell - Systems"
            ],
            "description": "<p>PowerShell scripting is an essential skill each sysadmin has to know as it provides an efficient and reliable way to automate IT tasks. When it comes to using AI technology to enhance PowerShell scripting, two of the most prominent options are Bing AI and ChatGPT. While both offer unique features and benefits, it&#8217;s important to...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/03/19/bingai/\">Bing AI VS. ChatGPT, Which One is Better in PowerShell</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "Bing AI VS. ChatGPT, Which One is Better in PowerShell",
            "link": "https://www.powershellcenter.com/2023/03/19/bingai/",
            "published": "2023-03-19T13:08:17.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://cloud-right.com/2023/03/azure-role-assignment-cleanup",
            "tags": [
                "azure",
                "powershell",
                "security",
                "blog",
                "azure"
            ],
            "description": "<p>As an Azure administrator, maintaining a clean and secure environment is crucial. One aspect of keeping Azure organized is managing role assignments. Over time, you might end up with unused or “Unknown” role assignments, which can make management more challenging and potentially introduce security risks.<br />\nIn this blog post, we’ll walk you through a handy PowerShell script to automate the cleanup of role assignments with an object type of “Unknown” in your Azure environment. This script works at both the resource group and subscription levels, ensuring a comprehensive cleanup.</p>\n\n<h2 id=\"script-overview\">Script Overview</h2>\n\n<p>The PowerShell script provided in this blog post is designed to loop through all your Azure subscriptions and resource groups, identifying role assignments with an object type of “Unknown”.<br />\nOnce these role assignments are detected, the script will remove them automatically. Additionally, the script checks if the necessary Az PowerShell module is installed and installs it if required. Finally, the script employs error handling to provide a more robust solution.</p>\n\n<p>To run this script, simply open PowerShell, copy the script provided, and paste it into the console. The script will prompt you to log in to your Azure account if you haven’t already done so.</p>\n\n<h2 id=\"script-breakdown\">Script Breakdown</h2>\n\n<p>Let’s go through the key components of the script:</p>\n\n<ol>\n  <li>Installing the Az module (if necessary): The script checks if the Az module is installed on your system. If it’s not installed, the script will automatically install the module for the current user.</li>\n</ol>\n\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">-not</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Get-Module</span><span class=\"w\"> </span><span class=\"nt\">-ListAvailable</span><span class=\"w\"> </span><span class=\"nt\">-Name</span><span class=\"w\"> </span><span class=\"nx\">Az</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">Write-Output</span><span class=\"w\"> </span><span class=\"s2\">\"Installing Az module...\"</span><span class=\"w\">\n    </span><span class=\"n\">Install-Module</span><span class=\"w\"> </span><span class=\"nt\">-Name</span><span class=\"w\"> </span><span class=\"nx\">Az</span><span class=\"w\"> </span><span class=\"nt\">-Scope</span><span class=\"w\"> </span><span class=\"nx\">CurrentUser</span><span class=\"w\"> </span><span class=\"nt\">-Repository</span><span class=\"w\"> </span><span class=\"nx\">PSGallery</span><span class=\"w\"> </span><span class=\"nt\">-Force</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<ol>\n  <li>Logging into Azure: The Connect-AzAccount cmdlet is used to prompt the user to log in to their Azure account.</li>\n</ol>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Connect-AzAccount</code></p>\n\n<ol>\n  <li>Looping through subscriptions: The script retrieves all subscriptions and iterates through each subscription to set the context.</li>\n</ol>\n\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$subIds</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-AzSubscription</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Select-Object</span><span class=\"w\"> </span><span class=\"nt\">-ExpandProperty</span><span class=\"w\"> </span><span class=\"nx\">SubscriptionId</span><span class=\"w\">\n</span><span class=\"kr\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$subId</span><span class=\"w\"> </span><span class=\"kr\">in</span><span class=\"w\"> </span><span class=\"nv\">$subIds</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">Set-AzContext</span><span class=\"w\"> </span><span class=\"nt\">-SubscriptionId</span><span class=\"w\"> </span><span class=\"nv\">$subId</span><span class=\"w\">\n    </span><span class=\"c\">#...</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<ol>\n  <li>Looping through resource groups: Within each subscription, the script retrieves all resource groups and iterates through them.</li>\n</ol>\n\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$resourceGroups</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-AzResourceGroup</span><span class=\"w\">\n</span><span class=\"nx\">foreach</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$resourceGroup</span><span class=\"w\"> </span><span class=\"kr\">in</span><span class=\"w\"> </span><span class=\"nv\">$resourceGroups</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"c\">#...</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<ol>\n  <li>Retrieving and processing role assignments: The script retrieves role assignments at both the resource group and subscription levels. It then checks if the object type is “Unknown” and removes the assignment if necessary.</li>\n</ol>\n\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$assignments</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Get-AzRoleAssignment</span><span class=\"w\"> </span><span class=\"nt\">-ResourceGroupName</span><span class=\"w\"> </span><span class=\"nv\">$resourceGroup</span><span class=\"o\">.</span><span class=\"nf\">ResourceGroupName</span><span class=\"w\"> </span><span class=\"nt\">-ErrorAction</span><span class=\"w\"> </span><span class=\"nx\">SilentlyContinue</span><span class=\"w\">\n</span><span class=\"c\">#...</span><span class=\"w\">\n</span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">$assignment</span><span class=\"o\">.</span><span class=\"nf\">Properties</span><span class=\"o\">.</span><span class=\"nf\">ObjectType</span><span class=\"w\"> </span><span class=\"o\">-eq</span><span class=\"w\"> </span><span class=\"s2\">\"Unknown\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"c\"># Remove the assignment</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<ol>\n  <li>Error handling: The script implements try and catch blocks for handling errors at the resource group and subscription levels. This ensures that errors are caught and reported, allowing the script to continue processing other resources.</li>\n</ol>\n\n<div class=\"language-powershell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"c\"># Process role assignments</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"kr\">catch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">Write-Error</span><span class=\"w\"> </span><span class=\"s2\">\"Error message: </span><span class=\"bp\">$_</span><span class=\"s2\">\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>This PowerShell script provides an efficient and automated way to clean up role assignments with an object type of “Unknown” in your Azure environment. By removing these unused role assignments, you can improve the organization and security of your Azure infrastructure. The script is designed to be user-friendly and robust, making it an essential tool for Azure administrators looking to streamline their environment management.<br />\nFeel free to customize the script to suit your specific needs, and consider incorporating it into your regular maintenance tasks to keep your Azure environment clean and well-organized.\nFind the complete script here on GitHub.<br /></p>\n\n<script src=\"https://gist.github.com/8b510deb60f39c18f7183caf5c4b9ac8.js\"> </script>\n\n<p>To delete the role assignments, run the script with the parameter <code class=\"language-plaintext highlighter-rouge\">-DeleteRoleAssignments $true</code>. If you don’t provide the parameter or set it to $false, the script will only identify and display the “Unknown” role assignments without removing them.</p>",
            "title": "Automating Role Assignment Cleanup in Azure with PowerShell",
            "link": "https://cloud-right.com/2023/03/azure-role-assignment-cleanup",
            "published": "2023-03-19T00:01:30.000Z",
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9229",
            "tags": [
                "PowerShell",
                "Scripting"
            ],
            "description": "A few weeks ago, I was working on content for a new PowerShell course for Pluralsight. The subject was objects. We all know the importance of working with objects in PowerShell. Hopefully, you also know that the output you get on your screen from running a PowerShell command is not the whole story. Formatted presentation...",
            "title": "Exposing the Mystery of PowerShell Objects",
            "link": "https://jdhitsolutions.com/blog/powershell/9229/exposing-the-mystery-of-powershell-objects/",
            "published": "2023-03-14T14:32:28.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://blog.victorsilva.com.uy/azure-openai-powershell",
            "tags": [
                "Azure",
                "Azure OpenAI",
                "Azure",
                "PowerShell"
            ],
            "description": "As artificial intelligence (AI) continues to transform the way we work and live, more and more businesses are turning to powerful AI tools to improve their operations. One such tool is Azure OpenAI, a platform that provides access to cutting-edge AI models and technologies.",
            "title": "Using Azure OpenAI from PowerShell [English]",
            "link": "https://blog.victorsilva.com.uy/azure-openai-powershell/",
            "published": "2023-03-04T23:26:51.000Z",
            "media": []
        },
        {
            "id": "https://jdhitsolutions.com/blog/?p=9225",
            "tags": [
                "Best Practices",
                "PowerShell",
                "Scripting",
                "Automation",
                "substack"
            ],
            "description": "This post is an updated reprint from an article published to my premium PowerShell newsletter Behind the PowerShell Pipeline available on Substack. Subscribers receive 6-8 articles like this a month delivered to their inbox or available on the Substack app. I hope you’ll consider subscribing. Trial subscriptions are available. I’ve been scripting and automating things...",
            "title": "Automation Decisions",
            "link": "https://jdhitsolutions.com/blog/powershell/9225/automation-decisions/",
            "published": "2023-02-28T17:58:44.000Z",
            "author": {
                "#text": "Jeffery Hicks",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "4ff94561c4aaf2f6d6ca85ec:54265bcbe4b09ad45b272dbf:63e4c9cfe126d43b070b3ff1",
            "tags": [
                "PowerShell",
                "Communities"
            ],
            "description": "<p>Over the last few weeks, I have been working on some new features in Planet PowerShell.</p>\n<h2 id=\"mastodon-support\">Mastodon Support</h2>\n<p>As more users make the move to Mastodon, I wanted to ensure that Planet PowerShell could continue to support the community. </p>\n<p>You can now follow Planet PowerShell on Mastodon, <a href=\"https://infosec.exchange/@planetpowershell\">@planetpowershell@infosec.exchange</a>. New posts are automatically tooted using the <a href=\"https://infosec.exchange/tags/PowerShell\">#PowerShell</a> and <a href=\"https://infosec.exchange/tags/pwsh\">#pwsh</a> hashtags.</p>\n<p>There is now support for authors to share their Mastodon handles. Authors will need to specify a value for the <code>MastodonHandle</code> property. I have already included some authors’ handles where I was following them. If you are a Planet PowerShell author and have made the transition to Mastodon, please ensure you update your author <code>.cs</code> file.</p>\n<p>Including Mastodon support was a simple decision for me, and I am extremely thankful that I have made the decision considering recent announcements (see Twitter Support). As part of the change, I needed to update from Font Awesome v4 to v6, you may notice some icons have slightly changed on the website.</p>\n<h2 id=\"twitter-support\">Twitter Support</h2>\n<p>With the <a href=\"https://twitter.com/TwitterDev/status/1621026986784337922?s=20\">extremely unfortunate decision by Twitter</a> to no longer provide free access to their API, Zapier have notified their users that they anticipate their integration to stop working. Planet PowerShell uses Zapier to post to <a href=\"https://twitter.com/planetpshell\">Twitter</a>, <a href=\"https://www.facebook.com/planetpowershell/\">Facebook</a>, and <a href=\"https://infosec.exchange/@planetpowershell\">Mastodon</a>.</p>\n<p>At this stage, it appears that when Twitter’s API change occurs, the <a href=\"https://twitter.com/planetpshell\">@Planetpshell</a> Twitter will also go silent. This is incredibly disappointing. Over the years, Planet PowerShell has gained 3,358 followers, posted hundreds or blog posts and had tens of thousands of impressions each month. </p>\n<p>If an alternative solution for posting becomes available, then we may see Planet PowerShell return to Twitter, until then, I recommend everyone follows the <a href=\"https://www.planetpowershell.com/feed\">RSS</a>, <a href=\"https://infosec.exchange/@planetpowershell\">Mastodon</a>, or <a href=\"https://www.facebook.com/planetpowershell/\">Facebook page</a>.</p>\n<h2 id=\"pronoun-support\">Pronoun Support</h2>\n<p>It is extremely important to me that Planet PowerShell is an inclusive community. Authors now have the option to specify their pronouns. Simply update the <code>Pronouns</code> property in your author <code>.cs</code> file, and the pronouns will be displayed on the Authors page. This is optional, but I highly encourage all authors to include their pronouns.</p>\n<h2 id=\"analytics-cookies\">Analytics &amp; Cookies</h2>\n<p>Analytics has been a big challenge with Planet PowerShell. I rely on analytics and usage information as part of my Microsoft MVP reporting; making use of a mix of values provided by Google Analytics and Cloudflare’s built in analytics. This isn’t a perfect solution, particular as there isn’t an effective measure for the RSS feed.</p>\n<p>In the past, my side projects like Planet PowerShell have often influenced my work projects. Recently, the flow has reversed. After some discussions around GDPR and Analytics, I decided to make some changes to Planet PowerShell.</p>\n<p>Planet PowerShell didn’t have a cookie consent mechanism, something that was a potential issue. <a href=\"https://www.cookiebot.com/\">CookieBot</a> has a free tier for smaller websites, it works by scanning the website and collecting information on all the cookies in use; you just include a small snippet of code from CookieBot, and it will take care of prompting users to accept or reject various cookies. Due to the small number of pages, Planet PowerShell fits perfect in the free tier, with setup and testing being very quick and easy.</p>\n<p>As I was implementing CookieBot, I discovered an issue with Planet PowerShell that goes back to the original fork from Planet Xamarin. When I made the fork, I made sure to update Google Analytics and Google Maps codes and keys, but I missed something. Planet Xamarin also made use of <a href=\"https://clicky.com/\">Clicky</a>, a more privacy-friendly website analytics provider. I have update Planet PowerShell to use its own Clicky ID.</p>\n<p>Lastly, I have also implemented <a href=\"https://www.heap.io/\">Heap</a> analytics. Heap analytics platform is one of the easiest to understand, and provides information in a concise manner.  It still doesn’t help with the RSS feed, I hope will give me a better understanding of the interactions on the Planet PowerShell website.</p>\n<p>My aim is to review the usefulness of the information provided by Google Analytics, Clicky, Heap and Cloudflare, and remove those who aren’t useful long term.</p>\n<h2 id=\"looking-for-more-authors-\">Looking for more authors!</h2>\n<p>I want to grow the number of authors whose content is aggregated as part of the Planet PowerShell feed. If you are an author, please take the time to add your blog. If you need help, feel free to message me and I will be able to assist.</p>\n<p>Finally, I want to thank everyone of the support over the years with Planet PowerShell. Things have come a long way over the last 7 years. I can’t wait to see how things change in the next 7 years!</p>",
            "title": "Planet PowerShell Update: Mastodon, Twitter, and Pronoun Support",
            "link": "http://poshsecurity.com/blog/planet-powershell-update-mastodon-twitter-and-pronoun-support",
            "published": "2023-02-09T10:31:03.000Z",
            "author": {
                "#text": "Kieran Jacobsen",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=6896",
            "tags": [
                "Learn",
                "Powershell - Systems"
            ],
            "description": "<p>In Active Directory (AD), the PasswordLastSet and pwdLastSet attributes refer to the same property of an AD object &#8211; the time and date when the password for that object was last changed. This attribute is used to enforce password policies and track when a password was last changed. This quick post helps you understand these...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/02/03/pwdlastset/\">Understanding PasswordLastSet and PwdLastSet Using PowerShell</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "Understanding PasswordLastSet and PwdLastSet Using PowerShell",
            "link": "https://www.powershellcenter.com/2023/02/03/pwdlastset/",
            "published": "2023-02-03T12:59:27.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "tag:blogger.com,1999:blog-5384857.post-6282526989337343695",
            "tags": [],
            "description": "This week I got the news that my latest PowerShell book has been published and is available for order:<div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/s689/COVER.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"689\" data-original-width=\"559\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/w325-h400/COVER.png\" width=\"325\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: left;\">You can order it today from all the usual places, including&nbsp;<a href=\"https://smile.amazon.co.uk/Windows-Server-Automation-PowerShell-Cookbook/dp/1804614238\">https://smile.amazon.co.uk/Windows-Server-Automation-PowerShell-Cookbook/dp/1804614238</a>.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">This book updates earlier editions and covers, specifically, PowerShell 7.2 (as an LTS release) and Windows Server 2022. It should also be useful if you are using PowerShell 7 on earlier versions of Windows Server too.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Here is the table of contents:</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><ol class=\"a-ordered-list a-vertical\" style=\"background-color: white; box-sizing: border-box; color: #0f1111; font-family: &quot;Amazon Ember&quot;, Arial, sans-serif; font-size: 14px; margin: 0px 0px 0px 28px; padding: 0px;\"><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Installing and Configuring PowerShell 7</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing PowerShell 7 in the Enterprise</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Exploring .NET</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Active Directory</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Networking</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Implementing Enterprise Security</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Storage</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Shared Data</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Printing</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Exploring Windows Containers</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Hyper-V</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Debugging and Troubleshooting Windows Server</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Window Server with Window Management Instrumentation (WMI)</span></li><li style=\"box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;\"><span class=\"a-list-item\" style=\"box-sizing: border-box;\">Managing Windows Update Services</span></li></ol></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">An addition is a chapter on WSUS. The WSUS module is one of the three modules you can not use within PowerShell 7. You can not load the module natively within a PowerShell 7 since the .NET APIs that the module relies on are unavailable (in .Net) Additionally, the normal Windows PowerShell compatibility mechanism does not work with this module because the WSUS module is based on methods and not actual cmdlets. With WSUS, you instantiate the WSUS server instance of the server you wish to manage, then use that object's methods. With the compatibility solution, you do not have access to the methods.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">There IS a way around this - you can create a remoting session to a Windows PowerShell endpoint and do all the work within that session. It is a bit more work: you create the remoting session, create script blocks that perform WSUS management activities, then execute those script blocks within the session.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">My publisher is looking for potential reviewers - you get a copy in exchange for writing a review. Contact me if you are interested.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><br /><div><br /></div>",
            "title": "My Latest (last?) PowerShell Book is published!",
            "link": "https://tfl09.blogspot.com/2023/02/my-latest-last-powershell-book-is.html",
            "published": "2023-02-02T14:43:00.000Z",
            "author": "noreply@blogger.com (Unknown)",
            "image": {
                "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/s72-w325-h400-c/COVER.png",
                "type": "image",
                "width": "72",
                "height": "72"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=6867",
            "tags": [
                "Learn",
                "Powershell - Systems"
            ],
            "description": "<p>ChatGPT API allows developers to integrate the capabilities of ChatGPT into their applications easily. OpenAI provides the ChatGPT API, which can be accessed via an API key. The API endpoint allows you to send a prompt and receive a generated response. With its ability to understand and develop human-like text, the ChatGPT API is a...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2023/01/25/chatgpt_api/\">Interact with ChatGPT API Using Postman or PowerShell</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "Interact with ChatGPT API Using Postman or PowerShell",
            "link": "https://www.powershellcenter.com/2023/01/25/chatgpt_api/",
            "published": "2023-01-25T18:32:53.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://dfinke.github.io/powershell,%20chatgpt/2023/01/15/Running-PowerShell-Inside-ChatGPT",
            "tags": [
                "PowerShell, ChatGPT",
                "PowerShell, ChatGPT"
            ],
            "description": "Running PowerShell inside ChatGPT And the PowerShell Console",
            "title": "Running PowerShell Inside ChatGPT",
            "link": "https://dfinke.github.io/powershell,%20chatgpt/2023/01/15/Running-PowerShell-Inside-ChatGPT.html",
            "published": "2023-01-15T09:00:00.000Z",
            "media": []
        },
        {
            "id": "https://baswijdenes.com/?p=28926",
            "tags": [
                "Microsoft",
                "Automation",
                "PowerShell",
                "Razor"
            ],
            "description": "<p>My Parameter input is not recognized as a cmdlet in Azure Automation Nowadays, we roll out Azure and workplace features via a WebApp, such as Conditional Access or Privileged Identity Management for customers that need them. This speeds up the process of onboarding customers. We have adapted our WebApp in such a way that you &#8230; <a href=\"https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">FIX: Parameter input shown as not recognized as a cmdlet AzA</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/\">FIX: Parameter input shown as not recognized as a cmdlet AzA</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "FIX: Parameter input shown as not recognized as a cmdlet AzA",
            "link": "https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/",
            "published": "2023-01-09T10:22:26.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://dfinke.github.io/powershell,%20polyglot,%20interactive%20notebooks,%20scottplot/2022/12/28/Interactive-Plotting-with-PowerSheLL-and-Polyglot-Interactive-Notebooks",
            "tags": [
                "PowerShell, Polyglot, Interactive Notebooks, ScottPlot",
                "PowerShell, Polyglot, Interactive Notebooks, ScottPlot"
            ],
            "description": "PowerShell ScottPlot",
            "title": "Interactive Plotting with PowerShell and Polyglot Interactive Notebooks",
            "link": "https://dfinke.github.io/powershell,%20polyglot,%20interactive%20notebooks,%20scottplot/2022/12/28/Interactive-Plotting-with-PowerSheLL-and-Polyglot-Interactive-Notebooks.html",
            "published": "2022-12-28T09:00:00.000Z",
            "media": []
        },
        {
            "id": "https://baswijdenes.com/?p=28823",
            "tags": [
                "Microsoft",
                "Automation",
                "Azure Storage",
                "PowerShell"
            ],
            "description": "<p>Keep your PowerShell modules updated! We will do all of this with Azure Automation and PowerShell, you can also do this in a ci / cd pipeline, but that&#8217;s up to you. Disclaimer: Everything will be simplified, these are steps you can follow, but you must modify before it works in your own environment. What &#8230; <a href=\"https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">How to import a custom PS module in a VM or Azure Automation</span></a></p>\n<p>The post <a href=\"https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/\">How to import a custom PS module in a VM or Azure Automation</a> appeared first on <a href=\"https://baswijdenes.com\">Bas Wijdenes</a>.</p>",
            "title": "How to import a custom PS module in a VM or Azure Automation",
            "link": "https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/",
            "published": "2022-12-12T11:54:00.000Z",
            "author": {
                "#text": "Bas Wijdenes",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=6830",
            "tags": [
                "Learn",
                "Powershell - Systems"
            ],
            "description": "<p>Do you know how to write a PowerShell script? If the answer is no, let me introduce you to your new friend OpenAI Chat GPT 3. OpenAI Chat GPT uses a human-spoken natural language to generate your desired code. So all you need to do is describe what you want your script to do, and...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2022/12/09/openai-gpt-3/\">OpenAI Chat GPT 3 Can Write Your PowerShell Script</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "OpenAI Chat GPT 3 Can Write Your PowerShell Script",
            "link": "https://www.powershellcenter.com/2022/12/09/openai-gpt-3/",
            "published": "2022-12-09T10:04:41.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/powershell-people-on-mastodon",
            "tags": [
                "powershell",
                "mastodon",
                "fediverse",
                "twitter",
                "twitter-api",
                "powershell",
                "bluebridps",
                "github-actions",
                "gh-actions"
            ],
            "description": "If you are like many others, you may have been contemplating which Mastodon instance to join, but which one?",
            "title": "Where are the PowerShell People on Mastodon?",
            "link": "https://thedavecarroll.com/powershell/powershell-people-on-mastodon/",
            "published": "2022-11-29T06:00:00.000Z",
            "media": []
        },
        {
            "id": "https://tommymaynard.com/?p=13077",
            "tags": [
                "Extra",
                "Azure",
                "Azure PowerShell",
                "M365"
            ],
            "description": "<p>After 20+ years, and 5+ positions in education (K-12 and higher ed), I&#8217;ve taken a new position. It&#8217;s still Information Technology at the end of the day, but now I&#8217;ll be working in the healthcare industry. There&#8217;s plenty of reasons to be excited. One is that I’ll be better positioned to use my PowerShell and [&#8230;]</p>\n<p>The post <a href=\"https://tommymaynard.com/a-return-to-powershell/\">A Return to PowerShell</a> appeared first on <a href=\"https://tommymaynard.com\">tommymaynard.com</a>.</p>",
            "title": "A Return to PowerShell",
            "link": "https://tommymaynard.com/a-return-to-powershell/",
            "published": "2022-11-19T20:21:51.000Z",
            "author": {
                "#text": "Tommy Maynard",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": [],
            "content": "<p>After 20+ years, and 5+ positions in education (K-12 and higher ed), I&#8217;ve taken a new position. It&#8217;s still Information Technology at the end of the day, but now I&#8217;ll be working in the healthcare industry. There&#8217;s plenty of reasons to be excited. One is that I’ll be better positioned to use my PowerShell and automation skills again. Two, I&#8217;m moving from an employer that&#8217;s <a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"noopener\">AWS-focused</a> to one that&#8217;s <a href=\"https://azure.microsoft.com\" target=\"_blank\" rel=\"noopener\">Azure</a> focused. What an amazing opportunity! I ventured into <em>Security</em> Engineering, but now it&#8217;s back to <em>Systems</em> Engineering for me. It was a great experience and opportunity, but like any new position&#8212;well, usually anyway&#8212;I&#8217;m excited about what&#8217;s next.</p>\n<p>I was in my interview and the time came when I could ask questions. I asked, in relation to work, &#8220;<em>If you had an unlimited budget and cost was of no concern, what would you do</em>?&#8221; My new lead said he&#8217;d take everything to Azure. Okay, sign me up! It was in later 2020 when I picked up Azure and Microsoft 365 certificates; hopefully, they may be put to use soon.</p>\n<p>I&#8217;m hopeful that this position provides me the opportunity to create new content and to share new things I learn about Azure PowerShell and just PowerShell, as well. I miss writing, but with more day-to-day opportunities to work with PowerShell, I know what will happen. I&#8217;ve done this PowerShell writing thing for greater than eight year. So with that, hopefully, I&#8217;ll be back with something new soon.</p>\n<p>…</p>\n<p>I wrote the above portion of this post weeks ago, and now I’ve completed two full weeks at the new job, and guess what I did yesterday afternoon? I wrote a PowerShell script for a colleague. I took a starter script and fixed it so it could be run from anywhere and access a flat file in the same directory—thanks <code>$PSScriptRoot</code>. I also added a bunch of features to it, which while they may not be necessary, was exciting for me. I worked with so much I missed. I wrote more PowerShell yesterday than I did in the last year and a half in my security position. My thought is this: In security, you have to buy tools; you have to have a reputable company behind what you use. In systems, that isn’t required; you can automate without the same concerns. It’s good to be back.</p>\n<p><a class=\"a2a_button_facebook\" href=\"https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;linkname=A%20Return%20to%20PowerShell\" title=\"Facebook\" rel=\"nofollow noopener\" target=\"_blank\"></a><a class=\"a2a_button_twitter\" href=\"https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;linkname=A%20Return%20to%20PowerShell\" title=\"Twitter\" rel=\"nofollow noopener\" target=\"_blank\"></a><a class=\"a2a_button_reddit\" href=\"https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;linkname=A%20Return%20to%20PowerShell\" title=\"Reddit\" rel=\"nofollow noopener\" target=\"_blank\"></a><a class=\"a2a_button_email\" href=\"https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;linkname=A%20Return%20to%20PowerShell\" title=\"Email\" rel=\"nofollow noopener\" target=\"_blank\"></a></p><p>The post <a href=\"https://tommymaynard.com/a-return-to-powershell/\">A Return to PowerShell</a> appeared first on <a href=\"https://tommymaynard.com\">tommymaynard.com</a>.</p>"
        },
        {
            "id": "https://jm2k69.github.io/2022/11/vSphereLab%20Terraform",
            "tags": [
                "Iac",
                "Automation",
                "PowerShell",
                "IAC",
                "Packer",
                "Terraform"
            ],
            "description": "The objective in this post is simply to use Terraform to deploy learning environments for VMware vSphere 7.x and 8 soon. To deploy VMware vSphere Lab with ESXI servers, a Vyos-based router that will serve as a DHCP server on both LANs and of course an internet access. For the DNS server I created an appliance based on PhotonOs and for the iSCSI Storage I used my TrueNas Core based appliance to make my iSCSI targets for my ESXI.",
            "title": "vSphereLab 8 and Terraform",
            "link": "https://jm2k69.github.io/2022/11/vSphereLab-Terraform.html",
            "published": "2022-11-03T00:00:00.000Z",
            "author": "bezettorres.jerome@gmail.com",
            "media": []
        },
        {
            "id": "https://nocolumnname.blog/?p=10668",
            "tags": [
                "Powershell",
                "PSGallery",
                "PSTimeSheets"
            ],
            "description": "Words: 567 Time to read: ~ 3 minutes Skip This for Your Sanity I have created a module cause nobody wants to do timesheets no more; they want PowerShell to do it for ya. Well, if this is what you need, then this is what I&#8217;ll give ya. (Ahem, apologies about that, songs get stuck &#8230; <a href=\"https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/\" class=\"more-link\">Continue reading<span class=\"screen-reader-text\"> \"Publishing PSTimeSheets To The PSGallery\"</span></a>",
            "title": "Publishing PSTimeSheets To The PSGallery",
            "link": "https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/",
            "published": "2022-10-06T19:44:02.000Z",
            "author": {
                "#text": "Shane O'Neill",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/blog/refreshing-the-blog",
            "tags": [
                "blog",
                "powershell blog",
                "blog",
                "github actions",
                "github pages",
                "giscus",
                "giscus comments",
                "docker"
            ],
            "description": "In this article, I'll go into detail on how I rejuvenated this site, focusing on key technical aspects along the way.",
            "title": "Refreshing the Blog",
            "link": "https://thedavecarroll.com/blog/refreshing-the-blog/",
            "published": "2022-09-13T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://thedavecarroll.com/powershell/questions-from-powershell-forums-user",
            "tags": [
                "powershell",
                "blog",
                "powershell",
                "powershell concepts",
                "learn powershell",
                "powershell beginner",
                "how to",
                "career"
            ],
            "description": "A PowerShell.org Forums user asked me a few questions about my PowerShell journey and here are my answers.",
            "title": "Questions from a PowerShell.org Forums User",
            "link": "https://thedavecarroll.com/powershell/questions-from-powershell-forums-user/",
            "published": "2022-08-30T05:00:00.000Z",
            "media": []
        },
        {
            "id": "https://www.powershellcenter.com/?p=6623",
            "tags": [
                "Powershell - Systems"
            ],
            "description": "<p>Okay, Microsoft Graph API is cool, but sometimes it&#8217;s boring to deal with all these hashtables and arrays. The Send-MgUserMail is a great graph cmdlet to send Emails using the Graph API endpoint. In a previous post, I explained the details and parameters for the Send-MgUserMail. Read more in Send-MgUserMail BodyParameter Explained. Going through the...</p>\n<p>The post <a href=\"https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/\">PowerShell Script to Simplify Send-MgUserMail</a> appeared first on <a href=\"https://www.powershellcenter.com\">Faris Malaeb</a>.</p>",
            "title": "PowerShell Script to Simplify Send-MgUserMail",
            "link": "https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/",
            "published": "2022-09-07T06:57:04.000Z",
            "author": {
                "#text": "Faris Malaeb",
                "@_xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            "media": []
        },
        {
            "id": "https://www.cyberdrain.com/monitoring-with-powershell-monitoring-acronis-backups/",
            "tags": [],
            "description": "<img src=\"https://www.cyberdrain.com/uploads/acronis.png\" alt=\"Featured image of post Monitoring with PowerShell: Monitoring Acronis Backups\" /><h2 id=\"intro\">Intro</h2>\n<p>This is a monitoring script requested via Reddit, One of the reddit r/msp users wondered how they can monitor Acronis a little bit easier. I jumped on this because it happened pretty much at the same time that I was asked to speak at the <a class=\"link\" href=\"https://acronis.events/summit2022/?utm_source=speakers&amp;utm_medium=social&amp;utm_campaign=2022Summit-kelvintegelaar--register\"  target=\"_blank\" rel=\"noopener\"\n    >Acronis CyberSummit</a> so it kinda made sense to script this so I have something to demonstrate at my session there.</p>\n<p>There&rsquo;s a lot of approaches you can take with monitoring backups. I&rsquo;ve seen people monitor event logs and specific files but I always recommend to check if a vendor has local tooling available to help you with this. Most of the products these days have a command-line utility to use for just this.</p>\n<p>You can find monitoring scripts for other backups product <a class=\"link\" href=\"https://www.cyberdrain.com/378/\"  target=\"_blank\" rel=\"noopener\"\n    >here</a>.</p>\n<h2 id=\"backups-monitoring-script\">Backups monitoring script</h2>\n<p>For the backup monitoring script we&rsquo;re making use of the Acronis command line utility called Acrocmd. Acrocmd allows you to create a raw report which is a tab delimited format, this is useful because PowerShell can easily convert that to an object.</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre tabindex=\"0\" class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span><span class=\"lnt\">16\n</span><span class=\"lnt\">17\n</span><span class=\"lnt\">18\n</span><span class=\"lnt\">19\n</span><span class=\"lnt\">20\n</span><span class=\"lnt\">21\n</span><span class=\"lnt\">22\n</span><span class=\"lnt\">23\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre tabindex=\"0\" class=\"chroma\"><code class=\"language-PowerShell\" data-lang=\"PowerShell\"><span class=\"line\"><span class=\"cl\"><span class=\"k\">try</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nv\">$Activities</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span> <span class=\"s2\">&#34;C:\\Program Files\\BackupClient\\CommandLineTool\\acrocmd.exe&#34;</span> <span class=\"n\">list</span> <span class=\"n\">activities</span> <span class=\"p\">-</span><span class=\"n\">-output</span> <span class=\"n\">raw</span>  <span class=\"p\">|</span> <span class=\"nb\">ConvertFrom-Csv</span> <span class=\"n\">-Delimiter</span> <span class=\"s2\">&#34;</span><span class=\"se\">`t</span><span class=\"s2\">&#34;</span> <span class=\"n\">-Header</span> <span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Machine&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;State&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Progress&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Start&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Elapsed&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;estimated&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;GUID&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Resource&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Result&#39;</span> <span class=\"p\">|</span> <span class=\"nb\">Where-Object</span> <span class=\"p\">{</span> <span class=\"nv\">$_</span><span class=\"p\">.</span><span class=\"n\">Name</span> <span class=\"o\">-NE</span> <span class=\"s2\">&#34;The operation completed successfully.&#34;</span> <span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">catch</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nb\">write-host</span> <span class=\"s2\">&#34;Error, could not retrieve backup settings and tasks&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"nv\">$template</span> <span class=\"p\">=</span> <span class=\"s1\">&#39;dd.MM.yyyy HH:mm:ss&#39;</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"nv\">$TasksExecutedInLastWeek</span> <span class=\"p\">=</span> <span class=\"nv\">$Activities</span> <span class=\"p\">|</span> <span class=\"nb\">Where-Object</span> <span class=\"p\">{</span> <span class=\"no\">[DateTime]</span><span class=\"p\">::</span><span class=\"n\">ParseExact</span><span class=\"p\">(</span><span class=\"nv\">$_</span><span class=\"p\">.</span><span class=\"s1\">&#39;start&#39;</span><span class=\"p\">,</span> <span class=\"nv\">$template</span><span class=\"p\">,</span> <span class=\"nv\">$null</span><span class=\"p\">)</span> <span class=\"o\">-gt</span> <span class=\"p\">(</span><span class=\"nb\">Get-Date</span><span class=\"p\">).</span><span class=\"n\">adddays</span><span class=\"p\">(</span><span class=\"s1\">&#39;-7&#39;</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">if</span> <span class=\"p\">(!</span><span class=\"nv\">$TasksExecutedInLastWeek</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nb\">Write-Host</span> <span class=\"s2\">&#34;This device has not had any backup job for 1 week.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"nv\">$Task</span> <span class=\"k\">in</span> <span class=\"nv\">$TasksExecutedInLastWeek</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nv\">$Task</span><span class=\"p\">.</span><span class=\"n\">state</span> <span class=\"o\">-eq</span> <span class=\"s2\">&#34;running&#34;</span> <span class=\"o\">-and</span> <span class=\"no\">[datetime]</span><span class=\"nv\">$task</span><span class=\"p\">.</span><span class=\"n\">elapsed</span> <span class=\"o\">-gt</span> <span class=\"no\">[datetime]</span><span class=\"s2\">&#34;23:59:00&#34;</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">        <span class=\"nb\">Write-Host</span> <span class=\"s2\">&#34;This device has been running a backup for over 24 hours.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"nv\">$FailedJobs</span> <span class=\"p\">=</span> <span class=\"nv\">$TasksExecutedInLastWeek</span> <span class=\"p\">|</span> <span class=\"nb\">Where-Object</span> <span class=\"n\">-Property</span> <span class=\"s1\">&#39;Result&#39;</span> <span class=\"o\">-ne</span> <span class=\"s1\">&#39;succeeded&#39;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nv\">$FailedJobs</span><span class=\"p\">.</span><span class=\"n\">length</span> <span class=\"o\">-ge</span> <span class=\"nv\">$MaximumFailedBackupsPerWeek</span><span class=\"p\">){</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nb\">Write-Host</span> <span class=\"s2\">&#34;This device has failed more backups than allowed.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span></code></pre></td></tr></table>\n</div>\n</div><p>Now this isn&rsquo;t the only thing you&rsquo;ll want to monitor. There&rsquo;s also the case if a device has even received its backup plan, and if that backup plan is really active on the device;</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre tabindex=\"0\" class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span><span class=\"lnt\">16\n</span><span class=\"lnt\">17\n</span><span class=\"lnt\">18\n</span><span class=\"lnt\">19\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre tabindex=\"0\" class=\"chroma\"><code class=\"language-PowerShell\" data-lang=\"PowerShell\"><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">try</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nv\">$Plans</span> <span class=\"p\">=</span> <span class=\"p\">&amp;</span> <span class=\"s2\">&#34;C:\\Program Files\\BackupClient\\CommandLineTool\\acrocmd.exe&#34;</span> <span class=\"n\">list</span> <span class=\"n\">plans</span> <span class=\"p\">-</span><span class=\"n\">-output</span> <span class=\"n\">raw</span> <span class=\"p\">|</span> <span class=\"nb\">ConvertFrom-Csv</span> <span class=\"n\">-Delimiter</span> <span class=\"s2\">&#34;</span><span class=\"se\">`t</span><span class=\"s2\">&#34;</span> <span class=\"n\">-Header</span> <span class=\"s1\">&#39;Name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;State&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Status&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Last Start&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;User&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;GUID&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Next Start&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Enabled&#39;</span> <span class=\"p\">|</span> <span class=\"nb\">Where-Object</span> <span class=\"n\">-Property</span> <span class=\"n\">Name</span> <span class=\"o\">-NE</span> <span class=\"s2\">&#34;The operation completed successfully.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">catch</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nb\">write-host</span> <span class=\"s2\">&#34;Error, could not retrieve backup settings and tasks&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">if</span><span class=\"p\">(!</span><span class=\"nv\">$Plans</span><span class=\"p\">){</span>\n</span></span><span class=\"line\"><span class=\"cl\">     <span class=\"nb\">write-host</span> <span class=\"s2\">&#34;No backup plan found. This device needs a backup plan assigned.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nv\">$plans</span><span class=\"p\">.</span><span class=\"n\">status</span> <span class=\"o\">-ne</span> <span class=\"s2\">&#34;OK&#34;</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">    <span class=\"nb\">write-host</span> <span class=\"s2\">&#34;The backup plan is in a failed state. Please check why.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span><span class=\"line\"><span class=\"cl\">\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nv\">$plans</span><span class=\"p\">.</span><span class=\"n\">status</span><span class=\"p\">.</span><span class=\"n\">enabled</span> <span class=\"o\">-ne</span> <span class=\"s2\">&#34;true&#34;</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n</span></span><span class=\"line\"><span class=\"cl\">   <span class=\"nb\">write-host</span> <span class=\"s2\">&#34;The backup plan is disabled.&#34;</span>\n</span></span><span class=\"line\"><span class=\"cl\"><span class=\"p\">}</span>\n</span></span></code></pre></td></tr></table>\n</div>\n</div><p>And that&rsquo;s it! a pretty straight forward approach using the vendors supplied commandline tool. I hope you enjoyed this and as always, Happy PowerShelling.</p>",
            "title": "Monitoring with PowerShell: Monitoring Acronis Backups",
            "link": "https://www.cyberdrain.com/monitoring-with-powershell-monitoring-acronis-backups/",
            "published": "2022-09-05T00:00:00.000Z",
            "author": "Kelvin@cyberdrain.com (Kelvin Tegelaar)",
            "media": []
        }
    ],
    "source": "reference/Planet PowerShell/assets/feed.xml"
}