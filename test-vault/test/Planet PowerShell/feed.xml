<?xml version="1.0" encoding="utf-8"?><rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Planet PowerShell</title><link>https://www.planetpowershell.com/</link><description>An aggregated feed from the PowerShell community</description><copyright>The copyright for each post is retained by its author.</copyright><lastBuildDate>Sun, 26 May 2024 17:27:19 Z</lastBuildDate><a10:contributor><a10:name>Aaron Nelson</a10:name><a10:uri>https://sqlvariant.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Adam Bertram</a10:name><a10:uri>https://adamtheautomator.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Alain Assaf</a10:name><a10:uri>https://alainassaf.com/</a10:uri><a10:email>alainassaf@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Alexander Koehler</a10:name><a10:uri>https://blog.it-koehler.com/en</a10:uri><a10:email>planetpowershell@it-koehler.com</a10:email></a10:contributor><a10:contributor><a10:name>Alex Neihaus</a10:name><a10:uri>https://www.yobyot.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Andy Levy</a10:name><a10:uri>https://flxsql.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Bas Wijdenes</a10:name><a10:uri>https://baswijdenes.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Bjorn Houben</a10:name><a10:uri>https://blog.bjornhouben.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Boe Prox</a10:name><a10:uri>https://www.learn-powershell.net/</a10:uri><a10:email>boeprox@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Bradley Wyatt</a10:name><a10:uri>https://www.thelazyadministrator.com/</a10:uri><a10:email>brad@thelazyadministrator.com</a10:email></a10:contributor><a10:contributor><a10:name>Brandon Olin</a10:name><a10:uri>https://devblackops.io/</a10:uri><a10:email>brandon@devblackops.io</a10:email></a10:contributor><a10:contributor><a10:name>Brian Bunke</a10:name><a10:uri>https://www.brianbunke.com/</a10:uri><a10:email>me@brianbunke.com</a10:email></a10:contributor><a10:contributor><a10:name>Catalin Cristescu</a10:name><a10:uri>https://powershell.ro/</a10:uri><a10:email>catalin@powershell.ro</a10:email></a10:contributor><a10:contributor><a10:name>Chris Gardner</a10:name><a10:uri>https://chrislgardner.github.io/</a10:uri><a10:email>halbaradkenafin@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Chris Hunt</a10:name><a10:uri>https://www.automatedops.com/</a10:uri><a10:email>cdhunt@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Christian Hoejsager</a10:name><a10:uri>https://scriptingchris.tech/</a10:uri><a10:email>christian@scriptingchris.tech</a10:email></a10:contributor><a10:contributor><a10:name>Christian Ritter</a10:name><a10:uri>https://hcritter.devdojo.com/</a10:uri><a10:email>H.christian.ritter@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Cláudio Silva</a10:name><a10:uri>https://claudioessilva.eu/</a10:uri></a10:contributor><a10:contributor><a10:name>Craig Gumbley</a10:name><a10:uri>https://www.helloitscraig.co.uk/</a10:uri></a10:contributor><a10:contributor><a10:name>Dan Tsekhanskiy</a10:name><a10:uri>https://tseknet.com/</a10:uri><a10:email>dan@tsknet.com</a10:email></a10:contributor><a10:contributor><a10:name>Darren Robinson</a10:name><a10:uri>https://blog.darrenjrobinson.com/</a10:uri><a10:email>darren@darrenjrobinson.com</a10:email></a10:contributor><a10:contributor><a10:name>Darwin Sanoy</a10:name><a10:uri>https://missionimpossiblecode.io/</a10:uri></a10:contributor><a10:contributor><a10:name>Dave Carroll</a10:name><a10:uri>https://thedavecarroll.com/</a10:uri></a10:contributor><a10:contributor><a10:name>David Christian</a10:name><a10:uri>https://overpoweredshell.com/</a10:uri><a10:email>dchristian3188@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>David Hall</a10:name><a10:uri>https://signalwarrant.com/</a10:uri></a10:contributor><a10:contributor><a10:name>David O'Brien</a10:name><a10:uri>https://david-obrien.net/</a10:uri><a10:email>me@david-obrien.net</a10:email></a10:contributor><a10:contributor><a10:name>Dirk Bremen</a10:name><a10:uri>https://powershellone.wordpress.com/</a10:uri><a10:email>rescueme@planetpowershell.com</a10:email></a10:contributor><a10:contributor><a10:name>Doug Finke</a10:name><a10:uri>https://dfinke.github.io/#blog</a10:uri><a10:email>finked@hotmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Ewerton Jordão</a10:name><a10:uri>https://medium.com/@ewertonjordao</a10:uri></a10:contributor><a10:contributor><a10:name>Faris Malaeb</a10:name><a10:uri>https://powershellcenter.com/</a10:uri><a10:email>farismalaeb@protonmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Fer Corrales</a10:name><a10:uri>https://fercorrales.com/</a10:uri><a10:email>string.Empty</a10:email></a10:contributor><a10:contributor><a10:name>Francois-Xavier Cat</a10:name><a10:uri>https://lazywinadmin.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Gabriel Talavera</a10:name><a10:uri>https://blog.hybridcloud-ops.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Glenn Sarti</a10:name><a10:uri>https://sarti.dev/</a10:uri></a10:contributor><a10:contributor><a10:name>Guido Oliveira</a10:name><a10:uri>https://www.guidooliveira.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Harm Veenstra</a10:name><a10:uri>https://powershellisfun.com/</a10:uri><a10:email>harm.veenstra@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Jaap Brasser</a10:name><a10:uri>https://www.jaapbrasser.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Jan Egil Ring</a10:name><a10:uri>https://www.powershell.no/</a10:uri><a10:email>jan.egil.ring@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Jeff Hicks</a10:name><a10:uri>https://blog.jdhitsolutions.com/</a10:uri><a10:email>jhicks@jdhitsolutions.com</a10:email></a10:contributor><a10:contributor><a10:name>Jeff Hill</a10:name><a10:uri>https://sqladm.in/</a10:uri><a10:email>Jeff.Hill@SQLAdm.in</a10:email></a10:contributor><a10:contributor><a10:name>Jeremy Murrah</a10:name><a10:uri>https://murrahjm.github.io/</a10:uri><a10:email>murrahjm@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Jerome Bezet-Torres</a10:name><a10:uri>https://jm2k69.github.io/</a10:uri><a10:email>bezettorres.jerome@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Jonathan Medd</a10:name><a10:uri>https://www.jonathanmedd.net/</a10:uri><a10:email>jon_medd@hotmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Josh King</a10:name><a10:uri>https://toastit.dev/</a10:uri><a10:email>joshua@king.geek.nz</a10:email></a10:contributor><a10:contributor><a10:name>Josh Rickard</a10:name><a10:uri>https://letsautomate.it/</a10:uri><a10:email>rickardja@live.com</a10:email></a10:contributor><a10:contributor><a10:name>Kamal Farmer</a10:name><a10:uri>https://hkeylocalmachine.com/</a10:uri><a10:email>kamal.farmer@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Kelvin Tegelaar</a10:name><a10:uri>https://www.cyberdrain.com/</a10:uri><a10:email>ktegelaar@cyberdrain.com</a10:email></a10:contributor><a10:contributor><a10:name>Kieran Jacobsen</a10:name><a10:uri>https://poshsecurity.com/</a10:uri><a10:email>code@poshsecurity.com</a10:email></a10:contributor><a10:contributor><a10:name>Kiran Patnayakuni</a10:name><a10:uri>https://kpatnayakuni.com/</a10:uri><a10:email>kiran@patnayakuni.com</a10:email></a10:contributor><a10:contributor><a10:name>Kurt Roggen [BE]</a10:name><a10:uri>https://kurtroggen.be/</a10:uri></a10:contributor><a10:contributor><a10:name>Luc Fullenwarth</a10:name><a10:uri>https://itluke.online/</a10:uri><a10:email>luke.blog@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Luke Murray</a10:name><a10:uri>https://luke.geek.nz/</a10:uri><a10:email>email@luke.geek.nz</a10:email></a10:contributor><a10:contributor><a10:name>Maciej Horbacz</a10:name><a10:uri>https://universecitiz3n.tech/</a10:uri><a10:email>maciej.horbacz@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Mark Kraus</a10:name><a10:uri>https://get-powershellblog.blogspot.com/</a10:uri><a10:email>Get-PowerShellBlog@markekraus.com</a10:email></a10:contributor><a10:contributor><a10:name>Mark Wragg</a10:name><a10:uri>https://wragg.io/</a10:uri><a10:email>mark@wragg.io</a10:email></a10:contributor><a10:contributor><a10:name>Mateusz Czerniawski</a10:name><a10:uri>https://www.mczerniawski.pl/</a10:uri><a10:email>mczerniawski@arcon.net.pl</a10:email></a10:contributor><a10:contributor><a10:name>Mathieu Buisson</a10:name><a10:uri>https://mathieubuisson.github.io/</a10:uri></a10:contributor><a10:contributor><a10:name>Matt Bobke</a10:name><a10:uri>https://mattbobke.com/</a10:uri><a10:email>matt@mattbobke.com</a10:email></a10:contributor><a10:contributor><a10:name>Matthew Dowst</a10:name><a10:uri>https://www.dowst.dev/</a10:uri></a10:contributor><a10:contributor><a10:name>Matt McNabb</a10:name><a10:uri>https://mattmcnabb.github.io/</a10:uri><a10:email>mmcnabb@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Michael Militoni</a10:name><a10:uri>https://www.v-itpassion.be/</a10:uri><a10:email>mm@v-itpassion.be</a10:email></a10:contributor><a10:contributor><a10:name>Mike Robbins</a10:name><a10:uri>https://mikefrobbins.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Mike Kanakos</a10:name><a10:uri>https://www.commandline.ninja/</a10:uri><a10:email>mkanakos@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Mike Shepard</a10:name><a10:uri>https://powershellstation.com/</a10:uri><a10:email>mshepard70@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Nicholas Dille</a10:name><a10:uri>https://dille.name/</a10:uri><a10:email>nicholas@dille.name</a10:email></a10:contributor><a10:contributor><a10:name>Nicholas Getchell</a10:name><a10:uri>https://ngetchell.com/</a10:uri><a10:email>nicholas@getchell.org</a10:email></a10:contributor><a10:contributor><a10:name>Nick Richardson</a10:name><a10:uri>https://spiderzebra.com/</a10:uri><a10:email>nick@spiderzebra.com</a10:email></a10:contributor><a10:contributor><a10:name>Ole Rand-Hendriksen</a10:name><a10:uri>https://www.randriksen.net/</a10:uri><a10:email>ole@randriksen.net</a10:email></a10:contributor><a10:contributor><a10:name>Paolo Frigo</a10:name><a10:uri>https://www.scriptinglibrary.com/</a10:uri><a10:email>paolo@scriptinglibrary.com</a10:email></a10:contributor><a10:contributor><a10:name>Paul DeArment</a10:name><a10:uri>https://randomizedharmony.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Pawel Jarosz</a10:name><a10:uri>https://paweljarosz.wordpress.com/</a10:uri><a10:email>pawel.jarosz@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Przemyslaw Klys</a10:name><a10:uri>https://evotec.xyz/hub/</a10:uri></a10:contributor><a10:contributor><a10:name>Quinten Steenhuis</a10:name><a10:uri>https://nonprofittechy.com/</a10:uri><a10:email>qsteenhuis@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Roberth Strand</a10:name><a10:uri>https://robstr.dev/</a10:uri><a10:email>me@robstr.dev</a10:email></a10:contributor><a10:contributor><a10:name>Rob Sewell</a10:name><a10:uri>https://sqldbawithabeard.com/</a10:uri></a10:contributor><a10:contributor><a10:name>Ryan Milne</a10:name><a10:uri>https://blog.milne.it/</a10:uri></a10:contributor><a10:contributor><a10:name>Ryan Yates</a10:name><a10:uri>https://blog.kilasuit.org/</a10:uri><a10:email>ryan.yates@kilasuit.org</a10:email></a10:contributor><a10:contributor><a10:name>Saggie Haim</a10:name><a10:uri>https://www.saggiehaim.net//</a10:uri><a10:email>contact@saggiehaim.net</a10:email></a10:contributor><a10:contributor><a10:name>Shane O'Neill</a10:name><a10:uri>https://nocolumnname.blog/</a10:uri></a10:contributor><a10:contributor><a10:name>Stephanos Constantinou</a10:name><a10:uri>https://www.sconstantinou.com/</a10:uri><a10:email>stephanos@sconstantinou.com</a10:email></a10:contributor><a10:contributor><a10:name>Stephen Owen</a10:name><a10:uri>https://www.foxdeploy.com/</a10:uri><a10:email>Stephen@foxdeploy.com</a10:email></a10:contributor><a10:contributor><a10:name>Thomas Lee</a10:name><a10:uri>https://tfl09.blogspot.com/</a10:uri><a10:email>DoctorDNS@Gmail.Com</a10:email></a10:contributor><a10:contributor><a10:name>Thomas Rayner</a10:name><a10:uri>https://thomasrayner.ca/</a10:uri><a10:email>thmsrynr@outlook.com</a10:email></a10:contributor><a10:contributor><a10:name>Tomasz Dabrowski</a10:name><a10:uri>https://dombrosblog.wordpress.com/</a10:uri><a10:email>dombros@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Tommy Maynard</a10:name><a10:uri>https://tommymaynard.com/</a10:uri><a10:email>tommy@tommymaynard.com</a10:email></a10:contributor><a10:contributor><a10:name>Tore Groneng</a10:name><a10:uri>https://asaconsultant.blogspot.no/</a10:uri><a10:email>tore.groneng@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Victor Silva</a10:name><a10:uri>https://blog.victorsilva.com.uy/</a10:uri><a10:email>vmsilvamolina@hotmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Warren Frame</a10:name><a10:uri>https://ramblingcookiemonster.github.io/</a10:uri><a10:email>warren.frame@gmail.com</a10:email></a10:contributor><a10:contributor><a10:name>Xajuan Smith</a10:name><a10:uri>https://powershell.city/</a10:uri><a10:email>Xajuan@live.com</a10:email></a10:contributor><image><url>https://www.planetpowershell.com/Content/Logo.png</url><title>Planet PowerShell</title><link>https://www.planetpowershell.com/</link></image><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9389</guid><link>https://jdhitsolutions.com/blog/books/9389/powershell-scripting-and-toolmaking/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=powershell-scripting-and-toolmaking</link><category>Books</category><category>PowerShell</category><category>Scripting</category><category>LeanPub</category><category>toolmaking</category><title>PowerShell Scripting and Toolmaking</title><description>Several years ago Don Jones and I wrote what we hoped would be the definitive book on PowerShell scripting and toolmaking. The book takes all off our years of experience, not only from writing PowerShell code, to teaching and conference presentations where we hear first hand what people struggle with. We published the book on...</description><pubDate>Fri, 24 May 2024 17:03:43 Z</pubDate><comments>https://jdhitsolutions.com/blog/books/9389/powershell-scripting-and-toolmaking/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/books/9389/powershell-scripting-and-toolmaking/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9389</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6896</guid><link>https://leanpub.com/psprimer</link><title>The PowerShell Practice Primer</title><description>&lt;p&gt;A collection of over 100 PowerShell learning exercises targeted for beginners developed by &lt;div id="target-id6653457b04bf8" class="collapseomatic_content_inline colomat-inline "&gt; PowerShell MVP and veteran teacher Jeff Hicks. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b04bf8"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b04bf8'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:25:00 Z</pubDate><comments>https://leanpub.com/psprimer#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;A collection of over 100 PowerShell learning exercises targeted for beginners developed by &lt;div id="target-id6653457b04e72" class="collapseomatic_content_inline colomat-inline "&gt; PowerShell MVP and veteran teacher Jeff Hicks. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b04e72"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b04e72'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://leanpub.com/psprimer/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6896</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6894</guid><link>https://gist.github.com/aeveltstra/94806a1230b8165f43e9b4e4dec9bacc#file-powershell-gui-aws-lambda-start-functions-ps1</link><title>A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output</title><description>&lt;p&gt;A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output - &lt;div id="target-id6653457b053c0" class="collapseomatic_content_inline colomat-inline "&gt; powershell-gui-aws-lambda-start-functions.ps1 &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b053c0"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b053c0'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:24:44 Z</pubDate><comments>https://gist.github.com/aeveltstra/94806a1230b8165f43e9b4e4dec9bacc#file-powershell-gui-aws-lambda-start-functions-ps1#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;A Powershell GUI using DotNet Windows.Forms to start AWS Lambda Functions and display their output - &lt;div id="target-id6653457b055b9" class="collapseomatic_content_inline colomat-inline "&gt; powershell-gui-aws-lambda-start-functions.ps1 &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b055b9"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b055b9'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://gist.github.com/aeveltstra/94806a1230b8165f43e9b4e4dec9bacc#file-powershell-gui-aws-lambda-start-functions-ps1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6894</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6893</guid><link>https://www.youtube.com/watch?v=ZqAShden9qA</link><title>Frontend PowerShell with Google Forms: Part 1 Getting your data</title><description>&lt;p&gt;[OC] Learn how to get data from a Google Form into PowerShell, by building a repeatable and reusable &lt;div id="target-id6653457b05b01" class="collapseomatic_content_inline colomat-inline "&gt; automation you can use to with any form. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b05b01"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b05b01'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:24:12 Z</pubDate><comments>https://www.youtube.com/watch?v=ZqAShden9qA#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;[OC] Learn how to get data from a Google Form into PowerShell, by building a repeatable and reusable &lt;div id="target-id6653457b05d12" class="collapseomatic_content_inline colomat-inline "&gt; automation you can use to with any form. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b05d12"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b05d12'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.youtube.com/watch?v=ZqAShden9qA/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6893</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6892</guid><link>https://www.jannemattila.com/azure/2024/05/20/automating-powershell-tasks-with-container-apps.html</link><title>Automating PowerShell tasks with Container App Jobs</title><description>&lt;p&gt;I previously wrote about Automating maintenance tasks with Azure Functions and PowerShell. That &lt;div id="target-id6653457b06249" class="collapseomatic_content_inline colomat-inline "&gt; combo has been my go-to solution for many automation tasks. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b06249"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b06249'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:23:54 Z</pubDate><comments>https://www.jannemattila.com/azure/2024/05/20/automating-powershell-tasks-with-container-apps.html#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;I previously wrote about Automating maintenance tasks with Azure Functions and PowerShell. That &lt;div id="target-id6653457b063ff" class="collapseomatic_content_inline colomat-inline "&gt; combo has been my go-to solution for many automation tasks. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b063ff"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b063ff'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.jannemattila.com/azure/2024/05/20/automating-powershell-tasks-with-container-apps.html/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6892</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6891</guid><link>https://alexholmeset.blog/2024/05/22/use-the-azure-openai-gpt-4o-all-in-one-model-with-powershell/</link><title>Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell!</title><description>&lt;p&gt;On May 13th GPT-4o was released in preview in the Azure OpenAI Playground. No API access, only &lt;div id="target-id6653457b0695e" class="collapseomatic_content_inline colomat-inline "&gt; accessible in the browser. Today I was going into the playground to test something with the GPT-4o model, but could not find it. What had happened? Turnes out it suddenly was in GA and available to choose under ... Continue reading Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell! &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b0695e"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b0695e'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:23:43 Z</pubDate><comments>https://alexholmeset.blog/2024/05/22/use-the-azure-openai-gpt-4o-all-in-one-model-with-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;On May 13th GPT-4o was released in preview in the Azure OpenAI Playground. No API access, only &lt;div id="target-id6653457b06b1a" class="collapseomatic_content_inline colomat-inline "&gt; accessible in the browser. Today I was going into the playground to test something with the GPT-4o model, but could not find it. What had happened? Turnes out it suddenly was in GA and available to choose under ... Continue reading Use the Azure OpenAI GPT-4o (all-in-one-model) with PowerShell! &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b06b1a"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b06b1a'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://alexholmeset.blog/2024/05/22/use-the-azure-openai-gpt-4o-all-in-one-model-with-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6891</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6890</guid><link>https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/</link><title>Keep Microsoft Teams status Available instead of away using PowerShell</title><description>&lt;p&gt;It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does &lt;div id="target-id6653457b07236" class="collapseomatic_content_inline colomat-inline "&gt; Microsoft Teams think I&amp;#039;m away while I&amp;#039;m not / My PC isn&amp;#039;t locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn&amp;#039;t work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :) &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b07236"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b07236'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:23:30 Z</pubDate><comments>https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does &lt;div id="target-id6653457b0742d" class="collapseomatic_content_inline colomat-inline "&gt; Microsoft Teams think I&amp;#039;m away while I&amp;#039;m not / My PC isn&amp;#039;t locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn&amp;#039;t work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :) &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b0742d"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b0742d'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6890</post-id></item><item><guid isPermaLink="false">https://psweekly.dowst.dev/?post_type=link_library_links&amp;p=6889</guid><link>https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/</link><title>Parameters for PowerShell Scripts and Functions</title><description>&lt;p&gt;Using parameters for your Scripts and Functions is very powerful. You don&amp;#039;t have to hardcode things &lt;div id="target-id6653457b079e2" class="collapseomatic_content_inline colomat-inline "&gt; in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b079e2"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b079e2'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 12:23:18 Z</pubDate><comments>https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;Using parameters for your Scripts and Functions is very powerful. You don&amp;#039;t have to hardcode things &lt;div id="target-id6653457b07be3" class="collapseomatic_content_inline colomat-inline "&gt; in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work. &lt;/div&gt;&lt;span class="collapseomatic my_button" id="id6653457b07be3"  tabindex="0" title="(+)"    &gt;(+)&lt;/span&gt;&lt;span id='swap-id6653457b07be3'  class='colomat-swap' style='display:none;'&gt;(-)&lt;/span&gt;&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6889</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7435</guid><link>https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/</link><category>Fun</category><category>Microsoft Teams</category><category>PowerShell</category><title>Keep Microsoft Teams status Available instead of away using PowerShell</title><description>It is one of the things I hear my colleagues, and even my girlfriend, mention regularly... Why does Microsoft Teams think I'm away while I'm not / My PC isn't locked yet... I read a few solutions, setting your status duration to a date in the future, etc... Didn't work :( What does work is running my simple PowerShell scripts, which I will show you in this blog post :)</description><pubDate>Thu, 23 May 2024 16:41:33 Z</pubDate><comments>https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/23/keep-microsoft-teams-status-available-instead-of-away-using-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7435</post-id></item><item><guid isPermaLink="false">https://adamtheautomator.com/?p=26256</guid><link>https://adamtheautomator.com/intune-powershell-script-upload/</link><category>IT Ops</category><category>PowerShell</category><title>Upload a PowerShell Script to Intune (With PowerShell) From Scratch</title><description>Automate deploying PowerShell scripts to Intune devices with Azure app registration, Graph API, and more in this step-by-step tutorial.</description><pubDate>Wed, 22 May 2024 20:13:52 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Bertram</dc:creator><post-id xmlns="com-wordpress:feed-additions:1">26256</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7398</guid><link>https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/</link><category>Formatting</category><category>PowerShell</category><title>Parameters for PowerShell Scripts and Functions</title><description>Using parameters for your Scripts and Functions is very powerful. You don't have to hardcode things in them, making running them from a command line easier. This blog post will show you the parameters I use in most of my scripts and how they work.</description><pubDate>Fri, 17 May 2024 13:55:11 Z</pubDate><comments>https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/17/parameters-for-powershell-scripts-and-functions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7398</post-id></item><item><guid isPermaLink="false">https://adamtheautomator.com/?p=26254</guid><link>https://adamtheautomator.com/powershell-basics-navigating-csv-files/</link><category>IT Ops</category><category>PowerShell</category><title>PowerShell Basics: Navigating CSV Files</title><description /><pubDate>Wed, 15 May 2024 20:13:25 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Bertram</dc:creator><post-id xmlns="com-wordpress:feed-additions:1">26254</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7370</guid><link>https://powershellisfun.com/2024/05/10/deprecated-powershell-modules-and-azure-ad-graph-retirement/</link><category>PowerShell</category><title>Deprecated PowerShell Modules and Azure AD Graph retirement</title><description>You created a script or function a while back that people in the company use a lot, and suddenly... They come to you telling you that it doesn't work anymore. :( The module you used has become deprecated, cmdlets don't all work anymore, etc. In this blog post, I will show the three most prominent modules that have become deprecated and where you can find good information about the successor to adjust your scripts.</description><pubDate>Fri, 10 May 2024 13:12:46 Z</pubDate><comments>https://powershellisfun.com/2024/05/10/deprecated-powershell-modules-and-azure-ad-graph-retirement/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/10/deprecated-powershell-modules-and-azure-ad-graph-retirement/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7370</post-id></item><item><guid isPermaLink="false">https://adamtheautomator.com/?p=26238</guid><link>https://adamtheautomator.com/pester-infrastructure-data-driven-tests/</link><category>IT Ops</category><category>Pester</category><category>PowerShell</category><title>PowerShell Testing Mastery with Data-Driven Pester</title><description>I’ve been using Pester for a long time off and on. I’ve always been obsessed with ensuring reliability in my PowerShell code. After writing &lt;a href="https://leanpub.com/pesterbook/"&gt;the Pester Book&lt;/a&gt; and mentioning some of the methodologies I used with Pester v4 I’ll present in this blog post, I’ve since learned Pester v5 makes my work so much easier.</description><pubDate>Fri, 10 May 2024 13:12:31 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Bertram</dc:creator><post-id xmlns="com-wordpress:feed-additions:1">26238</post-id></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3893</guid><link>https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/</link><category>Connectwise</category><category>PowerShell</category><category>API</category><category>Automation</category><category>REST</category><title>Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell</title><description>&lt;p&gt;I have recently been automating a lot within Connectwise PSA. One of the items I set out to do is to upload a file and attach it to a service ticket. This led me to the &lt;a href="https://www.techcolumnist.com/2019/01/09/powershell-connectwise-documents-api-uploading-a-document-or-attachment-to-a-ticket/" title=""&gt;following article,&lt;/a&gt; but after doing some testing, I found that some file types were not properly rendering on the Connectwise side, making me believe there was something wrong with the encoding. &lt;/p&gt;
&lt;p&gt;I could upload a &lt;code&gt;.txt&lt;/code&gt; file without issues, but I also tried with a &lt;code&gt;.docx&lt;/code&gt; and a &lt;code&gt;.pdf&lt;/code&gt;, and the file would be corrupted or blank. &lt;/p&gt;
&lt;p&gt;The process to upload a file and then link it to a service ticket is first to upload the file to the endpoint &lt;code&gt;/system/documents&lt;/code&gt; and then, from there, link the uploaded document to an existing service ticket. &lt;/p&gt;
&lt;h2 class="wp-block-heading"&gt;Multipart/Form-Data&lt;/h2&gt;
&lt;p&gt;The first thing to know about how Connectwise wants a document uploaded is that it uses what is &amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/"&gt;Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Thu, 09 May 2024 19:27:53 Z</pubDate><comments>https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;I have recently been automating a lot within Connectwise PSA. One of the items I set out to do is to upload a file and attach it to a service ticket. This led me to the &lt;a href="https://www.techcolumnist.com/2019/01/09/powershell-connectwise-documents-api-uploading-a-document-or-attachment-to-a-ticket/" title=""&gt;following article,&lt;/a&gt; but after doing some testing, I found that some file types were not properly rendering on the Connectwise side, making me believe there was something wrong with the encoding. &lt;/p&gt;



&lt;p&gt;I could upload a &lt;code&gt;.txt&lt;/code&gt; file without issues, but I also tried with a &lt;code&gt;.docx&lt;/code&gt; and a &lt;code&gt;.pdf&lt;/code&gt;, and the file would be corrupted or blank. &lt;/p&gt;



&lt;p&gt;The process to upload a file and then link it to a service ticket is first to upload the file to the endpoint &lt;code&gt;/system/documents&lt;/code&gt; and then, from there, link the uploaded document to an existing service ticket. &lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;Multipart/Form-Data&lt;/h2&gt;



&lt;p&gt;The first thing to know about how Connectwise wants a document uploaded is that it uses what is &amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/"&gt;Upload a file to Connectwise and Attach it to a Service Ticket with PowerShell&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2024/05/09/upload-a-file-to-connectwise-and-attach-it-to-a-service-ticket-with-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7339</guid><link>https://powershellisfun.com/2024/05/03/using-using-in-powershell-for-local-variables-in-remote-sessions/</link><category>PowerShell</category><title>Using $using in PowerShell for local variables in remote sessions</title><description>When running scripts that connect to remote systems using Invoke-Command, you can use your local variables in the remote session which makes things a lot easier. In this blog post, I will show you how :) </description><pubDate>Fri, 03 May 2024 13:23:49 Z</pubDate><comments>https://powershellisfun.com/2024/05/03/using-using-in-powershell-for-local-variables-in-remote-sessions/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/05/03/using-using-in-powershell-for-local-variables-in-remote-sessions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7339</post-id></item><item><guid isPermaLink="false">https://adamtheautomator.com/?p=26230</guid><link>https://adamtheautomator.com/powershell-azure-function-template/</link><category>Cloud</category><category>Azure Functions</category><category>PowerShell</category><title>Your Go-To PowerShell Template for HTTP-Triggered Azure Functions</title><description>Struggling with messy Azure Functions PowerShell code? Learn how to adapt your scripts for serverless, validate HTTP parameters, throw descriptive errors, and bind PowerShell output to HTTP responses for robust web-friendly functions.</description><pubDate>Wed, 01 May 2024 19:18:27 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Bertram</dc:creator><post-id xmlns="com-wordpress:feed-additions:1">26230</post-id></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9352</guid><link>https://jdhitsolutions.com/blog/books/9352/pick-up-powershell-practice-primer/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=pick-up-powershell-practice-primer</link><category>Books</category><category>PowerShell</category><category>LeanPub</category><title>Pick Up The PowerShell Practice Primer</title><description>A number of years ago, I published book on Leanpub, designed to help you teach yourself PowerShell. After you get through the first Month of Lunches book, what do you do next? The best way to learn PowerShell is to do it. But it might be challending trying to figure out what to do. I...</description><pubDate>Mon, 29 Apr 2024 19:02:37 Z</pubDate><comments>https://jdhitsolutions.com/blog/books/9352/pick-up-powershell-practice-primer/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/books/9352/pick-up-powershell-practice-primer/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9352</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7309</guid><link>https://powershellisfun.com/2024/04/26/report-on-non-compliant-intune-devices/</link><category>Intune</category><category>Microsoft Endpoint Manager</category><category>PowerShell</category><title>Report on Non-Compliant Intune devices</title><description>I received a question on the Microsoft Tech Community forum regarding creating a report about non-compliant Intune devices. The report should give insight into what device has what issue with which setting; the person asking the question was already working on a Microsoft Graph script but couldn't find a suitable way. In this blog post, I will show how to create this report. There are other scripts out there, but I always like a challenge (And Microsoft Graph can be quite a challenge sometimes ;) )</description><pubDate>Fri, 26 Apr 2024 12:06:34 Z</pubDate><comments>https://powershellisfun.com/2024/04/26/report-on-non-compliant-intune-devices/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/04/26/report-on-non-compliant-intune-devices/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7309</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7249</guid><link>https://powershellisfun.com/2024/04/18/report-from-which-powershell-module-the-cmdlets-are-from/</link><category>PowerShell</category><title>Report from which PowerShell module the cmdlets are from</title><description>We all encountered this: you get a script or function that uses a certain cmdlet... And it fails because the cmdlet is not recognized :( But which module should you install to get the script working? Or does your script install or import all the required modules? In this blog post, I will show you how to check from which module(s) the cmdlet(s) originate and if they are present on your system or if you should install them.</description><pubDate>Thu, 18 Apr 2024 17:09:01 Z</pubDate><comments>https://powershellisfun.com/2024/04/18/report-from-which-powershell-module-the-cmdlets-are-from/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/04/18/report-from-which-powershell-module-the-cmdlets-are-from/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7249</post-id></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18630</guid><link>https://evotec.xyz/active-directory-replication-summary-to-your-email/</link><category>Active Directory</category><category>PowerShell</category><category>active directory</category><category>powershell</category><category>replication</category><title>Active Directory Replication Summary to your Email or Microsoft Teams</title><description>&lt;p&gt;Active Directory replication is a critical process that ensures the consistent and up-to-date state of directory information across all domain controllers in a domain. Monitoring this process is important as it helps identify any issues that may arise and resolve them quickly. One way to monitor Active Directory replication is by using the Repadmin command-line tool. Repadmin provides a wealth of information about the replication status and health of a domain. However, manually checking the Repadmin output can be time-consuming and tedious, and running it manually every 30 minutes just to check if everything is great doesn't seem like a great idea. While PowerShell has its own commands around replication I've not found something as fast and reliable as repadmin /replsummary.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/active-directory-replication-summary-to-your-email/"&gt;Active Directory Replication Summary to your Email or Microsoft Teams&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Wed, 17 Apr 2024 19:25:32 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c6be043" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6be02b6450"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c68308903" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6c6834 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6c68308903"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c6ae02658"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;Active Directory replication&lt;/strong&gt; is a critical process that ensures the consistent and up-to-date state of directory information across all domain controllers in a domain. Monitoring this process is important as it helps identify any issues that may arise and resolve them quickly. One way to monitor &lt;strong&gt;Active Directory&lt;/strong&gt; replication is by using the Repadmin command-line tool. &lt;strong&gt;Repadmin&lt;/strong&gt; provides a wealth of information about the replication status and health of a domain. However, manually checking the &lt;strong&gt;Repadmin&lt;/strong&gt; output can be time-consuming and tedious, and running it manually every 30 minutes just to check if everything is great doesn't seem like a great idea. While &lt;strong&gt;PowerShell&lt;/strong&gt; has its own commands around replication I've not found something as fast and reliable as &lt;strong&gt;repadmin /replsummary&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c6ae02658{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6c6d9a" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6c6d8c6954"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c6fa66027" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6c6fa8 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6c6fa66027"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Replication Summary to an email&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c74be5347"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;So, as part of my advanced &lt;strong&gt;Active Directory&lt;/strong&gt; module called &lt;a href="https://github.com/EvotecIT/ADEssentials"&gt;&lt;strong&gt;ADEssentials&lt;/strong&gt;&lt;/a&gt;, I wrote a function that uses repadmin to generate results. Then, I use &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;&lt;strong&gt;PSWriteHTML&lt;/strong&gt; &lt;/a&gt;to process them and &lt;a href="https://github.com/EvotecIT/Mailozaurr"&gt;&lt;strong&gt;Mailozaurr&lt;/strong&gt;&lt;/a&gt; to send them to my email. Here's a how I did it:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c74be5347{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c761f6341"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$ReplicationSummary = Get-WinADForestReplicationSummary -IncludeStatisticsVariable Statistics

$Body = EmailBody {
    EmailImage -Source 'https://evotec.xyz/wp-content/uploads/2021/04/Logo-evotec-bb.png' -UrlLink '' -AlternativeText 'Logo' -Width 181 -Heigh 57 -Inline

    EmailText -Text "Dear ", "AD Team," -LineBreak
    EmailText -Text "Upon reviewing the resuls of replication I've found: "
    EmailList {
        EmailListItem -Text "Servers with good replication: ", $($Statistics.Good) -Color Black, SpringGreen -FontWeight normal, bold
        EmailListItem -Text "Servers with replication failures: ", $($Statistics.Failures) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Servers with replication delta over 24 hours: ", $($Statistics.DeltaOver24Hours) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Servers with replication delta over 12 hours: ", $($Statistics.DeltaOver12Hours) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Servers with replication delta over 6 hours: ", $($Statistics.DeltaOver6Hours) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Servers with replication delta over 3 hours: ", $($Statistics.DeltaOver3Hours) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Servers with replication delta over 1 hour: ", $($Statistics.DeltaOver1Hours) -Color Black, Red -FontWeight normal, bold
        EmailListItem -Text "Unique replication errors: ", $($Statistics.UniqueErrors.Count) -Color Black, Red -FontWeight normal, bold
    }

    if ($Statistics.UniqueErrors.Count -gt 0) {
        EmailText -Text "Unique replication errors:"
        EmailList {
            foreach ($ErrorText in $Statistics.UniqueErrors) {
                EmailListItem -Text $ErrorText
            }
        }
    } else {
        EmailText -Text "It seems you're doing a great job! Keep it up! &lt;img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f60a.png" alt="😊" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt;" -LineBreak
    }

    EmailText -Text "For more details please check the table below:"

    EmailTable -DataTable $ReplicationSummary {
        EmailTableCondition -Inline -Name "Fail" -HighlightHeaders 'Fails', 'Total', 'PercentageError' -ComparisonType number -Operator gt 0 -BackgroundColor Salmon -FailBackgroundColor SpringGreen
    } -HideFooter

    EmailText -LineBreak
    EmailText -Text "Kind regards,"
    EmailText -Text "Your automation friend"
}


$EmailSplat = @{
    From           = 'przemyslaw.klys@evotec.pl'
    To             = 'przemyslaw.klys@evotec.pl'
    Body           = $Body
    Priority       = if ($Statistics.Failures -gt 0) { 'High' } else { 'Low' }
    Subject        = 'Replication Results &lt;img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f496.png" alt="💖" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt;'
    Verbose        = $true
    WhatIf         = $false
    MgGraph        = $true
}

Connect-MgGraph
Send-EmailMessage @EmailSplat&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c761f6341{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c77528274"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;What is the result of those 50 lines of code?&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c77528274{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c77528274{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c77528274{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c77528274{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c78546449"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="bsdSZZj"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259.png"&gt;&lt;img class="alignnone wp-image-18631 size-large" src="https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-1024x1021.png" alt="" width="1024" height="1021" srcset="https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-1024x1021.png 1024w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-300x300.png 300w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-150x150.png 150w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-768x765.png 768w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259-256x256.png 256w, https://evotec.xyz/wp-content/uploads/2024/04/img_662014103d259.png 1221w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c78546449{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c78546449{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c78546449{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c78546449{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c79829575"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The &lt;strong&gt;Get-WinADForestReplicationSummary&lt;/strong&gt; function joins over 100 functions available for &lt;strong&gt;Active Directory&lt;/strong&gt; admins in the &lt;a href="https://github.com/EvotecIT/ADEssentials"&gt;&lt;strong&gt;ADEssentials&lt;/strong&gt;&lt;/a&gt; module. It's doing the heavy lifting of reading repadmin data and converting it to PowerShell objects. Then, we use the PSWriteHTML &lt;strong&gt;EmailBody&lt;/strong&gt; function, which allows for the accessible building of emails without knowing &lt;strong&gt;HTML&lt;/strong&gt; and &lt;strong&gt;CSS&lt;/strong&gt;. Finally, since I wanted to send an email with &lt;strong&gt;Microsoft Graph&lt;/strong&gt;, I've used &lt;a href="https://github.com/EvotecIT/Mailozaurr"&gt;&lt;strong&gt;Mailozaurr's&lt;/strong&gt;&lt;/a&gt; amazing &lt;strong&gt;Send-EmailMessage&lt;/strong&gt; to send an email.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c79829575{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c79829575{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c79829575{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c79829575{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6c7bfe" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6c7bf33856"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c7dce7246" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6c7dd0 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6c7dce7246"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c7f458876"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;What if you don't like emails? How about &lt;strong&gt;Microsoft Teams&lt;/strong&gt;?&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c7f458876{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c80515054"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;New-AdaptiveCard -Uri $TeamsUri {
    New-AdaptiveColumnSet {
        New-AdaptiveColumn -Width auto {
            New-AdaptiveImage -Url "https://evotec.xyz/wp-content/uploads/2021/04/Logo-evotec-bb.png" -Size Large -Style default
        }
        New-AdaptiveColumn -Width stretch {
            New-AdaptiveTextBlock -Text "Replication Summary" -Weight Bolder -Wrap
            if ($Statistics.Failures -gt 0) {
                $Summary = "There are $($Statistics.Failures) servers with replication issues. Please take a look and fix ASAP."
            } else {
                $Summary = "All servers are in good shape. Keep up the good work!"
            }
            New-AdaptiveTextBlock -Text $Summary -Subtle -Spacing None -Wrap
        }
    }
    New-AdaptiveContainer {
        New-AdaptiveTextBlock -Text "ad.evotec.pl" -Size Medium -Wrap
        New-AdaptiveTextBlock -Text "" -Subtle -Spacing None -Wrap
        New-AdaptiveTextBlock -Text (Get-Date)
    }
    New-AdaptiveContainer {
        New-AdaptiveColumnSet {
            New-AdaptiveColumn {
                New-AdaptiveTextBlock -Text "▲ $($Statistics.Good) servers with good replication" -Color Good -Spacing None
                New-AdaptiveTextBlock -Text "▼ $($Statistics.Failures) servers with failing replication" -Color Attention -Spacing None
            } -Width Stretch
            New-AdaptiveColumn {
                New-AdaptiveFactSet {
                    foreach ($Entry in $Statistics.GetEnumerator() | Select-Object -Skip 1 -Last 5) {
                        New-AdaptiveFact -Title $Entry.Key -Value $Entry.Value
                    }
                }
            } -Width Auto
        }
    } -Spacing None
} -FullWidth&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c80515054{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c80515054{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c80515054{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c80515054{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c816f7567"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;And what do you get? Nice and fancy replication summary in Teams &lt;img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f60a.png" alt="😊" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c816f7567{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c82663844"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="zGRgLVr"&gt;&lt;img class="alignnone wp-image-18636 size-large" src="https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-1024x461.png" alt="" width="1024" height="461" srcset="https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-1024x461.png 1024w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-300x135.png 300w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc-768x346.png 768w, https://evotec.xyz/wp-content/uploads/2024/04/img_66201fcd4dbcc.png 1135w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c82663844{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c82663844{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c82663844{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c82663844{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6c8458" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6c84494741"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6c862c1286" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6c862e "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6c862c1286"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;What do I need?&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c89082775"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To get it up and running you just need to:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c89082775{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c89082775{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c89082775{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c89082775{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c8a0c9088"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="generic"&gt;Install-Module PSWriteHTML -Force -Verbose
Install-Module ADEssentials -Force -Verbose
# if you like emails
Install-Module Mailozaurr -Force -Verbose

# if you like teams
Install-Module PSTeams -Force -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8a0c9088{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6c8b334289"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Once modules are installed, you only modify the email body to suit your needs and send an email splat with the proper parameters, as your email provider requires. Alternatively, you can change the team's template or use it as is via &lt;strong&gt;Teams Incoming Webhooks&lt;/strong&gt;. If you need more details on how to configure &lt;a href="https://github.com/EvotecIT/PSTeams"&gt;&lt;strong&gt;PSTeams&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/EvotecIT/Mailozaurr"&gt;&lt;strong&gt;Mailozaurr&lt;/strong&gt;&lt;/a&gt;, or use email-building functionality with &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;&lt;strong&gt;PSWriteHTML&lt;/strong&gt;&lt;/a&gt;, I invite you to search via multiple blogs that cover this functionality.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6c8b334289{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/active-directory-replication-summary-to-your-email/"&gt;Active Directory Replication Summary to your Email or Microsoft Teams&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7187</guid><link>https://powershellisfun.com/2024/04/11/powershell-data-reference-types-for-varriables/</link><category>PowerShell</category><title>PowerShell data/reference types for variables</title><description>When you store data in a variable, PowerShell can store it how you want it to be if you use the correct data type. This blog post will show you how that works and which data types I mostly use for my scripts.</description><pubDate>Thu, 11 Apr 2024 09:56:09 Z</pubDate><comments>https://powershellisfun.com/2024/04/11/powershell-data-reference-types-for-varriables/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/04/11/powershell-data-reference-types-for-varriables/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7187</post-id></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7114</guid><link>https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/</link><category>Hyper-V</category><category>PowerShell</category><category>Security</category><category>Windows Updates</category><title>Installing Windows Updates on all your Hyper-V lab VMs using PowerShell and PSWindowsUpdate</title><description>I&amp;#8217;m a Consultant who does a lot of Intune testing, and I use Hyper-V on my laptop with many VMs in customer environments. Some VMs are used more than others, but when you turn them on after a few weeks&amp;#8230; They need updates and restarts, and I wanted to automate that process so that it &amp;#8230; &lt;a href="https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;Installing Windows Updates on all your Hyper-V lab VMs using PowerShell and PSWindowsUpdate&lt;/span&gt;&lt;/a&gt;</description><pubDate>Thu, 04 Apr 2024 15:00:09 Z</pubDate><comments>https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/04/04/installing-windows-updates-on-all-your-hyper-v-lab-vms-using-powershell-and-pswindowsupdate/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7114</post-id></item><item><guid isPermaLink="false">https://wragg.io/converting-azure-devops-classic-release-pipelines-to-yaml</guid><link>https://wragg.io/converting-azure-devops-classic-release-pipelines-to-yaml/</link><author>mark@wragg.io</author><category>powershell</category><category>azure</category><category>azuredevops</category><category>pipelines</category><category>YAML</category><title>Converting Azure DevOps Classic Release deployment pipelines to YAML</title><description>I recently migrated some Azure DevOps Classic Release deployment pipelines to YAML. There’s obvious benefits to storing your pipelines as code: they become an artifact in source control that can evolve and change as the code they build or deploy does, and you have the benefits of version history and maintaining the pipelines via pull requests. However I also found that I could use logic and expressions to make the pipelines more efficient and easier to maintain and that through templating could easily connect the pipelines together to form what I humorously dubbed the “super pipeline” (but then the name stuck). In this blog post I will explain the approach I took and the advantages/disadvantages I discovered.</description><pubDate>Tue, 02 Apr 2024 12:00:00 Z</pubDate><a10:updated>2024-04-02T12:00:00Z</a10:updated><a10:content type="html" xml:base="https://wragg.io/converting-azure-devops-classic-release-pipelines-to-yaml/">&lt;p&gt;I recently migrated some Azure DevOps Classic Release deployment pipelines to YAML. There’s obvious benefits to storing your pipelines as code: they become an artifact in source control that can evolve and change as the code they build or deploy does, and you have the benefits of version history and maintaining the pipelines via pull requests. However I also found that I could use logic and expressions to make the pipelines more efficient and easier to maintain and that through templating could easily connect the pipelines together to form what I humorously dubbed the “super pipeline” (but then the name stuck). In this blog post I will explain the approach I took and the advantages/disadvantages I discovered.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Maybe the real treasure was the automation improvements we made along the way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Originally Azure DevOps featured two sections for building pipeline automation, named Builds and Releases. Several years ago Microsoft renamed the Builds section to just “Pipelines” to better reflect that they can be used to create automation for any purpose (including builds or releases), or if you’re doing CI/CD, a single pipeline that both builds and releases. Pipelines that you create under “Pipelines” can still be built via the UI, or they can be stored as one or more YAML files in source control. In contrast, pipelines built under “Releases” can only be configured via the Azure DevOps UI. These pipelines do feature a version history, but its only visible within Azure DevOps.&lt;/p&gt;

&lt;h2 id="getting-started"&gt;Getting started&lt;/h2&gt;

&lt;p&gt;Getting started with YAML pipelines can be a little intimidating. If you go to Pipelines (underneath Pipelines..) and click the “New Pipeline” button in the top right, Azure DevOps will take you through a sort of setup wizard (because Microsoft 😝). You’ll first need to select where your code is, which can be an Azure DevOps repository, Github repository, bitbucket cloud or several other option (it’s nice that you can use Azure DevOps to build or automate code that lives elsewhere). Once you’ve picked a location, its going to ask you if you have an existing pipeline definition (i.e a YAML file that is already in the repository) or if you want to create a new one. You can choose “starter pipeline” to have a very basic scaffolding at the top, or choose from a number of templates for different build purposes (it will suggest templates based on the kind of code it finds in the repository you selected). But all of this is very build focussed, and there’s nothing overly useful here for someone looking to create a deployment pipeline.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’re converting a Classic Build pipeline to YAML, the process is relatively simple as you can export the whole pipeline as YAML via one step. See the &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/migrate/from-classic-pipelines?view=azure-devops"&gt;official guidance here&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;Unfortunately there’s not a built-in way to do the same for Classic Release pipelines. This third party tool can apparently do it, but I didn’t personally try it so use at your own risk:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;a href="https://github.com/f2calv/yamlizr"&gt;https://github.com/f2calv/yamlizr&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Personally I started from scratch, so I suggest finding a suitable location in whatever repository you want to store your pipeline, and create a new file there called (for example) &lt;code class="language-plaintext highlighter-rouge"&gt;Deployment.yml&lt;/code&gt; (or whatever you want to name it).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Working with YAML pipelines can be fiddly, because YAML requires things be indented correctly. I recommend using Visual Studio Code, and installing the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azure-devops.azure-pipelines"&gt;Azure Pipelines Extension&lt;/a&gt; as well as an extension to help with formatting YAML, such as &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;If you’re new to YAML pipelines I also recommend reading the &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops"&gt;Azure DevOps pipelines documentation&lt;/a&gt;, to familiarise yourself with things such as the &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/get-started/key-pipelines-concepts?view=azure-devops"&gt;key concepts&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Classic Release pipelines I migrated were separated into stages, with a single stage per environment. We would then create a Release, which would consume the artifacts from several builds that contained the built version of the product being deployed, and manually trigger each environment stage whenever we were ready to deploy. There’s lots of different ways to implement this as YAML, I could create a pipeline per environment, or have pipelines that deploy to multiple environments, but what I decided to do was use &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops&amp;amp;pivots=templates-includes"&gt;Templates&lt;/a&gt;, so that the pipeline could be defined once, but have an environment parameter in it to specify which environment was being deployed.&lt;/p&gt;

&lt;h2 id="parameters"&gt;Parameters&lt;/h2&gt;

&lt;p&gt;To specify parameters, your YAML file needs a parameters section, under which you create one or more parameters by specifying a name, type and default value. If you want the parameter to be a drop-down selection, you can specify a list of accepted values:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Environment&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Test"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Staging"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;UAT"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Production"&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Test"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the pipeline is executed, the environment selection needs to make sure that we’re using variables specific to that environment. Under the Classic Release pipeline, if you took the approach of having a stage per environment, you could then have variables scoped to that environment (stage). To achieve the same result for the YAML pipeline, we can create Variable Groups, which we link to the template.&lt;/p&gt;

&lt;h2 id="variable-groups"&gt;Variable Groups&lt;/h2&gt;

&lt;p&gt;To create Variable Groups, in Azure DevOps go to Pipelines &amp;gt; Library. You might want to create a variable group called “All environments”, which has default values, or values that apply to all environments. On the Classic Release pipelines the equivalent of this would be variables that were Release scoped. You might also want to create variable groups that apply to more than one of your environments, for values that are the same for all environments of that type, for example: “Non-production environments” and “Production environments”. Finally you want to create a variable group for each specific environment, for example: “Test”, “Staging”, “UAT” etc. Within each of your variable groups, create the various environment specific variables that are required for deployment.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that with the Classic Release pipelines, the variables you created on a pipeline would be cloned when you created a Release, and then any changes you made to the variables on that Release would affect it only. With variable groups, the variables are read from the group at time of execution, so bear in mind that any changes you make to the variables that reference your groups will affect old and new deployments alike.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="variables"&gt;Variables&lt;/h2&gt;

&lt;p&gt;Having created your variable groups, you can now reference them in the YAML template, via a &lt;code class="language-plaintext highlighter-rouge"&gt;variables&lt;/code&gt; section. The order in which you specify each group is important, if the same named variable is in multiple groups the last one defined will be used. So define them in priority order. For example:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;All&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;environments"&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;${{ if in(parameters.Environment, 'Test','Staging') }}&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Non-production&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;environments"&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;${{ if in(parameters.Environment, 'UAT', 'Prod') }}&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Production&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;environments"&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.Environment }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the above I’ve used a &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#conditional-insertion"&gt;conditional expression&lt;/a&gt; to define the inclusion of the prod/non-prod groups based on the Environment parameter matching one or more specified names. And then I just use the Environment parameter value itself to include the variable group that I created for the specified environment. The &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/template-expressions?view=azure-devops"&gt;template expression syntax&lt;/a&gt; &lt;code class="language-plaintext highlighter-rouge"&gt;${{ }}&lt;/code&gt; is used to include these bits of logic. These get processed when the pipeline is initialised.&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;p&gt;Because we have separate build pipelines (that generate our deployment artifacts such as infrastructure templates and a compiled release of the software) we next define a &lt;code class="language-plaintext highlighter-rouge"&gt;resources&lt;/code&gt; section. &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/resources?view=azure-devops&amp;amp;tabs=schema"&gt;Resources&lt;/a&gt; are anything used by a pipeline that live outside the pipeline. This can include other Azure DevOps pipelines as well as builds from other external CI systems.&lt;/p&gt;

&lt;p&gt;In my case, I need to consume some other Azure DevOps pipelines, for example one that builds my infrastructure artifacts (such as ARM templates and deployment scripts) and one that builds the product itself. Because these are Azure DevOps pipelines, we consume them by specifying &lt;code class="language-plaintext highlighter-rouge"&gt;pipelines&lt;/code&gt;. The value given for &lt;code class="language-plaintext highlighter-rouge"&gt;pipeline&lt;/code&gt; is the alias I want to refer to them via later in the code, &lt;code class="language-plaintext highlighter-rouge"&gt;project&lt;/code&gt; is the name of the Azure DevOps project they exist in, &lt;code class="language-plaintext highlighter-rouge"&gt;source&lt;/code&gt; is the actual name of the pipeline, and &lt;code class="language-plaintext highlighter-rouge"&gt;version&lt;/code&gt; is the specific build version I want to consume.&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pipelines&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;pipeline&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;InfraBuild"&lt;/span&gt;
      &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MyProject"&lt;/span&gt;
      &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Build_Our_Infrastructure"&lt;/span&gt;
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;1.0.123&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;pipeline&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ProductBuild"&lt;/span&gt;
      &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MyProject"&lt;/span&gt;
      &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Build_Our_Product"&lt;/span&gt;
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;1.0.456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="trigger"&gt;Trigger&lt;/h2&gt;

&lt;p&gt;The next thing I define in my YAML pipeline is the &lt;code class="language-plaintext highlighter-rouge"&gt;trigger&lt;/code&gt;. By default pipelines trigger whenever there is a commit to any branch in their respective repository, but because this is a deployment pipeline that I want to trigger manually, we need to set trigger to none.&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="stages"&gt;Stages&lt;/h2&gt;

&lt;p&gt;We’re now ready to start defining the actual tasks the deployment pipeline will perform. You don’t have to use stages as part of this, but by grouping the different associated sets of tasks into stages you can then easily enable or disable them at the point where you run the deployment. For example you might have a pipeline that deploys databases, configuration and then the application/s. It might make sense to split these into stages if you might have a run in the future where you only want to execute a subset of them.&lt;/p&gt;

&lt;p&gt;To define stages we need to specify &lt;code class="language-plaintext highlighter-rouge"&gt;stages:&lt;/code&gt; and then under that each stage with a name. Within the stage we can define &lt;code class="language-plaintext highlighter-rouge"&gt;displayName&lt;/code&gt; to have a more descriptive title appear in the UI when the pipeline is run. You use &lt;code class="language-plaintext highlighter-rouge"&gt;pool&lt;/code&gt; to define which of your Azure DevOps deployment pools will execute this task. You can define this at the top level if all of your tasks will run under the same pool, but for my pipeline I wanted some tasks to run via a self hosted agent and some tasks to run via Microsoft-Hosted agents, so it was necessary to define it at the stage level.&lt;/p&gt;

&lt;p&gt;Within each Stage you can have one or more &lt;code class="language-plaintext highlighter-rouge"&gt;jobs&lt;/code&gt;. We use a special job type here called &lt;code class="language-plaintext highlighter-rouge"&gt;deployment&lt;/code&gt; to indicate to Azure DevOps that this is a &lt;a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/process/deployment-jobs?view=azure-devops"&gt;deployment job&lt;/a&gt; we’re running. Under deployment you specify &lt;code class="language-plaintext highlighter-rouge"&gt;environment&lt;/code&gt; which then allows you to view your deployments per environment under the Pipelines &amp;gt; Environments section of Azure DevOps. In the example below i’m using the &lt;code class="language-plaintext highlighter-rouge"&gt;Environments&lt;/code&gt; parameter value to populate this via the expression syntax. We then need to specify &lt;code class="language-plaintext highlighter-rouge"&gt;strategy&lt;/code&gt; because this is a deployment job. For my purpose this needs to be &lt;code class="language-plaintext highlighter-rouge"&gt;runOnce&lt;/code&gt; because I’m just deploying to a single environment and I just want each phase of the deployment to run once. You can split your tasks under different phases (predeploy, deploy, routeTraffic and postRouteTraffic) but I personally just have all my tasks under deploy. Finally you use &lt;code class="language-plaintext highlighter-rouge"&gt;steps:&lt;/code&gt; under which you then define each of the tasks to be performed.&lt;/p&gt;

&lt;p&gt;Here’s an example first stage, with some tasks for unzipping and deploying a database DACPAC:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DatabaseDeployment&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Database"&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;My&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Deployment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pool"&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DatabaseDeployment&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.Environment }}&lt;/span&gt;
        &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;download&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ProductBuild&lt;/span&gt;
                  &lt;span class="na"&gt;artifact&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Database&lt;/span&gt;
                  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Download Database Release&lt;/span&gt;

                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ExtractFiles@1&lt;/span&gt;
                  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Extract&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Database&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;zip&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file"&lt;/span&gt;
                  &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                    &lt;span class="na"&gt;archiveFilePatterns&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;ProductBuild\Database\Database.zip'&lt;/span&gt;
                    &lt;span class="na"&gt;destinationFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;ProductBuild\Database'&lt;/span&gt;
                    &lt;span class="na"&gt;cleanDestinationFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureKeyVault@1&lt;/span&gt;
                  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Get&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Database&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;password&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;from&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;KeyVault"&lt;/span&gt;
                  &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                    &lt;span class="na"&gt;azureSubscription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;$(azureSubscription)"&lt;/span&gt;
                    &lt;span class="na"&gt;KeyVaultName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;$(KeyVaultName)"&lt;/span&gt;
                    &lt;span class="na"&gt;SecretsFilter&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DatabasePassword&lt;/span&gt;

                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;SqlAzureDacpacDeployment@1&lt;/span&gt;
                  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Product&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Database"&lt;/span&gt;
                  &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                    &lt;span class="na"&gt;azureSubscription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;$(azureSubscription)"&lt;/span&gt;
                    &lt;span class="na"&gt;ServerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;productdb-$(EnvironmentName).database.windows.net"&lt;/span&gt;
                    &lt;span class="na"&gt;DatabaseName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ProductDatabase&lt;/span&gt;
                    &lt;span class="na"&gt;SqlUsername&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;databaseadmin&lt;/span&gt;
                    &lt;span class="na"&gt;SqlPassword&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;$(DatabasePassword)"&lt;/span&gt;
                    &lt;span class="na"&gt;DacpacFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ProductBuild/Database/ProductDatabase.dacpac"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that the first task here is downloading the required artifact from one of the resources I specified in &lt;code class="language-plaintext highlighter-rouge"&gt;resources:&lt;/code&gt;. By default this task would download all artifacts from the resource, but if you know for a specific stage that you only need a subset of them (and assuming your build outputs multiple resources), then you can specify just the ones you need to speed things up.&lt;/p&gt;

&lt;p&gt;If you’re converting a Classic Release pipeline to YAML, you can get the YAML for your individual tasks by going to your Classic Release pipeline and the Tasks view. Then for each individual task there is a “View YAML” link in the top right. You can copy this and paste it into your YAML file, ensuring you indent it appropriately. If the task references a different resource name alias than the one you configured in the &lt;code class="language-plaintext highlighter-rouge"&gt;resources:&lt;/code&gt; section you’ll need to update that. It will also add comments to the top of the YAML it produces warning you of any variables that have been used that you’d then need to either define on the pipeline directly (under &lt;code class="language-plaintext highlighter-rouge"&gt;variables:&lt;/code&gt;) or via the variable groups I suggested earlier.&lt;/p&gt;

&lt;p&gt;You can see in my example tasks above that I reference a &lt;code class="language-plaintext highlighter-rouge"&gt;$(azureSubscription)&lt;/code&gt; variable, that is the name of my Azure Subscription. This would be the sort of variable that would exist in my Non-production environments and Production environments variable groups, as I’d have a separate subscription for each. And then i’ve got &lt;code class="language-plaintext highlighter-rouge"&gt;$(KeyVaultName)&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;$(EnvironmentName)&lt;/code&gt; variables, these would be environment specific values that would exist in each of my environment variable groups. The &lt;code class="language-plaintext highlighter-rouge"&gt;$()&lt;/code&gt; syntax is the same variable substitution syntax that is used on the Classic Release pipelines. Note that variables using this syntax are populated when the pipeline runs.&lt;/p&gt;

&lt;h2 id="dependencies"&gt;Dependencies&lt;/h2&gt;

&lt;p&gt;The stages / jobs / tasks that you specify in a YAML pipeline will execute in the order that you list them, but you can use the &lt;code class="language-plaintext highlighter-rouge"&gt;dependsOn&lt;/code&gt; setting to specify that certain stages depend on the execution of one or more previous ones. This is also how you can specify certain stages to execute in parallel. For example, imagine I had my DatabaseDeployment stage above, and then I had stages called ConfigurationDeployment and ApplicationDeployment. Lets say my configuration gets written into the database, and my application will just keep polling for it if until it exists. So to speed up my deployment i’m happy for my configuration and application to deploy in parallel, so long as the database has been deployed. By using &lt;code class="language-plaintext highlighter-rouge"&gt;dependsOn&lt;/code&gt; these two stages will run in parallel:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigurationDeployment&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Configuration"&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;My&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Deployment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pool"&lt;/span&gt;
    &lt;span class="na"&gt;dependsOn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DatabaseDeployment&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigurationDeployment&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.Environment }}&lt;/span&gt;
        &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;...&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ApplicationDeployment&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Application"&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;My&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Deployment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pool"&lt;/span&gt;
    &lt;span class="na"&gt;dependsOn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DatabaseDeployment&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ApplicationDeployment&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.Environment }}&lt;/span&gt;
        &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the tasks to execute in parallel you need to be using a deployment pool that supports more than 1 parallel job. If you’re using the free tier Microsoft-hosted agents and a private project you only get 1 job by default. If you purchase parallel jobs you have to purchase at least 2 (once you have a paid job the free one no longer applies).&lt;/p&gt;

&lt;p&gt;If you want some tasks to execute in parallel at the beginning of your pipeline, you can specify &lt;code class="language-plaintext highlighter-rouge"&gt;dependsOn: []&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="repetition"&gt;Repetition&lt;/h2&gt;

&lt;p&gt;If you have a number of repetitive tasks in your YAML pipeline, you can use the &lt;code class="language-plaintext highlighter-rouge"&gt;each&lt;/code&gt; expression to repeat them so you only have to specify them (and therefore maintain them) once. For example, if you need to deploy 3 applications to Azure App Service, you could do something like the following:&lt;/p&gt;

&lt;p&gt;First you need a parameter defined to specify the list of items (in this case applications) to deploy:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AppsToDeploy&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;object&lt;/span&gt;
    &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;App1"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;App2"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;App3"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then for your task (or for a set of tasks, or you could do it at the stage level) you specify the &lt;code class="language-plaintext highlighter-rouge"&gt;each&lt;/code&gt; expression:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;${{ each app in parameters.AppsToDeploy }}&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureRmWebAppDeployment@3&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;app&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;App&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Service"&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azureSubscription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(azureSubscription)'&lt;/span&gt;
      &lt;span class="na"&gt;WebAppName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ app }}&lt;/span&gt;
      &lt;span class="na"&gt;Package&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/ProductBuild/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;app&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;app&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}.zip'&lt;/span&gt;
      &lt;span class="na"&gt;SetParametersFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/ProductBuild/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;app&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;app&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}.SetParameters.xml'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you do this at the stage level, then when you select Run Pipeline in Azure DevOps, the pipeline will be initialised and these stages setup, which if you then select “Stages to run” under Advanced options, you’ll see them (and if you only wanted to deploy one of the applications, you could turn one or more of the stages off).&lt;/p&gt;

&lt;p&gt;Having the input values as a parameter would mean that you would see (and could modify them) at the the time of triggering the pipeline. However we can hide them away by making the application deployment stages a separate template.&lt;/p&gt;

&lt;p&gt;To do this, you would create a new YAML file called something like &lt;code class="language-plaintext highlighter-rouge"&gt;ApplicationDeployment-Stages.yml&lt;/code&gt;. This would need to have all the necessary parameters for the applicaiton deployment tasks (for example the &lt;code class="language-plaintext highlighter-rouge"&gt;Environment&lt;/code&gt; one, as well as the &lt;code class="language-plaintext highlighter-rouge"&gt;AppsToDeploy&lt;/code&gt; one above). But in this template you don’t then specify the &lt;code class="language-plaintext highlighter-rouge"&gt;resources:&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;variables:&lt;/code&gt; or &lt;code class="language-plaintext highlighter-rouge"&gt;trigger:&lt;/code&gt; sections. After the parameters, just specify the various stages, jobs and tasks that apply to App Deployment.&lt;/p&gt;

&lt;p&gt;Then back in our &lt;code class="language-plaintext highlighter-rouge"&gt;Deployment.yml&lt;/code&gt; template, we can remove all of the application deployment tasks and instead reference the template, along with any input parameters we want to pass along, for example:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ApplicationDeployment-Stages.yml&lt;/span&gt;
    &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.Environment }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;AppsToDeploy&lt;/code&gt; parameter no longer needs to be present on the &lt;code class="language-plaintext highlighter-rouge"&gt;Deployment.yml&lt;/code&gt; file, as within &lt;code class="language-plaintext highlighter-rouge"&gt;ApplicationDeployment-Stages.yml&lt;/code&gt; its default value is then always used.&lt;/p&gt;

&lt;p&gt;By separating off groups of related stages into separate templates, you can build different combinations of the templates for different purposes. And this where I ended up creating a “super pipeline”, as once I had a template for infrastructure deployment, application deployment etc. I could then have a pipeline that referenced each of them to have a single pipeline to do a full deployment (such as when standing up an environment for testing). While still having separate definitions for when I just needed to do either infrastructure or application deployments.&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There’s a lot to love about YAML pipelines. As I said in the beginning, having everything defined as code (including your pipelines), is powerful in itself because you get all the benefits of source control when maintaining those code artifacts, and (if you implement templates well) pipelines that are a lot less hassle to maintain. Being able to use the &lt;code class="language-plaintext highlighter-rouge"&gt;if&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;each&lt;/code&gt; expressions allows you to build pipelines that are more versatile and easier to execute. With the Classic Release pipelines running a subset of tasks would usually mean editing a release to enable/disable certain tasks. But with the YAML pipelines well defined parameters or stages allow you to implement this flexibility as part of the design. And although you can also do parallel tasks in the Classic Release pipelines its a lot less effort to implement via YAML.&lt;/p&gt;

&lt;p&gt;That being said, there’s a few downsides as well. If you used the approach of having stages per environment in your Classic Release pipelines, then it was very easy to see which environment was deployed to which release, and you could take a kind of left to right deployment approach. Although there is the Environments pane within Azure DevOps that gets populated when you use a &lt;code class="language-plaintext highlighter-rouge"&gt;Deployment&lt;/code&gt; type job, its not as easy to see the current status of your environments against each other. One way in which I made this a little more transparent was to implement the &lt;code class="language-plaintext highlighter-rouge"&gt;name:&lt;/code&gt; setting in my pipelines, to customise the run name to include the environment and the version of the product being deployed. For example:&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Application Deployment - ${{ parameters.Environment }} - 1.0.123 - Run $(Rev:r)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The other downside is with the variables. As I noted earlier, the variable groups are very similar to how you’d configure variables on the release pipelines, but there’s no concept of creating a release that then stamps a version of those variables. In a way this is a positive as well, because maintaining variables on the Classic Release pipelines can be a bit of a nightmare when they’re copied all over the place, but if you make some changes to your variable groups for the next release, and those changes weren’t appropriate for the previous release then you’ve broken some backwards compatibility. There’s ways to workaround this but it requires thought and careful consideration.&lt;/p&gt;

&lt;p&gt;Personally I found the positives outweighed the negatives and ended up with some easy to maintain pipelines that reduced the deployment time by multiple hours, and allowed me to build the “super pipeline” so I can one click deploy test environments. I also built an environment removal pipeline to have a one click tear down. Which means costs saved, by making it easy to run and remove environments only when required.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7075</guid><link>https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/</link><category>Formatting</category><category>Logs</category><category>Networking</category><category>Security</category><title>Use PowerShell to create report of a DTS Compliant NPS log</title><description>One of our customers had issues authenticating clients using NPS. One of the first things you do is&amp;#8230; I read the NPS logs, and they were DTS Compliant formatted, a bit of a pain to read and search 🙁 So, I used PowerShell to create a nice log for me in either a GridView or &amp;#8230; &lt;a href="https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;Use PowerShell to create report of a DTS Compliant NPS log&lt;/span&gt;&lt;/a&gt;</description><pubDate>Thu, 28 Mar 2024 15:11:00 Z</pubDate><comments>https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/03/28/use-powershell-to-create-report-of-a-dts-compliant-nps-log/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7075</post-id></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3849</guid><link>https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/</link><category>AI</category><category>CLI</category><category>Copilot</category><category>GitHub</category><category>PowerShell</category><category>Zsh</category><title>Getting Started with GitHub Copilot in the CLI</title><description>&lt;figure class="wp-block-image size-large"&gt;&lt;img fetchpriority="high" decoding="async" width="1024" height="538" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png" alt="" class="wp-image-3861" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png 1024w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-300x158.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-768x403.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1536x806.png 1536w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-2048x1075.png 2048w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-514x270.png 514w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-850x446.png 850w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/figure&gt;
&lt;p&gt;It was announced recently that GitHub Copilot in the CLI has reached General Availablity for all Individual, Business, and Enterprise customers. In this post, I will show you how you can get download and install the CLI and Copilot extension, authenticate to use Copilot, and the available commands and use cases. &lt;/p&gt;
&lt;h1 class="wp-block-heading"&gt;Install the GitHub CLI&lt;/h1&gt;
&lt;h2 class="wp-block-heading"&gt;Windows &lt;/h2&gt;
&lt;p&gt;With Windows, we can install the GitHub CLI via the command line (Winget, Chocolatey, or Scoop)  or manually from &lt;a href="https://cli.github.com/" target="_blank" rel="noopener" title=""&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class="wp-block-heading"&gt;Winget&lt;/h3&gt;
&lt;p&gt;With Winget, we can install the GitHub CLI using the following command: &lt;/p&gt;
&lt;div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="" style="font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"&gt;&lt;span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"&gt;&lt;g fill="none" fill-rule="evenodd" transform="translate(1 1)"&gt;&lt;circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"&gt;&lt;/circle&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span role="button" tabindex="0" data-code="winget install --id GitHub.cli" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"&gt;&lt;path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"&gt;&lt;/path&gt;&lt;path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"&gt;&lt;code&gt;&lt;span class="line"&gt;&lt;span style="color: #88C0D0"&gt;winget&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;install&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;--id&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;GitHub.cli&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;figure class="wp-block-image size-full"&gt;&lt;img decoding="async" width="804" height="543" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png" alt="" class="wp-image-3864" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png 804w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-300x203.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-768x519.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-400x270.png 400w" sizes="(max-width: 804px) 100vw, 804px" /&gt;&lt;/figure&gt;
&lt;h2 class="wp-block-heading"&gt;MacOS&lt;/h2&gt;
&lt;p&gt;With MacOS, we can install the GitHub CLI via homebrew or manually from &lt;a href="https://cli.github.com/" target="_blank" rel="noopener" title="here"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class="wp-block-heading"&gt;Homebrew&lt;/h3&gt;
&lt;p&gt;Using homebrew, run the following command:&lt;/p&gt;
&lt;div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="" style="font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"&gt;&lt;span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"&gt;&lt;g fill="none" fill-rule="evenodd" transform="translate(1 1)"&gt;&lt;circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"&gt;&lt;/circle&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span role="button" tabindex="0" data-code="brew install gh" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"&gt;&lt;path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"&gt;&lt;/path&gt;&lt;path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"&gt;&lt;code&gt;&lt;span class="line"&gt;&lt;span style="color: #88C0D0"&gt;brew&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;install&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;gh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;figure class="wp-block-image size-full"&gt;&lt;img decoding="async" width="822" height="700" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png" alt="" class="wp-image-3850" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png 822w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-300x255.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-768x654.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-317x270.png 317w" sizes="(max-width: 822px) 100vw, 822px" /&gt;&lt;/figure&gt;
&lt;h1 class="wp-block-heading"&gt;Authenticate &lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In order to use Copilot in the CLI, you must have an active GitHub Copilot subscription. &lt;/p&gt;
&lt;p&gt;Once you have a valid subscription to use Copilot, run the &amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/"&gt;Getting Started with GitHub Copilot in the CLI&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 22 Mar 2024 16:42:13 Z</pubDate><comments>https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;figure class="wp-block-image size-large"&gt;&lt;img loading="lazy" decoding="async" width="1024" height="538" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png" alt="" class="wp-image-3861" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1024x538.png 1024w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-300x158.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-768x403.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-1536x806.png 1536w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-2048x1075.png 2048w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-514x270.png 514w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/315276420-2e3719ca-371b-4542-b00d-a60c25ae98d5-850x446.png 850w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/figure&gt;



&lt;p&gt;It was announced recently that GitHub Copilot in the CLI has reached General Availablity for all Individual, Business, and Enterprise customers. In this post, I will show you how you can get download and install the CLI and Copilot extension, authenticate to use Copilot, and the available commands and use cases. &lt;/p&gt;



&lt;h1 class="wp-block-heading"&gt;Install the GitHub CLI&lt;/h1&gt;



&lt;h2 class="wp-block-heading"&gt;Windows &lt;/h2&gt;



&lt;p&gt;With Windows, we can install the GitHub CLI via the command line (Winget, Chocolatey, or Scoop)  or manually from &lt;a href="https://cli.github.com/" target="_blank" rel="noopener" title=""&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;Winget&lt;/h3&gt;



&lt;p&gt;With Winget, we can install the GitHub CLI using the following command: &lt;/p&gt;



&lt;div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="" style="font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"&gt;&lt;span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"&gt;&lt;g fill="none" fill-rule="evenodd" transform="translate(1 1)"&gt;&lt;circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"&gt;&lt;/circle&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span role="button" tabindex="0" data-code="winget install --id GitHub.cli" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"&gt;&lt;path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"&gt;&lt;/path&gt;&lt;path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"&gt;&lt;code&gt;&lt;span class="line"&gt;&lt;span style="color: #88C0D0"&gt;winget&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;install&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;--id&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;GitHub.cli&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;/p&gt;



&lt;figure class="wp-block-image size-full"&gt;&lt;img loading="lazy" decoding="async" width="804" height="543" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png" alt="" class="wp-image-3864" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35.png 804w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-300x203.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-768x519.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-20.22.35-400x270.png 400w" sizes="(max-width: 804px) 100vw, 804px" /&gt;&lt;/figure&gt;



&lt;h2 class="wp-block-heading"&gt;MacOS&lt;/h2&gt;



&lt;p&gt;With MacOS, we can install the GitHub CLI via homebrew or manually from &lt;a href="https://cli.github.com/" target="_blank" rel="noopener" title="here"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;Homebrew&lt;/h3&gt;



&lt;p&gt;Using homebrew, run the following command:&lt;/p&gt;



&lt;div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="" style="font-size:clamp(14px, .875rem, 21px);line-height:clamp(20px, 1.25rem, 30px);--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"&gt;&lt;span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"&gt;&lt;g fill="none" fill-rule="evenodd" transform="translate(1 1)"&gt;&lt;circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"&gt;&lt;/circle&gt;&lt;circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"&gt;&lt;/circle&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span role="button" tabindex="0" data-code="brew install gh" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"&gt;&lt;path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"&gt;&lt;/path&gt;&lt;path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"&gt;&lt;code&gt;&lt;span class="line"&gt;&lt;span style="color: #88C0D0"&gt;brew&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;install&lt;/span&gt;&lt;span style="color: #D8DEE9FF"&gt; &lt;/span&gt;&lt;span style="color: #A3BE8C"&gt;gh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;figure class="wp-block-image size-full"&gt;&lt;img loading="lazy" decoding="async" width="822" height="700" src="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png" alt="" class="wp-image-3850" srcset="https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35.png 822w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-300x255.png 300w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-768x654.png 768w, https://www.thelazyadministrator.com/wp-content/uploads/2024/03/CleanShot-2024-03-21-at-12.08.35-317x270.png 317w" sizes="(max-width: 822px) 100vw, 822px" /&gt;&lt;/figure&gt;



&lt;h1 class="wp-block-heading"&gt;Authenticate &lt;/h1&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In order to use Copilot in the CLI, you must have an active GitHub Copilot subscription. &lt;/p&gt;



&lt;p&gt;Once you have a valid subscription to use Copilot, run the &amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/"&gt;Getting Started with GitHub Copilot in the CLI&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2024/03/22/getting-started-with-github-copilot-in-the-cli/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://powershellisfun.com/?p=7006</guid><link>https://powershellisfun.com/2024/03/21/disabling-idle-power-save-using-intune-and-powershell/</link><category>PowerShell</category><title>Disabling Idle Power Save using Intune and PowerShell</title><description>One of our customers sought a solution to disable Idle Power Save on their Realtek USB GbE network adapters using Intune. Because of that setting, their users were disconnected from their Remote Desktop sessions multiple times during the day. This blog post will show you how to disable that setting using Intune, a Windows app (Win32), or a Remediation script.</description><pubDate>Thu, 21 Mar 2024 15:04:19 Z</pubDate><comments>https://powershellisfun.com/2024/03/21/disabling-idle-power-save-using-intune-and-powershell/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harm Veenstra</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershellisfun.com/2024/03/21/disabling-idle-power-save-using-intune-and-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7006</post-id></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3828</guid><link>https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/</link><category>Uncategorized</category><title>View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK</title><description>&lt;h1 class="wp-block-heading"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;If you&amp;#8217;re familiar with Intune, you&amp;#8217;re likely aware of its capability to deploy platform or PowerShell scripts to your endpoint devices. Unfortunately, once you upload your script to the portal, there is (at the time of writing this) no easy way to view the script content or download it. &lt;/p&gt;
&lt;h1 class="wp-block-heading"&gt;Resolution &lt;/h1&gt;
&lt;p&gt;To quickly and easily get Intune scripts, I created a function that allows me to export all the scripts from a tenant en masse and view them in the shell or terminal. Sometimes, I am auditing a new tenant and have no need to download the scripts to my local machine; I need to audit the code behind it to get an idea of what is being performed. Additionally, I added some other quality-of-life features that I did not find in other scripts online. &lt;/p&gt;
&lt;h2 class="wp-block-heading"&gt;Features&lt;/h2&gt;
&lt;h3 class="wp-block-heading"&gt;Platform Agnostic&lt;/h3&gt;
&lt;p&gt;The function will work on PowerShell Core (pwsh) and Windows PowerShell. Allowing &amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/"&gt;View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Fri, 15 Mar 2024 12:10:55 Z</pubDate><comments>https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;h1 class="wp-block-heading"&gt;Introduction&lt;/h1&gt;



&lt;p&gt;If you&amp;#8217;re familiar with Intune, you&amp;#8217;re likely aware of its capability to deploy platform or PowerShell scripts to your endpoint devices. Unfortunately, once you upload your script to the portal, there is (at the time of writing this) no easy way to view the script content or download it. &lt;/p&gt;



&lt;h1 class="wp-block-heading"&gt;Resolution &lt;/h1&gt;



&lt;p&gt;To quickly and easily get Intune scripts, I created a function that allows me to export all the scripts from a tenant en masse and view them in the shell or terminal. Sometimes, I am auditing a new tenant and have no need to download the scripts to my local machine; I need to audit the code behind it to get an idea of what is being performed. Additionally, I added some other quality-of-life features that I did not find in other scripts online. &lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;Features&lt;/h2&gt;



&lt;h3 class="wp-block-heading"&gt;Platform Agnostic&lt;/h3&gt;



&lt;p&gt;The function will work on PowerShell Core (pwsh) and Windows PowerShell. Allowing &amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/"&gt;View and Export your Intune Device Management Scripts Using the Microsoft Graph PowerShell SDK&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2024/03/15/view-and-export-your-intune-device-management-scripts-using-the-microsoft-graph-powershell-sdk/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://blog.victorsilva.com.uy/</guid><link>https://blog.victorsilva.com.uy/terraform-outputs-powershell/</link><a10:author><a10:name>Victor Silva</a10:name></a10:author><category>Terraform</category><category>PowerShell</category><category>Terraform</category><category>PowerShell</category><category>IaC</category><title>Terraform outputs en PowerShell</title><description /><pubDate>Wed, 13 Mar 2024 19:25:47 Z</pubDate><a10:updated>2024-03-13T19:25:47Z</a10:updated></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9343</guid><link>https://jdhitsolutions.com/blog/powershell/9343/github-scripting-challenge-solution/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=github-scripting-challenge-solution</link><category>GitHub</category><category>PowerShell</category><category>Scripting</category><title>GitHub Scripting Challenge Solution</title><description>Earlier this year I appeared on the PowerShell Podcast. I ended the interview with a scripting challenge. The Core Challenge Using whatever tools and techniques you want, write a PowerShell function that will query the Issues section of a GitHub repository and create output showing the number of open issues by label and the percentage...</description><pubDate>Thu, 07 Mar 2024 18:45:25 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9343/github-scripting-challenge-solution/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9343/github-scripting-challenge-solution/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9343</post-id></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9327</guid><link>https://jdhitsolutions.com/blog/conferences/9327/my-conference-future/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=my-conference-future</link><category>Conferences</category><category>PowerShell</category><category>Professional</category><category>Automation</category><category>conferences</category><title>My Conference Future</title><description>I have been an IT professional for over 30 years. I have been speaking publicly and presenting at conferences for probably 25 years. I have presented to all types of groups, from small user groups to large conferences, literally around the world. As I enter the last part of my IT career, I am re-assessing...</description><pubDate>Mon, 04 Mar 2024 14:24:23 Z</pubDate><comments>https://jdhitsolutions.com/blog/conferences/9327/my-conference-future/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/conferences/9327/my-conference-future/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9327</post-id></item><item><guid isPermaLink="false">https://blog.darrenjrobinson.com/?p=49306</guid><link>https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/</link><category>PowerShell</category><category>Dall-e</category><category>OpenAI</category><title>Visualising your IP Address using PowerShell and AI</title><description>&lt;p&gt;A few weeks back the&lt;a href="https://envision.microsoft.com/en-US/sydney" target="_blank" rel="noreferrer noopener"&gt; Microsoft AI Tour&lt;/a&gt; was in Sydney Australia. There was a plethora of great content associated with the wave of everything AI that we are currently in. &lt;/p&gt;
&lt;p&gt;I gave a quick-fire series of live demos in a theatre session titled &lt;strong&gt;&lt;a href="https://envision.microsoft.com/en-US/sessions/4d466cb8-34de-4bfb-a357-bd7812f5635c?source=/speakers/b9e443b2-27c6-4d89-8e33-1f5c8d12e327" target="_blank" rel="noreferrer noopener"&gt;PowerShell &amp;#38; ChatGPT &amp;#8211; How to Automate Your Way to Generative AI Brilliance&lt;/a&gt;&lt;/strong&gt;.&amp;#8230; &lt;a href="https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/" class="read-more"&gt;keep reading &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/"&gt;Visualising your IP Address using PowerShell and AI&lt;/a&gt; appeared first on &lt;a href="https://blog.darrenjrobinson.com"&gt;darrenjrobinson - Bespoke Identity and Access Management Solutions&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Mon, 04 Mar 2024 01:00:00 Z</pubDate><comments>https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darren Robinson</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.darrenjrobinson.com/visualising-your-ip-address-using-powershell-and-ai/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">49306</post-id></item><item><guid isPermaLink="false">https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell</guid><link>https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell/</link><author>mark@wragg.io</author><category>powershell</category><category>azure</category><category>azurespringclean</category><category>module</category><category>costmanagement</category><category>cloudcomputing</category><title>Monitor and manage your Azure cloud costs with a little help from PowerShell</title><description>Should cloud computing be illegal? Probably not, but it is incredibly easy to get started, equally difficult to stop, and before you know it you could be selling your grandmother just to afford one more month of that delicious compute. Hopefully your circumstances never get that dire, but I’ve seen plenty of companies entrench themselves into the highly addictive world of automated, scalable infrastructure, but then struggle to understand the often-astronomical monthly bill.</description><pubDate>Sat, 02 Mar 2024 09:00:00 Z</pubDate><a10:updated>2024-03-02T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell/">&lt;p&gt;&lt;strong&gt;Should cloud computing be illegal?&lt;/strong&gt; &lt;em&gt;Probably not&lt;/em&gt;, but it is incredibly easy to get started, equally difficult to stop, and before you know it you could be selling your grandmother just to afford one more month of that delicious compute. Hopefully your circumstances never get that dire, but I’ve seen plenty of companies entrench themselves into the highly addictive world of automated, scalable infrastructure, but then struggle to understand the often-astronomical monthly bill.&lt;/p&gt;

&lt;p&gt;I found myself in this situation some time ago (not selling my grandmother.. but trying to understand high bills). After some wrangling, I managed to cut a client’s cloud bill by 60%, saving approximately £500,000 over 2 years, and that was despite &lt;a href="https://news.microsoft.com/europe/2023/01/05/consistent-global-pricing-for-the-microsoft-cloud/"&gt;Microsoft increasing their prices by 11% last April&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rather than a 12-step program, I believe cloud addiction can be treated in just 6:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Understand your costs (use the built-in tools)&lt;/li&gt;
  &lt;li&gt;Take ownership of the costs and perform regular reviews&lt;/li&gt;
  &lt;li&gt;Configure budgets and billing alerts&lt;/li&gt;
  &lt;li&gt;Automate the creation and destruction of your resources (and get good at it)&lt;/li&gt;
  &lt;li&gt;Ensure the purpose/ownership of all resources is understood&lt;/li&gt;
  &lt;li&gt;Purchase reservations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://mpfe.uk/blog/2023-03-31-azure-cost-management/"&gt;I blogged about these topics last year on my company website&lt;/a&gt;. However in this blog post (and for the purposes of &lt;a href="https://www.azurespringclean.com/"&gt;Azure Spring Clean&lt;/a&gt;) I will be focussing on #2: take ownership / perform regular reviews, by way of introducing a PowerShell module I’ve recently published to help do just that.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You may want to review your costs more frequently than monthly, but unless you have a very static environment, I think it’s a good minimum guideline as it’s how Azure usage is billed. Per step #3, it’s important to also have budgets and billing alerts configured (and with thresholds that are close to your typical costs) so that if your usage spikes unexpectedly during the month you are made aware and can intervene if appropriate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The AzCostTools module helps perform monthly reviews by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Extracting your cost data via the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-AzConsumptionUsage&lt;/code&gt; cmdlet for one or more months&lt;/li&gt;
  &lt;li&gt;Comparing those months to the previous ones (or to a previous month of your choice by configuring an offset).&lt;/li&gt;
  &lt;li&gt;Calculating the cost difference and change percentage&lt;/li&gt;
  &lt;li&gt;Charting the daily cost, so you have a basic view of how costs fluctuate&lt;/li&gt;
  &lt;li&gt;Retrieves any budgets you have configured and indicates where you’ve been within/over budget&lt;/li&gt;
  &lt;li&gt;Identifying the most expensive services, by type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Per step #1 (Understand your costs - use the built-in tools), AzCostTools is not intended as a replacement for the existing cost management tools that are in the Azure Portal. I strongly advocate their use, and there’s several default views that can give you quick and valuable insight. My personal favourite is the daily cost view, granulated by Resource Group so that I can drill into where the most expensive resources are. But if you’re responsible for more than one tenant and/or multiple subscriptions, you may find AzCostTools works well to automate the reporting of those costs (both individually and in total). Another weakness of the built-in Cost Management interface is it only seems to be able to show you the data from the last 12 months. If you wanted to compare your costs for the last few months to those same months from a year prior (which might be a reasonable thing to do if your costs fluctuate seasonally), it’s not very helpful. However the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-AzConsumptionUsage&lt;/code&gt; cmdlet does return data from more than 12 months ago, and so AzCostTools can do this comparison for you.&lt;/p&gt;

&lt;h3 id="getting-started"&gt;Getting started&lt;/h3&gt;

&lt;p&gt;That’s probably enough sales talk (it’s free btw..), here’s how to use it:&lt;/p&gt;

&lt;p&gt;The module is in GitHub, so you can have a look at the source code here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/markwragg/PowerShell-AzCostTools/"&gt;https://github.com/markwragg/PowerShell-AzCostTools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can install the module from the &lt;a href="https://www.powershellgallery.com/packages/AzCostTools/"&gt;PowerShell Gallery&lt;/a&gt; so to get started, open a PowerShell window and execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;AzCostTools&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll need to also ensure you have the &lt;a href="https://learn.microsoft.com/en-us/powershell/azure/install-azure-powershell?view=azps-11.3.0"&gt;Azure PowerShell modules&lt;/a&gt; (so that you have &lt;code class="language-plaintext highlighter-rouge"&gt;Get-AzConsumptionUsage&lt;/code&gt; and some other cmdlets that the module uses). Also, if you want to generate charts, you need to install a module called &lt;a href="https://github.com/endowdly/PSparklines"&gt;PSparklines&lt;/a&gt;. AzCostTools will work without it, but the charts are vaguely informative and fun.&lt;/p&gt;

&lt;p&gt;To install these prerequisites, execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Az&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PSparklines&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, you of course need to make sure you’ve authenticated to Azure via the Az module, and for the tenant/s that you want to query costs. To login to Azure execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Connect-AzAccount&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="subscription-costs"&gt;Subscription costs&lt;/h3&gt;

&lt;p&gt;You are now ready to start querying your costs. So brace yourselves, this might hurt.&lt;/p&gt;

&lt;p&gt;A good place to start is by executing &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt;, which like all great cmdlets can be executed without any supplied parameters. This will retrieve the current month’s cost data for each subscription in your current context. Because you’ll probably want to dig into the data, I recommend returning it to a variable, which in the below example is &lt;code class="language-plaintext highlighter-rouge"&gt;$Cost&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note, errors may be returned for any subscriptions where the cost data is inaccessible, e.g you are not authorised to access costs, or the subscription is of a type where costs are managed externally (such as a CSP).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Cost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-SubscriptionCost&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Depending on the number of subscriptions and/or previous months of data you wish to query the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; cmdlet can take a few minutes to run.
If you want to see the numbers roll in while also saving the result to a variable, you could instead do &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost -OutVariable Cost&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The cmdlet returns the most pertinent fields by default and as table output, but there’s a lot more properties returned, which you can view via &lt;code class="language-plaintext highlighter-rouge"&gt;$Cost | Format-List&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/content/images/2024/Get-SubscriptionCost.png" alt="Get-SubscriptionCost returns current costs for all subscriptions in the current context" /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;Cost&lt;/code&gt; property is the total cost for the specified billing period (in this case, the current month). If you want to view the costs for a different month, you can specify that by using the &lt;code class="language-plaintext highlighter-rouge"&gt;-BillingMonth&lt;/code&gt; parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Cost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-SubscriptionCost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-BillingMonth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;12/2023&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;Currency&lt;/code&gt; property lets you know the currency you’re being billed in. If you’ve installed the &lt;code class="language-plaintext highlighter-rouge"&gt;PSparklines&lt;/code&gt; module, you get a sparkline chart showing how the costs fluctuate per day (fun, right?). The actual daily cost values are available in the &lt;code class="language-plaintext highlighter-rouge"&gt;DailyCost&lt;/code&gt; property. Then there’s a breakdown of your cost by service type, available under &lt;code class="language-plaintext highlighter-rouge"&gt;CostPerService&lt;/code&gt;, and if you have any budgets configured (and active) these are detailed in the &lt;code class="language-plaintext highlighter-rouge"&gt;ActiveBudgets&lt;/code&gt; property. The other properties perform some useful calculations on your costs, including the average daily cost, max and minimum daily cost, the dates that were most and least expensive and finally the service types that were most and least expensive (and how much they cost).&lt;/p&gt;

&lt;p&gt;By default the cmdlet discards the raw data that’s returned from the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-AzConsumptionUsage&lt;/code&gt; cmdlet, but if you want to keep it (for your own analysis), you can add the &lt;code class="language-plaintext highlighter-rouge"&gt;-Raw&lt;/code&gt; parameter. The raw data will then be available under a property named &lt;code class="language-plaintext highlighter-rouge"&gt;Consumption_Raw&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can of course specify one or more subscriptions to query, just use the &lt;code class="language-plaintext highlighter-rouge"&gt;-SubscriptionName&lt;/code&gt; parameter, with an array of one or more subscription names. You can also customise how large the sparkline graphs are (they work up to a height of 10 lines) via the &lt;code class="language-plaintext highlighter-rouge"&gt;-SparkLineSize&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;Now this is all well and good, but for me cost management is only really worth doing if there’s an element of competition, and so I like to know if I’m doing better than I did last month. It keeps me focussed through the month on minimising costs (such as by keeping test environments deployed for as little time as possible). Obviously not every month is going to be cheaper (unless you’re going out of business I guess..) but you probably know the patterns of your own business (or hopefully you will do), and when there’s likely to be higher or lower demand (such as if you’re ramping up testing at the end of a development cycle, or ramping up infrastructure for peak seasonal demand such as Black Friday / Christmas). So you can come to expect when you should be driving costs down and when they’re likely to increase.&lt;/p&gt;

&lt;p&gt;To enable this “competitive mode”, you can execute &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; with the &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt; parameter. You can combine this with &lt;code class="language-plaintext highlighter-rouge"&gt;-BillingMonth&lt;/code&gt; obviously to specify the month you want to look at costs for, but it will also then get the previous months costs for comparison (and do some of that comparison for you). For example (note in the below I’ve also made the sparkline graphs bigger):&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-SubscriptionCost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-SubscriptionName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'AdventureWorks Cycles'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComparePrevious&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-SparkLineSize&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/content/images/2024/Get-SubscriptionCost-ComparePrev.png" alt="Get-SubscriptionCost returns costs for a specified subscription and compares them to the previous month with sparkline charts that are 3 rows in height" /&gt;&lt;/p&gt;

&lt;p&gt;Per the screenshot above, there is again a table view returned by default, with cost, the previous month’s cost and sparkline daily cost graphs for both. If you once again do &lt;code class="language-plaintext highlighter-rouge"&gt;$Cost | Format-List&lt;/code&gt; you’ll see there’s more properties available. These include all of the same properties that were returned without using &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrev&lt;/code&gt;, and then properties that represent the same data for the previous month (all prefixed with &lt;code class="language-plaintext highlighter-rouge"&gt;Prev&lt;/code&gt;), but where you get additional value by using this parameter is that you also get a &lt;code class="language-plaintext highlighter-rouge"&gt;CostChange&lt;/code&gt; property, which is the calculated difference between the previous month and current one, that change represented as a percentage, and then the cost change also broken down per day under a property named &lt;code class="language-plaintext highlighter-rouge"&gt;DailyCostChange&lt;/code&gt;. When I’m reporting costs I typically show the current cost for the month I’m reporting on, how much more or less that is than last month and that change as a percentage, which I think gives a very quick and easy to understand view of whether your costs are going up or down and by how much. Once again if you want the raw data for both months, using &lt;code class="language-plaintext highlighter-rouge"&gt;-Raw&lt;/code&gt; ensures these are included.&lt;/p&gt;

&lt;p&gt;If you want to look at costs for more than a single month, you could of course make several repeated calls to &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; with different billing periods, but it has a parameter that is more convenient. If you use &lt;code class="language-plaintext highlighter-rouge"&gt;-PreviousMonths&lt;/code&gt; it will return cost data for however many previous months you specify. There’s a slight performance advantage to doing this if you’re also using &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt; because the tool will know it already retrieved the previous months cost and will just reuse it. For example:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-SubscriptionCost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-PreviousMonths&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComparePrevious&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/content/images/2024/Cost-MultipleSubscription-PrevMonths-ComparePrev.png" alt="Get-SubscriptionCost returns current costs for all subscriptions in the current context and the previous 5 months of costs" /&gt;&lt;/p&gt;

&lt;p&gt;The default behaviour of comparing your costs to the previous month might not be the right choice for you. If you work somewhere with specific patterns of work (as talked about earlier, development cycles of a fixed cadence or infrastructure that is ramped up seasonally) it might be more insightful to compare to the same month from the previous period (be that last quarter, or last year etc.). To modify which month is used for comparison when using &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt; you can specify &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePreviousOffset&lt;/code&gt;.  This will compare each month of cost data returned to X month/s prior as specified. You can continue to combine this with the other parameters (for example the &lt;code class="language-plaintext highlighter-rouge"&gt;-PreviousMonths&lt;/code&gt; one) so for example, if you wanted to compare costs for the last 6 months against the same 6 months from the year prior, you could execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-SubscriptionCost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-PreviousMonths&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComparePrevious&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComparePreviousOffset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;12&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="/content/images/2024/Cost-MultipleSubscription-PrevMonths-ComparePrev-Offset12.png" alt="Get-SubscriptionCost returns current costs for all subscriptions in the current context and the previous 6 months of cost, comparing each to the equivalent month 12 months prior" /&gt;&lt;/p&gt;

&lt;h3 id="cost-analysis"&gt;Cost analysis&lt;/h3&gt;

&lt;p&gt;I expect most people (assuming anyone has made it this far) will want to take the output of this tool and do something further with it. Perhaps bring it into Excel and generate some charts (I certainly do). But I wanted to see what other useful ways I could implement &lt;code class="language-plaintext highlighter-rouge"&gt;PSparklines&lt;/code&gt;, and while we have all this data in a console window it’s potentially very quick and easy to generate some further insight there too. So without any further rambling, let me introduce &lt;code class="language-plaintext highlighter-rouge"&gt;Show-CostAnalysis&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Having retrieved a set of cost data for one or more subscriptions, you can pipe that data to &lt;code class="language-plaintext highlighter-rouge"&gt;Show-CostAnalysis&lt;/code&gt; to generate some charts and tables analysing the costs:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Cost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Show-CostAnalysis&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is best experienced with &lt;code class="language-plaintext highlighter-rouge"&gt;PSparklines&lt;/code&gt; installed of course, but again it works without it. It generates a daily cost chart with a slightly more useful default height, but if your cost data returned one or more budgets, we convert one of those into a daily average and then use that to colour the daily cost chart to show where you were over budget (in red) and under budget (in green). If your subscription doesn’t have a budget, the chart is white. It also shows a little summary for each Subscription detailing the budget used, the daily budget calculation it generated, your peak daily cost, the most/least expensive date and total cost. If there’s a budget configured, the cost is in green if you’re within that overall budget and red if it’s over.&lt;/p&gt;

&lt;p&gt;The tool then breaks down the costs by service type, creating a chart with different colours for each type, and again summarising the most/least expensive services and their cost. It will do this for up to 15 service types (after which we sort of ran out of console colours).&lt;/p&gt;

&lt;p&gt;If more than one subscription is in the cost data, the cmdlet will end with a total of cost for all subscriptions and another chart showing most to least expensive. This is a little slow to produce (its largely down to the sparkline charts which take a few seconds each to generate):&lt;/p&gt;

&lt;p&gt;&lt;img src="/content/images/2024/Show-CostAnalysis.gif" alt="Show-CostAnalysis generates charts and tables for a set of returned cost data" /&gt;&lt;/p&gt;

&lt;p&gt;There’s a couple of parameters on &lt;code class="language-plaintext highlighter-rouge"&gt;Show-CostAnalysis&lt;/code&gt;: you can again customise the size of the charts returned by specifying &lt;code class="language-plaintext highlighter-rouge"&gt;-SparkLineSize&lt;/code&gt;. The default is 3. But perhaps more usefully, you can also specify &lt;code class="language-plaintext highlighter-rouge"&gt;-ConvertToCurrency&lt;/code&gt; with a 3-letter currency code if you’d like the cost values returned to be converted to a different currency. Sometimes Azure costs are billed in a currency that is not your own and it may be more informative to view them in your local currency. For example:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Cost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Show-CostAnalysis&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ConvertToCurrency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that this uses a free/open API for currency conversion that only refreshes the exchange rates once a day. I thought this functionality was so useful I spun it off into its own module which you can read about here:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;a href="https://wragg.io/Perform-currency-conversion-with-PowerShell/"&gt;https://wragg.io/Perform-currency-conversion-with-PowerShell/&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;AzCostTools doesn’t need this separate module installed, it has the functionality built in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you used &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt; when executing &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; you can also specify &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt; for &lt;code class="language-plaintext highlighter-rouge"&gt;Show-CostAnalysis&lt;/code&gt; to generate further tables and charts for the previous cost data. This might be most useful when using &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePreviousOffset&lt;/code&gt; so that you can see the charts side by side of the current and previous costs. For example:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Cost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Show-CostAnalysis&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComparePrevious&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="/content/images/2024/Show-CostAnalysis-ComparePrev.png" alt="Show-CostAnalysis generates charts and tables for a set of returned cost data and shows charts for the previous cost data" /&gt;&lt;/p&gt;

&lt;p&gt;Bear in mind the output of &lt;code class="language-plaintext highlighter-rouge"&gt;Show-CostAnalysis&lt;/code&gt; is not objects, so there’s nothing here you can easily export or pipe into another cmdlet, but most of the calculations it uses were already performed via the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; cmdlet, so the data is there.&lt;/p&gt;

&lt;h3 id="storage-costs"&gt;Storage costs&lt;/h3&gt;

&lt;p&gt;I plan to continue to expand AzCostTools with other useful cost-related functionality, hence the slightly generic name. One such expansion is to start to dig into the cost of Storage. Returning to my original tongue-in-cheek premise, I think it’s not outrageous to think of cloud storage as like the gateway drug of cloud computing, because it is incredibly cheap. But sometimes cloud costs can be death by a thousand cuts, and over time you can end up with hundreds of small storage accounts littered through your subscriptions that individually aren’t expensive, but still represent a waste that cumulatively can become significant.&lt;/p&gt;

&lt;p&gt;To help you understand your storage costs specifically, you can execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-StorageCost&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It works in a very similar to way to &lt;code class="language-plaintext highlighter-rouge"&gt;Get-SubscriptionCost&lt;/code&gt; (mostly because I started by just copy/pasting that function). By default it will query all available storage accounts in your current context, or you can specify one or more storage accounts via the &lt;code class="language-plaintext highlighter-rouge"&gt;-AccountName&lt;/code&gt; parameter. And then it has the other parameters you’ll find familiar: &lt;code class="language-plaintext highlighter-rouge"&gt;-BillingMonth&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePrevious&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;-ComparePreviousOffset&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;-PreviousMonths&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;-SparkLineSize&lt;/code&gt;. It’s particularly useful for seeing which storage accounts are the most expensive, and which storage accounts are experiencing active change vs being static.&lt;/p&gt;

&lt;h3 id="in-summary"&gt;In summary&lt;/h3&gt;

&lt;p&gt;In summary, Drugs = bad. Cloud = good. Reducing cloud costs = great. If I were dispensing any specific advice, I would say don’t be afraid to take responsibility for managing your costs, particularly if no one else does. If not for any other reason, saving companies money looks great on your CV. Of course work within the bounds of your organisation, and with suitable permission to make changes.&lt;/p&gt;

&lt;p&gt;A final caveat, this AzCostTools module was slightly cobbled together, so please let me know if you experience any bugs, and please don’t sue me if you get any erroneous results. But more than anything, please let me know if you have any ideas for improvements. You can log those here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/markwragg/PowerShell-AzCostTools/issues"&gt;https://github.com/markwragg/PowerShell-AzCostTools/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for taking the time to read this blog post, I hope you found it useful. Enjoy more great content from Azure Spring Clean 2024 via the website here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.azurespringclean.com/"&gt;https://www.azurespringclean.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or by following &lt;a href="https://www.linkedin.com/search/results/all/?keywords=%23AzureSpringClean&amp;amp;origin=GLOBAL_SEARCH_HEADER&amp;amp;sid=_pt"&gt;#AzureSpringClean on LinkedIn&lt;/a&gt; or the &lt;a href="https://twitter.com/search?q=%23AzureSpringClean&amp;amp;src=typed_query&amp;amp;f=live"&gt;website formerly known as Twitter&lt;/a&gt;.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9325</guid><link>https://jdhitsolutions.com/blog/powershell/9325/powershell-refresh/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=powershell-refresh</link><category>PowerShell</category><category>Scripting</category><category>Automation</category><title>PowerShell Refresh</title><description>The other day on X, I was asked about what things I would setup or configure on a new PowerShell installation. This is something I actually have thought about and face all the time when I setup a new demo virtual machine. I had been meaning to build new tooling to meet this challenge, and...</description><pubDate>Fri, 01 Mar 2024 14:04:57 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9325/powershell-refresh/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9325/powershell-refresh/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9325</post-id></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9323</guid><link>https://jdhitsolutions.com/blog/powershell/9323/module-linking/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=module-linking</link><category>PowerShell</category><category>module</category><category>New-Item</category><category>symbolic link</category><title>Module Linking</title><description>I know it has been a while since I've given the blog any attention. I am hoping to correct that in 2024, although I'm already behind schedule. But let's get to it. I have a short tip today that you may find useful, especially if you write modules for your private use. I have a...</description><pubDate>Tue, 27 Feb 2024 14:14:16 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9323/module-linking/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9323/module-linking/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">5</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9323</post-id></item><item><guid isPermaLink="false">https://blog.it-koehler.com/?p=5658</guid><link>https://blog.it-koehler.com/en/Archive/5658?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=exchange-online-mailbox-apps-check-via-powershell</link><category>common</category><category>Microsoft Exchange Server</category><category>Microsoft Office 365</category><title>Exchange Online mailbox apps check via PowerShell</title><description>&lt;p&gt;Some days ago I got a ticket where someone could not load his calendar in Microsoft Teams. Outlook worked fine the only thing was Out of Office Notification, also did not work. After some research I found the solution by activating EWS on this specific mailbox. One our later everything was fine. You can find &amp;#8230; &lt;/p&gt;
&lt;p class="link-more"&gt;&lt;a href="https://blog.it-koehler.com/en/Archive/5658" class="more-link"&gt;Read more&lt;span class="screen-reader-text"&gt; "Exchange Online mailbox apps check via PowerShell"&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Articel &lt;a href="https://blog.it-koehler.com/en/Archive/5658"&gt;Exchange Online mailbox apps check via PowerShell&lt;/a&gt; available first on &lt;a href="https://blog.it-koehler.com/en"&gt;IT koehler blog&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 16 Feb 2024 14:30:21 Z</pubDate><comments>https://blog.it-koehler.com/en/Archive/5658#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A.K.</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.it-koehler.com/en/Archive/5658/feed</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29306</guid><link>https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/</link><category>Microsoft</category><category>PowerShell</category><title>FIX: Cannot find built-in module that is compatible with the edition</title><description>&lt;p&gt;Microsoft.PowerShell.Utility &amp;#38; Microsoft.PowerShell.Management Cannot find the built-in module that is compatible with the edition. Please make sure the PowerShell built-in modules are available. They usually come with the PowerShell package under the $PSHOME module path, and are required for PowerShell to function properly. If you made this error, you screwed up big time.But luckily, it&amp;#8217;s &amp;#8230; &lt;a href="https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: Cannot find built-in module that is compatible with the edition&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/"&gt;FIX: Cannot find built-in module that is compatible with the edition&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 16 Feb 2024 06:33:53 Z</pubDate><comments>https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/fix-cannot-find-built-in-module-that-is-compatible-with-the-edition/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://wragg.io/Perform-currency-conversion-with-PowerShell</guid><link>https://wragg.io/Perform-currency-conversion-with-PowerShell/</link><author>mark@wragg.io</author><category>powershell</category><category>api</category><category>module</category><category>currency</category><title>Perform Currency Conversions with PowerShell</title><description>I’ve recently been working on a PowerShell module for exploring Azure costs and while doing so added some functionality to allow the costs to be converted between different currencies. It occurred to me that this functionality would be useful as a module of its own, and when I searched around I didn’t find too many recent examples for the same. As such I’ve now developed and published a module in the PowerShell Gallery and on GitHub called CurrencyConverter.</description><pubDate>Thu, 08 Feb 2024 13:30:00 Z</pubDate><a10:updated>2024-02-08T13:30:00Z</a10:updated><a10:content type="html" xml:base="https://wragg.io/Perform-currency-conversion-with-PowerShell/">&lt;p&gt;I’ve recently been working on a &lt;a href="https://wragg.io/monitor-and-manage-your-azure-cloud-costs-with-powershell/"&gt;PowerShell module for exploring Azure costs&lt;/a&gt; and while doing so added some functionality to allow the costs to be converted between different currencies. It occurred to me that this functionality would be useful as a module of its own, and when I searched around I didn’t find too many recent examples for the same. As such I’ve now developed and published a module in the PowerShell Gallery and on GitHub called &lt;a href="https://github.com/markwragg/PowerShell-CurrencyConverter/tree/main"&gt;CurrencyConverter&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://github.com/markwragg/PowerShell-CurrencyConverter/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The module is essentially a PowerShell wrapper for the currency conversion API that is provided by &lt;a href="https://www.exchangerate-api.com/"&gt;ExchangeRate-API&lt;/a&gt;. They provide an open API, which requires no registration or API key to use. This was helpful for my other module as I didn’t want the user to have to take a dependency on registering for a service for it to work. By default the Currency Converter module uses the open API, but if you have registered and wish to use an API key, you can provide one via the &lt;code class="language-plaintext highlighter-rouge"&gt;-APIKey&lt;/code&gt; parameters of &lt;code class="language-plaintext highlighter-rouge"&gt;Convert-Currency&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ExchangeRate&lt;/code&gt;. Note that with the open API, the rates refresh once every 24 hours. This is also true for the free tier of the registered API, but you are less likely to be rate limited. If you take one of their paid plans then the currency conversion rates refresh more frequently.&lt;/p&gt;

&lt;p&gt;The Currency Converter module is published in the &lt;a href="https://www.powershellgallery.com/packages/CurrencyConverter/"&gt;PowerShell Gallery&lt;/a&gt;, so can be installed by running:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CurrencyConverter&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;

&lt;p&gt;This module provides the following cmdlets:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Cmdlet&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Convert-Currency&lt;/td&gt;
      &lt;td&gt;Converts a decimal value between two specified currencies.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Format-Currency&lt;/td&gt;
      &lt;td&gt;Formats a value as a string with the currency symbol for a specified country.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Get-Currency&lt;/td&gt;
      &lt;td&gt;Returns the list of supported currency codes along with their currency name and country code.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Get-ExchangeRate&lt;/td&gt;
      &lt;td&gt;Returns all exchange rates for a specified currency, or a specified exchange rate between two currencies.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="convert-currency"&gt;Convert-Currency&lt;/h3&gt;

&lt;p&gt;To perform a simple currency conversion, execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Convert-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use the registered API, provide your key via the &lt;code class="language-plaintext highlighter-rouge"&gt;-APIKey&lt;/code&gt; parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Convert-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ApiKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;yourapikeystringhere&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;See here for a list of supported currencies: https://www.exchangerate-api.com/docs/supported-currencies. Alternatively you can use the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-Currency&lt;/code&gt; cmdlet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After querying the API, the response is saved within the module directory, as a JSON file. If you query the API for the same currency again, the file will be read. It contains a date field for when the values next refresh. If the current date is earlier than this value, then the file is used. If it is after this date, the API is queried again and the file updated. As a result this module will only query the API once a day, per currency.&lt;/p&gt;

&lt;p&gt;You can alternatively provide the value to be converted via the pipeline:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;EUR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CAD&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;79.201100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this means that you can pipe multiple values in to perform a series of conversions:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;JPY&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;14805.315400
29610.630800
37013.288500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="format-currency"&gt;Format-Currency&lt;/h3&gt;

&lt;p&gt;The value returned by &lt;code class="language-plaintext highlighter-rouge"&gt;Convert-Currency&lt;/code&gt; is always a decimal, to ensure we keep the result as precise as possible, and in case you want to do further calculations. If you want to present the result (such as in a report) as a currency value, then you can use the &lt;code class="language-plaintext highlighter-rouge"&gt;Format-Currency&lt;/code&gt; cmdlet. This returns a string value, rounded to two decimal places (by default) and with the corresponding currency symbol added. Obviously you can’t then treat this result as a decimal value, so you probably want to ensure this cmdlet is used last in your pipeline.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Format-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;$100.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can specify a different number of decimal places to round to, via the &lt;code class="language-plaintext highlighter-rouge"&gt;-Decimals&lt;/code&gt; parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Format-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;123.4567890&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Decimals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;£123.4568
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also perform a currency conversion at the same time as performing the format:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Format-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ConvertTo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;$125.85
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For some currencies it may be convention to put the currency symbol after the value. This can be achieved by specifying the &lt;code class="language-plaintext highlighter-rouge"&gt;-SymbolAtEnd&lt;/code&gt; switch parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Format-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-SymbolAtEnd&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;125.85£
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Format-Currency&lt;/code&gt; also supports pipeline input, so you can simply pipe the result of &lt;code class="language-plaintext highlighter-rouge"&gt;Convert-Currency&lt;/code&gt; to &lt;code class="language-plaintext highlighter-rouge"&gt;Format-Currency&lt;/code&gt;:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Convert-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;EUR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Format-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;EUR&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;€93.04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="get-currency"&gt;Get-Currency&lt;/h3&gt;

&lt;p&gt;The currency code inputs for the previous two cmdlets have a &lt;code class="language-plaintext highlighter-rouge"&gt;validateset&lt;/code&gt; attribute, so if you try to use an unsupported code an error is returned with the list of codes supported. If you’re not sure what the code is for a particular currency or country, you can explore them with the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-Currency&lt;/code&gt; cmdlet. Executing this on its own returns all of the supported currency codes along with their currency name and country:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Currency&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Code Name                          Country
---- ----                          -------
AED  UAE Dirham                    United Arab Emirates
AFN  Afghan Afghani                Afghanistan
ALL  Albanian Lek                  Albania
AMD  Armenian Dram                 Armenia
ANG  Netherlands Antillian Guilder Netherlands Antilles
AOA  Angolan Kwanza                Angola
ARS  Argentine Peso                Argentina
AUD  Australian Dollar             Australia
AWG  Aruban Florin                 Aruba
AZN  Azerbaijani Manat             Azerbaijan
BAM  Bosnia and Herzegovina Mark   Bosnia and Herzegovina
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that for all European Countries that use the Euro, “European Union” is listed as the country. I appreciate this isn’t entirely accurate and possibly politically controversial :).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With &lt;code class="language-plaintext highlighter-rouge"&gt;Get-Currency&lt;/code&gt; you can also specify a specific code (this requires an exact match):&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or you can filter by currency or country name (this will return results for partial matches):&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Pound'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Code Name                   Country
---- ----                   -------
EGP  Egyptian Pound         Egypt
FKP  Falkland Islands Pound Falkland Islands
GBP  Pound Sterling         United Kingdom
GGP  Guernsey Pound         Guernsey
GIP  Gibraltar Pound        Gibraltar
IMP  Manx Pound             Isle of Man
JEP  Jersey Pound           Jersey
LBP  Lebanese Pound         Lebanon
SDG  Sudanese Pound         Sudan
SHP  Saint Helena Pound     Saint Helena
SSP  South Sudanese Pound   South Sudan
SYP  Syrian Pound           Syria
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Country&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'United'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Code Name                 Country
---- ----                 -------
AED  UAE Dirham           United Arab Emirates
GBP  Pound Sterling       United Kingdom
USD  United States Dollar United States
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="get-exchangerate"&gt;Get-ExchangeRate&lt;/h3&gt;

&lt;p&gt;Finally there is the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ExchangeRate&lt;/code&gt; cmdlet. You can use this to return the full result from the API as a PowerShell object, which includes the fields that show when the next update will be available and all of the supported rates for a specified currency:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use the registered API, provide your key via the &lt;code class="language-plaintext highlighter-rouge"&gt;-APIKey&lt;/code&gt; parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ApiKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;yourapikeystringhere&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When an API key is provided, the v6 API is invoked. This returns the rates as a property called ‘conversion_rates’. The Open API returns the property as ‘rates’.&lt;/p&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;result                : success
provider              : https://www.exchangerate-api.com
documentation         : https://www.exchangerate-api.com/docs/free
terms_of_use          : https://www.exchangerate-api.com/terms
time_last_update_unix : 1707350551
time_last_update_utc  : Thu, 08 Feb 2024 00:02:31 +0000
time_next_update_unix : 1707437661
time_next_update_utc  : Fri, 09 Feb 2024 00:14:21 +0000
time_eol_unix         : 0
base_code             : USD
rates                 : @{USD=1; AED=3.6725; AFN=73.755496; ALL=96.818553; AMD=405.868756; ANG=1.79; AOA=839.476403; ARS=830.15;
                        AUD=1.533245; AWG=1.79; AZN=1.699659; BAM=1.81591; BBD=2; BDT=109.768633; BGN=1.81581; BHD=0.376;
                        BIF=2850.388516; BMD=1; BND=1.343391; BOB=6.934197; BRL=4.962119; BSD=1; BTN=83.001945; BWP=13.679849;
                        BYN=3.245101; BZD=2; CAD=1.346345; CDF=2728.475301; CHF=0.873457; CLP=947.575519; CNY=7.19952;
                        COP=3954.758146; CRC=517.23293; CUP=24; CVE=102.376655; CZK=23.176359; DJF=177.721; DKK=6.92457;
                        DOP=58.566572; DZD=134.658699; EGP=30.904297; ERN=15; ETB=56.700184; EUR=0.928449; FJD=2.247047;
                        FKP=0.792018; FOK=6.92461; GBP=0.792011; GEL=2.659816; GGP=0.792018; GHS=12.422748; GIP=0.792018;
                        GMD=66.562902; GNF=8588.188018; GTQ=7.814905; GYD=209.536717; HKD=7.820255; HNL=24.66876; HRK=6.995483;
                        HTG=131.989675; HUF=360.172059; IDR=15650.579046; ILS=3.652044; IMP=0.792018; INR=83.001968;
                        IQD=1310.842088; IRR=42080.433475; ISK=137.663905; JEP=0.792018; JMD=156.245808; JOD=0.709;
                        JPY=148.053154; KES=160.352692; KGS=89.414602; KHR=4091.328437; KID=1.533294; KMF=456.772434;
                        KRW=1326.84486; KWD=0.307938; KYD=0.833333; KZT=452.274884; LAK=20736.087575; LBP=15000; LKR=312.628935;
                        LRD=192.145847; LSL=18.897808; LYD=4.844127; MAD=10.061229; MDL=17.827961; MGA=4536.616958;
                        MKD=57.312368; MMK=2099.744651; MNT=3412.288092; MOP=8.054862; MRU=39.584855; MUR=45.384067;
                        MVR=15.453447; MWK=1689.264206; MXN=17.05608; MYR=4.761416; MZN=63.917225; NAD=18.897808;
                        NGN=1407.528785; NIO=36.672231; NOK=10.577722; NPR=132.803112; NZD=1.636807; OMR=0.384497; PAB=1;
                        PEN=3.861833; PGK=3.749532; PHP=56.01365; PKR=279.042023; PLN=4.033029; PYG=7296.21721; QAR=3.64;
                        RON=4.620779; RSD=108.801814; RUB=91.346239; RWF=1284.744312; SAR=3.75; SBD=8.488406; SCR=13.291546;
                        SDG=544.79719; SEK=10.475851; SGD=1.343391; SHP=0.792018; SLE=22.587694; SLL=22587.694431;
                        SOS=571.785619; SRD=36.611265; SSP=1102.449099; STN=22.747273; SYP=12950.775091; SZL=18.897808;
                        THB=35.595367; TJS=10.947348; TMT=3.500938; TND=3.129049; TOP=2.371485; TRY=30.62091; TTD=6.777386;
                        TVD=1.533294; TWD=31.341578; TZS=2541.212285; UAH=37.600041; UGX=3817.518963; UYU=39.148736;
                        UZS=12479.514661; VES=36.2375; VND=24413.241561; VUV=120.508933; WST=2.745778; XAF=609.029912; XCD=2.7;
                        XDR=0.754059; XOF=609.029912; XPF=110.795003; YER=250.331823; ZAR=18.897825; ZMW=27.029301;
                        ZWL=10811.587531}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to return just the exchange rates, you can execute &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ExchangeRate&lt;/code&gt; and specify the &lt;code class="language-plaintext highlighter-rouge"&gt;-Rates&lt;/code&gt; parameter:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Currency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Rates&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;GBP : 1
AED : 4.636888
AFN : 92.99538
ALL : 122.070196
AMD : 510.608906
ANG : 2.260049
AOA : 1067.044213
ARS : 1048.144979
AUD : 1.935836
AWG : 2.260049
AZN : 2.145246
BAM : 2.292681
BBD : 2.525194
BDT : 138.549806
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you just want to return a specific exchange rate, you can execute &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ExchangeRate&lt;/code&gt; and specify &lt;code class="language-plaintext highlighter-rouge"&gt;-From&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;-To&lt;/code&gt;. This will get you the rate of exchange, instead of performing a conversion:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-From&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;GBP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-To&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;USD&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;1.262609
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Get-ExchangeRate&lt;/code&gt; also supports pipeline input, so if you want to get the exchange rate details for a set of currencies you can execute:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="s1"&gt;'USD'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'GBP'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'EUR'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, if for some reason you wanted to query the API for every currency (resulting in the module caching every currencies exchange rate to disk), you could do the following (although beware this might trigger rate limiting for the API, as it will make 161 queries in quick succession):&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Get-Currency&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-ExchangeRate&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I hope you found this useful. If you experience any issues or can think of improvements that could be made, please see here for how to request or make a contribution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/markwragg/PowerShell-CurrencyConverter/blob/main/CONTRIBUTING.md&lt;/li&gt;
&lt;/ul&gt;</a10:content></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/2024/02/08/quick-fix-meeting-room-booking-window</guid><link>http://www.randriksen.net/powershell/2024/02/08/quick-fix-meeting-room-booking-window.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>PowerShell</category><category>Microsoft</category><category>Exchange</category><title>Quickly exanding the booking window of all meeting rooms in Microsoft 365</title><description>So I got a task to expand the booking window for all the meeting rooms at work. From the default 180 days to 365 days. This isn’t anything big or complicated to do. It’s an everyday task really. But I was wondering, how short can I make the PowerShell script to do this for all meeting rooms?</description><pubDate>Thu, 08 Feb 2024 00:00:00 Z</pubDate><a10:updated>2024-02-08T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/2024/02/08/quick-fix-meeting-room-booking-window.html">&lt;p&gt;So I got a task to expand the booking window for all the meeting rooms at work.
From the default 180 days to 365 days. 
This isn’t anything big or complicated to do. It’s an everyday task really. But I was wondering, how short can I make the PowerShell script to do this for all meeting rooms?&lt;/p&gt;

&lt;p&gt;Here’s what i started out with:&lt;/p&gt;
&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$mailboxes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-Mailbox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RecipientTypeDetails&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'RoomMailbox'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$mailboxes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set-CalendarProcessing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-BookingWindowInDays&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;365&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It’s pretty short, but one line there is unneccessary…&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Get-Mailbox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RecipientTypeDetails&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'RoomMailbox'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set-CalendarProcessing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-BookingWindowInDays&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;365&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ok, short, but still, I think i can get it down to just one line…&lt;/p&gt;
&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Mailbox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;RecipientTypeDetails&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'RoomMailbox'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set-CalendarProcessing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Identity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;identity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-BookingWindowInDays&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;365&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;That’s down to one line… but not really that much shorter.&lt;br /&gt;
Anyway… This solves my problem today :D&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://powershell.ro/?p=225</guid><link>https://powershell.ro/tagging-virtual-machines-with-the-cistag-module-in-powershell/</link><category>Automation</category><category>Powershell</category><category>VMWare</category><category>CISCore</category><category>CISTAG</category><category>Get-CISTag</category><category>modify vm tag</category><category>New-CISTagAssignment</category><category>powercli</category><category>vcenter</category><category>vm tag management</category><category>vm tags</category><title>Tagging Virtual Machines with the CISTag Module in PowerShell</title><description>In this blog post, we&amp;#8217;ll explore the process of assigning tags to multiple VMs using the CIStag module in PowerShell. This becomes necessary when the conventional PowerCLI module for tagging VMs fails, as was the case for me. Discovering a solution in a VMware blog post (https://blogs.vmware.com/PowerCLI/2018/12/new-tag-management-module.html), I learned about the CIStag module for effective [&amp;#8230;]</description><pubDate>Thu, 01 Feb 2024 13:15:32 Z</pubDate><comments>https://powershell.ro/tagging-virtual-machines-with-the-cistag-module-in-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;In this blog post, we&amp;#8217;ll explore the process of assigning tags to multiple VMs using the CIStag module in PowerShell. This becomes necessary when the conventional PowerCLI module for tagging VMs fails, as was the case for me.&lt;/p&gt;



&lt;p&gt;Discovering a solution in a VMware blog post (https://blogs.vmware.com/PowerCLI/2018/12/new-tag-management-module.html), I learned about the CIStag module for effective VM tag management. After downloading and installing the module on my Windows server, I proceeded to utilize it for assigning tags to VMs.&lt;/p&gt;



&lt;p&gt;The script provided in this post is specifically designed to establish a connection with a vCenter server, extract a list of VMs from the input file, and then assign the appropriate tags.&lt;/p&gt;



&lt;p&gt;The VMware.Community.CISTag module enhances vSphere tag management by leveraging the vSphere REST API for improved automation. With functions like tag gathering, assignment, and removal, it addresses challenges in larger environments. Notable performance improvements, such as a 25% speed boost in environments with 400 tags, make it a valuable resource. Downloadable from the PowerCLI Community Repository, the module also exhibits increased reliability, overcoming common issues like timeout errors. Users are encouraged to explore and share their experiences with this powerful tool.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;The script:&lt;/h3&gt;



&lt;p&gt;The script is designed to connect to a vCenter server, get list of VMs from the input file and assign the tag.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# Import required modules
Import-Module -Name VMware.Community.CISTag
Import-Module -Name VMware.VIMAutomation.Cis.Core

# Get vCenter Server credentials
$VCSACreds = Get-Credential

# Connect to vCenter Server
Connect-CisServer -Server VCSA_FQDN -Credential $VCSACreds

# Read VM names from input file
$vms = Get-Content -Path &amp;quot;input_file.txt&amp;quot;

# Specify the tag to be assigned
$TAGName = &amp;quot;No Job&amp;quot;

# Loop through each VM and assign the tag
foreach ($VM in $vms) {
    Write-Host &amp;quot;Configuring 'No Job' tag for $VM&amp;quot;
    New-CISTagAssignment -Tag (Get-CISTag -Name $TAGName).Name -Entity $VM 
    Write-Host &amp;quot;Configuration completed for $VM&amp;quot;
}

# Disconnect from vCenter Server
Disconnect-CisServer -Server VCSA_FQDN -Confirm:$false

&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_225" class="pvc_stats all  " data-element-id="225" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/tagging-virtual-machines-with-the-cistag-module-in-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://devdojo.com/11900</guid><link>https://devdojo.com/hcritter/simplifying-powershell-object-validation-transforming-a-json-schema-refactoring-journey</link><author>Christian Ritter</author><category>json</category><category>Classes</category><category>schema</category><category>powershell</category><category>argument</category><category>transformation</category><category>attribute</category><title>Simplifying PowerShell Object Validation &amp;amp; Transforming: A JSON-Schema Refactoring Journey</title><description>&lt;p&gt;In a recent scripting endeavor, I developed a PowerShell script with an ArgumentTransformationAttribute. The script's purpose was to convert PSCustomObjects or Hashtables into a JSON format tailored for seamless integration with a BatchRequest destined for the Microsoft Graph API.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-class"&gt;&lt;span class="hljs-keyword"&gt;class&lt;/span&gt; &lt;span class="hljs-title"&gt;JSONTransform&lt;/span&gt; : &lt;span class="hljs-title"&gt;System&lt;/span&gt;.&lt;span class="hljs-title"&gt;Management&lt;/span&gt;.&lt;span class="hljs-title"&gt;Automation&lt;/span&gt;.&lt;span class="hljs-title"&gt;ArgumentTransformationAttribute&lt;/span&gt;&lt;/span&gt;{
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;object&lt;/span&gt;] &lt;span class="hljs-title"&gt;Transform&lt;/span&gt;&lt;/span&gt;([&lt;span class="hljs-type"&gt;System.Management.Automation.EngineIntrinsics&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$EngineIntrinsics&lt;/span&gt;,[&lt;span class="hljs-type"&gt;object&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$InputData&lt;/span&gt;){
        &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"url"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"method"&lt;/span&gt;)
        &lt;span class="hljs-variable"&gt;$ValidKeys&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt;+&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(,&lt;span class="hljs-string"&gt;"headers"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"body"&lt;/span&gt;)
        &lt;span class="hljs-variable"&gt;$ValidMethods&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"Get"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Post"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Put"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Patch"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Delete"&lt;/span&gt;)

        &lt;span class="hljs-keyword"&gt;Switch&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$InputData&lt;/span&gt;){
            {&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-is&lt;/span&gt; [&lt;span class="hljs-type"&gt;PSObject&lt;/span&gt;]}{
                &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.psobject.properties.name.ForEach({
                    &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-operator"&gt;-Not&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ValidKeys&lt;/span&gt;.Contains(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;)){
                        &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Invalid psobject keys"&lt;/span&gt;
                    }
                })       
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;((&lt;span class="hljs-built_in"&gt;Compare-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ReferenceObject&lt;/span&gt; &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt; &lt;span class="hljs-literal"&gt;-DifferenceObject&lt;/span&gt; &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.PSObject.Properties.Name) &lt;span class="hljs-literal"&gt;-IncludeEqual&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ExcludeDifferent&lt;/span&gt;).Count &lt;span class="hljs-operator"&gt;-ne&lt;/span&gt; &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt;.Count){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Missing mandatory keys"&lt;/span&gt;
                }         
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-operator"&gt;-not&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ValidMethods&lt;/span&gt; &lt;span class="hljs-operator"&gt;-Contains&lt;/span&gt; &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Method){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Method need to be: Get, Delete, Patch, Put, Post"&lt;/span&gt;
                }
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.URL &lt;span class="hljs-operator"&gt;-notmatch&lt;/span&gt; &lt;span class="hljs-string"&gt;'^\/[a-zA-Z0-9\/$&amp;amp;=?,]+$'&lt;/span&gt;){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"the url is not in a proper pattern"&lt;/span&gt;
                }
            }
            {&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-is&lt;/span&gt; [&lt;span class="hljs-built_in"&gt;hashtable&lt;/span&gt;]}{
                &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Keys.ForEach({
                    &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-operator"&gt;-Not&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ValidKeys&lt;/span&gt; &lt;span class="hljs-operator"&gt;-Contains&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;)){
                        &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Invalid Hashtable keys"&lt;/span&gt;
                    }
                })
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;((&lt;span class="hljs-built_in"&gt;Compare-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ReferenceObject&lt;/span&gt; &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt; &lt;span class="hljs-literal"&gt;-DifferenceObject&lt;/span&gt; &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Keys) &lt;span class="hljs-literal"&gt;-IncludeEqual&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ExcludeDifferent&lt;/span&gt;).Count &lt;span class="hljs-operator"&gt;-ne&lt;/span&gt; &lt;span class="hljs-variable"&gt;$MandatoryKeys&lt;/span&gt;.Count){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Missing mandatory keys"&lt;/span&gt;
                }
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-operator"&gt;-not&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ValidMethods&lt;/span&gt; &lt;span class="hljs-operator"&gt;-Contains&lt;/span&gt; &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;[&lt;span class="hljs-string"&gt;"Method"&lt;/span&gt;]){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Method need to be: Get, Delete, Patch, Put, Post"&lt;/span&gt;
                }
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;[&lt;span class="hljs-string"&gt;'URL'&lt;/span&gt;] &lt;span class="hljs-operator"&gt;-notmatch&lt;/span&gt; &lt;span class="hljs-string"&gt;'^\/[a-zA-Z0-9\/$&amp;amp;=?,]+$'&lt;/span&gt;){
                    &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"the url is not in a proper pattern"&lt;/span&gt;
                }
            }
            Default{
                &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"Wrong Input type"&lt;/span&gt;
            }
            
        }
        &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
            requests = &lt;span class="hljs-variable"&gt;$InputData&lt;/span&gt;
        }
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;ConvertTo-Json&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Depth&lt;/span&gt; &lt;span class="hljs-number"&gt;4&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Amidst this coding journey, redundancy surfaced within the class. Seeking a streamlined approach, I explored JSON-Schema validation, an efficient solution. This method allowed me to encapsulate all necessary specifications within a single schema, eliminating the need to differentiate between object types.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;{
  &lt;span class="hljs-string"&gt;"properties"&lt;/span&gt;: {
    &lt;span class="hljs-string"&gt;"requests"&lt;/span&gt;: {
      &lt;span class="hljs-string"&gt;"items"&lt;/span&gt;: {
        &lt;span class="hljs-string"&gt;"properties"&lt;/span&gt;: {
          &lt;span class="hljs-string"&gt;"body"&lt;/span&gt;: {
            &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"object"&lt;/span&gt;
          },
          &lt;span class="hljs-string"&gt;"url"&lt;/span&gt;: {
            &lt;span class="hljs-string"&gt;"pattern"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"^\\/[a-zA-Z0-9\\/&lt;span class="hljs-variable"&gt;$&lt;/span&gt;&amp;amp;=?,]+&lt;span class="hljs-variable"&gt;$&lt;/span&gt;"&lt;/span&gt;,
            &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"string"&lt;/span&gt;
          },
          &lt;span class="hljs-string"&gt;"id"&lt;/span&gt;: {
            &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"string"&lt;/span&gt;
          },
          &lt;span class="hljs-string"&gt;"headers"&lt;/span&gt;: {
            &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"object"&lt;/span&gt;
          },
          &lt;span class="hljs-string"&gt;"method"&lt;/span&gt;: {
            &lt;span class="hljs-string"&gt;"enum"&lt;/span&gt;: [
              &lt;span class="hljs-string"&gt;"GET"&lt;/span&gt;,
              &lt;span class="hljs-string"&gt;"PUT"&lt;/span&gt;,
              &lt;span class="hljs-string"&gt;"PATCH"&lt;/span&gt;,
              &lt;span class="hljs-string"&gt;"POST"&lt;/span&gt;,
              &lt;span class="hljs-string"&gt;"DELETE"&lt;/span&gt;
            ],
            &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"string"&lt;/span&gt;
          }
        },
        &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"object"&lt;/span&gt;,
        &lt;span class="hljs-string"&gt;"propertyNames"&lt;/span&gt;: {
          &lt;span class="hljs-string"&gt;"enum"&lt;/span&gt;: [
            &lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,
            &lt;span class="hljs-string"&gt;"method"&lt;/span&gt;,
            &lt;span class="hljs-string"&gt;"url"&lt;/span&gt;,
            &lt;span class="hljs-string"&gt;"headers"&lt;/span&gt;,
            &lt;span class="hljs-string"&gt;"body"&lt;/span&gt;
          ]
        },
        &lt;span class="hljs-string"&gt;"required"&lt;/span&gt;: [
          &lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,
          &lt;span class="hljs-string"&gt;"method"&lt;/span&gt;,
          &lt;span class="hljs-string"&gt;"url"&lt;/span&gt;
        ]
      },
      &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"array"&lt;/span&gt;
    }
  },
  &lt;span class="hljs-string"&gt;"type"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"object"&lt;/span&gt;,
  &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$schema&lt;/span&gt;"&lt;/span&gt;: &lt;span class="hljs-string"&gt;"http://json-schema.org/draft-07/schema#"&lt;/span&gt;,
  &lt;span class="hljs-string"&gt;"required"&lt;/span&gt;: [
    &lt;span class="hljs-string"&gt;"requests"&lt;/span&gt;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The class underwent a transformation, shedding redundancy in favor of clarity. The code now validates objects against the JSON schema, ensuring adherence to predefined rules.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-class"&gt;&lt;span class="hljs-keyword"&gt;class&lt;/span&gt; &lt;span class="hljs-title"&gt;JSONTransform&lt;/span&gt; : &lt;span class="hljs-title"&gt;System&lt;/span&gt;.&lt;span class="hljs-title"&gt;Management&lt;/span&gt;.&lt;span class="hljs-title"&gt;Automation&lt;/span&gt;.&lt;span class="hljs-title"&gt;ArgumentTransformationAttribute&lt;/span&gt;&lt;/span&gt;{
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;object&lt;/span&gt;] &lt;span class="hljs-title"&gt;Transform&lt;/span&gt;&lt;/span&gt;([&lt;span class="hljs-type"&gt;System.Management.Automation.EngineIntrinsics&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$EngineIntrinsics&lt;/span&gt;,[&lt;span class="hljs-type"&gt;object&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$InputData&lt;/span&gt;){
        &lt;span class="hljs-variable"&gt;$batchGraphRequestSchema&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
            &lt;span class="hljs-string"&gt;'$schema'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'http://json-schema.org/draft-07/schema#'&lt;/span&gt;
            &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'object'&lt;/span&gt;
            &lt;span class="hljs-string"&gt;'properties'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                &lt;span class="hljs-string"&gt;'requests'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                    &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'array'&lt;/span&gt;
                    &lt;span class="hljs-string"&gt;'items'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                        &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'object'&lt;/span&gt;
                        &lt;span class="hljs-string"&gt;'properties'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                            &lt;span class="hljs-string"&gt;'id'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                                &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'string'&lt;/span&gt;
                            }
                            &lt;span class="hljs-string"&gt;'method'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                                &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'string'&lt;/span&gt;
                                &lt;span class="hljs-string"&gt;'enum'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;'GET'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'PUT'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'PATCH'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'POST'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'DELETE'&lt;/span&gt;)
                            }
                            &lt;span class="hljs-string"&gt;'url'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                                &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'string'&lt;/span&gt;
                                &lt;span class="hljs-string"&gt;'pattern'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'^\/[a-zA-Z0-9\/$&amp;amp;=?,]+$'&lt;/span&gt;
                            }
                            &lt;span class="hljs-string"&gt;'headers'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                                &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'object'&lt;/span&gt;
                                &lt;span class="hljs-comment"&gt;# Additional properties for headers schema if needed&lt;/span&gt;
                            }
                            &lt;span class="hljs-string"&gt;'body'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                                &lt;span class="hljs-string"&gt;'type'&lt;/span&gt; = &lt;span class="hljs-string"&gt;'object'&lt;/span&gt;
                                &lt;span class="hljs-comment"&gt;# Additional properties for body schema if needed&lt;/span&gt;
                            }
                        }
                        &lt;span class="hljs-string"&gt;'required'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;'id'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'method'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'url'&lt;/span&gt;)
                        &lt;span class="hljs-string"&gt;'propertyNames'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                            &lt;span class="hljs-string"&gt;'enum'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;'id'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'method'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'url'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'headers'&lt;/span&gt;, &lt;span class="hljs-string"&gt;'body'&lt;/span&gt;)
                        }
                    }
                }
            }
            &lt;span class="hljs-string"&gt;'required'&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;'requests'&lt;/span&gt;)
        }
        &lt;span class="hljs-comment"&gt;#Todo spin up multiple batches if number exceed 20.&lt;/span&gt;
        &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
            requests = &lt;span class="hljs-variable"&gt;$InputData&lt;/span&gt;
        } | &lt;span class="hljs-built_in"&gt;ConvertTo-Json&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Depth&lt;/span&gt; &lt;span class="hljs-number"&gt;6&lt;/span&gt;

        &lt;span class="hljs-keyword"&gt;try&lt;/span&gt; {
            &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Test-Json&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Schema&lt;/span&gt; &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$batchGraphRequestSchema&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Convertto-Json&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Depth&lt;/span&gt; &lt;span class="hljs-number"&gt;6&lt;/span&gt;) &lt;span class="hljs-literal"&gt;-ErrorAction&lt;/span&gt; Stop
        }
        &lt;span class="hljs-keyword"&gt;catch&lt;/span&gt; {
            &lt;span class="hljs-built_in"&gt;write-host&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt;
            
            &lt;span class="hljs-keyword"&gt;Throw&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message). JSON Schema did not match"&lt;/span&gt;
        }
        &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-variable"&gt;$ReturnObject&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This approach not only improves the transformation for Graph API batch requests but also holds promise for broader applications in parameter validation scenarios. The JSON schema is a versatile tool, ready to enforce rules and ensure data integrity. Stay tuned for more coding adventures!&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;
</description><pubDate>Wed, 24 Jan 2024 01:06:23 -0800</pubDate></item><item><guid isPermaLink="true">https://tseknet.com/blog/modeldrivers</guid><link>https://tseknet.com/blog/modeldrivers</link><author>dan@tseknet.com</author><category>blog</category><category>powershell</category><category>windows</category><category>SCCM</category><category>automation</category><category>opensource</category><title>How to Automatically Download the Latest Windows Device Drivers</title><description>Automatically download the latest device drivers during Windows OS deployment (Dell, Lenovo, HP, etc.).</description><pubDate>Sun, 23 Oct 2022 00:00:00 Z</pubDate><a10:updated>2024-01-15T16:32:54Z</a10:updated><a10:content type="html" xml:base="https://tseknet.com/blog/modeldrivers">&lt;ul id="markdown-toc"&gt;
  &lt;li&gt;&lt;a href="#the-problem" id="markdown-toc-the-problem"&gt;The Problem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#the-solution" id="markdown-toc-the-solution"&gt;The Solution&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#what-it-does" id="markdown-toc-what-it-does"&gt;What it does&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#what-it-doesnt-do" id="markdown-toc-what-it-doesnt-do"&gt;What it doesn’t do&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#parting-words" id="markdown-toc-parting-words"&gt;Parting Words&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#related-links" id="markdown-toc-related-links"&gt;Related Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="lead"&gt;Imagine never needing to worry about drivers during Windows Operating System
deployment ever again.&lt;/p&gt;

&lt;p class="faded"&gt;No need to manually download drivers. No need to
maintain driver folders on your deployment shares. No need to update drivers
whenever something breaks…&lt;/p&gt;

&lt;h2 id="the-problem"&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Every Windows deployment environment seems to manage OS drivers differently.
Whether it’s dumping every driver into a single folder in your deployment share,
one driver folder per OS, or one driver folder per model, these all require
manual maintenance of your deployment share. What if there was a way to
automatically, reproducibly, and consistently download OS drivers at
deployment time…?&lt;/p&gt;

&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Scrape manufacturer websites using RegEx for direct driver download URLs. RegEx
works well for this but…&lt;/p&gt;

&lt;p&gt;&lt;img src="https://imgs.xkcd.com/comics/perl_problems.png" title="" alt="Perl Problems" srcset="https://imgs.xkcd.com/comics/perl_problems_2x.png 2x" style="image-orientation: none;" /&gt;&lt;/p&gt;

&lt;p&gt;With that out of the way, I’ll start by sharing the entire script,
then describing it in more detail &lt;a href="#what-it-does"&gt;below&lt;/a&gt;. I’m always open to
suggestions, so feel free to open a
&lt;a href="https://github.com/TsekNet/PowerShell/pulls"&gt;pull request&lt;/a&gt; or comment below!&lt;/p&gt;

&lt;style&gt;
.ps1 {height: 500px; overflow: scroll;}
&lt;/style&gt;

&lt;script src="https://emgithub.com/embed-v2.js?target=https%3A%2F%2Fgithub.com%2FTsekNet%2FPowerShell%2Fblob%2Fmaster%2FInstall-ModelDrivers%2Finstall_model_drivers.ps1&amp;amp;style=obsidian&amp;amp;showBorder=on&amp;amp;showFileMeta=on"&gt;&lt;/script&gt;

&lt;p&gt;The ideal solution is automated and doesn’t require updating when new OS drivers
are released. Let’s get into how the sauce is made:&lt;/p&gt;

&lt;h3 id="what-it-does"&gt;What it does&lt;/h3&gt;

&lt;p class="important"&gt;Refer to the code above for the most up-to-date information.&lt;/p&gt;

&lt;p&gt;I wrote this script to simplify deploying drivers in my environment. What
began as an idea to use RegEx to scrape driver URLs quickly turned into a fully
automated solution (thanks Powershell!). This script is slightly modified for
GitHub to include all the steps necessary to download, install, and deploy OS
drivers.&lt;/p&gt;

&lt;p&gt;Automating driver downloads from manufacturers is no discovery. As far as I
can tell, manufacturers have been publishing discoverable web endpoints (of
varying usefulness…) for driver downloads for over a decade now. Recently,
I’ve seen these endpoints improve to the point that this script is now possible.
What I haven’t seen is a single script that does everything from scraping the
endpoint, to downloading, to installing, without the need to jump through
intermediary cab files. What this solution provides is simplicity. No need to
worry about OS drivers beyond specifying the manufacturer and model.&lt;/p&gt;

&lt;p&gt;The scripted solution can be run directly from your system being deployed in
WinPE or WinRE. The &lt;code class="language-plaintext highlighter-rouge"&gt;Manufacturer&lt;/code&gt; parameter tells the script which website to
query for drivers. The &lt;code class="language-plaintext highlighter-rouge"&gt;Model&lt;/code&gt; parameter tells the script to query the
manufacturer’s website for the exact string of your query and find the
associated driver download link.&lt;/p&gt;

&lt;p&gt;Once the download link for the driver pack is obtained, the script downloads the
file to the local &lt;code class="language-plaintext highlighter-rouge"&gt;$env:TEMP&lt;/code&gt; directory and leverages &lt;code class="language-plaintext highlighter-rouge"&gt;pnpunattend.exe&lt;/code&gt; to
install all drivers in that directory. Finally, the script cleans up files
placed in &lt;code class="language-plaintext highlighter-rouge"&gt;$env:TEMP&lt;/code&gt; and exits.&lt;/p&gt;

&lt;h3 id="what-it-doesnt-do"&gt;What it doesn’t do&lt;/h3&gt;

&lt;p&gt;Install WinPE drivers (only OS drivers).&lt;/p&gt;

&lt;h2 id="parting-words"&gt;Parting Words&lt;/h2&gt;

&lt;p&gt;This is where I acknowledge that downloading drivers from the manufacturer’s
website during deployment may increase deployment times (vs. downloading from
an internal endpoint). This is a worthwhile trade-off for the time saved
from managing individual driver packs in deployment shares. While this script
applies OS drivers before booting into the OS during deployment, I would also
recommend running Windows Updates once booted into the OS for the first time.&lt;/p&gt;

&lt;p&gt;This script also assumes that manufacturers test their drivers before
deployment (not always the case), and that the “latest” OS version drivers
will work on your systems. You’ll have to discuss if this added automation is a
worthwhile trade-off with your team. Heck, feel free to fork this script
entirely to add resiliency, or submit PRs to improve the script itself.&lt;/p&gt;

&lt;p&gt;Hopefully, this script saves you some time that could be better
used on automation, rather than fumbling with OS driver deployment 💻🔂⏩&lt;/p&gt;

&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.deploymentresearch.com/mdt-2013-lite-touch-driver-management/"&gt;MDT Lite Touch Driver Management&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.deploymentresearch.com/back-to-basics-pnputil-exe-vs-pnpunattend-exe/"&gt;Back to Basics – Updating Drivers – pnputil.exe vs. pnpunattend.exe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.osdeploy.com/"&gt;OSDeploy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/OSDeploy/OSD/blob/6321c47b4d33f500d04a807504c3646e65009644/Provisioning/Invoke-OSDCloudDriverPack.ps1"&gt;Invoke-OSDCloudDriverPack.ps1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://deploymentramblings.wordpress.com/2014/04/17/downloading-dell-driver-cab-files-automagically-with-the-driver-pack-catalog/"&gt;Downloading Dell Driver CAB files automagically with the Driver Pack Catalog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</a10:content><media:thumbnail url="https://tseknet.com/assets/img/blog/gettingready.jpg" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:content medium="image" url="https://tseknet.com/assets/img/blog/gettingready.jpg" xmlns:media="http://search.yahoo.com/mrss/"></media:content></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3781</guid><link>https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/</link><category>Graph</category><category>PowerShell</category><category>API</category><category>Automation</category><category>Azure</category><category>Entra</category><category>Office 365</category><category>Teams</category><category>Users</category><title>Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events</title><description>&lt;p&gt;In this article I will be showing you how you can automatically have Microsoft Teams set its presence to Do Not Disturb, or any other presence, based on events in your Outlook Calendar. I also looked into leveraging Power Automate but it began to require premium connectors and at that cost, going the serverless automation route was much cheaper. &lt;/p&gt;
&lt;p&gt;An overview of this automation is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run on a set schedule.&lt;/li&gt;
&lt;li&gt;Get all users within the tenant, if the user &lt;strong&gt;does not&lt;/strong&gt; have a mailbox, proceed to the next user, if the user &lt;strong&gt;does&lt;/strong&gt; have a mailbox proceed to the next step.&lt;/li&gt;
&lt;li&gt;Get the users events that will occur within the next 1 hour (configurable value)&lt;/li&gt;
&lt;li&gt;See if there is an event that matches what we are looking for. In my instance, if an event title/subject is &amp;#8220;DND&amp;#8221; (not case-sensitive) then proceed to the next step, otherwise go to &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/"&gt;Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Thu, 04 Jan 2024 05:30:52 Z</pubDate><comments>https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;In this article I will be showing you how you can automatically have Microsoft Teams set its presence to Do Not Disturb, or any other presence, based on events in your Outlook Calendar. I also looked into leveraging Power Automate but it began to require premium connectors and at that cost, going the serverless automation route was much cheaper. &lt;/p&gt;



&lt;p&gt;An overview of this automation is as follows:&lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;Run on a set schedule.&lt;/li&gt;



&lt;li&gt;Get all users within the tenant, if the user &lt;strong&gt;does not&lt;/strong&gt; have a mailbox, proceed to the next user, if the user &lt;strong&gt;does&lt;/strong&gt; have a mailbox proceed to the next step.&lt;/li&gt;



&lt;li&gt;Get the users events that will occur within the next 1 hour (configurable value)&lt;/li&gt;



&lt;li&gt;See if there is an event that matches what we are looking for. In my instance, if an event title/subject is &amp;#8220;DND&amp;#8221; (not case-sensitive) then proceed to the next step, otherwise go to &lt;/li&gt;&lt;/ol&gt;&amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/"&gt;Automatically Schedule Microsoft Teams Do Not Disturb Presence Based on Outlook Calendar Events&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2024/01/03/automatically-schedule-microsoft-teams-do-not-disturb-presence-based-on-outlook-calendar-events/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments></item><item><guid isPermaLink="false">https://powershell.ro/?p=205</guid><link>https://powershell.ro/update-hpe-ilo-firmware-using-powershell/</link><category>Powershell</category><category>VMWare</category><category>connect-hpeilo</category><category>disconnect-hpeilo</category><category>firmware</category><category>get-hpeilo</category><category>HPEiLOCmdlets</category><category>hpeilocmdlets.4.0.0</category><category>iloaddress</category><category>powercli</category><category>set-hpeilo</category><title>Update HPE ILO firmware using PowerShell</title><description>The first script of 2024 is about updating the HPE ILO firmware on physical servers using PowerShell. Firmware updates, including those for iLO, often include bug fixes, security patches, and performance enhancements. Regularly updating iLO firmware ensures that your servers are equipped with the latest features, improvements, and security measures, reducing the risk of vulnerabilities [&amp;#8230;]</description><pubDate>Tue, 02 Jan 2024 16:34:41 Z</pubDate><comments>https://powershell.ro/update-hpe-ilo-firmware-using-powershell/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;The first script of 2024 is about updating the HPE ILO firmware on physical servers using PowerShell.&lt;/p&gt;



&lt;p&gt;Firmware updates, including those for iLO, often include bug fixes, security patches, and performance enhancements. Regularly updating iLO firmware ensures that your servers are equipped with the latest features, improvements, and security measures, reducing the risk of vulnerabilities and enhancing overall system stability.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;The PowerShell Script:&lt;/h3&gt;



&lt;p&gt;The script is designed to connect to a ILO remote board, iterate through each one, and perform the firmware update as needed.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;Just to be noted that it was tested on ILO 5 on more than 200 HPE physical servers.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# 1. Import the HPEiLOCmdlets module
Import-Module -Name &amp;quot;C:\temp\hpeilocmdlets.4.0.0\HPEiLOCmdlets.psd1&amp;quot;

# 2. Declare a variable to use for the connection
$ILOAccount = Get-Credential

# HPE ILO cmdlets connect to iLO
# Reading iLO addresses from a text file
$ILOAddresses = Get-Content -Path &amp;quot;C:\temp\ilotargets.txt&amp;quot;

# Loop through each iLO address
foreach ($ILOAddress in $ILOAddresses) {

    # Establishing a connection to the iLO
    $Connection = Connect-HPEiLO -Address $ILOAddress -Credential $ILOAccount -DisableCertificateAuthentication:$true -Timeout 60 -Verbose

    # 3. Checking the iLO firmware version before updating
    Get-HPEiLOFirmwareVersion -Connection $Connection | Select-Object Hostname, FirmwareVersion 

    # 4. Upgrading the HPE iLO firmware
    $task = Update-HPEiLOFirmware -Connection $Connection -Location &amp;quot;C:\temp\ilo5_300.fwpkg&amp;quot; -UploadTimeout 300 -UpdateRepository:$true -TPMEnabled:$true -confirm:$false

}


 # Loop through each iLO address
foreach ($ILOAddress in $ILOAddresses) {   

    # Reconnect to iLO after the update
    $Connection = Connect-HPEiLO -Address $ILOAddress -Credential $ILOAccount -DisableCertificateAuthentication:$true -Timeout 60

    # 5. Checking the iLO firmware version after updating
    Get-HPEiLOFirmwareVersion -Connection $Connection | Select-Object Hostname, FirmwareVersion

# Disconnect from iLO after completing the updates
Disconnect-HPEiLO -Connection $Connection
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This script does the following:&lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;Imports the HPEiLOCmdlets module.&lt;/li&gt;



&lt;li&gt;Declares a variable for the iLO account credentials.&lt;/li&gt;



&lt;li&gt;Reads iLO addresses from a text file.&lt;/li&gt;



&lt;li&gt;Connects to each iLO using the provided credentials and addresses.&lt;/li&gt;



&lt;li&gt;Checks the iLO firmware version before updating.&lt;/li&gt;



&lt;li&gt;Updates the iLO firmware using the specified package.&lt;/li&gt;



&lt;li&gt;Reconnects to iLO after the update.&lt;/li&gt;



&lt;li&gt;Checks the iLO firmware version again after updating.&lt;/li&gt;



&lt;li&gt;Disconnects from iLO after completing the updates.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt;Feel free to customize this script based on your specific reporting requirements and share your experiences or improvements in the comments below!&lt;/p&gt;



&lt;p&gt;It should be noted that the script is not entirely authored by me; certain information and code snippets are sourced from various places, including blogs, GitHub repositories, and community forums.&lt;/p&gt;
&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_205" class="pvc_stats all  " data-element-id="205" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/update-hpe-ilo-firmware-using-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments></item><item><guid isPermaLink="false">https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20excel,%20copilot/2024/01/02/Videos-In-Review-2023</guid><link>https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20excel,%20copilot/2024/01/02/Videos-In-Review-2023.html</link><a10:author><a10:name /></a10:author><category>PowerShell, PowerShellAI, OpenAI, Azure OpenAI, Excel, Copilot</category><category>PowerShell, PowerShellAI, OpenAI, Azure OpenAI, Excel, Copilot</category><title>2023 Videos In Review 2023</title><description /><pubDate>Tue, 02 Jan 2024 09:00:00 Z</pubDate><a10:updated>2024-01-02T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20excel,%20copilot/2024/01/02/Videos-In-Review-2023.html">&lt;p&gt;&lt;img src="/images/posts/2023-Videos-in-review.png" alt="" /&gt;&lt;/p&gt;

&lt;h1 id="2023-a-year-of-innovation-and-learning-in-video"&gt;2023: A Year of Innovation and Learning in Video&lt;/h1&gt;

&lt;p&gt;Reflecting on the year 2023, I am grateful for the support and engagement from the community. The enthusiasm and feedback have been the driving force behind each video, fueling exploration into the fascinating realms of PowerShell projects, AI-powered coding, and data alchemy.&lt;/p&gt;

&lt;p&gt;A special thank you to the knowledgeable individuals who took the time to present material, providing a tremendous learning opportunity for all of us.&lt;/p&gt;

&lt;h2 id="highlights"&gt;Highlights&lt;/h2&gt;

&lt;p&gt;Here are a couple of standout moments of the year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Scripting Success: A Deep Dive into Tiny PowerShell Projects&lt;/strong&gt; session with Doug Finke. This video, available at &lt;a href="https://www.youtube.com/watch?v=BVDBRty5mCU"&gt;Scripting Success on YouTube&lt;/a&gt;, delves into the intricacies of PowerShell scripting, showcasing practical applications and innovative solutions that have captivated our audience. Its popularity underscores the growing interest and versatility in PowerShell scripting within our community.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another highlight was the release of the PowerShellAI module, a testament to the burgeoning intersection of PowerShell and artificial intelligence. The module, which can be downloaded using &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module PowerShellAI&lt;/code&gt;, has gained widespread support for its ability to integrate advanced AI capabilities into PowerShell environments. This offering has not only been a hit among enthusiasts but also marks a significant leap in our journey towards integrating AI into everyday scripting.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The at &lt;a href="https://www.youtube.com/watch?v=dxITlwLMbWc"&gt;1-Minute Guide on YouTube&lt;/a&gt;, emerged as a nice resource. This concise and informative guide offers a quick  understanding of list slicing in PowerShell. Its succinct format has been particularly appreciated by the community, providing valuable insights in a time-efficient manner.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="microsoft-vs-code-livestream"&gt;Microsoft VS Code Livestream&lt;/h2&gt;

&lt;p&gt;I extend my heartfelt thanks to Microsoft and the VS Code Livestream team for their gracious hosting, providing an exceptional platform that significantly amplified our discussions and learning experiences. Their support has been instrumental in reaching a wider audience and fostering a deeper understanding of the topics we are passionate about.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;AI-Powered Coding: Unleashing Data and SQL Mastery with GPT Function Calling&lt;/strong&gt; - https://youtu.be/kU9FeBWuZnw&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Copilot + PowerShell + Polyglot Notebooks&lt;/strong&gt; - https://youtu.be/U9S4BMqJPQ8&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data Alchemy: Unlocking GPT-4 Insights from Your Own Data&lt;/strong&gt; - https://youtu.be/ru8zTLpkHR4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="speakers"&gt;Speakers&lt;/h2&gt;

&lt;p&gt;I want to shine a spotlight on the diverse array of knowledgeable and inspiring individuals who have generously shared their expertise and insights, contributing immensely to the richness and depth of our discussions throughout the year.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell from Intimidation to Interaction - Shaun Lawrie&lt;/strong&gt; - https://www.youtube.com/watch?v=V12kdKbgo98&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Braid A Post PowerShell Shell  - Bruce Payette&lt;/strong&gt; - https://www.youtube.com/watch?v=car4eN_BqJY&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Level Up your PowerShell game with ScriptRunner - Heiko Brenn&lt;/strong&gt;	- https://www.youtube.com/watch?v=X6cFRDg2Eho&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leveraging PowerShell ImportExcel Time Series Forecasting &amp;amp; Impact Estimation	- Anh Tran&lt;/strong&gt; - https://www.youtube.com/watch?v=pkIRzLQ0_fs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Drive Rapid PowerShell Adoption Using Jupyter Notebooks - Michael Soule&lt;/strong&gt;	- https://www.youtube.com/watch?v=YnKRiZZVDpw&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Getting started with Dev Containers in VS Code - Jan Egil&lt;/strong&gt; - https://youtu.be/fNyRMTZ0fRk&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AutomatedLab 101 - Mikey Bronowski&lt;/strong&gt; - https://youtu.be/SpbjqP6cST4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="my-ai-livestreams"&gt;My AI Livestreams&lt;/h2&gt;

&lt;p&gt;I delve into the captivating world of artificial intelligence, showcasing a series of engaging and informative live sessions where we explored the latest advancements and practical applications of AI, sparking curiosity and fostering a deeper understanding among our audience&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ChatGPT Unscripted: A Real-Time Journey through ChatGPT’s Code Interpreter!&lt;/strong&gt;	- https://www.youtube.com/watch?v=a3jTSn6o_jY&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AI in Action: Content Creation With ChatGPT Code Interpreter&lt;/strong&gt;	- https://www.youtube.com/watch?v=yjZp6lHy4qM&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Walkthrough - Financial Analytics with OpenAI’s Code Interpreter - You don’t want to miss this!&lt;/strong&gt;	- https://www.youtube.com/watch?v=GMTnMFinkTQ&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unlocking Regex and Stock Market Insights with GPT-4’s Code Interpreter&lt;/strong&gt; - https://www.youtube.com/watch?v=p8FymOu8Ge4&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;OpenAI Code Interpreter - Let’s see how our really smart intern explores Life Expectancy data&lt;/strong&gt;	- https://www.youtube.com/watch?v=N5i0lI8O9_U&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Harnessing GPT-4 Code Interpreter for Web Scraping &amp;amp; Data Visualization&lt;/strong&gt;	- https://www.youtube.com/watch?v=XA-zO2iiTGA&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exploring GPT-4 Code Interpretation - PDFs, AskTheCode and Whimsical Diagrams&lt;/strong&gt;	- https://www.youtube.com/watch?v=mpS2j2Aos4c&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Extract &amp;amp; Visualize Data with ChatGPT: OCR Analysis Magic!&lt;/strong&gt;	- https://www.youtube.com/watch?v=VfAgcHVZYJU&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unlock ChatGPT Functions in Minutes with PowerShellAI: Your Quick Guide&lt;/strong&gt;	- https://www.youtube.com/watch?v=m7v6FM94Ujs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AI Meets PowerShell: OpenAI Developments &amp;amp; Exciting Upcoming Events!&lt;/strong&gt;	- https://www.youtube.com/watch?v=Fn-t4hmdPZw&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="vs-code-copilot-demos"&gt;VS Code Copilot Demos&lt;/h2&gt;

&lt;p&gt;These videos feature practical demonstrations of how VS Code Copilot enhances coding efficiency and creativity, offering insights into its real-world applications and benefits for developers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Copilot Chat - Create a PowerShell Workspace&lt;/strong&gt;	- https://www.youtube.com/watch?v=p3JVWhQb2-k&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Accelerate your PowerShell coding process with GitHub Copilot X&lt;/strong&gt;	- https://www.youtube.com/watch?v=rxDyOrr9vSI&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GitHub Copilot’s Latest in VS Code: Seamless Unit Testing &amp;amp; Code Creation!&lt;/strong&gt;	- https://www.youtube.com/watch?v=f8rLDYmLY_Q&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Speak your code into existence - New Visual Studio Code&lt;/strong&gt;	- https://www.youtube.com/watch?v=SVnax02NOHw&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AI Coding with GitHub Copilot: Quick Guide by Doug Finke&lt;/strong&gt;	- https://www.youtube.com/watch?v=GBdIW0ka7E4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="powershellai-and-azure-openai-service"&gt;PowerShellAI and Azure OpenAI Service&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;PowerShellAI Meets Azure OpenAI Service: ChatGPT Integration&lt;/strong&gt;	- https://www.youtube.com/watch?v=xyoR7FbU7T8&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="create-chatgpt-bots-with-powershell"&gt;Create ChatGPT Bots with PowerShell&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Create Your Own ChatGPT Bot in 5 Minutes with PowerShellAI!&lt;/strong&gt;	- https://www.youtube.com/watch?v=Ky9qcElTIRo&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ChatGPT + PowerShell -eq ‘Better Together&lt;/strong&gt;’	- https://www.youtube.com/watch?v=s3AXcuBLJq4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="powershellai"&gt;PowerShellAI&lt;/h2&gt;

&lt;p&gt;Let’s look at the integration of artificial intelligence with PowerShell, showcasing the capabilities and uses of the PowerShellAI module through various examples and tutorials.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;New PowerShell Module: PowerShellAI&lt;/strong&gt;	- https://www.youtube.com/watch?v=fpq9TDpaCuU&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Using PowerShell with OpenAI GPT in the console with a shortcut key&lt;/strong&gt;	- https://www.youtube.com/watch?v=Y2fJki6r4mI&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell AI - new &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function&lt;/strong&gt;	- https://www.youtube.com/watch?v=-mlkUVUPZHU&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell AI - copilot at the command line&lt;/strong&gt;	- https://www.youtube.com/watch?v=JrNBvEm6E7Q&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Use PowerShell to Automate Your Cheat Sheet Creation with ChatGPT and Excel&lt;/strong&gt;	- https://www.youtube.com/watch?v=9dUlUD840Q0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell Copilot - “How To” git questions, at the command line&lt;/strong&gt;	- https://www.youtube.com/watch?v=D-AStHxcK8E&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell Conversational GPT&lt;/strong&gt;	- https://www.youtube.com/watch?v=cORBBY2lRJQ&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell AI - Invoke-AIErrorHelper&lt;/strong&gt;	- https://www.youtube.com/watch?v=uwDAcIiXqz0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell AI Invoke-AIExplain&lt;/strong&gt;	- https://www.youtube.com/watch?v=pbwLok0krCQ&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unleashing GPT with PowerShell UI: The Ultimate Content Generator&lt;/strong&gt;	- https://www.youtube.com/watch?v=r9eBLiELgH0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell AI now with GPT-4 Chat Integration&lt;/strong&gt;	- https://www.youtube.com/watch?v=ZX5gwzJe7eI&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Master Git with PowerShellAI: Your Interactive Cheat Sheet!&lt;/strong&gt;	- https://www.youtube.com/watch?v=dIV8_dEKkI8&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="powershellai-and-excel"&gt;PowerShellAI and Excel&lt;/h2&gt;
&lt;p&gt;Here we delve into the innovative combination of PowerShellAI with Excel, demonstrating the powerful ways these tools can work together to enhance data analysis and automation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;New-Spreadsheet - PowerShell  + ChatGPT + Excel&lt;/strong&gt;	- https://www.youtube.com/watch?v=Aehsgtll1CA&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell, ChatGPT, and Excel: Who Signed the Declaration Independence&lt;/strong&gt;	- https://www.youtube.com/watch?v=r4GfOyXP6Fk&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Explore PowerShellAI.Functions: Unleashing OpenAI Function Calling in PowerShell!&lt;/strong&gt;	- https://www.youtube.com/watch?v=05vUi6_5so0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AI-Generated Guide to Excel: Prompt GPT for Shortcuts&lt;/strong&gt;	- https://www.youtube.com/watch?v=TSGX8gSuPV0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Use PowerShell AI to Create Cheat Sheets in Excel&lt;/strong&gt;	- https://www.youtube.com/watch?v=4Gv_YlJy9BM&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="more-videos"&gt;More Videos&lt;/h2&gt;

&lt;p&gt;Now we expand our horizons with a diverse range of additional content, offering deeper insights and broader perspectives on various topics.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Now the Power of PowerShellAI &amp;amp; ChatGPT in Polyglot Interactive Notebooks 🚀&lt;/strong&gt;	- https://www.youtube.com/watch?v=NndCsUlaG-E&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Join Selected Cells - Polyglot Interactive Notebooks&lt;/strong&gt;	- https://www.youtube.com/watch?v=17WTbhjGOvA&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mermaid: The All-in-One Tool To Create Any Diagram&lt;/strong&gt;	- https://www.youtube.com/watch?v=-x1H_zgTWjE&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1-Minute Guide: List Slicing in PowerShell!&lt;/strong&gt;	- https://www.youtube.com/watch?v=dxITlwLMbWc&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Real-Time Duplicate Detection in Excel with PowerShell: Quick Guide&lt;/strong&gt;	- https://www.youtube.com/watch?v=HHE7vERjKgo&lt;/li&gt;
&lt;/ul&gt;</a10:content></item><item><guid isPermaLink="false">https://www.dowst.dev/?p=3760</guid><link>https://www.dowst.dev/2023-a-powershell-year-in-review/</link><category>Uncategorized</category><title>2023: A PowerShell Year in Review</title><description>2023 was quite the year for me and PowerShell, so I thought I would put together a brief summary of the year as I saw it. Plus provide you with some fun and interesting statics from the PowerShell Weekly newsletter. This year was also a huge year for me. My book Practical Automation with PowerShell [&amp;#8230;]</description><pubDate>Fri, 22 Dec 2023 14:00:26 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Dowst</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p class=""&gt;2023 was quite the year for me and PowerShell, so I thought I would put together a brief summary of the year as I saw it. Plus provide you with some fun and interesting statics from the PowerShell Weekly newsletter.&lt;/p&gt;



&lt;p class=""&gt;This year was also a huge year for me. My book &lt;a href="https://www.manning.com/books/practical-automation-with-powershell?ar=false&amp;amp;lpse=B"&gt;Practical Automation with PowerShell&lt;/a&gt; was released in April. This book aims to help you take your PowerShell skills to the next level and create full enterprise-ready automations. It was a real labor of lover to share my experiences in automation with the world. And I hope everyone who has read it has found it useful.&lt;/p&gt;



&lt;p class=""&gt;I’m looking forward to 2024 where I plan on making some major updates to some of my community module, publish more blog content, and in general continue my journey with PowerShell and technology in general. But I know most of you aren’t here to read about me, so here is my recap of some of the highlights from this year. &lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;PowerShell Platform&lt;/h2&gt;



&lt;p class=""&gt;• &lt;a href="https://devblogs.microsoft.com/powershell/powershell-7-4-general-availability/" target="_blank" rel="noreferrer noopener"&gt;PowerShell 7.4&lt;/a&gt; was made generally available in November and is now built on .NET 8. &lt;br&gt;• The new package manager, &lt;a href="https://github.com/PowerShell/PSResourceGet" target="_blank" rel="noreferrer noopener"&gt;PSResourceGet &lt;/a&gt;was released and is now included in PowerShell 7.4.&lt;br&gt;• &lt;a href="https://learn.microsoft.com/en-us/powershell/microsoftgraph/get-started?view=graph-powershell-1.0" target="_blank" rel="noreferrer noopener"&gt;Microsoft Graph&lt;/a&gt; modules have now officially replaced the Azure AD modules. &lt;br&gt;• There were also new releases for &lt;a href="https://devblogs.microsoft.com/powershell/psreadline-2-3-4-ga-release/" target="_blank" rel="noreferrer noopener"&gt;PSReadLine &lt;/a&gt;and &lt;a href="https://devblogs.microsoft.com/powershell/announcing-powershell-crescendo-1-1-0/" target="_blank" rel="noreferrer noopener"&gt;Crescendo&lt;/a&gt;.&lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;Community&lt;/h2&gt;



&lt;p class=""&gt;• &lt;a href="https://powershellpodcast.podbean.com/" target="_blank" rel="noreferrer noopener"&gt;The PowerShell Podcast&lt;/a&gt; is still going strong with weekly releases and are almost up to 100 episodes. &lt;br&gt;• &lt;a href="https://www.meetup.com/pacific-powershell-user-group/" target="_blank" rel="noreferrer noopener"&gt;The Pacific PowerShell User Group&lt;/a&gt; was started, and many local user groups are still going strong. Most notably the &lt;a href="https://www.meetup.com/nycpowershellmeetup/" target="_blank" rel="noreferrer noopener"&gt;New York PowerShell Meetup&lt;/a&gt; and &lt;a href="https://rtpsug.com/" target="_blank" rel="noreferrer noopener"&gt;Research Triangle PowerShell User Group&lt;/a&gt;. (If you know of other PowerShell user groups please let me know and I’ll add them here.)&lt;br&gt;• This year was also my time presenting at the PowerShell + DevOps Global Summit. It was great getting to meet so many member of the community in person. Be sure to check out the &lt;a href="https://www.youtube.com/watch?v=YYESMmlAeDc&amp;amp;list=PLE7tQUdRKcyYKuZmmRf9gFzvSw2uDon5u&amp;amp;index=55" target="_blank" rel="noreferrer noopener"&gt;PowerShell + DevOps Global Summit 2023 playlist&lt;/a&gt; on YouTube for my presentation and all of the others. And don’t forget to purchase your tickets to the &lt;a href="https://powershell.org/2023/05/powershell-devops-global-summit-2024/" target="_blank" rel="noreferrer noopener"&gt;2024 summit&lt;/a&gt;. &lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;PowerShell Weekly by the Numbers&lt;/h2&gt;



&lt;p class=""&gt;For those who aren’t aware &lt;a href="https://psweekly.dowst.dev/"&gt;PowerShell Weekly&lt;/a&gt; is a weekly collection of PowerShell news, blogs, scripts, and other related media from world the web, that I found useful and wanted to share. With this being the end of the year, I thought I would share some interesting insights and numbers from 2023. Start with the number:&lt;/p&gt;



&lt;div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex"&gt;
&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:30%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;font size="12"&gt;689&lt;/font&gt;&lt;br&gt;The total number of links this year&lt;/p&gt;
&lt;/div&gt;



&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow"&gt;
&lt;p class="has-text-align-center"&gt;&lt;font size="12"&gt;301&lt;/font&gt;&lt;br&gt;The number of unique contributors&lt;/p&gt;
&lt;/div&gt;



&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:30%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;font size="12"&gt;140&lt;/font&gt;&lt;br&gt;The number of unique sites&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-2 wp-block-columns-is-layout-flex"&gt;
&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:50%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;strong&gt;Top 10 Contributors&lt;/strong&gt;&lt;br&gt;&lt;a href="https://psweekly.dowst.dev/profile/the-powershell-podcast/" data-type="link" data-id="https://psweekly.dowst.dev/profile/the-powershell-podcast/" target="_blank" rel="noreferrer noopener"&gt;The PowerShell Podcast (51)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/tony-redmond/" data-type="link" data-id="https://psweekly.dowst.dev/profile/tony-redmond/" target="_blank" rel="noreferrer noopener"&gt;Tony Redmond (35)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/harm-veenstra/" data-type="link" data-id="https://psweekly.dowst.dev/profile/harm-veenstra/" target="_blank" rel="noreferrer noopener"&gt;Harm Veenstra (34)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/patrick-gruenauer/" data-type="link" data-id="https://psweekly.dowst.dev/profile/patrick-gruenauer/" target="_blank" rel="noreferrer noopener"&gt;Patrick Gruenauer (22)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/doug-finke/" data-type="link" data-id="https://psweekly.dowst.dev/profile/doug-finke/" target="_blank" rel="noreferrer noopener"&gt;Doug Finke (13)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/jeff-hicks/" data-type="link" data-id="https://psweekly.dowst.dev/profile/jeff-hicks/" target="_blank" rel="noreferrer noopener"&gt;Jeff Hicks (12)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/the-powershell-team/" data-type="link" data-id="https://psweekly.dowst.dev/profile/the-powershell-team/" target="_blank" rel="noreferrer noopener"&gt;The PowerShell Team (12)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/james-brundage/" data-type="link" data-id="https://psweekly.dowst.dev/profile/james-brundage/" target="_blank" rel="noreferrer noopener"&gt;James Brundage (10)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/nicholas-xuan-nguyen/" data-type="link" data-id="https://psweekly.dowst.dev/profile/nicholas-xuan-nguyen/" target="_blank" rel="noreferrer noopener"&gt;Nicholas Xuan Nguyen (9)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/przemyslaw-klys/" data-type="link" data-id="https://psweekly.dowst.dev/profile/przemyslaw-klys/" target="_blank" rel="noreferrer noopener"&gt;Przemyslaw Klys (9)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:50%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;strong&gt;Top 10 New Comers&lt;/strong&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/christian-ritter/" data-type="link" data-id="https://psweekly.dowst.dev/profile/christian-ritter/" target="_blank" rel="noreferrer noopener"&gt;Christian Ritter (8)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/mdgrs/" data-type="link" data-id="https://psweekly.dowst.dev/profile/mdgrs/" target="_blank" rel="noreferrer noopener"&gt;mdgrs (8)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/clayton-tyger/" data-type="link" data-id="https://psweekly.dowst.dev/profile/clayton-tyger/" target="_blank" rel="noreferrer noopener"&gt;Clayton Tyger (7)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/clayton-errington/" data-type="link" data-id="https://psweekly.dowst.dev/profile/clayton-errington/" target="_blank" rel="noreferrer noopener"&gt;Clayton Errington (7)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/steven-bucher/" data-type="link" data-id="https://psweekly.dowst.dev/profile/steven-bucher/" target="_blank" rel="noreferrer noopener"&gt;Steven Bucher (5)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/christopher-nguyen/" data-type="link" data-id="https://psweekly.dowst.dev/profile/christopher-nguyen/" target="_blank" rel="noreferrer noopener"&gt;Christopher Nguyen (5)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/alexandru-radu-marin/" data-type="link" data-id="https://psweekly.dowst.dev/profile/alexandru-radu-marin/" target="_blank" rel="noreferrer noopener"&gt;Alexandru Radu Marin (4)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/daniel-schroeder/" data-type="link" data-id="https://psweekly.dowst.dev/profile/daniel-schroeder/" target="_blank" rel="noreferrer noopener"&gt;Daniel Schroeder (4)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/james-petty/" data-type="link" data-id="https://psweekly.dowst.dev/profile/james-petty/" target="_blank" rel="noreferrer noopener"&gt;James Petty (4)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/profile/bijay-kumar/" data-type="link" data-id="https://psweekly.dowst.dev/profile/bijay-kumar/" target="_blank" rel="noreferrer noopener"&gt;Bijay Kumar (3)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-3 wp-block-columns-is-layout-flex"&gt;
&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:50%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;strong&gt;Top 10 Sites&lt;/strong&gt;&lt;br&gt;&lt;a href="https://devblogs.microsoft.com" data-type="link" data-id="https://devblogs.microsoft.com" target="_blank" rel="noreferrer noopener"&gt;devblogs.microsoft.com (49)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://powershellpodcast.podbean.com" data-type="link" data-id="https://powershellpodcast.podbean.com" target="_blank" rel="noreferrer noopener"&gt;powershellpodcast.podbean.com (49)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com" data-type="link" data-id="https://github.com" target="_blank" rel="noreferrer noopener"&gt;github.com (48)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reddit.com" data-type="link" data-id="https://reddit.com" target="_blank" rel="noreferrer noopener"&gt;reddit.com (45)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://powershellgallery.com" data-type="link" data-id="https://powershellgallery.com" target="_blank" rel="noreferrer noopener"&gt;powershellgallery.com (35)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://powershellisfun.com" data-type="link" data-id="https://powershellisfun.com" target="_blank" rel="noreferrer noopener"&gt;powershellisfun.com (34)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtube.com" data-type="link" data-id="https://youtube.com" target="_blank" rel="noreferrer noopener"&gt;youtube.com (29)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://office365itpros.com" data-type="link" data-id="https://office365itpros.com" target="_blank" rel="noreferrer noopener"&gt;office365itpros.com (25)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://sid-500.com" data-type="link" data-id="https://sid-500.com" target="_blank" rel="noreferrer noopener"&gt;sid-500.com (22)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://adamtheautomator.com" data-type="link" data-id="https://adamtheautomator.com" target="_blank" rel="noreferrer noopener"&gt;adamtheautomator.com (17)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;div class="wp-block-column is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:50%"&gt;
&lt;p class="has-text-align-center"&gt;&lt;strong&gt;Top 10 Categories&lt;/strong&gt;&lt;br&gt;&lt;a href="https://psweekly.dowst.dev/?link_library_category=platform" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=platform" target="_blank" rel="noreferrer noopener"&gt;Platform (140)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=windows" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=windows" target="_blank" rel="noreferrer noopener"&gt;Windows (39)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=security" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=security" target="_blank" rel="noreferrer noopener"&gt;Security (39)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=azure" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=azure" target="_blank" rel="noreferrer noopener"&gt;Azure (31)&lt;/a&gt;&lt;br&gt; &lt;a href="" data-type="link" data-id="" target="_blank" rel="noreferrer noopener"&gt;Development (23)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=ai" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=ai" target="_blank" rel="noreferrer noopener"&gt;AI (22)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=azure" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=azure" target="_blank" rel="noreferrer noopener"&gt;Azure AD (22)&lt;/a&gt;&lt;br&gt; &lt;a href="" data-type="link" data-id="" target="_blank" rel="noreferrer noopener"&gt;Graph API (20)&lt;/a&gt;&lt;br&gt; &lt;a href="https://psweekly.dowst.dev/?link_library_category=networking" data-type="link" data-id="https://psweekly.dowst.dev/?link_library_category=networking" target="_blank" rel="noreferrer noopener"&gt;Networking (17)&lt;/a&gt;&lt;br&gt; &lt;a href="" data-type="link" data-id="" target="_blank" rel="noreferrer noopener"&gt;Active Directory (17)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p class=""&gt;&lt;strong&gt;Top Links&lt;/strong&gt;&lt;br&gt;• &lt;a href="https://devblogs.microsoft.com/powershell/completion-predictor-version-0-1-1-release/" data-type="link" data-id="https://devblogs.microsoft.com/powershell/completion-predictor-version-0-1-1-release/" target="_blank" rel="noreferrer noopener"&gt;Completion Predictor v0.1.1 Release&lt;/a&gt; by The PowerShell Team (231 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://ctrlaltzzz.wordpress.com/2023/05/03/how-to-create-guis-in-powershell/" data-type="link" data-id="https://ctrlaltzzz.wordpress.com/2023/05/03/how-to-create-guis-in-powershell/" target="_blank" rel="noreferrer noopener"&gt;How to Create a Powershell Form Generator&lt;/a&gt; by Fabio De Oliveira (193 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://devblogs.microsoft.com/powershell/powershell-extension-for-visual-studio-code-spring-2023-update/" data-type="link" data-id="https://devblogs.microsoft.com/powershell/powershell-extension-for-visual-studio-code-spring-2023-update/" target="_blank" rel="noreferrer noopener"&gt;PowerShell Extension for Visual Studio Code Spring 2023 Update&lt;/a&gt; by The PowerShell Team (153 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://mdgrs.hashnode.dev/building-your-own-terminal-status-bar-in-powershell" data-type="link" data-id="https://mdgrs.hashnode.dev/building-your-own-terminal-status-bar-in-powershell" target="_blank" rel="noreferrer noopener"&gt;Building your own Terminal Status Bar in PowerShell&lt;/a&gt; by mdgrs (145 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://mikefrobbins.com/2023/10/19/automatically-convert-a-powershell-command-to-use-splatting/" data-type="link" data-id="https://mikefrobbins.com/2023/10/19/automatically-convert-a-powershell-command-to-use-splatting/" target="_blank" rel="noreferrer noopener"&gt;Automatically convert a PowerShell command to use splatting&lt;/a&gt; by Mike F. Robbins (116 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://ehmiiz.tech/blog/ps_fast_password_retrieving/" data-type="link" data-id="https://ehmiiz.tech/blog/ps_fast_password_retrieving/" target="_blank" rel="noreferrer noopener"&gt;PowerShell KeePass and saving time.&lt;/a&gt; by Emil Larsson (115 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://itconstructors.com/increase-maturity-of-powershell-script-with-mermaid-diagram/" data-type="link" data-id="https://itconstructors.com/increase-maturity-of-powershell-script-with-mermaid-diagram/" target="_blank" rel="noreferrer noopener"&gt;Increase maturity of PowerShell script with Mermaid diagram&lt;/a&gt; by Wiktor Mrowczynski (115 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://jeffhicks.substack.com/p/best-practices-make-perfect" data-type="link" data-id="https://jeffhicks.substack.com/p/best-practices-make-perfect" target="_blank" rel="noreferrer noopener"&gt;Best Practices Make Perfect&lt;/a&gt; by Jeff Hicks (110 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://github.com/StartAutomating/Posh" data-type="link" data-id="https://github.com/StartAutomating/Posh" target="_blank" rel="noreferrer noopener"&gt;POSH&lt;/a&gt; by James Brundage (110 &amp;#8211; clicks)&lt;br&gt;• &lt;a href="https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/" data-type="link" data-id="https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/" target="_blank" rel="noreferrer noopener"&gt;How to optimize and speed up your PowerShell scripts&lt;/a&gt; by Bas Wijdenes (103 &amp;#8211; clicks)&lt;/p&gt;



&lt;p class=""&gt;I hope everyone has a wonderful holiday season and I will see you all again in 2024.&lt;/p&gt;
</content:encoded><post-id xmlns="com-wordpress:feed-additions:1">3760</post-id></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=27855</guid><link>https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/</link><category>Microsoft</category><category>Automation</category><category>PowerShell</category><title>How to create a maintenance mode in Azure Automation</title><description>&lt;p&gt;An emergency button to ensure that your runbooks stop running without disconnecting the schedule in Azure Automation Disclaimer: This post can be seen as satire. There are probably better ways, but because we were so limited with the customer at the time, we opted for a hobby approach: &amp;#8216;Maintenance mode the creative way&amp;#8216;. What if&amp;#8230; &amp;#8230; &lt;a href="https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;How to create a maintenance mode in Azure Automation&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/"&gt;How to create a maintenance mode in Azure Automation&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 22 Dec 2023 13:14:03 Z</pubDate><comments>https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/how-to-create-a-maintenance-mode-in-azure-automation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=7397</guid><link>https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/</link><category>Exchange</category><title>FIX: Exchange Failed to enable the new cloud archive using PowerShell</title><description>&lt;p&gt;When migrating from Exchange on-premises to Exchange online, you might notice that the mailbox migrations is completed successfully with no failure or error in the migration process. But from Microsoft 365 Admin Portal you find an error about Exchange online archive issue, even though everything seems to be OK for the user in the Exchange...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/"&gt;FIX: Exchange Failed to enable the new cloud archive using PowerShell&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Thu, 21 Dec 2023 18:38:47 Z</pubDate><comments>https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/12/21/fixeolarchiveproblem/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7397</post-id></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3711</guid><link>https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/</link><category>Graph</category><category>PowerShell</category><category>API</category><category>Automation</category><category>Azure</category><category>JSON</category><category>Office 365</category><title>Automated Alerts on Azure (Entra ID) Application Secret Expirations</title><description>&lt;p&gt;Monitoring Azure AD (Entra ID now) application secret expirations in an enterprise is a critical aspect of maintaining robust security and ensuring uninterrupted service. When application secrets expire without timely renewal, it can disrupt business operations by causing application failures. Proactive management of application secret expirations helps enterprises avoid last-minute issues, enabling a more secure and efficient operational environment.&lt;/p&gt;
&lt;p&gt;During my brief research in finding an automated approach to monitoring application secret expirations, I found multiple write-ups and articles but many only showed the code on how to get the expiration property without walking through setting up the automation itself. Another issue was not converting the default UTC time to local time to get more accurate expiration datetimes, and also dealing with applications with multiple secrets that expire at different times. &lt;/p&gt;
&lt;p&gt;This article will walk one through the code&amp;#8217;s logic, including converting time and dealing with multiple values, and creating &amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/"&gt;Automated Alerts on Azure (Entra ID) Application Secret Expirations&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Sat, 16 Dec 2023 06:43:02 Z</pubDate><comments>https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;Monitoring Azure AD (Entra ID now) application secret expirations in an enterprise is a critical aspect of maintaining robust security and ensuring uninterrupted service. When application secrets expire without timely renewal, it can disrupt business operations by causing application failures. Proactive management of application secret expirations helps enterprises avoid last-minute issues, enabling a more secure and efficient operational environment.&lt;/p&gt;



&lt;p&gt;During my brief research in finding an automated approach to monitoring application secret expirations, I found multiple write-ups and articles but many only showed the code on how to get the expiration property without walking through setting up the automation itself. Another issue was not converting the default UTC time to local time to get more accurate expiration datetimes, and also dealing with applications with multiple secrets that expire at different times. &lt;/p&gt;



&lt;p&gt;This article will walk one through the code&amp;#8217;s logic, including converting time and dealing with multiple values, and creating &amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/"&gt;Automated Alerts on Azure (Entra ID) Application Secret Expirations&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2023/12/16/automated-alerts-on-azure-entra-id-application-secret-expirations/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">29</slash:comments></item><item><guid isPermaLink="false">https://blog.it-koehler.com/?p=5619</guid><link>https://blog.it-koehler.com/en/Archive/5619?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=exchange-online-enforcement-pause</link><category>common</category><category>Microsoft Exchange Server</category><category>Microsoft Office 365</category><category>Powershell</category><title>Exchange Online Enforcement Pause</title><description>&lt;p&gt;Lot of people already know the new Microsoft strategy for blocking outdated Exchange OnPrem Versions in hybrid environments. See this old article which describes the most important informations, see also the timeline for throttling and blocking. https://techcommunity.microsoft.com/t5/exchange-team-blog/update-on-transport-enforcement-system-in-exchange-online/ba-p/3827774 After some time the Exchange Teams announced an new article about pausing this enforcement with throttling and blocking. &amp;#8230; &lt;/p&gt;
&lt;p class="link-more"&gt;&lt;a href="https://blog.it-koehler.com/en/Archive/5619" class="more-link"&gt;Read more&lt;span class="screen-reader-text"&gt; "Exchange Online Enforcement Pause"&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Articel &lt;a href="https://blog.it-koehler.com/en/Archive/5619"&gt;Exchange Online Enforcement Pause&lt;/a&gt; available first on &lt;a href="https://blog.it-koehler.com/en"&gt;IT koehler blog&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 15 Dec 2023 21:00:14 Z</pubDate><comments>https://blog.it-koehler.com/en/Archive/5619#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A.K.</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.it-koehler.com/en/Archive/5619/feed</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments></item><item><guid isPermaLink="false">https://devdojo.com/11839</guid><link>https://devdojo.com/hcritter/powershell-technique-powershell-getting-all-string-occurrence-indices</link><author>Christian Ritter</author><category>powershell</category><category>method</category><category>indexof</category><category>indexofall</category><category>string</category><category>adventofcode</category><title>PowerShell-Technique: PowerShell: Getting all String occurrence Indices</title><description>&lt;p&gt;Recently, I participated in AdventOfCode 2023 and encountered challenges that required finding the precise location of a character in a string, along with all its occurrences. Take, for instance, the string 'Hello, world!'. I needed to identify all positions of the character 'l': 2, 3, and 10.&lt;/p&gt;
&lt;p&gt;The typical method, .IndexOf('l'), provides only the first occurrence (in this case, 2). To obtain all positions, I devised a PowerShell function that iterates through the string using the IndexOf() method with a position parameter. Here's the function:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;Get&lt;/span&gt;-&lt;span class="hljs-title"&gt;IndexOfAll&lt;/span&gt; &lt;/span&gt;{
    param (
        [string]$String,
        [string]$SearchString
    )
    $IndexList = [System.Collections.Generic.&lt;span class="hljs-keyword"&gt;List&lt;/span&gt;[int]]::new()
    $Index = $String.IndexOf($SearchString)
    &lt;span class="hljs-keyword"&gt;while&lt;/span&gt;($Index -ne &lt;span class="hljs-number"&gt;-1&lt;/span&gt;){
        $IndexList.Add($Index)
        $Index = $String.IndexOf($SearchString,$Index+&lt;span class="hljs-number"&gt;1&lt;/span&gt;)
    }
    &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; $IndexList
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, I demonstrated in a previous post how to extend the TypeData of string objects using Update-TypeData:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$IndexOfAll&lt;/span&gt; = {
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt;(
        &lt;span class="hljs-variable"&gt;$SearchString&lt;/span&gt;
    )
    &lt;span class="hljs-variable"&gt;$IndexList&lt;/span&gt; = [&lt;span class="hljs-type"&gt;System.Collections.Generic.List&lt;/span&gt;[&lt;span class="hljs-built_in"&gt;int&lt;/span&gt;]]::new()
    &lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; = &lt;span class="hljs-keyword"&gt;$this&lt;/span&gt;.IndexOf(&lt;span class="hljs-variable"&gt;$SearchString&lt;/span&gt;)
    &lt;span class="hljs-keyword"&gt;while&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; &lt;span class="hljs-operator"&gt;-ne&lt;/span&gt; &lt;span class="hljs-literal"&gt;-1&lt;/span&gt;){
        &lt;span class="hljs-variable"&gt;$IndexList&lt;/span&gt;.Add(&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;)
        &lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; = &lt;span class="hljs-keyword"&gt;$this&lt;/span&gt;.IndexOf(&lt;span class="hljs-variable"&gt;$SearchString&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;+&lt;span class="hljs-number"&gt;1&lt;/span&gt;)
    }
&lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-variable"&gt;$indexlist&lt;/span&gt;
}

&lt;span class="hljs-variable"&gt;$etd&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    TypeName = &lt;span class="hljs-string"&gt;'string'&lt;/span&gt;
    MemberType = &lt;span class="hljs-string"&gt;'Scriptmethod'&lt;/span&gt;
    MemberName = &lt;span class="hljs-string"&gt;'IndexOfAll'&lt;/span&gt;
    Value = &lt;span class="hljs-variable"&gt;$IndexOfAll&lt;/span&gt;
}
&lt;span class="hljs-built_in"&gt;Update-TypeData&lt;/span&gt; @etd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, you can easily find all occurrences of a character in a string using the IndexOfAll method.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;
</description><pubDate>Fri, 15 Dec 2023 02:59:02 -0800</pubDate></item><item><guid isPermaLink="true">https://ngetchell.com/posts/my-powershell-journey/</guid><link>https://ngetchell.com/posts/my-powershell-journey/</link><title>My PowerShell Journey</title><description>As I look back on my sixteen years in information technology, I can&amp;rsquo;t help but notice the impact PowerShell has had on my career.
First Automation My first automations were little batch scripts and AutoHotKey plays. They did trival tasks like opening multiple Internet Explorer windows and the Active Directory Users and Computers tool to quickly get myself up and running at work. I&amp;rsquo;d share them with my coworkers while sitting at a college helpdesk.</description><pubDate>Mon, 11 Dec 2023 07:00:12 -0400</pubDate></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3629</guid><link>https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/</link><category>Graph</category><category>API</category><category>Azure</category><category>Office 365</category><category>PowerShell</category><title>Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time</title><description>&lt;p&gt;Previously, if you wanted to find a user&amp;#8217;s last successful sign-in to your Microsoft 365 tenant using the Microsoft Graph REST API, you would have to iterate through Entra ID sign-in logs. With new recent additions to the Microsoft Graph API Beta Endpoint, you can now return the UTC value just by parsing the user details and properties. The Microsoft documentation regarding the signInActivity resource type can be found &lt;a href="https://learn.microsoft.com/en-au/graph/api/resources/signinactivity?view=graph-rest-beta" target="_blank" rel="noopener" title=""&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class="wp-block-heading"&gt;LastSignInDateTime vs LastSuccessfulSignInDateTime&lt;/h3&gt;
&lt;p&gt;The difference between&amp;#160;&lt;em&gt;lastSignInDateTime&lt;/em&gt;&amp;#160;and&amp;#160;&lt;em&gt;lastSuccessfulSignInDateTime&lt;/em&gt;&amp;#160;property is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;lastSignInDateTime&lt;/strong&gt;&lt;/em&gt;: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/"&gt;Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Sat, 09 Dec 2023 17:58:37 Z</pubDate><comments>https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;Previously, if you wanted to find a user&amp;#8217;s last successful sign-in to your Microsoft 365 tenant using the Microsoft Graph REST API, you would have to iterate through Entra ID sign-in logs. With new recent additions to the Microsoft Graph API Beta Endpoint, you can now return the UTC value just by parsing the user details and properties. The Microsoft documentation regarding the signInActivity resource type can be found &lt;a href="https://learn.microsoft.com/en-au/graph/api/resources/signinactivity?view=graph-rest-beta" target="_blank" rel="noopener" title=""&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;LastSignInDateTime vs LastSuccessfulSignInDateTime&lt;/h3&gt;



&lt;p&gt;The difference between&amp;nbsp;&lt;em&gt;lastSignInDateTime&lt;/em&gt;&amp;nbsp;and&amp;nbsp;&lt;em&gt;lastSuccessfulSignInDateTime&lt;/em&gt;&amp;nbsp;property is:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;lastSignInDateTime&lt;/strong&gt;&lt;/em&gt;: The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted to sign into the directory the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For &lt;/li&gt;&lt;/ul&gt;&amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/"&gt;Microsoft Graph API Endpoint Adds Last Successful Sign-In Date Time&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2023/12/09/microsoft-graph-api-endpoint-adds-last-successful-sign-in-date-time/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments></item><item><guid isPermaLink="false">https://powershell.ro/?p=201</guid><link>https://powershell.ro/powercli-script-to-check-cluster-overcommitment-ratio/</link><category>Automation</category><category>Powershell</category><category>VMWare</category><category>cpu ratio</category><category>overcommit</category><category>pCPU</category><category>powercli</category><category>vCPU</category><category>vexpert</category><title>PowerCLI script to check Cluster Overcommitment ratio</title><description>Efficient resource utilization is a key factor in maintaining a healthy VMware vSphere environment. As virtualization environments grow, it becomes crucial to monitor and optimize resource allocation to prevent overcommitment, ensuring the smooth operation of virtual machines. In this blog post, we&amp;#8217;ll explore a PowerCLI script designed to check the Cluster Overcommitment Ratio, providing valuable [&amp;#8230;]</description><pubDate>Wed, 06 Dec 2023 19:39:53 Z</pubDate><comments>https://powershell.ro/powercli-script-to-check-cluster-overcommitment-ratio/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;Efficient resource utilization is a key factor in maintaining a healthy VMware vSphere environment. As virtualization environments grow, it becomes crucial to monitor and optimize resource allocation to prevent overcommitment, ensuring the smooth operation of virtual machines. In this blog post, we&amp;#8217;ll explore a PowerCLI script designed to check the Cluster Overcommitment Ratio, providing valuable insights into the CPU and RAM usage across your vSphere clusters.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;Understanding Cluster Overcommitment:&lt;/h3&gt;



&lt;p&gt;Cluster Overcommitment is a metric that reflects how efficiently your cluster utilizes its available resources, specifically focusing on CPU and RAM. By calculating the ratio of powered-on virtual CPUs (vCPUs) or RAM to the total physical resources, administrators can identify potential bottlenecks and optimize their infrastructure.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;The PowerCLI Script:&lt;/h3&gt;



&lt;p&gt;The script is designed to connect to a vCenter server, iterate through each cluster, and generate a detailed report containing key metrics.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
param(
    &amp;#x5B;String]$vcenter,
    &amp;#x5B;String]$userName,
    &amp;#x5B;String]$password
)

# Import required modules
Import-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue
Import-Module -Name &amp;quot;C:\temp\importexcel.7.8.4\importexcel.psd1&amp;quot; -ErrorAction SilentlyContinue

# Set PowerCLI configuration
Set-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode multiple -Scope User -InvalidCertificateAction ignore -Confirm:$false | Out-Null

# Connect to vCenter
try {
    Connect-VIServer -Server $vcenter -User $userName -Password $password -ErrorAction Stop | Out-Null
} catch &amp;#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {
    Write-Host &amp;quot;Cannot connect to $vcenter with provided credentials&amp;quot; -ForegroundColor Red
    return
} catch &amp;#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {
    Write-Host &amp;quot;Cannot connect to $vcenter - check IP/FQDN&amp;quot; -ForegroundColor Red
    return
} catch {
    Write-Host &amp;quot;Cannot connect to $vcenter - Unknown error&amp;quot; -ForegroundColor Red
    return
}

# Get all the clusters
$clusters = Get-Cluster
$data = @()

# Loop through the clusters and extract the required data
foreach ($cluster in $clusters) {
    $vmhosts = Get-VMHost -Location $cluster
    $num_esxis = $vmhosts.Count
    
    # Calculate cluster metrics
    $ClusterPoweredOnvCPUs = (Get-VM -Location $cluster | Where-Object {$_.PowerState -eq &amp;quot;PoweredOn&amp;quot; }).NumCpu | Measure-Object -Sum
    $ClusterCPUCores = ($vmhosts.NumCpu | Measure-Object -Sum).Sum

    $ClusterPoweredOnvRAM = (Get-VM -Location $cluster | Where-Object {$_.PowerState -eq &amp;quot;PoweredOn&amp;quot; }).MemoryGB | Measure-Object -Sum
    $ClusterPhysRAM = ($vmhosts.MemoryTotalGB | Measure-Object -Sum).Sum

    $oneesxi = if ($num_esxis) { $num_esxis - 1 } else { $null }
    $coresPerESXi = if ($num_esxis) { $ClusterCPUCores / $num_esxis } else { $null }
    $coresPerClusterMinusOne = $coresPerESXi * $oneesxi
    $TotalCoresPerClusterMinusOne = &amp;#x5B;Math]::Round($coresPerClusterMinusOne)

    $ramPerESXi = $ClusterPhysRAM / $num_esxis
    $ramPerClusterMinusOne = $ramPerESXi * $oneesxi
    $TotalRAMPerClusterMinusOne = &amp;#x5B;Math]::Round($ramPerClusterMinusOne)

    # Create an ordered hashtable for each cluster
    $property = &amp;#x5B;ordered]@{
        &amp;quot;vCenter&amp;quot; = $vcenter
        &amp;quot;Cluster Name&amp;quot; = $cluster.Name
        &amp;quot;Number of ESXi servers&amp;quot; = $num_esxis
        &amp;quot;pCPU&amp;quot; = $ClusterCPUCores
        &amp;quot;vCPU&amp;quot; = (Get-VM -Location $cluster | Measure-Object NumCpu -Sum).Sum
        &amp;quot;PoweredOn vCPUs&amp;quot; = $ClusterPoweredOnvCPUs.Sum
        &amp;quot;vCPU:pCPU Ratio&amp;quot; = &amp;#x5B;Math]::Round($ClusterPoweredOnvCPUs.Sum / $ClusterCPUCores, 3)
        &amp;quot;vCPU:pCPU Ratio with one ESXi failed&amp;quot; = &amp;#x5B;Math]::Round($ClusterPoweredOnvCPUs.Sum / $TotalCoresPerClusterMinusOne, 3)
        &amp;quot;CPU Overcommit (%)&amp;quot; = &amp;#x5B;Math]::Round(100 * ($ClusterPoweredOnvCPUs.Sum / $ClusterCPUCores), 3)
        'pRAM(GB)' = $ClusterPhysRAM
        'vRAM(GB)' = &amp;#x5B;Math]::Round((Get-VM -Location $cluster | Measure-Object MemoryGB -Sum).Sum, 2)
        'PoweredOn vRAM (GB)' = $ClusterPoweredOnvRAM.Sum
        'vRAM:pRAM Ratio' = &amp;#x5B;Math]::Round($ClusterPoweredOnvRAM.Sum / $ClusterPhysRAM, 3)
        &amp;quot;vRAM:pRAM Ratio with one ESXi failed&amp;quot; = &amp;#x5B;Math]::Round($ClusterPoweredOnvRAM.Sum / $TotalRAMPerClusterMinusOne, 3)
        'RAM Overcommit (%)' = &amp;#x5B;Math]::Round(100 * ($ClusterPoweredOnvRAM.Sum / $ClusterPhysRAM), 2)
    }

    # Add the hashtable to the data array
    $data += New-Object -TypeName psobject -Property $property
}

# Export the data to an Excel file
$filePath = &amp;quot;C:\temp\$($vcenter).xlsx&amp;quot;
$data | Export-Excel -Path $filePath -AutoSize -TableName &amp;quot;Data&amp;quot;

# Disconnect from vCenter
Disconnect-VIserver -Server $vcenter -Confirm:$false

&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feel free to customize this script based on your specific reporting requirements and share your experiences or improvements in the comments below!&lt;/p&gt;



&lt;p&gt;It should be noted that the script is not entirely authored by me; certain information and code snippets are sourced from various places, including blogs, GitHub repositories, and community forums.&lt;/p&gt;
&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_201" class="pvc_stats all  " data-element-id="201" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/powercli-script-to-check-cluster-overcommitment-ratio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18406</guid><link>https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/</link><category>Exchange</category><category>Microsoft Graph</category><category>Office 365</category><category>PowerShell</category><category>api</category><category>exchange</category><category>microsoft graph</category><category>office 365</category><category>powershell</category><title>Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell</title><description>&lt;p&gt;Hey there! Today, I wanted to introduce you to one of the small but excellent module I've created called the O365Synchronizer. This module focuses on synchronizing contacts and users. If you've ever been tasked with synchronizing Global Address Lists (GAL) across different Office 365 tenants or just wanted to sync GAL with user mailboxes so they can access contacts directly on their phones, this tool is for you.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/"&gt;Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 03 Dec 2023 15:32:13 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c6d1d4a" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d1d338077"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d1f813020" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d1f83 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d1f813020"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d21468190"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Hey there! Today, I wanted to introduce you to one of the small but excellent module I've created called the &lt;a href="https://github.com/EvotecIT/O365Synchronizer"&gt;&lt;strong&gt;O365Synchronizer&lt;/strong&gt;&lt;/a&gt;. This module focuses on synchronizing contacts and users. If you've ever been tasked with synchronizing Global Address Lists (GAL) across different Office 365 tenants or just wanted to sync GAL with user mailboxes so they can access contacts directly on their phones, this tool is for you.&lt;/p&gt;
&lt;p&gt;Think of &lt;a href="https://github.com/EvotecIT/O365Synchronizer"&gt;&lt;strong&gt;O365Synchronizer&lt;/strong&gt;&lt;/a&gt; as your new best friend in Office 365 synchronization needs. It's like having a magic wand that smoothly aligns your contact lists across various domains and even directly into user inboxes.&lt;/p&gt;
&lt;p&gt;While several tools on the market do similar stuff, I was tempted to write my own. I hope you enjoy it!&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d21468190{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d21468190{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d21468190{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d21468190{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d2359" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d234f7562"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d25689702" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d256a "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d25689702"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d26d34200"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;O365Synchronizer&lt;/strong&gt; aims to close two problems that I've encountered when working with Office 365:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Synchronizing Users and contacts to personal mailboxes to allow them to be visible on mobile phones without the necessity to go through GAL&lt;/li&gt;
&lt;li&gt;Synchronizing Users as contacts between tenants (&lt;strong&gt;Tenant A&lt;/strong&gt; gets users as contacts in &lt;strong&gt;Tenant B&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the time, when you want to achieve either of those two, you have to resort to paid solutions. While I have nothing against the paid solutions (and I would like to get paid myself), it's a bit expensive for what it's needed for, in my honest opinion.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d26d34200{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d293c" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d29329600"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d2b653054" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d2b67 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d2b653054"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Synchronizing members and contacts to user personal contacts using Sync-O365PersonalContact&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d2e5d4549"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;O365Synchronizer&lt;/strong&gt; utilizes &lt;strong&gt;Microsoft Graph API&lt;/strong&gt; to get the users/contacts from &lt;strong&gt;Office 365&lt;/strong&gt; tenants and then pushes them using Microsoft Graph API to the user mailbox as contacts. Once &lt;strong&gt;Contacts&lt;/strong&gt; are created, when the command is rerun, it compares existing &lt;strong&gt;Contacts&lt;/strong&gt; for any changes and updates them if necessary. If the user gets removed from the tenant and is no longer on the source, it will also be removed from the user's mailbox. By default, the &lt;strong&gt;Sync-O365PersonalContact&lt;/strong&gt; command uses &lt;b&gt;GUID &lt;/b&gt;to distinguish contacts created by it from existing user contacts. It uses it to track what contacts it adds and only manages those, leaving existing user contacts untouched.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2e5d4549{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d2f96110"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$ClientID = '9e1b3c'
$TenantID = 'ceb371f6'
$ClientSecret = 'nQF8Q'

# connect to Microsoft Graph API
$Credentials = [pscredential]::new($ClientID, (ConvertTo-SecureString $ClientSecret -AsPlainText -Force))
Connect-MgGraph -ClientSecretCredential $Credentials -TenantId $TenantID -NoWelcome

# synchronize contacts for two users of two types (Member, Contact) using GUID prefix
Sync-O365PersonalContact -UserId 'test@evotec.pl', 'test1@evotec.pl' -Verbose -MemberTypes 'Member', 'Contact' -GuidPrefix 'O365Synchronizer' -WhatIf -PassThru | Format-Table *&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d2f96110{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d31324318"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you can see above, to synchronize all users/contacts to two users, all you have to do is run two commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Connect-MgGraph&lt;/strong&gt; to authorize the tenant&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sync-O365PersonalContact&lt;/strong&gt; and use the &lt;strong&gt;UserId&lt;/strong&gt; parameter to provide the UPN of users you want to deliver with synchronization of Members/Contacts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once executed, you get&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d31324318{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d31324318{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d31324318{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d31324318{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d32592676"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="zHqBbtw"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972.png"&gt;&lt;img class="alignnone wp-image-18589 size-large" src="https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1024x668.png" alt="" width="1024" height="668" srcset="https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1024x668.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-300x196.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-768x501.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972-1536x1003.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b644cea972.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d32592676{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d32592676{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d32592676{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d32592676{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d33719486"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Now, if we change the command to &lt;strong&gt;exclude Members&lt;/strong&gt; and only synchronize contacts, you will see that it starts removing members and leaving only contacts in place.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d33719486{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d33719486{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d33719486{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d33719486{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d34a45500"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="xIFMfIG"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694.png"&gt;&lt;img class="alignnone wp-image-18595 size-large" src="https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1024x742.png" alt="" width="1024" height="742" srcset="https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1024x742.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-300x217.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-768x557.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694-1536x1113.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b6d54a5694.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d34a45500{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d35b05797"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Notice that we have a &lt;strong&gt;WhatIf&lt;/strong&gt; switch to quickly test it before running wild. Using the &lt;strong&gt;PassThru&lt;/strong&gt; parameter allows you to take the output from that command and send it to email or build a report around it.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d35b05797{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d36bb7021"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The following permissions are required to use this functionality:&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User.Read.All&lt;/strong&gt; &amp;#8211; to read users&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OrgContact.Read.All&lt;/strong&gt; &amp;#8211; to read contacts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contacts.ReadWrite&lt;/strong&gt; &amp;#8211; to write contacts&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d36bb7021{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d394c" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d39415220"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d3b389049" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d3b3a "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d3b389049"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Synchronizing users as contacts between tenants using Sync-O365Contact&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d3dd69495"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The second functionality is doable using the &lt;strong&gt;Sync-O365Contact&lt;/strong&gt; command. It's a bit different in what it does, as it uses the &lt;strong&gt;ExchangeOnlineManagement&lt;/strong&gt; PowerShell module to synchronize contacts between tenants. The process is a bit different because we need to contact &lt;strong&gt;Tenant A&lt;/strong&gt; using &lt;strong&gt;Microsoft Graph API&lt;/strong&gt; but then synchronize those users/objects as contacts to &lt;strong&gt;Tenant B&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Currently, the Source objects to synchronize are objects provided by &lt;strong&gt;Get-MgUser&lt;/strong&gt;. Still, providing functionality to synchronize objects from Active Directory, Exchange, or even external systems should be doable if there's a need for that.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3dd69495{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d3f3e8909"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;# Source tenant (read only)
$ClientID = '9e1b3c36'
$TenantID = 'ceb371f6'
$ClientSecret = 'NDE8Q'

$Credentials = [pscredential]::new($ClientID, (ConvertTo-SecureString $ClientSecret -AsPlainText -Force))
Connect-MgGraph -ClientSecretCredential $Credentials -TenantId $TenantID -NoWelcome

$UsersToSync = Get-MgUser | Select-Object -First 5

# Destination tenant (writeable)
$ClientID = 'edc4302e'
Connect-ExchangeOnline -AppId $ClientID -CertificateThumbprint '2EC710' -Organization 'xxxxx.onmicrosoft.com'
Sync-O365Contact -SourceObjects $UsersToSync -Domains 'evotec.pl', 'gmail.com' -Verbose -WhatIf -LogPath 'C:\Temp\Logs\O365Synchronizer.log' -LogMaximum 5&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d3f3e8909{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d40fd5134"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;This command works a bit differently when synchronizing users. You provide users to synchronize but also state from &lt;strong&gt;which domain&lt;/strong&gt; those users are. Once the power starts running, it expects to control users from these specific fields. If users created in your &lt;strong&gt;target tenant&lt;/strong&gt; are not on the list provided, those contacts will be deleted. If they exist in&lt;strong&gt; source&lt;/strong&gt;, they &lt;strong&gt;will get updated&lt;/strong&gt;. Essentially the command assumes complete control in &lt;strong&gt;adding, removing or updating contacts&lt;/strong&gt; for given domains.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d40fd5134{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d422b3203"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="KNApVOn"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78.png"&gt;&lt;img class="alignnone wp-image-18598 size-large" src="https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1024x423.png" alt="" width="1024" height="423" srcset="https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1024x423.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-300x124.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-768x317.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78-1536x634.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b7266b8d78.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d422b3203{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d43357610"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;It's essential to reiterate!&lt;strong&gt; Those contacts will be removed if you have contacts in the target tenant that are not on the source lists for given domains&lt;/strong&gt;. For the sake of exercise, if I tell it to synchronize the first 15 users but skip the first 5, the output will show that we are adding some new users, but at the same time, we try to remove those that already exist.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d43357610{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d43357610{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d43357610{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d43357610{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d445a6820"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$UsersToSync = Get-MgUser | Select-Object -First 15 -Skip 5&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d445a6820{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d457c5710"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="wRKqqRN"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5.png"&gt;&lt;img class="alignnone wp-image-18600 size-large" src="https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1024x681.png" alt="" width="1024" height="681" srcset="https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1024x681.png 1024w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-300x199.png 300w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-768x511.png 768w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5-1536x1021.png 1536w, https://evotec.xyz/wp-content/uploads/2023/12/img_656b74fe51ba5.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d457c5710{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d46ab5314"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Of course, I'm &lt;strong&gt;showing one-way sync&lt;/strong&gt;, but nothing stops you from reverting commands, getting users from the target tenant, and pushing them to the source tenant. I would expect, however, that this would be done in another script by the admin of the second tenant, but in theory, you could just run it in a single &lt;strong&gt;PowerShell&lt;/strong&gt; script.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d46ab5314{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d47e86743"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The following permissions are required on the source tenant to use this functionality:&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User.Read.All&lt;/strong&gt; &amp;#8211; to read users&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;On target tenant, you should use:&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Exchange.ManageAsApp&lt;/strong&gt; &amp;#8211; to read/write contacts in Exchange (remember to add application to &lt;strong&gt;Exchange Recipient Administrator&lt;/strong&gt; role)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d47e86743{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d4a80" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d4a753517"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d4c381474" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d4c3a "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d4c381474"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-paperclip" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Installing the module&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d4ebd2517"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Installing &lt;strong&gt;O365Synchronizer&lt;/strong&gt; (or updating) is as easy as executing a single command&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4ebd2517{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d4fe48382"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Install-Module O365Synchronizer -Force -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d4fe48382{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d50ec7364"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To review sources or build your version of my module, you can find the project on the O365Synchronize GitHub page.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d50ec7364{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/syncing-global-address-list-gal-to-personal-contacts-and-between-office-365-tenants-with-powershell/"&gt;Syncing Global Address List (GAL) to personal contacts and between Office 365 tenants with PowerShell&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://blog.darrenjrobinson.com/?p=49294</guid><link>https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/</link><category>PowerShell</category><title>Where the heck is the PowerShell Module loading from?</title><description>&lt;p&gt;If you&amp;#8217;re anything like me you always have PowerShell open, and often both &lt;a href="https://learn.microsoft.com/en-us/powershell/scripting/whats-new/differences-from-windows-powershell?view=powershell-7.4" target="_blank" rel="noreferrer noopener"&gt;PowerShell and Windows PowerShell&lt;/a&gt;. And PowerShell in VSCode and Terminal (and sometimes &lt;a href="https://blog.darrenjrobinson.com/elevate-your-documentation-with-powershell-jupyter-notebook/" target="_blank" rel="noreferrer noopener"&gt;Jupyter Notebook&lt;/a&gt;, and &lt;a href="https://blog.darrenjrobinson.com/windows-subsystem-for-linux-instance-has-terminated/" target="_blank" rel="noreferrer noopener"&gt;WSL&lt;/a&gt; &amp;#8211; Windows Subsystem for Linux). &lt;/p&gt;
&lt;p&gt;There WILL come a point on Windows when you want to know where the heck is the PowerShell Module loading from (especially when using Windows PowerShell).&amp;#8230; &lt;a href="https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/" class="read-more"&gt;keep reading &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/"&gt;Where the heck is the PowerShell Module loading from?&lt;/a&gt; appeared first on &lt;a href="https://blog.darrenjrobinson.com"&gt;darrenjrobinson - Bespoke Identity and Access Management Solutions&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Thu, 30 Nov 2023 05:08:37 Z</pubDate><comments>https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darren Robinson</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.darrenjrobinson.com/where-the-heck-is-the-powershell-module-loading-from/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">49294</post-id></item><item><guid isPermaLink="false">https://devdojo.com/11811</guid><link>https://devdojo.com/hcritter/powershell-securing-app-registration-with-application-access-policy</link><author>Christian Ritter</author><category>secure</category><category>powershell</category><category>microsoft graph</category><category>app registration</category><category>application access policy</category><title>PowerShell: Securing App-Registration with Application Access Policy</title><description>&lt;p&gt;In the rapidly evolving landscape of Entra ID, the use of App-Registrations has become increasingly prevalent, empowering users to seamlessly leverage PowerShell and the Microsoft Graph API for fundamental tasks in Exchange-Online, Entra ID, Intune, and related domains.&lt;/p&gt;
&lt;p&gt;However, the challenge arises in the potential for App-Registrations to possess expansive access, allowing them to target all objects within a designated scope, such as all mailboxes, when set to "Application Scope" permission.&lt;/p&gt;
&lt;p&gt;Addressing this concern, organizations can implement Application Access Policies, offering meticulous control over access permissions for specific resources like Calendars, Contacts, Mail, and Mailbox settings. Notably, these policies can only be configured through PowerShell, necessitating the ExchangeOnlineManagement Module for execution.&lt;/p&gt;
&lt;p&gt;A crucial step in this process involves designating a mail-enabled security group as the policy target, ensuring a focused approach to access control. Although the policy cannot be applied to an individual mailbox, having a lone member in the security group is acceptable. Creating such a group is straightforward with the provided PowerShell command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs perl"&gt;$groupParams = @{
    Name = &lt;span class="hljs-string"&gt;"AAP_AppReg_SG"&lt;/span&gt;
    Alias = &lt;span class="hljs-string"&gt;"AAPAppRegSG"&lt;/span&gt;
    Type = &lt;span class="hljs-string"&gt;"security"&lt;/span&gt;
    PrimarySMTPAddress = &lt;span class="hljs-string"&gt;"AAPAppRegSG@contoso.com"&lt;/span&gt;
    Members = @(&lt;span class="hljs-string"&gt;"ironman@contoso.com"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"thor@contoso.com"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"captainamerica@contoso.com"&lt;/span&gt;)
}
New-DistributionGroup @groupParams
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Following this, the next imperative is creating the Application Access Policy using PowerShell:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs perl"&gt;$policyParams = @{
    AppId = $AppID
    PolicyScopeGroupId = &lt;span class="hljs-string"&gt;"AAPAppRegSG@contoso.com"&lt;/span&gt;
    AccessRight = &lt;span class="hljs-string"&gt;"RestrictAccess"&lt;/span&gt;
    Description = &lt;span class="hljs-string"&gt;"Restrict this app to members of distribution group AAPAppRegSG."&lt;/span&gt;
}
New-ApplicationAccessPolicy @policyParams
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By implementing these measures, App Registrations are refined to exclusively target designated resources—specifically, our superhero mailboxes. Verification of this tailored access can be conducted using the Test-ApplicationAccessPolicy command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;Test-ApplicationAccessPolicy&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Identity&lt;/span&gt; &lt;span class="hljs-string"&gt;"The.Joker@contoso.com"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-AppId&lt;/span&gt; &lt;span class="hljs-variable"&gt;$AppID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In conclusion, the integration of Application Access Policies serves as a pivotal strategy for organizations aiming to strike a balance between harnessing the capabilities of App-Registrations and maintaining precise control over access to critical resources. This approach not only fortifies security but also ensures a seamless and focused utilization of PowerShell and the Microsoft Graph API within the Entra ID environment.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
</description><pubDate>Fri, 24 Nov 2023 00:59:54 -0800</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/11806</guid><link>https://devdojo.com/hcritter/powershell-perfomance-test-get-the-maximum</link><author>Christian Ritter</author><category>performance</category><category>powershell</category><category>math</category><category>sort-object</category><category>max</category><category>maximum</category><category>measure-object</category><title>PowerShell Perfomance-Test: Get the Maximum</title><description>&lt;h3 id="introduction"&gt;Introduction:&lt;/h3&gt;
&lt;p&gt;Efficiency is key when working with PowerShell, and maximizing performance is a common goal for script developers. In this post, we'll explore various techniques for retrieving the maximum number from arrays of different sizes, comparing well-known approaches like Measure-Object, Sort-Object and a more mathematical method.&lt;/p&gt;
&lt;h3 id="methods"&gt;Methods:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4 id="measure-object"&gt;Measure-Object:&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To retrieve the maximum number using Measure-Object, the following command is used:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;(&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-number"&gt;1&lt;/span&gt;,&lt;span class="hljs-number"&gt;3&lt;/span&gt;,&lt;span class="hljs-number"&gt;55&lt;/span&gt;,&lt;span class="hljs-number"&gt;69&lt;/span&gt;,&lt;span class="hljs-number"&gt;13&lt;/span&gt;,&lt;span class="hljs-number"&gt;37&lt;/span&gt;)| &lt;span class="hljs-built_in"&gt;Measure-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt;).Maximum 
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;h4 id="sort-object"&gt;Sort-Object:&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another approach involves sorting the array and extracting the highest number from the last index:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;(&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-number"&gt;1&lt;/span&gt;,&lt;span class="hljs-number"&gt;3&lt;/span&gt;,&lt;span class="hljs-number"&gt;55&lt;/span&gt;,&lt;span class="hljs-number"&gt;69&lt;/span&gt;,&lt;span class="hljs-number"&gt;13&lt;/span&gt;,&lt;span class="hljs-number"&gt;37&lt;/span&gt;)| &lt;span class="hljs-built_in"&gt;Sort-Object&lt;/span&gt;)[-&lt;span class="hljs-number"&gt;1&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;h4 id="mathematical-approach"&gt;Mathematical Approach:&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Utilizing the [System.Math] class and its Max method requires a loop through the array:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;$Numbers = (@(&lt;span class="hljs-number"&gt;1&lt;/span&gt;,&lt;span class="hljs-number"&gt;3&lt;/span&gt;,&lt;span class="hljs-number"&gt;55&lt;/span&gt;,&lt;span class="hljs-number"&gt;69&lt;/span&gt;,&lt;span class="hljs-number"&gt;13&lt;/span&gt;,&lt;span class="hljs-number"&gt;37&lt;/span&gt;)
$maxValue = $Numbers[&lt;span class="hljs-number"&gt;0&lt;/span&gt;] &lt;span class="hljs-comment"&gt;#we need to start with an number&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;($num in $Numbers){
    $maxValue = [System.Math]::Max($Num,$maxValue)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="performance-testing"&gt;Performance Testing:&lt;/h3&gt;
&lt;p&gt;For a comprehensive performance comparison, three arrays of different sizes were created:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$NumbersLarge&lt;/span&gt;   = &lt;span class="hljs-built_in"&gt;get-random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-min&lt;/span&gt; &lt;span class="hljs-number"&gt;0&lt;/span&gt; &lt;span class="hljs-literal"&gt;-max&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;gb &lt;span class="hljs-literal"&gt;-count&lt;/span&gt; &lt;span class="hljs-number"&gt;20&lt;/span&gt;mb
&lt;span class="hljs-variable"&gt;$NumbersMedium&lt;/span&gt;  = &lt;span class="hljs-built_in"&gt;get-random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-min&lt;/span&gt; &lt;span class="hljs-number"&gt;0&lt;/span&gt; &lt;span class="hljs-literal"&gt;-max&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;gb &lt;span class="hljs-literal"&gt;-count&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;mb
&lt;span class="hljs-variable"&gt;$NumbersSmall&lt;/span&gt;   = &lt;span class="hljs-built_in"&gt;get-random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-min&lt;/span&gt; &lt;span class="hljs-number"&gt;0&lt;/span&gt; &lt;span class="hljs-literal"&gt;-max&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;gb &lt;span class="hljs-literal"&gt;-count&lt;/span&gt; &lt;span class="hljs-number"&gt;100&lt;/span&gt;kb
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="results"&gt;Results:&lt;/h3&gt;
&lt;h4 id="small-list"&gt;Small List:&lt;/h4&gt;
&lt;pre&gt;&lt;code class="hljs perl"&gt;Technique Time            RelativeSpeed Throughput
--------- ----            ------------- ----------
Math      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;.&lt;span class="hljs-number"&gt;144915&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;            &lt;span class="hljs-number"&gt;34.5&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Measure   &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;.&lt;span class="hljs-number"&gt;602446&lt;/span&gt; &lt;span class="hljs-number"&gt;4.16&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;         &lt;span class="hljs-number"&gt;8.3&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Sort      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;02&lt;/span&gt;.&lt;span class="hljs-number"&gt;053357&lt;/span&gt; &lt;span class="hljs-number"&gt;14.17&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;        &lt;span class="hljs-number"&gt;2.44&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="medium-list"&gt;Medium List:&lt;/h4&gt;
&lt;pre&gt;&lt;code class="hljs perl"&gt;Technique Time            RelativeSpeed Throughput
--------- ----            ------------- ----------
Math      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;01&lt;/span&gt;.&lt;span class="hljs-number"&gt;377477&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;            &lt;span class="hljs-number"&gt;3.63&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Measure   &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;11.163644&lt;/span&gt; &lt;span class="hljs-number"&gt;8.1&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;          &lt;span class="hljs-number"&gt;0&lt;/span&gt;.&lt;span class="hljs-number"&gt;45&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Sort      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;31.034414&lt;/span&gt; &lt;span class="hljs-number"&gt;22.53&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;        &lt;span class="hljs-number"&gt;0&lt;/span&gt;.&lt;span class="hljs-number"&gt;16&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="large-list"&gt;Large List:&lt;/h4&gt;
&lt;pre&gt;&lt;code class="hljs perl"&gt;Technique Time            RelativeSpeed Throughput
--------- ----            ------------- ----------
Math      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;26.392599&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;            &lt;span class="hljs-number"&gt;0&lt;/span&gt;.&lt;span class="hljs-number"&gt;19&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Measure   &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;01&lt;/span&gt;:&lt;span class="hljs-number"&gt;57.695910&lt;/span&gt; &lt;span class="hljs-number"&gt;4.46&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;         &lt;span class="hljs-number"&gt;0&lt;/span&gt;.&lt;span class="hljs-number"&gt;04&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
Sort      &lt;span class="hljs-number"&gt;00&lt;/span&gt;:&lt;span class="hljs-number"&gt;18&lt;/span&gt;:&lt;span class="hljs-number"&gt;38.731559&lt;/span&gt; &lt;span class="hljs-number"&gt;42.39&lt;/span&gt;&lt;span class="hljs-keyword"&gt;x&lt;/span&gt;        &lt;span class="hljs-number"&gt;0&lt;/span&gt;/&lt;span class="hljs-keyword"&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="conclusion"&gt;Conclusion:&lt;/h3&gt;
&lt;p&gt;The [System.Math]::Max() method consistently outperforms Measure-Object and Sort-Object, particularly for larger datasets. Although its implementation may be less intuitive, encapsulating it in a function enhances usability.&lt;/p&gt;
&lt;h3 id="function-implementation"&gt;Function Implementation:&lt;/h3&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;Get&lt;/span&gt;-&lt;span class="hljs-title"&gt;MaxNumber&lt;/span&gt; &lt;/span&gt;{
    param (
        [int[]]Numbers
    )
    $MaxValue = $Numbers[&lt;span class="hljs-number"&gt;0&lt;/span&gt;]
    &lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;($num in $Numbers){
        $MaxValue = [System.Math]::Max($MaxValue,$num)
    }
    &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; $MaxValue
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In scenarios where milliseconds matter and the primary goal is to retrieve the maximum number, the targeted solution using [System.Math]::Max() proves to be a powerful choice.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
</description><pubDate>Thu, 23 Nov 2023 02:55:27 -0800</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/11803</guid><link>https://devdojo.com/hcritter/powershell-retreive-the-update-build-release-ubr</link><author>Christian Ritter</author><category>microsoft</category><category>windows</category><category>powershell</category><category>ubr</category><category>update</category><category>release</category><category>registry</category><category>intune</category><category>graph</category><title>PowerShell: Retreive the Update Build Release (UBR)</title><description>&lt;p&gt;In the realm of PowerShell, determining the version of the operating system is a common task for sysadmins. However, when it comes to reporting, extracting additional details, such as the Update Build Release (UBR), becomes crucial. While the Winver tool is a popular choice for obtaining the build, including the UBR, PowerShell provides a more versatile approach.&lt;/p&gt;
&lt;h3 id="unveiling-the-ubr-going-beyond-the-basics"&gt;Unveiling the UBR: Going Beyond the Basics&lt;/h3&gt;
&lt;h4 id="registry-magic"&gt;Registry Magic&lt;/h4&gt;
&lt;p&gt;One way to retrieve the UBR is through the registry:&lt;/p&gt;
&lt;h6 id="powershell"&gt;PowerShell:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;(&lt;span class="hljs-built_in"&gt;Get-ItemProperty&lt;/span&gt; &lt;span class="hljs-string"&gt;'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion'&lt;/span&gt; –Name UBR).UBR
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id="output"&gt;Output:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs "&gt;3570
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This straightforward command quickly fetches the UBR, but what if you need more comprehensive information?&lt;/p&gt;
&lt;h4 id="exploring-get-computerinfo"&gt;Exploring Get-ComputerInfo&lt;/h4&gt;
&lt;p&gt;To delve deeper into the operating system details, the Get-ComputerInfo command is a powerful tool. Specifically, the 'OsHardwareAbstractionLayer' property contains the complete string with the UBR:&lt;/p&gt;
&lt;h6 id="powershell-1"&gt;PowerShell:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs css"&gt;(&lt;span class="hljs-selector-tag"&gt;Get-ComputerInfo&lt;/span&gt;)&lt;span class="hljs-selector-class"&gt;.OsHardwareAbstractionLayer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id="output-1"&gt;Output:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs css"&gt;10&lt;span class="hljs-selector-class"&gt;.0&lt;/span&gt;&lt;span class="hljs-selector-class"&gt;.19041&lt;/span&gt;&lt;span class="hljs-selector-class"&gt;.3570&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id="harnessing-the-system-version-class"&gt;Harnessing the [System.Version] Class&lt;/h5&gt;
&lt;p&gt;For a structured representation of the version information, the [System.Version] class proves invaluable. While [System.Environment]::OSVersion.Version provides the basics, including Major, Minor, Build, and Revision, it lacks the UBR. To include the UBR, cast the 'OsHardwareAbstractionLayer' property:&lt;/p&gt;
&lt;h6 id="powershell-2"&gt;PowerShell:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs markdown"&gt;[&lt;span class="hljs-string"&gt;Version&lt;/span&gt;](&lt;span class="hljs-link"&gt;Get-ComputerInfo&lt;/span&gt;).OsHardwareAbstractionLayer
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id="output-2"&gt;Output:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs markdown"&gt;Major  Minor  Build  Revision
-----  -----  -----  --------
10     0      19041  3570
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the output displays the detailed version information, including the UBR.&lt;/p&gt;
&lt;h3 id="scaling-up-managing-multiple-systems"&gt;Scaling Up: Managing Multiple Systems&lt;/h3&gt;
&lt;p&gt;But what if you're dealing with multiple computers? PowerShell offers a solution. Introducing Microsoft Graph, and if you are leveraging Intune, you can seamlessly fetch information from the cloud:&lt;/p&gt;
&lt;h6 id="powershell-3"&gt;PowerShell:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs markdown"&gt;import-module microsoft.graph.devicemanagement
[&lt;span class="hljs-string"&gt;Version&lt;/span&gt;](&lt;span class="hljs-link"&gt;Get-MGDeviceManagementManagedDevice -Filter "deviceName eq 'YouNameIt'"&lt;/span&gt;).OSVersion
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id="output-3"&gt;Output:&lt;/h6&gt;
&lt;pre&gt;&lt;code class="hljs markdown"&gt;Major  Minor  Build  Revision
-----  -----  -----  --------
10     0      19041  3570
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method enables you to obtain the necessary information from the cloud with a simple Microsoft Graph call, making it especially handy for managing multiple devices efficiently.&lt;/p&gt;
&lt;h4 id="building-your-powershell-toolbelt"&gt;Building Your PowerShell Toolbelt&lt;/h4&gt;
&lt;p&gt;In conclusion, by combining registry queries, Get-ComputerInfo, and the [System.Version] class, you've crafted a robust toolkit for extracting detailed operating system information. Whether you're working on a single machine or managing an entire fleet of devices through the cloud, PowerShell equips you with the flexibility to streamline your patching processes.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;
</description><pubDate>Wed, 22 Nov 2023 06:24:59 -0800</pubDate></item><item><guid isPermaLink="false">https://powershell.ro/?p=188</guid><link>https://powershell.ro/simplify-your-day-to-day-tasks-with-these-5-essential-powershell-scripts/</link><category>Powershell</category><category>VMWare</category><category>Hardware information</category><category>powercli</category><category>PowerShellAutomation</category><category>RDM Disks</category><category>VirtualizationManagement</category><category>vmware</category><category>VMwareScripting</category><title>Simplify Your Day-to-Day Tasks with These 5 Essential PowerShell Scripts</title><description>In this blog post, we&amp;#8217;ll explore five practical PowerShell scripts designed to make everyday tasks in a virtualized environment more manageable. 1. Retrieve VM Hardware Version: When managing a virtualized infrastructure, knowing the hardware version of your VMs is crucial. This script simplifies the process, providing you with quick access to essential information about the [&amp;#8230;]</description><pubDate>Fri, 17 Nov 2023 19:33:20 Z</pubDate><comments>https://powershell.ro/simplify-your-day-to-day-tasks-with-these-5-essential-powershell-scripts/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;&lt;/p&gt;



&lt;p&gt;In this blog post, we&amp;#8217;ll explore five practical PowerShell scripts designed to make everyday tasks in a virtualized environment more manageable.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;strong&gt;1. Retrieve VM Hardware Version:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
(Get-VM -Name $vm | Select-Object Name, Version).Version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When managing a virtualized infrastructure, knowing the hardware version of your VMs is crucial. This script simplifies the process, providing you with quick access to essential information about the VM hardware version.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;strong&gt;2. Retrieve VMware Tools Upgrade Policy:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
(Get-VM -Name $vm | Get-VMTools | Select-Object Name, Version, UpgradePolicy).UpgradePolicy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Keeping VMware Tools up-to-date is crucial for optimal virtual machine performance. This script not only gives you details about the installed VMware Tools but also offers insights into the upgrade policy in place, enabling proactive maintenance.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;strong&gt;3. Retrieve VM Disk Information (RDM Disks):&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
(Get-VM -Name $VM | Get-HardDisk -DiskType &amp;quot;RawPhysical&amp;quot;,&amp;quot;RawVirtual&amp;quot; | Select-Object Parent, Name, DiskType, ScsiCanonicalName, DeviceName).Parent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simplify your storage management by focusing on Raw Device Mapping (RDM) disks with this script. It extracts key details about RDM disks, including parent information, disk type, and device names, offering a comprehensive view of your storage configuration&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;strong&gt;4. Retrieve CD/DVD Drive Information:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
(Get-VM -Name $vm | Get-CDDrive | Select-Object Parent, IsoPath | Format-Table -AutoSize -HideTableHeaders -Wrap | Out-String) -match '0000'
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It fetches details about the parent VM, ISO path, and capacity. The use of &lt;code&gt;Format-Table&lt;/code&gt; enhances readability, and &lt;code&gt;-match&lt;/code&gt; allows for easy data filtering.&lt;/p&gt;



&lt;p class="has-medium-font-size"&gt;&lt;strong&gt;5. Retrieve Revised VM Disk Information:&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
(Get-VM -Name $vm | Get-HardDisk | Select-Object Parent, Filename, CapacityGB | Format-Table -AutoSize -HideTableHeaders -Wrap | Out-String) -match '0000'
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It offers a clearer presentation of details such as the parent VM, filename, and capacity.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p class="has-text-align-left has-medium-font-size" style="font-style:normal;font-weight:700"&gt;&lt;mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-palette-color-4-color"&gt;&lt;strong&gt;Use it with a Foreach Loop:&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
foreach ($vm in $VMs) {
    # Use the desired script here
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enhance your workflow by incorporating a foreach loop into your PowerShell scripts. By utilizing the syntax &lt;code&gt;foreach ($vm in $VMs)&lt;/code&gt;, you can efficiently extend the functionality of these scripts to multiple virtual machines within your vCenter environment. This iterative process simplifies your management tasks, providing a systematic and efficient approach. Whether you seek details on hardware versions, storage configurations, or VMware Tools across your entire virtualized infrastructure, this loop ensures a comprehensive understanding of your environment.&lt;/p&gt;



&lt;p&gt;In conclusion, make these five PowerShell scripts an integral part of your daily routine to elevate your efficiency as an IT professional or system administrator. For added convenience, leverage the foreach loop to obtain details for all VMs in your vCenter environment. Whether your focus is on hardware versions, storage setups, or the status of VMware Tools, these scripts cover a diverse range of tasks, significantly improving your day-to-day operations. Unlock the potential of PowerShell to enhance your virtualized environment management and achieve a more efficient workflow.&lt;/p&gt;
&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_188" class="pvc_stats all  " data-element-id="188" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/simplify-your-day-to-day-tasks-with-these-5-essential-powershell-scripts/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29194</guid><link>https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/</link><category>Microsoft</category><category>Azure</category><category>PowerShell</category><title>FIX: Get-AzContext missing ‘subscription’ Az.Accounts PowerShell</title><description>&lt;p&gt;Get-AzContext missing a &amp;#8216;subscription&amp;#8217; while using Set-AzContext We use the command below as standard in our scripts, but I have also discovered that this is not entirely useful. But for more about that you should go to another section on this blog (see the Table of Contents). You probably found this blog cause of an &amp;#8230; &lt;a href="https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: Get-AzContext missing &amp;#8216;subscription&amp;#8217; Az.Accounts PowerShell&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/"&gt;FIX: Get-AzContext missing &amp;#8216;subscription&amp;#8217; Az.Accounts PowerShell&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 17 Nov 2023 12:32:00 Z</pubDate><comments>https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/fix-get-azcontext-missing-subscription-az-accounts-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/azure/microsoftgraph/2023/11/07/removing-stale-devices-from-entra</guid><link>http://www.randriksen.net/powershell/azure/microsoftgraph/2023/11/07/removing-stale-devices-from-entra.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>Azure</category><category>MicrosoftGraph</category><category>PowerShell</category><category>Microsoft</category><category>Azure</category><category>Intune</category><category>MicrosoftGraph</category><category>EntraID</category><title>Removing stale devices from Entra/Intune</title><description>Today, I continued the cleanup process of our Entra Directory. There were about 7500 Stale devices in the directory, and I’m not that fond of clicking my mouse. So I needed a quicker method to deal with the devices. And as you’ve probably figured out already, that means PowerShell.</description><pubDate>Tue, 07 Nov 2023 00:00:00 Z</pubDate><a10:updated>2023-11-07T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/azure/microsoftgraph/2023/11/07/removing-stale-devices-from-entra.html">&lt;p&gt;Today, I continued the cleanup process of our Entra Directory.&lt;br /&gt;
There were about 7500 Stale devices in the directory, and I’m not &lt;strong&gt;that&lt;/strong&gt; fond of clicking my mouse.
So I needed a quicker method to deal with the devices.&lt;br /&gt;
And as you’ve probably figured out already, that means PowerShell.&lt;/p&gt;

&lt;p&gt;Todays script is really simple, but it does the job.&lt;br /&gt;
The hardest part was figuring out how to do the date formatting for the filtering.&lt;/p&gt;

&lt;p&gt;Anyway here’s a script that deletes any device from entra that hasn’t logged in for 180 days.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# Get the date 180 days ago&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get-date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddDays&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;-180&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Format the date in "yyyy-MM-ddTHH:mm:ssZ" format&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Get-Date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yyyy-MM-ddTHH:mm:ssZ"&lt;/span&gt;&lt;span class="w"&gt;  
&lt;/span&gt;&lt;span class="c"&gt;# Get all devices that have not signed in since the specified date&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$devices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;get-mgdevice&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ApproximateLastSignInDateTime le &lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-all&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Loop over each device&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$devices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Remove the device&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Remove-MgDeviceByDeviceId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-deviceid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;deviceid&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</a10:content></item><item><guid isPermaLink="false">https://blog.it-koehler.com/?p=5461</guid><link>https://blog.it-koehler.com/en/Archive/5461?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=cleanup-m365-azure-ad-groups-via-powershell</link><category>azure ad powershell</category><category>common</category><category>Powershell</category><title>Cleanup M365 Azure AD groups via PowerShell</title><description>&lt;p&gt;Clearing old or orphaned groups is also important in cloud environments, especially in larger structures. So an easy way is to check if there are disabled users in Azure AD groups. Of course there can be also some license savings in M365 if disabled users are removed. This use case I wrote a small PowerShell &amp;#8230; &lt;/p&gt;
&lt;p class="link-more"&gt;&lt;a href="https://blog.it-koehler.com/en/Archive/5461" class="more-link"&gt;Read more&lt;span class="screen-reader-text"&gt; "Cleanup M365 Azure AD groups via PowerShell"&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Articel &lt;a href="https://blog.it-koehler.com/en/Archive/5461"&gt;Cleanup M365 Azure AD groups via PowerShell&lt;/a&gt; available first on &lt;a href="https://blog.it-koehler.com/en"&gt;IT koehler blog&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Mon, 06 Nov 2023 09:30:00 Z</pubDate><comments>https://blog.it-koehler.com/en/Archive/5461#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A.K.</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.it-koehler.com/en/Archive/5461/feed</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29224</guid><link>https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/</link><category>Microsoft</category><category>Automation</category><category>PowerShell</category><title>How to import PowerShell 7 runbooks in Azure Automation</title><description>&lt;p&gt;Import a PowerShell 7.XX runbook in Azure Automation via PowerShell You cannot currently choose PowerShell 7.XX runtime via the standard cmdlet New-AzAutomationRunbook in the Az.Automation module. This limits you to using the Azure portal. You can upload runbooks via a workaround with runtime 7.XX. This only applies to powershell script files located in an Azure &amp;#8230; &lt;a href="https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;How to import PowerShell 7 runbooks in Azure Automation&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/"&gt;How to import PowerShell 7 runbooks in Azure Automation&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Tue, 31 Oct 2023 13:15:00 Z</pubDate><comments>https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/how-to-import-powershell-7-runbooks-in-azure-automation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/2023/10/30/new-version-of-MGNestedGroups</guid><link>http://www.randriksen.net/powershell/2023/10/30/new-version-of-MGNestedGroups.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>PowerShell</category><category>Microsoft</category><title>New version of MGNestedGroups</title><description>I’ve just released a new version of my MGNestedGroups module. It’s a pretty niche module, but it’s something I’ve found usefull at work, so I’ve improved it a little bit now.</description><pubDate>Mon, 30 Oct 2023 00:00:00 Z</pubDate><a10:updated>2023-10-30T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/2023/10/30/new-version-of-MGNestedGroups.html">&lt;p&gt;I’ve just released a new version of my &lt;a href="https://github.com/randriksen/MGNestedGroups"&gt;MGNestedGroups&lt;/a&gt; module.
It’s a pretty niche module, but it’s something I’ve found usefull at work, so I’ve improved it a little bit now.&lt;/p&gt;

&lt;p&gt;The only change is that the efficiency of the Get-MGSubGroups function is significantly faster now:&lt;br /&gt;
For a fairly common nested group in my organization it used to take about 180 seconds to get the list of subgroups.&lt;br /&gt;
&lt;img src="/assets/images/nestedgroups/slowsubgroups.png" alt="slow Get-MGSubGroups" /&gt;&lt;/p&gt;

&lt;p&gt;With the new version it takes about 35 seconds to get the same list of subgroups.
&lt;img src="/assets/images/nestedgroups/fastsubgroups.png" alt="fast Get-MGSubGroups" /&gt;&lt;/p&gt;

&lt;p&gt;Which I think is a pretty good improvement.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/2023/10/27/windows-gitlab-runner-setup</guid><link>http://www.randriksen.net/powershell/2023/10/27/windows-gitlab-runner-setup.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>Microsoft</category><category>GitLab</category><category>DevOps</category><category>PowerShell</category><title>How to set up GitLab Runner on a Windows Server</title><description>When I first started my current job, one of the first things I did was set up a GitLab server. I wanted it to be the central place for version control and CI/CD. I’d used GitLab at my previous job and really liked it, so I wanted to use it again.</description><pubDate>Fri, 27 Oct 2023 00:00:00 Z</pubDate><a10:updated>2023-10-27T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/2023/10/27/windows-gitlab-runner-setup.html">&lt;p&gt;When I first started my current job, one of the first things I did was set up a GitLab server. I wanted it to be the central place for version control and CI/CD. I’d used GitLab at my previous job and really liked it, so I wanted to use it again.&lt;/p&gt;

&lt;p&gt;What I love about GitLab is how it centralizes automation. You can schedule tasks or trigger them when you push to a repository. Setting up runners for your automation is easy, and you can use GitLab runners on Windows, Linux, or MacOS. You can even run automation in a containerized environment using Docker or Kubernetes.&lt;/p&gt;

&lt;p&gt;You could, of course, do Windows automation the old-fashioned way with the task scheduler and PowerShell scripts, but I don’t like how it ties you to specific servers. The task scheduler isn’t centralized or distributed, and if you only have “script servers,” version control becomes a challenge. While there are other software options, they often come with a price tag. GitLab being open source and free is a big plus.&lt;/p&gt;

&lt;p&gt;I might go into more detail about how I use GitLab for automation in a future post. But for now, I’ll show you how to set up a new GitLab runner server on Windows.&lt;/p&gt;

&lt;p&gt;Just a quick note: You should already have a GitLab server installed in your environment. I won’t cover that in this post.&lt;/p&gt;

&lt;h2 id="installing-the-gitlab-runner-on-windows"&gt;Installing the GitLab Runner on Windows&lt;/h2&gt;
&lt;p&gt;You need a Windows server. This can be virtually any server, whether new or old, virtual or physical (you can even reuse the old script servers that you’re trying to replace). I used freshly installed Windows Server 2022 VM in our on-premises environment.&lt;/p&gt;

&lt;p&gt;Next, you should install GitLab Runner on the server. Official installation instructions can be found here: &lt;a href="https://docs.gitlab.com/runner/install/windows.html"&gt;https://docs.gitlab.com/runner/install/windows.html&lt;/a&gt;. However, you don’t necessarily need to follow them because I’ll walk you through the installation here.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/gitlabrunner/adminrunner.png" alt="Where to find GitLab Runner installation instructions" /&gt;
If you navigate to the admin portal of your GitLab server and go to Settings -&amp;gt; CI/CD -&amp;gt; Runners, you’ll notice three dots. Clicking on those dots will open a menu, allowing you to select “Show runner installation and registration instructions.” Once selected, you’ll receive a list of commands for installing and registering a runner. You have the option to install a runner on Linux, MacOS, or Windows. For today’s demonstration, we’ll choose Windows.&lt;/p&gt;

&lt;p&gt;These instructions will include server-specific details, so you should copy the provided commands from there and paste them into a PowerShell window on your Windows server. (But wait until you’ve finished reading this post!)
&lt;img src="/assets/images/gitlabrunner/installationinstructions.png" alt="GitLab Runner installation instructions" /&gt;&lt;/p&gt;

&lt;h3 id="registering-the-runner"&gt;Registering the runner&lt;/h3&gt;
&lt;p&gt;Now, you need to register your runner. You can accomplish this by running the following command in PowerShell: &lt;code class="language-plaintext highlighter-rouge"&gt;gitlab-runner.exe register&lt;/code&gt;. This initiates an interactive registration process, during which you’ll be prompted to provide the URL of your GitLab server and a registration token. You can locate the registration token in the admin portal of your GitLab server, under Settings -&amp;gt; CI/CD -&amp;gt; Runners.&lt;/p&gt;

&lt;h3 id="using-a-service-user"&gt;Using a service user&lt;/h3&gt;
&lt;p&gt;If your scripts need to run as a specific user or require impersonation in any of your scripts (as the local system user cannot change user context in any way), you must include something in the installation script, or you’ll need to address this later. To run GitLab Runner with a service user, you should add the following to the installation script: &lt;code class="language-plaintext highlighter-rouge"&gt;--user $user --password $password&lt;/code&gt;. You can replace &lt;code class="language-plaintext highlighter-rouge"&gt;$user&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;$password&lt;/code&gt; with the username and password of the service user you intend to use. The command should look like this:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\gitlab-runner.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, this action alone won’t be sufficient, as the service won’t run successfully. The user also requires the grant of “log-on-as-service” rights. A straightforward way to achieve this is by using a script. I sought assistance from Bing’s chatbot and ChatGPT to create one, but both produced code that closely resembled something I had seen before. When it became evident that the generated code was non-functional, I decided to rely on the code I knew would work. This code was sourced from a &lt;a href="https://stackoverflow.com/questions/313831/using-powershell-how-do-i-grant-log-on-as-service-to-an-account"&gt;Stackoverflow post&lt;/a&gt;, which appears to have drawn inspiration from this &lt;a href="https://gist.github.com/grenade/8519655"&gt;gist&lt;/a&gt;.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;#
&lt;/span&gt;&lt;span class="cs"&gt;.Synopsis&lt;/span&gt;&lt;span class="cm"&gt;
  Grant logon as a service right to the defined user.
&lt;/span&gt;&lt;span class="cs"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;
  Stolen from : https://stackoverflow.com/questions/313831/using-powershell-how-do-i-grant-log-on-as-service-to-an-account
&lt;/span&gt;&lt;span class="cs"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; computerName
  Defines the name of the computer where the user right should be granted.
  Default is the local computer on which the script is run.
&lt;/span&gt;&lt;span class="cs"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; username
  Defines the username under which the service should run.
  Use the form: domain\username.
  Default is the user under which the script is run.
&lt;/span&gt;&lt;span class="cs"&gt;.Example&lt;/span&gt;&lt;span class="cm"&gt;
  Usage:
  .\Grant-ServiceUserLogon -computerName hostname.domain.com -username "domain\username"
#&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{0}.{1}"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;COMPUTERNAME&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERDNSDOMAIN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{0}\{1}"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERDOMAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERNAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Invoke-Command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComputerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;param&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.IO.Path&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetTempPath&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"import.inf"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"export.inf"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"secedt.sdb"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Granting SeServiceLogonRight to user account: {0} on host: {1}."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Security.Principal.NTAccount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Translate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;System.Security.Principal.SecurityIdentifier&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/cfg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$sids&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Select-String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Pattern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SeServiceLogonRight"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Line&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;"[Unicode]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Unicode=yes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[System Access]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Event Audit]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Registry Values]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Version]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"signature=&lt;/span&gt;&lt;span class="se"&gt;`"`$&lt;/span&gt;&lt;span class="s2"&gt;CHICAGO&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="se"&gt;`"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Revision=1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Profile Description]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Description=GrantLogOnAsAService security template"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Privilege Rights]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$sids&lt;/span&gt;&lt;span class="s2"&gt;,*&lt;/span&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;Add-Content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/cfg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/configure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;gpupdate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Failed to grant SeServiceLogonRight to user account: {0} on host: {1}."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ArgumentList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If, like me, you accidentally installed the service without the service user, you can simply uninstall the service using the following command: &lt;code class="language-plaintext highlighter-rouge"&gt;.\gitlab-runner.exe uninstall&lt;/code&gt;. Afterward, you can reinstall it with the correct command.&lt;/p&gt;

&lt;p&gt;Now, you might think that this is all you need to do, and you’re ready to use your runner. However, there are a few more steps to make it work.&lt;/p&gt;

&lt;h2 id="git-for-windows-the-missing-piece"&gt;Git for Windows: The Missing Piece&lt;/h2&gt;

&lt;p&gt;First things first, let’s talk about Git for Windows. Isn’t it a bit curious that when you install a GitLab runner, something that relies entirely on Git binaries, it doesn’t come with Git? Maybe it’s just me, but…&lt;/p&gt;

&lt;p&gt;Anyhow, let’s get Git. The latest version is waiting for you &lt;a href="https://git-scm.com/download/win"&gt;right here&lt;/a&gt;. When you install it, just hit the ground running with the default settings – no need to complicate things.&lt;/p&gt;

&lt;h2 id="choosing-the-powershell-version"&gt;Choosing the PowerShell Version&lt;/h2&gt;

&lt;p&gt;The next decision involves selecting the version of PowerShell you want to use for your automation. I recommend using PowerShell 7 because it’s cross-platform and the latest version available. You can find the latest version &lt;a href="https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3#msi"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you opt for PowerShell 7, you won’t need to make any changes to the standard GitLab Runner installation.&lt;/p&gt;

&lt;h3 id="configuring-the-runner-for-powershell-51"&gt;Configuring the Runner for PowerShell 5.1&lt;/h3&gt;

&lt;p&gt;If, like me, you are centralizing many scripts from older servers into GitLab and wish to run them with PowerShell 5.1, you’ll need to modify the &lt;code class="language-plaintext highlighter-rouge"&gt;config.toml&lt;/code&gt; file for the runner. The &lt;code class="language-plaintext highlighter-rouge"&gt;config.toml&lt;/code&gt; file is typically located in the GitLab Runner installation folder, with the default path being: &lt;code class="language-plaintext highlighter-rouge"&gt;C:\GitLab-Runner\config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The change you need to make is in the line that reads: &lt;code class="language-plaintext highlighter-rouge"&gt;shell = "pwsh"&lt;/code&gt;. You should change it to &lt;code class="language-plaintext highlighter-rouge"&gt;shell = "powershell"&lt;/code&gt;. Alternatively, you can add &lt;code class="language-plaintext highlighter-rouge"&gt;pwsh&lt;/code&gt; as an alias to &lt;code class="language-plaintext highlighter-rouge"&gt;powershell.exe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This change is necessary on Windows Server 2022, as the default PowerShell installation is 5.1, but it doesn’t start with the &lt;code class="language-plaintext highlighter-rouge"&gt;pwsh&lt;/code&gt; command; it only starts with &lt;code class="language-plaintext highlighter-rouge"&gt;powershell&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="installing-powershell-modules"&gt;Installing PowerShell Modules&lt;/h2&gt;

&lt;p&gt;The next step is to ensure that all the necessary PowerShell modules are installed on the server. You can accomplish this by running the following command in PowerShell: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name &amp;lt;ModuleName&amp;gt;&lt;/code&gt;. To view a list of all installed PowerShell modules on your server, use this PowerShell command: &lt;code class="language-plaintext highlighter-rouge"&gt;Get-Module -ListAvailable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s advisable to install the modules with the &lt;code class="language-plaintext highlighter-rouge"&gt;-Scope AllUsers&lt;/code&gt; flag so that they are accessible to all users on the server. If you skip this step, you’ll need to install the modules separately for each user running scripts on the server, which is not very efficient.&lt;/p&gt;

&lt;h3 id="using-the-psresourceget-module"&gt;Using the PSResourceGet Module&lt;/h3&gt;

&lt;p&gt;There’s a new module in the PowerShell landscape that can expedite module installations, known as the PSResourceGet module. You can find it &lt;a href="https://www.powershellgallery.com/packages/Microsoft.PowerShell.PSResourceGet/1.0.0"&gt;here&lt;/a&gt;. Install it with the following command: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name Microsoft.PowerShell.PSResourceGet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have the PSResourceGet module, you can install all the required modules using the following command: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-PSResource -Name &amp;lt;ModuleName&amp;gt;&lt;/code&gt;. This module is designed to be more efficient than the traditional &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module&lt;/code&gt; command, but I’m still in the early stages of testing it, so I can’t provide a definitive assessment of its performance at this time.&lt;/p&gt;

&lt;h3 id="modules-i-usually-install"&gt;Modules I usually install&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;ActiveDirectory&lt;/li&gt;
  &lt;li&gt;Az&lt;/li&gt;
  &lt;li&gt;Sqlserver&lt;/li&gt;
  &lt;li&gt;Microsoft.Graph&lt;/li&gt;
  &lt;li&gt;Microsoft.PowerShell.SecretManagement&lt;/li&gt;
  &lt;li&gt;Microsoft.PowerShell.SecretStore&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="installing-rsat-features"&gt;Installing RSAT Features&lt;/h2&gt;

&lt;p&gt;If you intend to use the runner for remote administration of other Windows servers, you should be aware that some PowerShell modules are not included when you use &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module&lt;/code&gt;. Therefore, you’ll need to install certain RSAT (Remote Server Administration Tools) features on your server. To do this, use the following PowerShell command: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-WindowsFeature -Name &amp;lt;FeatureName&amp;gt;&lt;/code&gt;. To view a list of all the RSAT features installed on your server, you can run the following PowerShell command: &lt;code class="language-plaintext highlighter-rouge"&gt;Get-WindowsFeature -name *RSAT*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/gitlabrunner/rsat.png" alt="RSAT" /&gt;&lt;/p&gt;

&lt;h3 id="rsat-features-i-typically-install"&gt;RSAT Features I Typically Install&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;RSAT-AD-PowerShell&lt;/li&gt;
  &lt;li&gt;RSAT-DHCP&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="merging-it-all"&gt;Merging It All&lt;/h2&gt;

&lt;p&gt;Congratulations! By following these steps, you should have a fully operational GitLab runner, all set to power your automation.&lt;/p&gt;

&lt;p&gt;But hey, if the manual process is a bit annoying, I also thought so, and made it into a PowerShell script that’ll be slightly less annoying to work with:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# Define variables&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your server url"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$regtoken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your registration token"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your runner description"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$tags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your runner tags"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your service user"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your service user password"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$serviceuser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$modules&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;"Az"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SqlServer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Microsoft.Graph"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Microsoft.PowerShell.SecretManagement"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Microsoft.PowerShell.SecretStore"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$features&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;"RSAT-AD-PowerShell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"RSAT-DHCP"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Function to grant the "Log on as a service" right&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Grant-ServiceUserLogon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="cm"&gt;&amp;lt;#
&lt;/span&gt;&lt;span class="cs"&gt;.Synopsis&lt;/span&gt;&lt;span class="cm"&gt;
  Grant logon as a service right to the defined user.
&lt;/span&gt;&lt;span class="cs"&gt;.Description&lt;/span&gt;&lt;span class="cm"&gt;
  Stolen from : https://stackoverflow.com/questions/313831/using-powershell-how-do-i-grant-log-on-as-service-to-an-account
&lt;/span&gt;&lt;span class="cs"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; computerName
  Defines the name of the computer where the user right should be granted.
  Default is the local computer on which the script is run.
&lt;/span&gt;&lt;span class="cs"&gt;.Parameter&lt;/span&gt;&lt;span class="cm"&gt; username
  Defines the username under which the service should run.
  Use the form: domain\username.
  Default is the user under which the script is run.
&lt;/span&gt;&lt;span class="cs"&gt;.Example&lt;/span&gt;&lt;span class="cm"&gt;
  Usage:
  .\Grant-ServiceUserLogon -computerName hostname.domain.com -username "domain\username"
#&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{0}.{1}"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;COMPUTERNAME&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERDNSDOMAIN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{0}\{1}"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERDOMAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;USERNAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Invoke-Command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ComputerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;param&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.IO.Path&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetTempPath&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"import.inf"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"export.inf"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Join-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tempPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ChildPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"secedt.sdb"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Test-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Granting SeServiceLogonRight to user account: {0} on host: {1}."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Security.Principal.NTAccount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Translate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;System.Security.Principal.SecurityIdentifier&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/cfg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$sids&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Select-String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Pattern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SeServiceLogonRight"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Line&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;"[Unicode]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Unicode=yes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[System Access]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Event Audit]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Registry Values]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Version]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"signature=&lt;/span&gt;&lt;span class="se"&gt;`"`$&lt;/span&gt;&lt;span class="s2"&gt;CHICAGO&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="se"&gt;`"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Revision=1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Profile Description]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Description=GrantLogOnAsAService security template"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[Privilege Rights]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$sids&lt;/span&gt;&lt;span class="s2"&gt;,*&lt;/span&gt;&lt;span class="nv"&gt;$sid&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;Add-Content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/cfg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;secedit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/configure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;gpupdate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Remove-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$secedt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Failed to grant SeServiceLogonRight to user account: {0} on host: {1}."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$computerName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nv"&gt;$error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ArgumentList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Function to install GitLab Runner&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;install-GitlabRunner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;Param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$regtoken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$tags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"powershell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"gitlab-runner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;      
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$serviceuser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$installPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"C:\GitLab-Runner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$psversion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="c"&gt;# Run PowerShell as administrator&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Create a folder for GitLab Runner&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;New-Item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$installPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ItemType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Directory&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="c"&gt;# Change to the folder&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$installPath&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="c"&gt;# Download GitLab Runner binary&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-windows-amd64.exe"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-OutFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"gitlab-runner.exe"&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="c"&gt;# Register the runner&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\gitlab-runner.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\gitlab-runner.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="c"&gt;# Register the runner with GitLab&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;\gitlab-runner.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--registration-token&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$regtoken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--executor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;shell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--tag-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$tags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;-n&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$psversion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-ne&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="c"&gt;# Change the shell to PowerShell 5.1&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-Content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;\config.toml&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-replace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shell = ""pwsh"""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shell = ""powershell"""&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Set-Content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;\config.toml&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Function to install Git&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;install-git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Install Git&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;invoke-webrequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.2/Git-2.42.0.2-64-bit.exe"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-OutFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;TEMP&lt;/span&gt;&lt;span class="s2"&gt;\git.exe"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;TEMP&lt;/span&gt;&lt;span class="n"&gt;\git.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/VERYSILENT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/NORESTART&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/NOCANCEL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/SP-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/CLOSEAPPLICATIONS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/RESTARTAPPLICATIONS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/COMPONENTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"icons,ext\reg\shellhere,assoc,assoc_sh"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;/DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"C:\Program Files\Git"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Function to install PowerShell modules&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;install-modules&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;Param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$false&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$psversion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]]&lt;/span&gt;&lt;span class="nv"&gt;$modules&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Install modules&lt;/span&gt;&lt;span class="w"&gt;
    
    &lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$modules&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Get-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ListAvailable&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;AllUsers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-force&lt;/span&gt;&lt;span class="w"&gt; 
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Function to install Windows features&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;install-features&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;Param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mandatory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]]&lt;/span&gt;&lt;span class="nv"&gt;$features&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    
    &lt;/span&gt;&lt;span class="n"&gt;Install-WindowsFeature&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$features&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;install-ps7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Install PowerShell 7&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/PowerShell/PowerShell/releases/download/v7.3.8/PowerShell-7.3.8-win-x64.msi"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-OutFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;TEMP&lt;/span&gt;&lt;span class="s2"&gt;\pwsh.msi"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;msiexec.exe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;TEMP&lt;/span&gt;&lt;span class="nx"&gt;\pwsh.msi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/qn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/norestart&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Check if a service user is provided&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$serviceuser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Grant the "Log on as a service" right to the service user&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Grant-ServiceUserLogon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt;
    
    &lt;/span&gt;&lt;span class="c"&gt;# Install GitLab Runner for the service user&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;install-GitlabRunner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-regtoken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$regtoken&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;-serviceuser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$serviceuser&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Install GitLab Runner without a service user&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;install-GitlabRunner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-regtoken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$regtoken&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-serviceuser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$serviceuser&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$psversion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Install PowerShell 7&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;install-ps7&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Install Git, PowerShell modules, and Windows features&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;install-git&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;install-modules&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-modules&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$modules&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;install-features&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-features&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$features&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;restart-service&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gitlab-runner&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/11762</guid><link>https://devdojo.com/hcritter/powershell-add-getvalueordefault-method-to-a-hashtable</link><author>Christian Ritter</author><category>powershell</category><category>function</category><category>method</category><category>hashtable</category><category>getvalueordefault</category><title>PowerShell: Add GetValueOrDefault Method to a Hashtable</title><description>&lt;h2 id="enhancing-powershell-with-getvalueordefault-a-neat-solution-for-streamlined-hashtables"&gt;Enhancing PowerShell with GetValueOrDefault: A Neat Solution for Streamlined Hashtables&lt;/h2&gt;
&lt;p&gt;Have you ever wondered why the Hashtable in .NET lacks a GetValueOrDefault method, a feature readily available in basic Dictionaries? In my quest to streamline my PowerShell experience, I decided to address this by creating a simple function and extending it to all my Hashtables. This handy method can prove invaluable in various scenarios, making your code cleaner and more concise.&lt;/p&gt;
&lt;p&gt;First, let's define the GetValueOrDefault function for Hashtables:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$GetValueOrDefault&lt;/span&gt; = {
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt;(
        &lt;span class="hljs-variable"&gt;$key&lt;/span&gt;,
        &lt;span class="hljs-variable"&gt;$defaultValue&lt;/span&gt;
    )
    &lt;span class="hljs-keyword"&gt;$this&lt;/span&gt;.ContainsKey(&lt;span class="hljs-variable"&gt;$key&lt;/span&gt;) ? &lt;span class="hljs-keyword"&gt;$this&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$key&lt;/span&gt;] : &lt;span class="hljs-variable"&gt;$defaultValue&lt;/span&gt;
}

&lt;span class="hljs-variable"&gt;$etd&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    TypeName = &lt;span class="hljs-string"&gt;'System.Collections.Hashtable'&lt;/span&gt;
    MemberType = &lt;span class="hljs-string"&gt;'Scriptmethod'&lt;/span&gt;
    MemberName = &lt;span class="hljs-string"&gt;'GetValueOrDefault'&lt;/span&gt;
    Value = &lt;span class="hljs-variable"&gt;$GetValueOrDefault&lt;/span&gt;
}
&lt;span class="hljs-built_in"&gt;Update-TypeData&lt;/span&gt; @etd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this function now at your disposal, you might wonder how to best utilize it. One excellent use case is as a replacement for the traditional switch command. Let's consider an example where you need to translate a number into a language, defaulting to English for unknown inputs.&lt;/p&gt;
&lt;p&gt;Without the GetValueOrDefault method, you might use a switch statement like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;$number = &lt;span class="hljs-number"&gt;1&lt;/span&gt;
$language = &lt;span class="hljs-keyword"&gt;switch&lt;/span&gt; ($number) {
    &lt;span class="hljs-number"&gt;1&lt;/span&gt; { &lt;span class="hljs-string"&gt;"German"&lt;/span&gt; }
    &lt;span class="hljs-number"&gt;2&lt;/span&gt; { &lt;span class="hljs-string"&gt;"French"&lt;/span&gt; }
    &lt;span class="hljs-number"&gt;3&lt;/span&gt; { &lt;span class="hljs-string"&gt;"Spanish"&lt;/span&gt; }
    &lt;span class="hljs-number"&gt;4&lt;/span&gt; { &lt;span class="hljs-string"&gt;"Italian"&lt;/span&gt; }
    &lt;span class="hljs-number"&gt;5&lt;/span&gt; { &lt;span class="hljs-string"&gt;"Russian"&lt;/span&gt; }
    &lt;span class="hljs-keyword"&gt;Default&lt;/span&gt; {&lt;span class="hljs-string"&gt;"English"&lt;/span&gt;}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or its more verbose if-elseif-else counterpart:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; = &lt;span class="hljs-number"&gt;1&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;''&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;if&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"German"&lt;/span&gt;
}
&lt;span class="hljs-keyword"&gt;elseif&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-number"&gt;2&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"French"&lt;/span&gt;
}
&lt;span class="hljs-keyword"&gt;elseif&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-number"&gt;3&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Spanish"&lt;/span&gt;
}
&lt;span class="hljs-keyword"&gt;elseif&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-number"&gt;4&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Italian"&lt;/span&gt;
}
&lt;span class="hljs-keyword"&gt;elseif&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$number&lt;/span&gt; &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-number"&gt;5&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Russian"&lt;/span&gt;
}
&lt;span class="hljs-keyword"&gt;else&lt;/span&gt; {
    &lt;span class="hljs-variable"&gt;$language&lt;/span&gt; = &lt;span class="hljs-string"&gt;"English"&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or its more verbose if-elseif-else counterpart:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$Number&lt;/span&gt;=&lt;span class="hljs-number"&gt;1&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$LanguageTable&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    &lt;span class="hljs-number"&gt;1&lt;/span&gt; = &lt;span class="hljs-string"&gt;"German"&lt;/span&gt;
    &lt;span class="hljs-number"&gt;2&lt;/span&gt; = &lt;span class="hljs-string"&gt;"French"&lt;/span&gt;
    &lt;span class="hljs-number"&gt;3&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Spanish"&lt;/span&gt;
    &lt;span class="hljs-number"&gt;4&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Italian"&lt;/span&gt;
    &lt;span class="hljs-number"&gt;5&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Russian"&lt;/span&gt;
}
&lt;span class="hljs-variable"&gt;$LanguageTable&lt;/span&gt;.GetValueOrDefault(&lt;span class="hljs-variable"&gt;$Number&lt;/span&gt;,&lt;span class="hljs-string"&gt;'English'&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, the code is not only more concise but also easier to read. It's important to note that this method doesn't aim to replace complex switch statements involving regular expressions or multiple conditions; instead, it excels at providing a clean and efficient solution for basic replacements of switch or if/elseif/else constructs.&lt;/p&gt;
&lt;p&gt;In conclusion, the GetValueOrDefault method for Hashtables can be a valuable addition to your PowerShell toolkit, offering a simpler and more elegant way to handle basic switch-like scenarios, making your code more readable and maintainable.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;
</description><pubDate>Thu, 26 Oct 2023 02:51:01 -0700</pubDate></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/2023/10/20/easy-way-to-figure-out-what-old-scripts-do</guid><link>http://www.randriksen.net/powershell/2023/10/20/easy-way-to-figure-out-what-old-scripts-do.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>PowerShell</category><category>Microsoft</category><category>ChatGPT</category><title>An easy way to figure out what old scripts actually do, document them and maybe even improve them</title><description>In most of my jobs in the last 12 years, I’ve encountered situations where my predecessors had already left before I started, and I had to search far and wide for documentation on how they had set up the systems. Sometimes the documentation was available, and sometimes it wasn’t. At times, it was fairly up-to-date, but most of the time, it was quite outdated.</description><pubDate>Fri, 20 Oct 2023 00:00:00 Z</pubDate><a10:updated>2023-10-20T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/2023/10/20/easy-way-to-figure-out-what-old-scripts-do.html">&lt;p&gt;In most of my jobs in the last 12 years, I’ve encountered situations where my predecessors had already left before I started, and I had to search far and wide for documentation on how they had set up the systems.&lt;br /&gt;
Sometimes the documentation was available, and sometimes it wasn’t. At times, it was fairly up-to-date, but most of the time, it was quite outdated.&lt;/p&gt;

&lt;p&gt;People document their processes differently. I’ve met individuals who have crafted fantastic documentation, and I’ve encountered people whose documentation consisted solely of screenshots depicting their actions and nothing more.&lt;/p&gt;

&lt;p&gt;So, it’s safe to say that I’ve had to decipher the purpose and functionality of old scripts in scheduled tasks on numerous occasions.&lt;br /&gt;
Often, this has entailed a lengthy process of reading through the scripts and attempting to understand the purpose of uncommented code.&lt;br /&gt;
Sometimes, the only way to gain clarity has been to test the scripts in a lab environment, on a test server, or even in production (typically with the “-whatif” flag activated or with any data-altering functionality disabled) just to observe the actual outcome.&lt;/p&gt;

&lt;p&gt;However, these days, we have new tools that simplify this process significantly. With tools like ChatGPT, all you need to do is paste the scripts and instruct it to comment on their functionality and how to use them.&lt;/p&gt;

&lt;p&gt;You can even utilize ChatGPT to enhance the script, document it and make it more readable and aligned with best practices.&lt;/p&gt;

&lt;p&gt;For instance, consider this small script:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;#this script was for https://techcommunity.microsoft.com/t5/windows-powershell/powershell-script/m-p/3947118/highlight/false#M7212&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#someone wanted a script to send an email when a user was locked out of their account&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;#make a scheduled task triggered on the event and then have it run this script&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-EventLog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-LogName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;security&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-instanceid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4740&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Newest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="w"&gt;



&lt;/span&gt;&lt;span class="c"&gt;#Send email with the report&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yourmailserver"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#$smtpUsername = "email address removed for privacy reasons"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#$smtpPassword = "your_email_password"&lt;/span&gt;&lt;span class="w"&gt;
             
&lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendto"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendrom"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;entrytype&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TimeGenerated&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
             
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.MailMessage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#$message.IsBodyHtml = $true&lt;/span&gt;&lt;span class="w"&gt;
             
&lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.SmtpClient&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#$smtp.EnableSsl = $true&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#$smtp.Credentials = New-Object System.Net.NetworkCredential $smtpUsername, $smtpPassword&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I send it through ChatGPT with this prompt: “Please comment and document this script: {script}.”&lt;/p&gt;

&lt;p&gt;I receive the following result:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/easy-way/ChatGPT.png" alt="ChatGPT" /&gt;&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# Script for sending an email notification when a user is locked out of their account.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# This script is intended to be used as part of a scheduled task triggered by Event ID 4740 in the Security Event Log.&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Retrieve the most recent event log entry for Event ID 4740 (account lockout).&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-EventLog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-LogName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Security&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-InstanceId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4740&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Newest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Message&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Configure email settings.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yourmailserver"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with your SMTP server's address&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with your SMTP server's port (commonly 25 for non-secure connections)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendto"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# The recipient's email address&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendrom"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# The sender's email address (your organization's email address)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Build the email subject using event type and timestamp&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;EntryType&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Security event type (e.g., Information, Warning, Error)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TimeGenerated&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Timestamp of the event&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Combine event type and timestamp for the subject&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create a new email message&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.MailMessage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# The event message content&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Optionally, set $message.IsBodyHtml = $true if the content is HTML-formatted&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create an SMTP client for sending the email&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.SmtpClient&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# If your SMTP server requires authentication, uncomment and configure the following lines:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# $smtp.EnableSsl = $true  # Enable SSL if required&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# $smtp.Credentials = New-Object System.Net.NetworkCredential $smtpUsername, $smtpPassword&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Send the email&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can even take it a step further and ask ChatGPT to enhance the script for you, making it more readable and aligned with best practices. Simply use this prompt:&lt;/p&gt;

&lt;p&gt;“Please document and improve the script and make it conform to best practices.”&lt;/p&gt;

&lt;p&gt;This prompt will guide ChatGPT to optimize the script for you.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#
&lt;/span&gt;&lt;span class="cs"&gt;.SYNOPSIS&lt;/span&gt;&lt;span class="cm"&gt;
This script sends an email notification when a user is locked out of their account based on Event ID 4740 from the Windows Security Event Log.

&lt;/span&gt;&lt;span class="cs"&gt;.DESCRIPTION&lt;/span&gt;&lt;span class="cm"&gt;
The script retrieves the most recent security event with Event ID 4740, extracts the relevant information, and sends an email notification with the event details.

&lt;/span&gt;&lt;span class="cs"&gt;.NOTES&lt;/span&gt;&lt;span class="cm"&gt;
- Customize the script with your email server settings, including SMTP server address, port, sender and recipient email addresses.
- Uncomment and provide necessary SMTP authentication settings and SSL configuration if required.
- Ensure you run the script with appropriate permissions and scheduled task configuration.
#&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Send-Email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.MailMessage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="c"&gt;# $message.IsBodyHtml = $true  # Uncomment if the email body contains HTML content&lt;/span&gt;&lt;span class="w"&gt;

        &lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yourmailserver"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with your SMTP server address&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with the appropriate SMTP port&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;System.Net.Mail.SmtpClient&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$smtpPort&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="c"&gt;# $smtp.EnableSsl = $true  # Uncomment if your SMTP server requires SSL&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="c"&gt;# $smtp.Credentials = New-Object System.Net.NetworkCredential $smtpUsername, $smtpPassword  # Uncomment if authentication is required&lt;/span&gt;&lt;span class="w"&gt;

        &lt;/span&gt;&lt;span class="nv"&gt;$smtp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Email sent successfully."&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"An error occurred while sending the email: &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Get-LatestLockoutEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-EventLog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-LogName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Security&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-InstanceId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;4740&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Newest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"An error occurred while retrieving the latest lockout event: &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Main script logic&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$latestLockoutEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-LatestLockoutEvent&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$latestLockoutEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-ne&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$latestLockoutEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;EntryType&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$latestLockoutEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TimeGenerated&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="nv"&gt;$time&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$latestLockoutEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Message&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendto"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with the recipient's email address&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sendfrom"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;# Replace with the sender's email address&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;Send-Email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This little trick has saved me a lot of time, and I’m sure it will save me even more in the future.&lt;/p&gt;

&lt;p&gt;But there are some things to keep in mind when using ChatGPT like this.&lt;/p&gt;

&lt;p&gt;First, remember that the scripts you send to ChatGPT are stored on their servers and used to train the AI. So, if you’re dealing with sensitive data, it’s best not to use ChatGPT for this purpose. Make sure the scripts you send don’t have any sensitive information. If you think a script reveals too much about your environment, consider modifying it before asking ChatGPT or another AI/LLM to comment and document it.&lt;/p&gt;

&lt;p&gt;Second, ChatGPT can sometimes provide results that are incorrect or don’t make sense. For example, it might change a working script in a way that introduces errors. In a previous example, it replaced Get-EventLog with Get-WinEvent for supposed efficiency. Both cmdlets work, but they work differently. And when ChatGPT changed it, it also wanted to run &lt;code class="language-plaintext highlighter-rouge"&gt;Get-WinEvent&lt;/code&gt; with the parameter &lt;code class="language-plaintext highlighter-rouge"&gt;-FilterHashTable @{LogName='Security';ID=4740}&lt;/code&gt;, and on Windows 11 at least, &lt;code class="language-plaintext highlighter-rouge"&gt;-FilterHashTable&lt;/code&gt; is not a valid parameter for &lt;code class="language-plaintext highlighter-rouge"&gt;Get-WinEvent&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, be sure to test your scripts after using ChatGPT, as they might not work correctly.&lt;/p&gt;

&lt;p&gt;This was all done with the free version of ChatGPT, so it was only  ChatGPT 3.5. It would probably be even better with ChatGPT 4.0.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">http://www.randriksen.net/powershell/2023/10/19/alert-when-running-out-of-licenses</guid><link>http://www.randriksen.net/powershell/2023/10/19/alert-when-running-out-of-licenses.html</link><a10:author><a10:name>Ole</a10:name></a10:author><category>PowerShell</category><category>PowerShell</category><category>Microsoft</category><category>Graph</category><category>Microsoft365</category><title>Alerting when running out of licenses</title><description>Lately, we’ve been experiencing a shortage of licenses for some of our Microsoft 365 services. It’s not a significant problem, but the absence of any alerting mechanism made it a bit of a hassle when new users couldn’t obtain the licenses they needed.</description><pubDate>Thu, 19 Oct 2023 00:00:00 Z</pubDate><a10:updated>2023-10-19T00:00:00Z</a10:updated><a10:content type="html" xml:base="http://www.randriksen.net/powershell/2023/10/19/alert-when-running-out-of-licenses.html">&lt;p&gt;&lt;img src="/assets/images/runningoutoflicenses/runningoutoflicenses.png" alt="running out of licenses" /&gt;
Lately, we’ve been experiencing a shortage of licenses for some of our Microsoft 365 services.&lt;br /&gt;
It’s not a significant problem, but the absence of any alerting mechanism made it a bit of a hassle when new users couldn’t obtain the licenses they needed.&lt;/p&gt;

&lt;p&gt;To address this issue, I’ve decided to implement two different methods for alerting us.&lt;/p&gt;

&lt;p&gt;The first method involves using a Log search alert in Azure Monitor. It relies on a simple Kusto Query Language (KQL) query to check for any license assignment failures in the last 30 minutes:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-kql"&gt;AuditLogs | 
where Result == "failure" | 
where ResultReason == "Microsoft.Online.Provisioning.SubscriptionManagement.SubscriptionFullException
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While this method works, it lacks specificity. It will trigger an alert for any license assignment failure, not just when we run out of licenses.&lt;br /&gt;
It’s certainly a report we want, but it doesn’t provide us with proactive insights.&lt;/p&gt;

&lt;p&gt;For the second alert, I’ve developed a straightforward PowerShell script that depends on the Microsoft Graph PowerShell SDK:&lt;/p&gt;
&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Connect-MGGraph&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Get a list of subscribed SKUs (licenses)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$licenses&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-MgSubscribedSku&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-All&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Define an array of license SKUs to exclude from further analysis&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$exclude&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@(&lt;/span&gt;&lt;span class="s2"&gt;"VISIOCLIENT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PROJECTPREMIUM"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MEETING_ROOM"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EMSPREMIUM_EDU_FACULTY"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PROJECTPROFESSIONAL"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"RMSBASIC"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Filter licenses that are running out&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$runningOut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$licenses&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;where-object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SkuPartNumber&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-NotIn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$exclude&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SkuPartNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ConsumedUnits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Enabled"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PrepaidUnits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Enabled&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;where-object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ConsumedUnits&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-gt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;enabled-3&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Check if there are licenses running out&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$runningOut&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# If there are licenses running out do something&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;write-host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$runningOut&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This script will connect to the Microsoft Graph and retrieve a list of all the licenses we have. It will then filter out licenses for which we don’t need alerts, such as Visio, Project, Meeting room licenses, etc., as we purchase these licenses on a 1-to-1 basis.&lt;br /&gt;
Finally, it will filter the licenses with fewer than 3 available for assignment.
If any licenses are running out, the script will take action. In the example, it simply writes to the host, but you can configure it to send an email, a message in Teams, or any other action you prefer.&lt;/p&gt;

&lt;p&gt;I have scheduled this script to run every 30 minutes, ensuring that we receive alerts whenever we need to acquire more licenses.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://powershell.ro/?p=184</guid><link>https://powershell.ro/get-ha-events-of-host-restart-from-vcenter/</link><category>Automation</category><category>Powershell</category><category>VMWare</category><category>Event Monitoring</category><category>HA (High Availability)</category><category>Infrastructure Monitoring</category><category>powercli</category><category>powershell</category><category>scripting</category><category>vmware</category><title>Get HA events of Host restart from vCenter</title><description>Part II of this post Get HA events of VM restart from vCenter – PowerShell.ro In part I of getting the HA events we have searched for the VM restart events. Now, I wanted to search for the HA events of Host restart and add it to an object, using this Powershell object later for [&amp;#8230;]</description><pubDate>Wed, 11 Oct 2023 18:45:28 Z</pubDate><comments>https://powershell.ro/get-ha-events-of-host-restart-from-vcenter/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;Part II of this post &lt;a href="https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/"&gt;Get HA events of VM restart from vCenter – PowerShell.ro&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;In part I of getting the HA events we have searched for the VM restart events. Now, I wanted to search for the HA events of Host restart and add it to an object, using this Powershell object later for other scope.&lt;/p&gt;



&lt;p&gt;In this blog post, we&amp;#8217;ll explore a PowerShell script designed to monitor Host Availability (HA) events in a VMware environment. The script focuses on detecting instances where a HA host has failed and provides information about the host.&lt;/p&gt;



&lt;h3 class="wp-block-heading"&gt;Script Breakdown&lt;/h3&gt;



&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Configuration Settings:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$HAHostrestart&lt;/code&gt;: A boolean flag indicating whether to check for HA host restarts.&lt;/li&gt;



&lt;li&gt;&lt;code&gt;$maxevents&lt;/code&gt;: Maximum number of events to retrieve.&lt;/li&gt;



&lt;li&gt;&lt;code&gt;$searchperiod&lt;/code&gt;: Number of days to search for HA events.&lt;/li&gt;



&lt;li&gt;&lt;code&gt;$stopevents&lt;/code&gt; and &lt;code&gt;$startevents&lt;/code&gt;: Define the time range for event retrieval.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;&lt;strong&gt;Checking HA Host Restart:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The script begins by checking if the HA host restart check is enabled (&lt;code&gt;$HAHostrestart&lt;/code&gt; is set to &lt;code&gt;$true&lt;/code&gt;).&lt;/li&gt;



&lt;li&gt;If enabled, it fetches the relevant HA events within the specified time range using &lt;code&gt;Get-VIEvent&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;&lt;strong&gt;Processing HA Host Events:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;If there are events, the script filters them to include only events related to HA host failures.&lt;/li&gt;



&lt;li&gt;Extracted host names are processed to obtain server names and fully qualified domain names (FQDNs).&lt;/li&gt;



&lt;li&gt;A custom object is created for each host, containing the server name and FQDN.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;&lt;strong&gt;Output:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The server names of affected hosts are then displayed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 class="wp-block-heading"&gt;Conclusion&lt;/h3&gt;



&lt;p&gt;This PowerShell script offers a streamlined way to monitor HA host restarts in a VMware environment. By leveraging the VMware PowerCLI module, users can easily customize and integrate this script into their infrastructure monitoring solutions.&lt;/p&gt;



&lt;p&gt;Monitoring HA events is crucial for maintaining the reliability and availability of virtualized environments. This script provides a foundation for building more comprehensive monitoring and alerting systems tailored to specific organizational needs.&lt;/p&gt;



&lt;p&gt;Feel free to adapt and expand upon this script to suit your environment, and stay tuned for more PowerShell insights!&lt;/p&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# HA VM restart log

$HAHostrestart = $true
$maxevents = 250000
$searchperiod = 1
$stopevents = Get-Date
$startevents = $stopevents - (New-TimeSpan -Days $searchperiod)

# Get Host HA events
if ($HAHostrestart) {
    Write-Host &amp;quot;..Checking HA Host restart&amp;quot;
    
    $HAHostrestartlist = Get-VIEvent -Start $startevents -Finish $stopevents -MaxSamples $maxevents | Where-Object { $_.EventTypeID -eq &amp;quot;com.vmware.vc.HA.DasHostFailedEvent&amp;quot; }

    if ($HAHostrestartlist.Count -gt 0) {
        $vmHosts = $HAHostrestartlist | Where-Object { $_.EventTypeId -eq &amp;quot;com.vmware.vc.HA.DasHostFailedEvent&amp;quot; } | Select-Object ObjectName -ExpandProperty ObjectName

        $outputHost = foreach ($matchhost in $vmHosts) {
            $matchhostname = $matchhost.Split(&amp;quot;.&amp;quot;)&amp;#x5B;0]
            &amp;#x5B;PSCustomObject]@{
                Server = $matchhostname
                FQDN = $matchhost
            }
        }

        $outputHost.Server
    }
}

&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_184" class="pvc_stats all  " data-element-id="184" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/get-ha-events-of-host-restart-from-vcenter/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18421</guid><link>https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/</link><category>Active Directory</category><category>Azure</category><category>Azure AD</category><category>PowerShell</category><category>azure ad</category><category>health checks</category><category>microsoft entra</category><category>powershell</category><title>Active Directory Health Check using Microsoft Entra Connect Health Service</title><description>&lt;p&gt;Active Directory (AD) is crucial in managing identities and resources within an organization. Ensuring its health is pivotal for the seamless operation of various services. Today, I decided to look at Microsoft Entra Connect Health (Azure AD Connect Health) service, which allows monitoring Azure AD Connect, ADFS, and Active Directory. This means that under a single umbrella, you can have an overview of three services health. But is it worth it?&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/"&gt;Active Directory Health Check using Microsoft Entra Connect Health Service&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 08 Oct 2023 14:36:57 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c6d7bb0" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d7b972881"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d7e078708" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d7e09 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d7e078708"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d7fd76735"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;Active Directory (AD)&lt;/strong&gt; is crucial in managing identities and resources within an organization. Ensuring its health is pivotal for the seamless operation of various services. Today, I decided to look at &lt;strong&gt;Microsoft Entra Connect Health&lt;/strong&gt; (&lt;strong&gt;Azure AD Connect Health&lt;/strong&gt;) service, which allows monitoring &lt;strong&gt;Azure AD Connect&lt;/strong&gt;, &lt;strong&gt;ADFS&lt;/strong&gt;, and &lt;strong&gt;Active Directory.&lt;/strong&gt; This means that under a single umbrella, you can have an overview of three services health. But is it worth it?&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d7fd76735{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d814a5799"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Before we check what this service has to offer, after reading the documentation it's clear Microsoft needs to do some updates, as depending on where you look you will find discrepancies in what the service is for. In the installation document &lt;a href="https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/how-to-connect-health-agent-install"&gt;Install the Microsoft Entra Connect Health agents&lt;/a&gt; there are references that this service is actually for &lt;strong&gt;Microsoft Entra DS&lt;/strong&gt;, which is the new name for &lt;strong&gt;Azure Active Directory DS&lt;/strong&gt;, where you explicitly can't install any agents as it's Microsoft-hosted.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d814a5799{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d82d09166"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;blockquote&gt;&lt;p&gt;For example, to get data from your Active Directory Federation Services (AD FS) infrastructure, you must install the agent on the AD FS server and on the Web Application Proxy server. Similarly, to get data from your on-premises Microsoft Entra Domain Services (Microsoft Entra DS) infrastructure, you must install the agent on the domain controllers.&lt;/p&gt;&lt;/blockquote&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d82d09166{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d8402283"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Different docs, such as &lt;a href="https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/how-to-connect-health-adds"&gt;Using Microsoft Entra Connect Health with AD DS&lt;/a&gt; points to support Windows Server 2008 R2, Windows Server 2012, and Windows Server 2016, skipping new versions of servers. On the other hand, the &lt;a href="https://learn.microsoft.com/en-us/azure/active-directory/hybrid/connect/reference-connect-health-faq"&gt;FAQ for Microsoft Entra Connect Health&lt;/a&gt; correctly refers to more systems being supported and to Active Directory Domain Services (AD DS). Whether this is just a simple case of going overboard with renaming everything with &lt;strong&gt;Active Directory DS&lt;/strong&gt; in its name to &lt;strong&gt;Microsoft Entra DS&lt;/strong&gt;, or we are looking for a future rename of &lt;strong&gt;Active Directory&lt;/strong&gt;, we will have to wait and see. In the meantime, let's test the &lt;strong&gt;Entra Connect Health agent for AD DS&lt;/strong&gt; and see how it works. The FAQ document also points to different systems being supported (Windows 2008 R2 and Windows 21012 aren't up-to-date anymore), and I would trust it a bit more than the first mentioned document.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8402283{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8402283{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8402283{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8402283{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d852d8548"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="dZPNXqJ"&gt;&lt;img class="alignnone wp-image-18472 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-888x1024.png" alt="" width="888" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-888x1024.png 888w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-260x300.png 260w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291-768x886.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65210c6717291.png 939w" sizes="(max-width: 888px) 100vw, 888px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d852d8548{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d87cb" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d87bf6520"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d89e63303" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d89e9 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d89e63303"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Deploying Microsoft Entra Health Agent&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d8d115882"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Deployment of agents is pretty straightforward and follows the standard process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the agent (MSI file)&lt;/li&gt;
&lt;li&gt;Copy it to the Domain Controller&lt;/li&gt;
&lt;li&gt;Run it, and let it ask you for Entra ID (Azure AD) credentials. You will require Global Admin to register a health agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it; now wait for the data to show in the Dashboard. Of course, if you have plenty of Domain Controllers, Microsoft provides the ability to install it using PowerShell.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d8d115882{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d8f9c" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d8f8f9488"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d91a35215" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d91a5 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d91a35215"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Microsoft Entra Health Dashboard for Active Directory (AD DS)&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d94af6397"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The dashboard is pretty minimalistic showing essential information about the domain, replication status, alerts, and basic charts for &lt;strong&gt;LDAP&lt;/strong&gt;, &lt;strong&gt;NTLM&lt;/strong&gt;, and &lt;strong&gt;Kerberos&lt;/strong&gt; authentications.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d94af6397{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d96212379"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294.png"&gt;&lt;img class="alignnone wp-image-18434 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-974x1024.png" alt="" width="974" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-974x1024.png 974w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-285x300.png 285w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-768x807.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294-1461x1536.png 1461w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9a1ee294.png 1859w" sizes="(max-width: 974px) 100vw, 974px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d96212379{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d96212379{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d96212379{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d96212379{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d97512785"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c.png"&gt;&lt;img class="alignnone wp-image-18437 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-974x1024.png" alt="" width="974" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-974x1024.png 974w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-285x300.png 285w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-768x807.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c-1461x1536.png 1461w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f9cf3bd6c.png 1859w" sizes="(max-width: 974px) 100vw, 974px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d97512785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d97512785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d97512785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d97512785{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d986e1828"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you can see on the screenshots above, it also gives you a quick overview of the number of DCs monitored (out of all available) and domains within the forest and sites it sees. According to it I have 2 out of 5 DCs, two domains, and one site.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d986e1828{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6d9b3f" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6d9b2d560"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6d9d442311" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6d9d46 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6d9d442311"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6d9f2b1958"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;You can also deep-dive into Performance Monitors Collection where you can select multiple other counters&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ATQ estimated queue delay&lt;/li&gt;
&lt;li&gt;ATQ outstanding queued requests&lt;/li&gt;
&lt;li&gt;ATQ request latency&lt;/li&gt;
&lt;li&gt;ATQ threads LDAP&lt;/li&gt;
&lt;li&gt;ATQ threads other&lt;/li&gt;
&lt;li&gt;ATQ threads total&lt;/li&gt;
&lt;li&gt;Directory replication agent inbound bytes total per second&lt;/li&gt;
&lt;li&gt;Directory replication agent outbound bytes total per second&lt;/li&gt;
&lt;li&gt;Domain services threads in use&lt;/li&gt;
&lt;li&gt;Free disk space&lt;/li&gt;
&lt;li&gt;Kerberos authentications&lt;/li&gt;
&lt;li&gt;LDAP active threads&lt;/li&gt;
&lt;li&gt;LDAP bind time&lt;/li&gt;
&lt;li&gt;LDAP searches per second&lt;/li&gt;
&lt;li&gt;LDAP successful binds per second&lt;/li&gt;
&lt;li&gt;NTLM authentications per second&lt;/li&gt;
&lt;li&gt;Replication queue&lt;/li&gt;
&lt;li&gt;TCP connections established&lt;/li&gt;
&lt;li&gt;Used memory percentage&lt;/li&gt;
&lt;li&gt;Used processor percentage&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6d9f2b1958{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da0f01364"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="JXGNnzp"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9.png"&gt;&lt;img class="alignnone wp-image-18482 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-980x1024.png" alt="" width="980" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-980x1024.png 980w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-287x300.png 287w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-768x802.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9-1470x1536.png 1470w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e8e660c9.png 1863w" sizes="(max-width: 980px) 100vw, 980px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da0f01364{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da2ac1580"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="wbgDtLF"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a.png"&gt;&lt;img class="alignnone wp-image-18480 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-980x1024.png" alt="" width="980" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-980x1024.png 980w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-287x300.png 287w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-768x802.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a-1470x1536.png 1470w, https://evotec.xyz/wp-content/uploads/2023/10/img_65218e540e84a.png 1863w" sizes="(max-width: 980px) 100vw, 980px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da2ac1580{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da3d93972"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;For each chart, you can drill down, see details, and filter out data per Domain Controller&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da3d93972{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6da5443758"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef.png"&gt;&lt;img class="alignnone wp-image-18441 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-1024x804.png" alt="" width="1024" height="804" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-1024x804.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-300x235.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef-768x603.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa0e936ef.png 1180w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da5443758{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da5443758{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6da5443758{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6da5443758{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6da93f" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6da9305762"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dac976077" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6dac99 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6dac976077"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Mix &amp; Match with other Azure Elements&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db1641386"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Every chart can also be sent to a global dashboard to create a mix &amp; match with other Azure Services. Unfortunately, after I pinned a few charts to my private dashboard and came back a bit later to it &amp;#8211;  I was greeted with &lt;strong&gt;not-found &lt;/strong&gt;messages, making this functionality more like a gimmick.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db1641386{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db1641386{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db1641386{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db1641386{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db36d5648"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="ayQWVQF"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb.png"&gt;&lt;img class="alignnone wp-image-18484 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1024x888.png" alt="" width="1024" height="888" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1024x888.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-300x260.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-768x666.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb-1536x1332.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_652191bedf3eb.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db36d5648{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6db535531"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Maybe spending enough time fighting the dashboard, saving it multiple times, and fixing the positioning will be helpful. After playing with the dashboard for a few minutes where the data would be gone, or I had to go back to Health Service to add more charts, my patience ran out.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db535531{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db535531{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6db535531{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6db535531{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6db8f4" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6db8e54978"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dbad17706" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6dbad3 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6dbad17706"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Domain Controllers overview&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dbd705585"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Every element is clickable to drill down one or two levels. We can see which Domain Controllers are monitored, their status, and what roles on which DC are available. As you can see below, 2 out of 5 domain controllers are installed, and monitoring is available for them.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbd705585{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dbea04310"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png"&gt;&lt;img class="alignnone wp-image-18443 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png" alt="" width="1024" height="316" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-300x93.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-768x237.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1536x474.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png 1832w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dbea04310{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6dc198" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6dc1879421"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dc39e9541" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6dc3a0 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6dc39e9541"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc51f2233"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;After I left the newly implemented solution running for a whole night, in the morning, it suggested I only have one domain, one site, and two out of two DCs in the forest. I tried refreshing, clicking icons, and going in or out, and the data suggested that my forest suddenly is much smaller than it is.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc51f2233{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc6209699"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="pFluzWR"&gt;&lt;img class="alignnone wp-image-18423 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1024x300.png" alt="" width="1024" height="300" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1024x300.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-300x88.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-768x225.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794-1536x449.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f82ae1794.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc6209699{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc71b4297"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="ymwXRqe"&gt;&lt;img class="alignnone wp-image-18425 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1024x521.png" alt="" width="1024" height="521" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1024x521.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-300x153.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-768x391.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9-1536x782.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8537f0c9.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc71b4297{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc8132652"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;After installing another agent and waiting 5 minutes, it was able to pick up that I have another domain and and another DC.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc8132652{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dc9156267"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="wFJAMut"&gt;&lt;img class="alignnone wp-image-18463 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1024x311.png" alt="" width="1024" height="311" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1024x311.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-300x91.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-768x233.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b-1536x466.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_652103d2a156b.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dc9156267{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dca119738"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;But it still is missing two other DCs, so it left me a bit worried about deployment to production. As part of the same view, you can choose additional columns that show you critical information that is very useful for Domain Admins&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LAST UPLOADED&lt;/li&gt;
&lt;li&gt;LAST BOOT TIME&lt;/li&gt;
&lt;li&gt;PDC REACHABLE&lt;/li&gt;
&lt;li&gt;GC REACHABLE&lt;/li&gt;
&lt;li&gt;SYSVOL STATE&lt;/li&gt;
&lt;li&gt;DC ADVERTISED&lt;/li&gt;
&lt;li&gt;OS NAME&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With a simple glance, you can see potential issues in your forest (as long as you condition that this isn't &lt;strong&gt;live view&lt;/strong&gt; but monitoring with a delay).&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dca119738{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dca119738{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dca119738{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dca119738{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dcb2d3692"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="aTDuAaH"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e.png"&gt;&lt;img class="alignnone wp-image-18466 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1024x306.png" alt="" width="1024" height="306" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1024x306.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-300x90.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-768x230.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e-1536x459.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521052778b4e.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcb2d3692{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dcc47327"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you can see above, the &lt;strong&gt;Last Uploaded&lt;/strong&gt; column gave different times: 9:00, 9:05, and 8:55, and when I took this screenshot, it was already 9:20. After waiting a bit more, it seems the actual refresh time is &lt;strong&gt;every 30 minutes&lt;/strong&gt;. I am also not sure if this can be adjusted. More up-to-date information would be beneficial, but maybe a bit too performance-intensive. According to FAQ, the actual impact on the given server is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU consumption&lt;/strong&gt;: ~1-5% increase.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory consumption&lt;/strong&gt;: Up to 10 % of the total system memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The agent is also not supported on &lt;strong&gt;Server Core,&lt;/strong&gt; which, if you have invested heavily for a more secure version of Windows, you're a bit out of luck on this one.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dcc47327{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6dcf27" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6dcf1a5451"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6dd1401900" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6dd142 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6dd1401900"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Detecting replication failures and reviewing them&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd4599453"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To test if the service works, I shutdown one of the &lt;strong&gt;Domain Controllers&lt;/strong&gt;, and the service did pick it up and let me know that replication is not working correctly.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd4599453{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd5792138"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png"&gt;&lt;img class="alignnone wp-image-18443 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png" alt="" width="1024" height="316" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1024x316.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-300x93.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-768x237.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf-1536x474.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa33c3cdf.png 1832w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd5792138{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd6a52624"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;You can also go into &lt;strong&gt;Replication Status&lt;/strong&gt; and see what replication is failing.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd6a52624{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dd7a35873"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30.png"&gt;&lt;img class="alignnone wp-image-18432 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1024x621.png" alt="" width="1024" height="621" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1024x621.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-300x182.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-768x465.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30-1536x931.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f975a0e30.png 1726w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dd7a35873{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6dd9a9" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6dd99f2454"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ddb518220" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ddb53 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ddb518220"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddcae4758"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;When any health problems are detected, an email is sent, and alerts are generated in the console, giving you a quick overview of its status.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddcae4758{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dddaa2612"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b.png"&gt;&lt;img class="alignnone wp-image-18445 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1024x278.png" alt="" width="1024" height="278" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1024x278.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-300x81.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-768x209.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b-1536x417.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa4ad5a2b.png 1838w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dddaa2612{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddea66195"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The alerts can't be suppressed or marked as fixed. They are generated automatically on error; if you set them on DC, the service will resolve them automatically. In the dashboard, you can see the history of alerts for the last 6 hours, the past 24 hours, or the past seven days. This is enough to cover day-to-day monitoring, but you can't see a more extended period to see any patterns of problems reoccurring over an extended period.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddea66195{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ddfa94128"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef.png"&gt;&lt;img class="alignnone wp-image-18449 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-1024x198.png" alt="" width="1024" height="198" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-1024x198.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-300x58.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef-768x148.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa7edb6ef.png 1176w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ddfa94128{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6de210" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6de2049444"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6de4003889" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6de403 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6de4003889"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de5a15543"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;By default, only Global Administrators get email notifications about issues with Active Directory, but it can be changed to notify any other email addresses.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de5a15543{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de6bb4491"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff.png"&gt;&lt;img class="alignnone wp-image-18447 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1024x269.png" alt="" width="1024" height="269" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1024x269.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-300x79.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-768x202.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff-1536x403.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520fa67696ff.png 1832w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de6bb4491{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de7d04104"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Once the issue is detected, the email is sent &amp;#8220;as soon as possible.&amp;#8221; Since I have completely shut down DC, two errors have been detected. One was a &lt;strong&gt;replication issue&lt;/strong&gt;; the other was &lt;strong&gt;LDAP ping&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de7d04104{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6de8f55116"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="zxbgBgT"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77.png"&gt;&lt;img class="alignnone wp-image-18453 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-823x1024.png" alt="" width="823" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-823x1024.png 823w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-241x300.png 241w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77-768x955.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520faf576b77.png 1075w" sizes="(max-width: 823px) 100vw, 823px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6de8f55116{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6deb7a" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6deb6e1273"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ded349200" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ded36 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ded349200"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Support for Multiple Active Directory Forests&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6df04345"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Azure Active Directory Connect Health supports multiple forests so it's possible to register all your domains&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df04345{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df04345{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df04345{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df04345{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6df1df5937"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="lYZvpnW"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665.png"&gt;&lt;img class="alignnone wp-image-18489 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1024x424.png" alt="" width="1024" height="424" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1024x424.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-300x124.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-768x318.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665-1536x635.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6521c33265665.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6df1df5937{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6df463" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6df4514734"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6df7822884" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6df785 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6df7822884"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Licensing for Entra Connect Health Agent&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6dfb7f9636"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;While it may seem it's a free service, it requires &lt;strong&gt;Azure AD Premium P1&lt;/strong&gt; or &lt;strong&gt;P2&lt;/strong&gt; licenses. For every domain controller you want to monitor, you need &lt;strong&gt;25 Azure AD Premium&lt;/strong&gt; licenses assigned to your tenant, except for &lt;strong&gt;Azure AD Connect Server&lt;/strong&gt;, which requires &lt;strong&gt;only one approval&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you have&lt;strong&gt; 1&lt;/strong&gt; and &lt;strong&gt;1 Azure AD Connect&lt;/strong&gt;, you will need &lt;strong&gt;51 &lt;/strong&gt;licenses.&lt;/li&gt;
&lt;li&gt;If you have &lt;b&gt;10&lt;/b&gt; and &lt;strong&gt;1 Azure AD Connect&lt;/strong&gt;, you will need &lt;strong&gt;251&lt;/strong&gt; licenses.&lt;/li&gt;
&lt;li&gt;If you have &lt;strong&gt;100&lt;/strong&gt; controllers and &lt;strong&gt;2 Azure AD Connect&lt;/strong&gt;, you will need &lt;strong&gt;2502&lt;/strong&gt; licenses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most companies who are invested in &lt;strong&gt;Office 365&lt;/strong&gt; usually have &lt;strong&gt;P1&lt;/strong&gt; and &lt;strong&gt;P2&lt;/strong&gt; licenses already, as it brings other benefits to the table, so for them, it's primarily free addition.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6dfb7f9636{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6dff2f" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6dff23557"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e01355689" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6e0137 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6e01355689"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Pros &amp; Cons for Microsoft Entra Connect Health&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e044b6628"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Microsoft Entra Health Service for ADDS has its pros and cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports monitoring multiple Active Directory forests&lt;/li&gt;
&lt;li&gt;Agents communicate every 30 minutes. For 30 minutes, the service doesn't even notice any issues.&lt;/li&gt;
&lt;li&gt;I've shut down one Domain Controller (ADRODC) with no other DC being monitored in the same domain, which would potentially detect problems with replications. It took 4 hours to get a notification that the agent was not responding. For 2 hours, the server was reporting in the console as perfectly fine, and only after 4 hours did the notification come in. The only thing that gave it away that something was wrong was the Last Upload column was not updated.&lt;/li&gt;
&lt;li&gt;For another server, shutting it down triggered a replication error in the console on another server, but the server that was down again was reported as working as expected. It would take 4 hours to get a notification about it being down totally.&lt;/li&gt;
&lt;li&gt;The console started showing the first replication errors about 35 minutes after DC was shut, but it took over 80 minutes to get an email.&lt;/li&gt;
&lt;li&gt;In one case, it took over 2 hours to auto-resolve alerts for broken replication even though Testimo testing showed the replication works fine.&lt;/li&gt;
&lt;li&gt;There were occasional issues with GUI where the service would report that my Forest has only one domain and two domain controllers, and all were onboarded, where I had 2 out of 5 available. This issue fixed itself several hours later, correctly showing several domains and domain controllers.&lt;/li&gt;
&lt;li&gt;Some errors will auto-resolve themselves only after 72 hours from the alert generation if the same error condition doesn't happen again within that timeframe.&lt;/li&gt;
&lt;li&gt;The metrics provided in the console are helpful and can bring benefits if one doesn't have other systems that offer such monitoring.&lt;/li&gt;
&lt;li&gt;The agents upgrade themselves automatically, meaning there is very little maintenance. It either works or it doesn't.&lt;/li&gt;
&lt;li&gt;The agents don't require reboots during installation as long as NET 4.6.2 Framework is installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, I believe the health service has potential and is beneficial for monitoring if you already have enough Azure AD Premium P1 or P2 licenses. &lt;strong&gt;Unfortunately, this service is not super helpful if one expects real-time monitoring&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e044b6628{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6e06f8" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6e06ed7001"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e09a63202" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6e09a9 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6e09a63202"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;List of notifications supported by Microsoft Entra Connect service for ADDS&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e0d709616"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Here's a list of currently supported notifications/detections. Even without having real-time monitoring for large environments, detecting problems like this is super beneficial. Unless you have specialized software already able to deliver such detection with real-time monitoring, &lt;strong&gt;Microsoft Entra Health service for ADDS&lt;/strong&gt; is worth investing in.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0d709616{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e0f343492"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;table class="table table-sm" aria-label="Table 4"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Alert Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller is unreachable via LDAP ping&lt;/td&gt;
&lt;td&gt;Domain Controller isn't reachable via LDAP Ping. This can be caused due to Network issues or machine issues. As a result, LDAP Pings will fail.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Active Directory replication error encountered&lt;/td&gt;
&lt;td&gt;This domain controller is experiencing replication issues, which can be found by going to the Replication Status Dashboard. Replication errors may be due to improper configuration or other related issues. Untreated replication errors can lead to data inconsistency.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller is unable to find a PDC&lt;/td&gt;
&lt;td&gt;A PDC isn't reachable through this domain controller. This will lead to impacted user logons, unapplied group policy changes, and system time synchronization failure.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller is unable to find a Global Catalog server&lt;/td&gt;
&lt;td&gt;A global catalog server isn't reachable from this domain controller. It will result in failed authentications attempted through this Domain Controller.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller unable to reach local sysvol share&lt;/td&gt;
&lt;td&gt;Sysvol contains important elements from Group Policy Objects and scripts to be distributed within DCs of a domain. The DC won't advertise itself as DC and Group Policies won't be applied.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain Controller time is out of sync&lt;/td&gt;
&lt;td&gt;The time on this Domain Controller is outside of the normal Time Skew range. As a result, Kerberos authentications will fail.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller isn't advertising&lt;/td&gt;
&lt;td&gt;This domain controller isn't properly advertising the roles it's capable of performing. This can be caused by problems with replication, DNS misconfiguration, critical services not running, or because of the server not being fully initialized. As a result, domain controllers, domain members, and other devices won't be able to locate this domain controller. Additionally, other domain controllers might not be able to replicate from this domain controller.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPSVC service isn't running&lt;/td&gt;
&lt;td&gt;If the service is stopped or disabled, settings configured by the admin won't be applied and applications and components won't be manageable through Group Policy. Any components or applications that depend on the Group Policy component might not be functional if the service is disabled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DFSR and/or NTFRS services aren't running&lt;/td&gt;
&lt;td&gt;If both DFSR and NTFRS services are stopped, Domain Controllers won't be able to replicate sysvol data. sysvol Data will be out of consistency.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Netlogon service isn't running&lt;/td&gt;
&lt;td&gt;Logon requests, registration, authentication, and locating of domain controllers will be unavailable on this DC.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;W32Time service isn't running&lt;/td&gt;
&lt;td&gt;If Windows Time Service is stopped, date and time synchronization will be unavailable. If this service is disabled, any services that explicitly depend on it will fail to start.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ADWS service isn't running&lt;/td&gt;
&lt;td&gt;If Active Directory Web Services service is stopped or disabled, client applications, such as Active Directory PowerShell, won't be able to access or manage any directory service instances that are running locally on this server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Root PDC isn't Syncing from NTP Server&lt;/td&gt;
&lt;td&gt;If you do not configure the PDC to synchronize time from an external or internal time source, the PDC emulator uses its internal clock and is itself the reliable time source for the forest. If time isn't accurate on the PDC itself, all computers will have incorrect time settings.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain controller is quarantined&lt;/td&gt;
&lt;td&gt;This Domain Controller isn't connected to any of the other working Domain Controllers. This may be caused due to improper configuration. As a result, this DC isn't being used and won't replicate from/to anyone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Outbound Replication is Disabled&lt;/td&gt;
&lt;td&gt;DCs with disabled Outbound Replication, won't be able to distribute any changes originating within itself.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inbound Replication is Disabled&lt;/td&gt;
&lt;td&gt;DCs with disabled Inbound Replication, won't have the latest information. This condition can lead to logon failures.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LanmanServer service isn't running&lt;/td&gt;
&lt;td&gt;If this service is disabled, any services that explicitly depend on it will fail to start.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kerberos Key Distribution Center service isn't running&lt;/td&gt;
&lt;td&gt;If KDC Service is stopped, users won't be able to authentication through this DC using the Kerberos v5 authentication protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DNS service isn't running&lt;/td&gt;
&lt;td&gt;If DNS Service is stopped, computers and users using that server for DNS purposes will fail to find resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DC had USN Rollback&lt;/td&gt;
&lt;td&gt;When USN rollbacks occur, modifications to objects and attributes aren't inbound replicated by destination domain controllers that have previously seen the USN. Because these destination domain controllers believe they are up to date, no replication errors are reported in Directory Service event logs or by monitoring and diagnostic tools. USN rollback may affect the replication of any object or attribute in any partition. The most frequently observed side effect is that user accounts and computer accounts that are created on the rollback domain controller do not exist on one or more replication partners. Or, the password updates that originated on the rollback domain controller do not exist on replication partners.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e0f343492{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6e13b1" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6e13a5652"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6e15983788" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6e159b "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6e15983788"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Monitoring Forest Replication with Testimo for ad-hoc verifications&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e18ee7030"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To finalize this blog post, here's an output from &lt;strong&gt;Testimo&lt;/strong&gt;, which I use to verify &lt;strong&gt;Forest Replication&lt;/strong&gt; to confirm whether it was being reported by the Health Service. Contrary to the &lt;strong&gt;Health Service,&lt;/strong&gt; it asks every DC in the forest to deliver information about replication health. This means it can take a while to see results across large environments.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e18ee7030{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1a432521"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Invoke-Testimo -Sources ForestReplication&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1a432521{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1b4d6173"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="KwqCjzt"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820.png"&gt;&lt;img class="alignnone wp-image-18427 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1024x511.png" alt="" width="1024" height="511" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1024x511.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-300x150.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-768x383.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-1536x766.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f88309820-2048x1022.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1b4d6173{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6e1c656765"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="HZFwdiT"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e.png"&gt;&lt;img class="alignnone wp-image-18429 size-large" src="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1024x707.png" alt="" width="1024" height="707" srcset="https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1024x707.png 1024w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-300x207.png 300w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-768x530.png 768w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e-1536x1061.png 1536w, https://evotec.xyz/wp-content/uploads/2023/10/img_6520f8d00260e.png 1859w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6e1c656765{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/active-directory-health-check-using-microsoft-entra-connect-health-service/"&gt;Active Directory Health Check using Microsoft Entra Connect Health Service&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://devdojo.com/11327</guid><link>https://devdojo.com/hcritter/powershell-technique-smart-aliases</link><author>Christian Ritter</author><category>functions</category><category>powershell</category><category>smart</category><category>alias</category><category>aliases</category><category>dynamic parameter</category><category>psmermaid</category><title>PowerShell-Technique: Smart Aliases</title><description>&lt;h2 id="powershell-technique-smart-aliases"&gt;PowerShell-Technique: Smart Aliases&lt;/h2&gt;
&lt;h2 id="utilizing-non-existent-functions-in-powershell"&gt;Utilizing Non-existent Functions in PowerShell&lt;/h2&gt;
&lt;h3 id="introduction"&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In a recent project of mine, &lt;a href="https://github.com/HCRitter/PSMermaid"&gt;PSMermaid&lt;/a&gt;, I had the privilege of exploring a fascinating technique called 'Smart Aliases,' which was introduced to me by the brilliant &lt;a href="https://www.youtube.com/watch?v=6mgQGpQbDjY"&gt;James Brundage&lt;/a&gt;. By employing this technique in conjunction with Dynamic Parameters, I managed to streamline the process of creating a GitGraph in Mermaid to just two single functions, even though users have the option to choose from a total of five different entry types. To fully support the creation of a GitGraph, users need the ability to add five types of entries: 'Commit,' 'Merge,' 'Branch,' 'Cherrypick,' and 'Checkout.'&lt;/p&gt;
&lt;h3 id="implementation"&gt;Implementation&lt;/h3&gt;
&lt;p&gt;My journey into the world of 'Smart Aliases' began with the need to determine which entry type the user intended to use. To achieve this, I created multiple aliases within the parent function. These aliases made it easy to identify the desired entry type by analyzing the name of the function called and subtracting the main function's name from it. For example, if a user called 'New-MermaidGitGraphEntryCommit,' I removed 'New-MermaidGitGraphEntry,' leaving me with 'Commit'—indicating that the user wanted to add a Commit to the GitGraph. Alias creation involved using the 'Alias' attribute above the 'Param()' section, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;New-MermaidGitGraphEntry&lt;/span&gt;&lt;/span&gt; {
    [&lt;span class="hljs-type"&gt;CmdletBinding&lt;/span&gt;()]
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;alias&lt;/span&gt;(&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCommit"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryBranch"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCheckout"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryMerge"&lt;/span&gt;)]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt;()
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To extract the calling function name, I utilized '$PSCmdlet.MyInvocation.InvocationName' and, as mentioned earlier, removed or replaced the parent function name:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;New-MermaidGitGraphEntry&lt;/span&gt;&lt;/span&gt; {
    [&lt;span class="hljs-type"&gt;CmdletBinding&lt;/span&gt;()]
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;alias&lt;/span&gt;(&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCommit"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryBranch"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCheckout"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryMerge"&lt;/span&gt;)]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt;()
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {
        &lt;span class="hljs-variable"&gt;$TypeName&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$PSCmdlet&lt;/span&gt;.MyInvocation.InvocationName &lt;span class="hljs-operator"&gt;-replace&lt;/span&gt; &lt;span class="hljs-string"&gt;'New-MermaidGitGraphEntry'&lt;/span&gt;
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But why did I put in the effort to determine the type this way? There are two significant reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Each entry type has different parameters that needed to be implemented (more on this below).&lt;/li&gt;
&lt;li&gt;I aimed to maintain a consistent style throughout the project, where each function name adapts to its purpose. For example, when I want a Mermaid Graph, I call out the graph type first, followed by the specific graph type (e.g., section or actor), and then the data entry type.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The next step involved dynamically creating parameters for each entry type. While these parameters were similar, they were not identical. To manage this, I constructed a lookup table using a Hashtable. The keys in this table represented the entry type names, while the values were arrays containing parameter names:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;    &lt;span class="hljs-variable"&gt;$TypeParameter&lt;/span&gt; = [&lt;span class="hljs-type"&gt;ordered&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        &lt;span class="hljs-string"&gt;"commit"&lt;/span&gt;    = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"tag"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"type"&lt;/span&gt;)
        &lt;span class="hljs-string"&gt;"Branch"&lt;/span&gt;    = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;)
        &lt;span class="hljs-string"&gt;"Merge"&lt;/span&gt;     = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"tag"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"type"&lt;/span&gt;)
        &lt;span class="hljs-string"&gt;"Checkout"&lt;/span&gt;  = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;)
        &lt;span class="hljs-string"&gt;"Cherrypick"&lt;/span&gt;= &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;)
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By performing a lookup on this table using the selected type via '$TypeName,' I obtained the corresponding parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$Parameters&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$TypeParameter&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$TypeName&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we come to the somewhat more intricate part—the dynamic creation of parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs ruby"&gt;$paramDictionary = [RuntimeDefinedParameterDictionary]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;()
foreach($TypeParameterElement &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; $Parameters){
    $paramDictionary.add($TypeParameterElement,$([RuntimeDefinedParameter]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;(
        $TypeParameterElement,
        [String],
        [Attribute[]]@(
            [Parameter]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;()
        )
    )))
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this section, we iterate through all the parameters in the '$Parameters' array. For each parameter, we create a 'ParameterAttribute,' 'RuntimeDefinedParameter,' and 'AttributeCollection' with the utmost efficiency and structural clarity. These objects are then added to the 'RuntimeDefinedParameterDictionary.' After completing these steps, we return this dictionary as the final component of the DynamicParam section in the function, bringing it all together:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs ruby"&gt;function New-MermaidGitGraphEntry {
    [CmdletBinding()]
    [&lt;span class="hljs-keyword"&gt;alias&lt;/span&gt;(&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCommit"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryBranch"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryCheckout"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"New-MermaidGitGraphEntryMerge"&lt;/span&gt;)]
    param()
    dynamicparam{
        $TypeParameter = [ordered]@{
            &lt;span class="hljs-string"&gt;"commit"&lt;/span&gt;    = @(&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"tag"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"type"&lt;/span&gt;)
            &lt;span class="hljs-string"&gt;"Branch"&lt;/span&gt;    = @(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;)
            &lt;span class="hljs-string"&gt;"Merge"&lt;/span&gt;     = @(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"tag"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"type"&lt;/span&gt;)
            &lt;span class="hljs-string"&gt;"Checkout"&lt;/span&gt;  = @(&lt;span class="hljs-string"&gt;"name"&lt;/span&gt;)
            &lt;span class="hljs-string"&gt;"Cherrypick"&lt;/span&gt;= @(&lt;span class="hljs-string"&gt;"id"&lt;/span&gt;)
        }
        $TypeName = $PSCmdlet.MyInvocation.InvocationName -replace &lt;span class="hljs-string"&gt;'New-MermaidGitGraphEntry'&lt;/span&gt;
        $Parameters = $TypeParameter[$TypeName]
        $paramDictionary = [RuntimeDefinedParameterDictionary]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;()
        foreach($TypeParameterElement &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; $Parameters){
            $paramDictionary.add($TypeParameterElement,$([RuntimeDefinedParameter]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;(
                $TypeParameterElement,
                [String],
                [Attribute[]]@(
                    [Parameter]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;()
                )
            )))
        }
        &lt;span class="hljs-comment"&gt;# Return the collection of dynamic parameters&lt;/span&gt;
        $paramDictionary
        
    }
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {
        
    }
}


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the 'end' block, I managed to respond to the different output behaviors for each type. Although a detailed overview and technical insights into using Smart Aliases in combination with dynamic parameters based on a live example exceed the scope of this post, you can explore the function in its entirety in the &lt;a href="https://github.com/HCRitter/PSMermaid/blob/main/Public/GitGraph/New-MermaidGitGraphEntry.ps1"&gt;PSMermaid-Function&lt;/a&gt; repository.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;In this blog post, we delved into the intriguing concept of 'Smart Aliases' and how they can be harnessed effectively in PowerShell. By combining these aliases with Dynamic Parameters, I demonstrated how to simplify the process of creating a GitGraph in Mermaid. This technique allowed us to reduce the number of functions required for the task while maintaining a consistent naming style throughout the project.&lt;/p&gt;
&lt;p&gt;The key takeaway here is that PowerShell offers powerful features that can be creatively leveraged to streamline complex tasks and improve code maintainability. 'Smart Aliases' are just one example of how you can enhance your PowerShell scripts and functions to make them more versatile and user-friendly. By embracing such techniques, you can become a more efficient and effective PowerShell developer.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian.&lt;/p&gt;
</description><pubDate>Mon, 18 Sep 2023 01:06:57 -0700</pubDate></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=3309</guid><link>https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/</link><category>DevOps</category><category>Graph</category><category>PowerShell</category><category>API</category><category>Automation</category><category>Azure</category><category>Contacts</category><category>Endpoint</category><category>Intune</category><category>REST</category><title>Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.</title><description>&lt;p&gt;I recently met with a company that was looking for a better way to get contacts to their employee&amp;#8217;s work phones. Currently, they are sending a .vcf file and then having the employees manually save the contacts. While this works, the problem is if you need to send a new contact, you now need to send a new .vcf file to every employee and instruct them on how to save it. Similarly, if you ever need to remove a contact, you need to instruct your employees to manually delete that contact. &lt;/p&gt;
&lt;p&gt;One of the first things I thought about, is creating an &lt;a href="https://www.inthecloud247.com/automatically-configure-outlook-contact-sync-to-the-native-contacts-app-with-microsoft-intune/"&gt;App Configuration Policy to force Outlook to sync contacts to native apps&lt;/a&gt;. Most of the contacts I need to sync to the phone were employees of the company so I figured it would sync from the Global Address List and then maybe I could create contacts in &amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/"&gt;Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 18 Sep 2023 01:21:00 Z</pubDate><comments>https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;I recently met with a company that was looking for a better way to get contacts to their employee&amp;#8217;s work phones. Currently, they are sending a .vcf file and then having the employees manually save the contacts. While this works, the problem is if you need to send a new contact, you now need to send a new .vcf file to every employee and instruct them on how to save it. Similarly, if you ever need to remove a contact, you need to instruct your employees to manually delete that contact. &lt;/p&gt;



&lt;p&gt;One of the first things I thought about, is creating an &lt;a href="https://www.inthecloud247.com/automatically-configure-outlook-contact-sync-to-the-native-contacts-app-with-microsoft-intune/"&gt;App Configuration Policy to force Outlook to sync contacts to native apps&lt;/a&gt;. Most of the contacts I need to sync to the phone were employees of the company so I figured it would sync from the Global Address List and then maybe I could create contacts in &amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/"&gt;Centrally Manage Company Contacts and Deploy to Built-In Contacts App Using Intune, SharePoint, PowerShell and Graph API.&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2023/09/17/centrally-manage-company-contacts-and-deploy-to-built-in-contacts-app-using-intune-sharepoint-powershell-and-graph-api/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">11</slash:comments></item><item><guid isPermaLink="false">https://powershell.ro/?p=169</guid><link>https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/</link><category>Powershell</category><category>VMWare</category><category>HA</category><category>High Availability</category><category>vm restart</category><category>vmware</category><title>Get HA events of VM restart from vCenter</title><description>When the High Availability (HA) feature is active within your vCenter cluster, it provides an automated solution for handling host failures by seamlessly restarting VMs on alternative ESXi hosts within the same cluster. This process generates a detailed event log documenting each restart, and you have the option to utilize a PowerCLI script to extract [&amp;#8230;]</description><pubDate>Thu, 14 Sep 2023 09:55:41 Z</pubDate><comments>https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;&lt;/p&gt;



&lt;p&gt;When the High Availability (HA) feature is active within your vCenter cluster, it provides an automated solution for handling host failures by seamlessly restarting VMs on alternative ESXi hosts within the same cluster.&lt;/p&gt;



&lt;p&gt;This process generates a detailed event log documenting each restart, and you have the option to utilize a PowerCLI script to extract a comprehensive list of the restarted VMs.&lt;/p&gt;



&lt;p&gt;Despite searching online for scripts that perform this VM list retrieval task, I was unable to locate a suitable solution. Consequently, I took matters into my own hands and developed a custom script for this purpose. While numerous blog posts contain cmdlets for retrieving VM restart events, they does not include the listing of the specific VMs affected by these events.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# HA VM reset day(s) number
$HAVMresetold = 1
# HA VM restart day(s) number
$HAVMrestartold = (Get-Date).AddDays(-2)

$Date = Get-Date
Write-Host &amp;quot;..Checking HA VM restart&amp;quot;
$HAVMrestartlist = @(Get-VIEvent -MaxSamples 100000 -Start $HAVMrestartold -Type Warning | Where {$_.FullFormattedMessage -match &amp;quot;restarted&amp;quot;} | select CreatedTime,FullFormattedMessage |sort CreatedTime -Descending)
If (($HAVMrestartlist | Measure-Object).count -gt 0) {

                $regexPattern = &amp;quot;virtual machine (\w+) on host&amp;quot;
                $matches = &amp;#x5B;Regex]::Matches($HAVMrestartlist.FullFormattedMessage, $regexPattern)
                
                $output = @()
                foreach ($match in $matches) {
                    $serverName = $match.Groups&amp;#x5B;1].Value
                    Write-Host &amp;quot;Server Name: $serverName&amp;quot;

                    $property = @{&amp;quot;Server&amp;quot; = $serverName}
                    $output += New-Object -TypeName psobject -Property $property
      }	
}
$output
&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_169" class="pvc_stats all  " data-element-id="169" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/get-ha-events-of-vm-restart-from-vcenter/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments></item><item><guid isPermaLink="true">https://blog.kilasuit.org/2023/09/09/installing-powershell-side-by-side-for-testing-purposes/</guid><link>https://blog.kilasuit.org/2023/09/09/installing-powershell-side-by-side-for-testing-purposes/</link><title>Installing PowerShell Side by Side for testing purposes</title><description>This is part of a series called Using PowerShell in testing in which I intend to showcase lots of different ways that PowerShell can used for all sorts of testing. A prior example would be Building A Lab using Hyper-V and Lability - The End to End Example.
First things first, if you are writing code then you will have built up a series of preferences over the years in how you have your machine configure, or actually for many of us that is actually not just one machine but a collection of physical and virtual machines.</description><pubDate>Sat, 09 Sep 2023 00:00:00 Z</pubDate></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18357</guid><link>https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/</link><category>PowerShell</category><category>css</category><category>html</category><category>markdown</category><category>powershell</category><category>powershell module</category><category>pswritehtml</category><title>Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module</title><description>&lt;p&gt;In today's digital age, the ability to create compelling and informative HTML reports and documents is a crucial skill for professionals in various fields. Whether you're a data analyst, a system administrator, a developer, or simply someone who wants to present information in an organized and visually appealing manner, having the right tools at your disposal can make all the difference. That's where the PSWriteHTML PowerShell module steps in, offering an array of possibilities to suit your reporting needs.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/"&gt;Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 03 Sep 2023 16:59:27 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c6eb890" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6eb8752637"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ebad04111" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ebad2 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ebad04111"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ebcc85986"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In today's digital age, the ability to create compelling and informative &lt;strong&gt;HTML&lt;/strong&gt; reports and documents is a crucial skill for professionals in various fields. Whether you're a data analyst, a system administrator, a developer, or simply someone who wants to present information in an organized and visually appealing manner, having the right tools at your disposal can make all the difference. That's where the &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;PSWriteHTML&lt;/a&gt; PowerShell module steps in, offering an array of possibilities to suit your reporting needs.&lt;/p&gt;
&lt;p&gt;In this blog post, we'll explore the fascinating world of &lt;strong&gt;HTML&lt;/strong&gt; report generation using &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;PSWriteHTML&lt;/a&gt;, a versatile and powerful tool in the &lt;strong&gt;PowerShell&lt;/strong&gt; arsenal. What sets &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;PSWriteHTML&lt;/a&gt; apart is its flexibility. You can create HTML reports using standard commands or leverage the simplicity and readability of Markdown – the choice is yours. This coexistence of options ensures you can adapt your reporting workflow to your specific requirements.&lt;/p&gt;
&lt;p&gt;Join us on this journey as we unlock the potential of the &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;PSWriteHTML&lt;/a&gt; PowerShell module, showcasing how you can effortlessly create professional HTML reports, whether you prefer traditional commands or the elegance of Markdown. So, if you're ready to elevate your reporting game and discover a powerful, user-friendly way to craft HTML reports tailored to your needs, let's dive right in!&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ebcc85986{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ebf08" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ebefd8264"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ec0f4390" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ec0f6 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ec0f4390"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-check-double" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Harnessing the Power of Markdown with PSWriteHTML: Three Distinct Approaches&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ec3b96097"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In exploring the &lt;strong&gt;PSWriteHTML&lt;/strong&gt; PowerShell module, we've uncovered a versatile tool that empowers us to effortlessly create stunning &lt;strong&gt;HTML&lt;/strong&gt; reports and documents. One of its standout features is the &lt;code&gt;New-HTMLMarkdown&lt;/code&gt; command, which allows us to integrate &lt;strong&gt;Markdown&lt;/strong&gt; content into our reports seamlessly. What sets it apart is its flexibility, offering not just one but three distinct ways to incorporate Markdown into your &lt;strong&gt;HTML&lt;/strong&gt; creations. Let's dive into each of these approaches.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ec3b96097{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ec607" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ec5fc6323"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ec7f01573" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ec7f2 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ec7f01573"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Using Direct Markdown as a Scriptblock&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecac48614"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;he first approach allows you to include Markdown directly within a scriptblock. This method provides fine-grained control over your Markdown content, enabling you to craft your report precisely as you envision it. Here's how it works:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecac48614{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecc2c754"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;New-HTMLMarkdown {
    '# Hello, Markdown!'
    'This is a sample paragraph.'
    '## Subheading'
    'More Markdown content here.'
}&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecc2c754{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ecdf74751"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In this example, the Markdown content is defined within the scriptblock, making it easy to structure and format your report. You can include headings, paragraphs, lists, and more, all while taking advantage of PSWriteHTML's features like table of contents generation (&lt;code&gt;-EnableTOC&lt;/code&gt;).&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ecdf74751{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ecff7" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ecfec5471"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ed1c45294" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ed1c7 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ed1c45294"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Loading Markdown Content from a File&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed44a9415"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The second approach simplifies the process of incorporating Markdown by allowing you to load content directly from a Markdown file. This is particularly useful when you have pre-existing Markdown documents that you want to include in your HTML report. Here's how you can achieve this:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed44a9415{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed5702796"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;New-HTMLMarkdown -FilePath "C:\Path\To\Your\File.md"&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed5702796{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ed6723378"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;By specifying the path to your Markdown file, PSWriteHTML seamlessly incorporates its content into your HTML report. You can use this method to include documentation, README files, or any Markdown content you have readily available.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ed6723378{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ed858" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ed8492194"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6eda284768" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6eda2b "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6eda284768"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon far fa-hand-point-right" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Using an Array of Strings&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edce455"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The third approach provides a flexible way to include Markdown content as an array of strings. This approach is ideal for scenarios where you want to construct your Markdown content dynamically within your script. Here's how it looks:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edce455{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edce455{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edce455{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edce455{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edde73451"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;New-HTMLMarkdown -Content '# Hello, Markdown!', '## Subheading', 'This is a test'&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edde73451{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edde73451{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edde73451{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edde73451{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6edf2b6534"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;With this method, you can assemble your &lt;strong&gt;Markdown&lt;/strong&gt; content programmatically, offering great flexibility in customizing your report's content. These three distinct approaches allow you to choose the most suitable method for your reporting needs. Whether you prefer to work directly with Markdown in a ScriptBlock, load content from a file, or construct content dynamically as an array of strings, &lt;strong&gt;PSWriteHTML&lt;/strong&gt; has you covered.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6edf2b6534{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ee163" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ee1575328"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6ee3475744" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6ee349 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6ee3475744"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-highlighter" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Beyond Markdown: Crafting Comprehensive HTML Documents with PSWriteHTML&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee5f21012"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;While the &lt;code&gt;New-HTMLMarkdown&lt;/code&gt; command within the &lt;strong&gt;PSWriteHTML&lt;/strong&gt; PowerShell module shines as a powerful tool for incorporating Markdown content into your reports; its capabilities extend beyond simple text. &lt;strong&gt;PSWriteHTML&lt;/strong&gt; allows you to create rich and comprehensive HTML documents by combining Markdown with a wide array of other commands.&lt;/p&gt;
&lt;p&gt;Imagine weaving together Markdown-based documentation with interactive elements like calendars, charts, and tables, all within the same HTML document. This seamless integration is where &lt;strong&gt;PSWriteHTML&lt;/strong&gt; truly excels, making it a valuable asset for anyone who needs to present diverse and engaging information. Let's explore how this can be achieved.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee5f21012{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee7642003"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;New-HTML {
    New-HTMLTabStyle -BorderRadius 0px -TextTransform capitalize -BackgroundColorActive SlateGrey
    New-HTMLSectionStyle -BorderRadius 0px -HeaderBackGroundColor Grey -RemoveShadow
    New-HTMLPanelStyle -BorderRadius 0px
    New-HTMLTableOption -DataStore JavaScript -BoolAsString -ArrayJoinString ', ' -ArrayJoin
    New-HTMLSection {
        # as an array of strings
        New-HTMLMarkdown -Content '# Hello, Markdown!', '## Hello, Markdown!', 'Ok this is a test', '### Hello, Markdown!'
    }
    New-HTMLSection {
        # as a scriptblock
        New-HTMLMarkdown {
            '# Testing Header 1'
            'This is TOC'
            '[TOC]'
            '## Testing Header 2'
            'Ok this is a test'
            '## Testing Header 3'
            'Ok this is a test'
            '## Testing Header 4'
            'Ok this is a test'
            '### Testing Header 5'
        }
    }
    New-HTMLSection -Invisible {
        # as a file
        New-HTMLSection {
            New-HTMLMarkdown -FilePath "$PSScriptRoot\..\..\readme.md"
        }
        New-HTMLSection {
            New-HTMLMarkdown -FilePath "C:\Support\GitHub\ADEssentials\readme.md" -SanitezeHTML
        }

        New-HTMLSection {
            New-HTMLMarkdown -FilePath "C:\Support\GitHub\PSTeams\readme.md" -EnableOpenLinksInNewWindow
        }
        New-HTMLSection {
            New-HTMLMarkdown -FilePath "C:\Support\GitHub\PowerFederatedDirectory\README.MD"
        }
    }
} -ShowHTML:$true -Online -FilePath $PSScriptRoot\Example-Markdown.html&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee7642003{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ee8ef3263"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="bizwnYJ"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d.png"&gt;&lt;img class="alignnone wp-image-18369 size-large" src="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-962x1024.png" alt="" width="962" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-962x1024.png 962w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-282x300.png 282w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-768x818.png 768w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d-1442x1536.png 1442w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4af5a2ee7d.png 1850w" sizes="(max-width: 962px) 100vw, 962px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ee8ef3263{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6eea1d1008"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you see above, I've used all three mentioned methods. I've used markdown by hand, I've loaded four different files, and I have also used them as ScriptBlock.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eea1d1008{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6eec56" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6eec4b767"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6eee756340" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6eee77 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6eee756340"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-code" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Markdown as Part of a Larger Canvas&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef15b7036"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;When you work with PSWriteHTML, you don't have to use &lt;code&gt;New-HTMLMarkdown&lt;/code&gt; it in isolation. Instead, you can embed Markdown content within a broader canvas created with various other PSWriteHTML commands. For instance, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;New-HTMLCalendar&lt;/code&gt; to incorporate interactive calendars that display essential dates and events.&lt;/li&gt;
&lt;li&gt;Leverage &lt;code&gt;New-HTMLChart&lt;/code&gt; to visualize data with interactive charts and graphs.&lt;/li&gt;
&lt;li&gt;Employ &lt;code&gt;New-HTMLTable&lt;/code&gt; to present structured data in a tabular format.&lt;/li&gt;
&lt;li&gt;Add navigation menus, headers, and footers to enhance the document's usability and aesthetics.&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef15b7036{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef2bc9023"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Here's a glimpse of what this combination can look like:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef2bc9023{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef3be6151"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$ProcessSmaller = Get-Process | Select-Object -First 5

New-HTML {
    New-HTMLTabStyle -BorderRadius 0px -TextTransform capitalize -BackgroundColorActive SlateGrey
    New-HTMLSectionStyle -BorderRadius 0px -HeaderBackGroundColor Grey -RemoveShadow
    New-HTMLPanelStyle -BorderRadius 0px
    New-HTMLTableOption -DataStore JavaScript -BoolAsString -ArrayJoinString ', ' -ArrayJoin

    New-HTMLHeader {
        New-HTMLSection -Invisible {
            New-HTMLPanel -Invisible {
                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Class 'otehr' -Width '50%'
            }
            New-HTMLPanel -Invisible {
                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Width '20%'
            } -AlignContentText right
        }
    }
    New-HTMLSection {
        New-HTMLSection -HeaderText 'Test 1' {
            New-HTMLTable -DataTable $ProcessSmaller
        }
        New-HTMLSection -HeaderText 'Test 2' {
            New-HTMLCalendar {
                New-CalendarEvent -Title 'Active Directory Meeting' -Description 'We will talk about stuff' -StartDate (Get-Date)
                New-CalendarEvent -Title 'Lunch' -StartDate (Get-Date).AddDays(2).AddHours(-3) -EndDate (Get-Date).AddDays(3) -Description 'Very long lunch'
            }
        }
    }
    New-HTMLSection -Invisible {
        New-HTMLTabPanel {
            New-HTMLTab -Name 'PSWriteHTML from File' {
                # as a file
                New-HTMLSection {
                    New-HTMLMarkdown -FilePath "$PSScriptRoot\..\..\readme.md"
                }
            }
            New-HTMLTab -Name 'ADEssentials from File' {
                New-HTMLSection {
                    New-HTMLMarkdown -FilePath "C:\Support\GitHub\ADEssentials\readme.md"
                }
            }
        } -Theme elite
    }

    New-HTMLFooter {
        New-HTMLSection -Invisible {
            New-HTMLPanel -Invisible {
                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Class 'otehr' -Width '50%'
            }
            New-HTMLPanel -Invisible {
                New-HTMLImage -Source 'https://evotec.pl/wp-content/uploads/2015/05/Logo-evotec-012.png' -UrlLink 'https://evotec.pl/' -AlternativeText 'My other text' -Width '20%'
            } -AlignContentText right
        }
    }
} -ShowHTML:$true -Online -FilePath $PSScriptRoot\Example-Markdown1.html&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef3be6151{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef4ff4141"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="PhARGNs"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f.png"&gt;&lt;img class="alignnone wp-image-18372 size-large" src="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-962x1024.png" alt="" width="962" height="1024" srcset="https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-962x1024.png 962w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-282x300.png 282w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-768x818.png 768w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f-1442x1536.png 1442w, https://evotec.xyz/wp-content/uploads/2023/09/img_64f4b3fa25c0f.png 1850w" sizes="(max-width: 962px) 100vw, 962px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef4ff4141{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6ef63e2732"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;This example seamlessly blends Markdown sections with interactive elements such as calendars and tables. This approach allows you to create comprehensive and visually appealing reports that cater to various aspects of your project or presentation.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6ef63e2732{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6ef853" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6ef8481948"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6efa8e4882" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6efa90 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6efa8e4882"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-paperclip" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Tailoring Your Reports to Perfection&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6efd692140"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;Mixing and matchingMarkdown&lt;/strong&gt; with other &lt;strong&gt;PSWriteHTML&lt;/strong&gt; commands give you the freedom to tailor your reports to perfection. Whether you're delivering a project update, sharing research findings, or creating interactive documentation, &lt;strong&gt;PSWriteHTML&lt;/strong&gt; empowers you to tell your story compellingly and informally.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efd692140{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efd692140{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efd692140{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efd692140{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6efe778941"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;If you don't know &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;&lt;strong&gt;PSWriteHTML&lt;/strong&gt;&lt;/a&gt;, please read those articles below to understand how you can use its power to fulfill your goals. All the topics described above are just a small part of what &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;&lt;strong&gt;PSWriteHTML&lt;/strong&gt;&lt;/a&gt; can do.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efe778941{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efe778941{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6efe778941{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6efe778941{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6eff795629"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;ul&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/meet-statusimo-powershell-generated-status-page/"&gt;Meet Statusimo – PowerShell generated Status Page&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/meet-dashimo-powershell-generated-dashboard/"&gt;Meet Dashimo – PowerShell Generated Dashboard&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/dashimo-easy-table-conditional-formatting-and-more/"&gt;Dashimo – Easy Table Conditional Formatting and more&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/out-htmlview-html-alternative-to-out-gridview/"&gt;Out-HtmlView – HTML alternative to Out-GridView&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/meet-emailimo-new-way-to-send-pretty-emails-with-powershell/"&gt;Meet Emailimo – New way to send pretty emails with PowerShell&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/all-your-html-tables-are-belong-to-us/"&gt;All your HTML Tables are belong to us&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/sending-html-emails-with-powershell-and-zero-html-knowledge-required/"&gt;Sending HTML emails with PowerShell and zero HTML knowledge required&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/dashimo-pswritehtml-charting-icons-and-few-other-changes/"&gt;Dashimo (PSWriteHTML) – Charting, Icons, and few other changes&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/working-with-html-in-powershell-just-got-better/"&gt;Working with HTML in PowerShell just got better&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/comparing-two-or-more-objects-visually-in-powershell-cross-platform/"&gt;Comparing two or more objects visually in PowerShell (cross-platform)&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/easy-way-to-create-diagrams-using-powershell-and-pswritehtml/"&gt;Easy way to create diagrams using PowerShell and PSWriteHTML&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/nested-tabs-diagram-updates-diagram-events-calendar-object-and-more-in-pswritehtml/"&gt;Nested Tabs, Diagram Updates, Diagram Events, Calendar Object, and more in PSWriteHTML&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/emailimo-merged-into-pswritehtml-ie-support-and-no-dependencies/"&gt;Emailimo merged into PSWriteHTML, IE support, and no dependencies&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/active-directory-dhcp-report-to-html-or-email-with-zero-html-knowledge/"&gt;Active Directory DHCP Report to HTML or EMAIL with zero HTML knowledge&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/creating-office-365-migration-diagram-with-powershell/"&gt;Creating Office 365 Migration Diagram with PowerShell&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;&lt;a href="https://evotec.xyz/advanced-html-reporting-using-powershell/"&gt;Advanced HTML reporting using PowerShell&lt;/a&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://evotec.xyz/solving-typo-problems-with-fuzzy-search-in-pswritehtml/"&gt;Solving typo problems with Fuzzy Search in PSWriteHTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eff795629{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eff795629{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6eff795629{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6eff795629{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f012c6288"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To get yourself up to speed with &lt;strong&gt;PSWriteHTML,&lt;/strong&gt; all you have to do is install the module directly from &lt;strong&gt;PowerShellGallery&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f012c6288{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f02326153"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Install-Module PSWriteHTML -Force -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f02326153{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f02326153{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f02326153{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f02326153{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f032f3185"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I hope you enjoyed this blog post and the new &lt;strong&gt;PSWriteHTML&lt;/strong&gt; feature.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f032f3185{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/unlocking-seamless-html-report-creation-harness-the-power-of-markdown-with-pswritehtml-powershell-module/"&gt;Seamless HTML Report Creation: Harness the Power of Markdown with PSWriteHTML PowerShell Module&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29181</guid><link>https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/</link><category>Microsoft</category><category>Automation</category><category>PowerShell</category><title>FIX: Azure Automation PS 7 not recognizing environment variables</title><description>&lt;p&gt;Do I run the script (runbook) locally or in Azure Automation? I develop scripts or runbooks on my local machine and then run them against Microsoft Graph or Azure (REST API) and when the script is complete I upload them in Azure Automation as a runbook. I need logic in my script to see if &amp;#8230; &lt;a href="https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: Azure Automation PS 7 not recognizing environment variables&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/"&gt;FIX: Azure Automation PS 7 not recognizing environment variables&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 01 Sep 2023 12:29:40 Z</pubDate><comments>https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/fix-azure-automation-ps-7-not-recognizing-environment-variables/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9260</guid><link>https://jdhitsolutions.com/blog/powershell/9260/friday-fun-with-psquizzes/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=friday-fun-with-psquizzes</link><category>Friday Fun</category><category>PowerShell</category><category>Training</category><category>JSON</category><category>teaching</category><title>Friday Fun with PSQuizzes</title><description>Time to get back to the to blog. I've been working through my backlog of projects. These are things that I started writing or updating but then got pushed to the back of the line. One of these projects is a PowerShell module I wrote as a teaching tool. The idea was to create short...</description><pubDate>Fri, 25 Aug 2023 14:15:39 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9260/friday-fun-with-psquizzes/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9260/friday-fun-with-psquizzes/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9260</post-id></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18340</guid><link>https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/</link><category>PowerShell</category><category>cleanup</category><category>comment</category><category>powershell</category><category>remove</category><category>script</category><title>How to Efficiently Remove Comments from Your PowerShell Script</title><description>&lt;p&gt;As part of my daily development, I create lots of code that I subsequently comment on and leave to ensure I understand what I tried, what worked, and what didn't. This is my usual method of solving a problem. Sure, I could commit it to git and then look it up, and I do that, but that doesn't change my behavior where I happen to have lots of "junk" inside of my functions that stay commented out. While this works for me, and I've accepted this as part of my process, I don't believe this should be part of the production code on PowerShellGallery or when the code is deployed.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/"&gt;How to Efficiently Remove Comments from Your PowerShell Script&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 20 Aug 2023 15:43:09 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c6f2ea7" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6f2e948962"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6f309d4483" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6f30a0 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6f309d4483"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f326c5838"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As part of my daily development, I create lots of code that I subsequently &lt;strong&gt;comment&lt;/strong&gt; on and leave to ensure I understand what I tried, what worked, and what didn't. This is my usual method of solving a problem. Sure, I could commit it to git and then look it up, and I do that, but that doesn't change my behavior where I happen to have lots of &amp;#8220;junk&amp;#8221; inside of my functions that stay commented out. While this works for me, and I've accepted this as part of my process, I don't believe this should be part of the production code on &lt;strong&gt;PowerShellGallery&lt;/strong&gt; or when the code is deployed.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f326c5838{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c6f353e" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c6f35083013"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c6f38a49584" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c6f38a7 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c6f38a49584"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-check-double" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Function to remove comments from PowerShell file&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f3d037159"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;My goal was to have a &lt;strong&gt;PowerShell&lt;/strong&gt; function that removes any comment inside my code except help comments. Thankfully, with help from &lt;strong&gt;Chris Dent&lt;/strong&gt;, I created a method that eliminates comments from any given file and makes it production ready. While it's part of my module builder &lt;a href="https://github.com/EvotecIT/PSPublishModule"&gt;PSPublishModule&lt;/a&gt;, I'm attaching it if you want to try it on your own.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3d037159{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f3e9c7956"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;function Remove-Comments {
    &amp;lt;#
    .SYNOPSIS
    Remove comments from PowerShell file

    .DESCRIPTION
    Remove comments from PowerShell file and optionally remove empty lines
    By default comments in param block are not removed
    By default comments before param block are not removed

    .PARAMETER SourceFilePath
    File path to the source file

    .PARAMETER Content
    Content of the file

    .PARAMETER DestinationFilePath
    File path to the destination file. If not provided, the content will be returned

    .PARAMETER RemoveEmptyLines
    Remove empty lines if more than one empty line is found

    .PARAMETER RemoveAllEmptyLines
    Remove all empty lines from the content

    .PARAMETER RemoveCommentsInParamBlock
    Remove comments in param block. By default comments in param block are not removed

    .PARAMETER RemoveCommentsBeforeParamBlock
    Remove comments before param block. By default comments before param block are not removed

    .EXAMPLE
    Remove-Comments -SourceFilePath 'C:\Support\GitHub\PSPublishModule\Examples\TestScript.ps1' -DestinationFilePath 'C:\Support\GitHub\PSPublishModule\Examples\TestScript1.ps1' -RemoveAllEmptyLines -RemoveCommentsInParamBlock -RemoveCommentsBeforeParamBlock

    .NOTES
    Most of the work done by Chris Dent, with improvements by Przemyslaw Klys

    #&amp;gt;
    [CmdletBinding(DefaultParameterSetName = 'FilePath')]
    param(
        [Parameter(Mandatory, ParameterSetName = 'FilePath')]
        [alias('FilePath', 'Path', 'LiteralPath')][string] $SourceFilePath,

        [Parameter(Mandatory, ParameterSetName = 'Content')][string] $Content,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [alias('Destination')][string] $DestinationFilePath,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [switch] $RemoveAllEmptyLines,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [switch] $RemoveEmptyLines,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [switch] $RemoveCommentsInParamBlock,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [switch] $RemoveCommentsBeforeParamBlock,

        [Parameter(ParameterSetName = 'Content')]
        [Parameter(ParameterSetName = 'FilePath')]
        [switch] $DoNotRemoveSignatureBlock
    )
    if ($SourceFilePath) {
        $Fullpath = Resolve-Path -LiteralPath $SourceFilePath
        $Content = [IO.File]::ReadAllText($FullPath, [System.Text.Encoding]::UTF8)
    }

    $Tokens = $Errors = @()
    $Ast = [System.Management.Automation.Language.Parser]::ParseInput($Content, [ref]$Tokens, [ref]$Errors)
    #$functionDefinition = $ast.Find({ $args[0] -is [FunctionDefinitionAst] }, $false)
    $groupedTokens = $Tokens | Group-Object { $_.Extent.StartLineNumber }
    $DoNotRemove = $false
    $DoNotRemoveCommentParam = $false
    $CountParams = 0
    $ParamFound = $false
    $SignatureBlock = $false
    $toRemove = foreach ($line in $groupedTokens) {
        if ($Ast.Body.ParamBlock.Extent.StartLineNumber -gt $line.Name) {
            continue
        }
        $tokens = $line.Group
        for ($i = 0; $i -lt $line.Count; $i++) {
            $token = $tokens[$i]
            if ($token.Extent.StartOffset -lt $Ast.Body.ParamBlock.Extent.StartOffset) {
                continue
            }

            # Lets find comments between function and param block and not remove them
            if ($token.Extent.Text -eq 'function') {
                if (-not $RemoveCommentsBeforeParamBlock) {
                    $DoNotRemove = $true
                }
                continue
            }
            if ($token.Extent.Text -eq 'param') {
                $ParamFound = $true
                $DoNotRemove = $false
            }
            if ($DoNotRemove) {
                continue
            }
            # lets find comments between param block and end of param block
            if ($token.Extent.Text -eq 'param') {
                if (-not $RemoveCommentsInParamBlock) {
                    $DoNotRemoveCommentParam = $true
                }
                continue
            }
            if ($ParamFound -and ($token.Extent.Text -eq '(' -or $token.Extent.Text -eq '@(')) {
                $CountParams += 1
            } elseif ($ParamFound -and $token.Extent.Text -eq ')') {
                $CountParams -= 1
            }
            if ($ParamFound -and $token.Extent.Text -eq ')') {
                if ($CountParams -eq 0) {
                    $DoNotRemoveCommentParam = $false
                    $ParamFound = $false
                }
            }
            if ($DoNotRemoveCommentParam) {
                continue
            }
            # if token not comment we leave it as is
            if ($token.Kind -ne 'Comment') {
                continue
            }

            # kind of useless to not remove signature block if we're not removing comments
            # this changes the structure of a file and signature will be invalid
            if ($DoNotRemoveSignatureBlock) {
                if ($token.Kind -eq 'Comment' -and $token.Text -eq '# SIG # Begin signature block') {
                    $SignatureBlock = $true
                    continue
                }
                if ($SignatureBlock) {
                    if ($token.Kind -eq 'Comment' -and $token.Text -eq '# SIG # End signature block') {
                        $SignatureBlock = $false
                    }
                    continue
                }
            }
            $token
        }
    }
    $toRemove = $toRemove | Sort-Object { $_.Extent.StartOffset } -Descending
    foreach ($token in $toRemove) {
        $StartIndex = $token.Extent.StartOffset
        $HowManyChars = $token.Extent.EndOffset - $token.Extent.StartOffset
        $content = $content.Remove($StartIndex, $HowManyChars)
    }
    if ($RemoveEmptyLines) {
        # Remove empty lines if more than one empty line is found. If it's just one line, leave it as is
        #$Content = $Content -replace '(?m)^\s*$', ''
        #$Content = $Content -replace "(`r?`n){2,}", "`r`n"
        # $Content = $Content -replace "(`r?`n){2,}", "`r`n`r`n"
        $Content = $Content -replace '(?m)^\s*$', ''
        $Content = $Content -replace "(?:`r?`n|\n|\r)", "`r`n"
    }
    if ($RemoveAllEmptyLines) {
        # Remove all empty lines from the content
        $Content = $Content -replace '(?m)^\s*$(\r?\n)?', ''
    }
    if ($Content) {
        $Content = $Content.Trim()
    }
    if ($DestinationFilePath) {
        $Content | Set-Content -Path $DestinationFilePath -Encoding utf8
    } else {
        $Content
    }
}&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f3e9c7956{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c6f414f150"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;This function has a couple of parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SourceFilePath&lt;/strong&gt; &amp;#8211; provide a path to a file you want to clean up&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content&lt;/strong&gt; &amp;#8211; alternatively to file way, you can also provide a code (for example &lt;code class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Get-Content -Raw $FilePath)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DestinationFilePath&lt;/strong&gt; &amp;#8211; path to file where to save the cleaned-up file. If not provided, the content will be returned directly as a string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RemoveEmptyLines&lt;/strong&gt; &amp;#8211; as part of the cleanup, it tries to remove empty lines, but only if there's more than one. This is useful if you have help with the function&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RemoveAllEmptyLines&lt;/strong&gt; &amp;#8211; removes all empty lines from a file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RemoveCommentsInParamBlock&lt;/strong&gt; &amp;#8211; by default, during cleanup, any comments inside the &lt;strong&gt;param&lt;/strong&gt; block are not removed, as those are often related to help. But if you want, you can also remove those with this switch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RemoveCommentsBeforeParamBlock&lt;/strong&gt; &amp;#8211; I don't remove anything between the function and param block by default. This ensures that the help I create for the function stays where it is. But if you want to remove it, this is how you can fix it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DoNotRemoveSignatureBlock&lt;/strong&gt; &amp;#8211; by default, we remove any signature from a file, but if you want to prevent that from happening, you can use this switch. It won't give you much because the signature will not work after you remove anything from the file anyways &amp;#8211; but it's there.&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f414f150{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f414f150{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c6f414f150{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c6f414f150{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c7003db" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c7003ca5909"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7009724649" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c700976 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c7009724649"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-check-double" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;How does comment removal work?&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c700e4f6117"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Let's take a look how this works. This is my file that I usually have in my modules:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c700e4f6117{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70102b7590"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="BhWIgAK"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png"&gt;&lt;img class="alignnone wp-image-18344 size-full" src="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png" alt="" width="1572" height="1942" srcset="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992.png 1572w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-243x300.png 243w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-829x1024.png 829w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-768x949.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22dd028992-1243x1536.png 1243w" sizes="(max-width: 1572px) 100vw, 1572px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70102b7590{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70102b7590{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70102b7590{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70102b7590{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7011f16402"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;After applying comment cleanup function&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7011f16402{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7011f16402{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7011f16402{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7011f16402{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7013a29213"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Remove-Comments -FilePath "C:\Support\GitHub\PSSharedGoods\Public\Objects\Format-TransposeTable.ps1" -DestinationFilePath "C:\Support\GitHub\PSSharedGoods\Public\Objects\Format-TransposeTableFixed.ps1" -RemoveEmptyLines&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7013a29213{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7013a29213{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7013a29213{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7013a29213{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7015914810"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="awKZOwA"&gt;&lt;img width="1918" height="286" class="alignnone size-full wp-image-18342 " src="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664.png" alt="" srcset="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664.png 1918w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-300x45.png 300w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-1024x153.png 1024w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-768x115.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22d6b67664-1536x229.png 1536w" sizes="(max-width: 1918px) 100vw, 1918px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7015914810{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7015914810{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7015914810{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7015914810{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7017509589"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="LcOyFhw"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png"&gt;&lt;img class="alignnone wp-image-18346 size-full" src="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png" alt="" width="1566" height="1477" srcset="https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00.png 1566w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-300x283.png 300w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-1024x966.png 1024w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-768x724.png 768w, https://evotec.xyz/wp-content/uploads/2023/08/img_64e22de46ce00-1536x1449.png 1536w" sizes="(max-width: 1566px) 100vw, 1566px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7017509589{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7017509589{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7017509589{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7017509589{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7018be573"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you can notice, all the &amp;#8220;junk&amp;#8221; comments were removed, including inline comments. Comments for help were not removed, as per my requirements.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7018be573{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7018be573{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7018be573{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7018be573{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/how-to-efficiently-remove-comments-from-your-powershell-script/"&gt;How to Efficiently Remove Comments from Your PowerShell Script&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29199</guid><link>https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/</link><category>Microsoft</category><category>PowerShell</category><category>VSC</category><title>FIX: ‘else’ is not recognized as cmdlet Visual Studio Code debugger</title><description>&lt;p&gt;Debugging Visual Studio Code and manually running an if else statement erroring If you look at the piece of code below, you would say this works. This works, but when you run this manually in the Visual Studio Code debugger, you get the following error: else: The term &amp;#8216;else&amp;#8217; is not recognized as a name &amp;#8230; &lt;a href="https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: &amp;#8216;else&amp;#8217; is not recognized as cmdlet Visual Studio Code debugger&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/"&gt;FIX: &amp;#8216;else&amp;#8217; is not recognized as cmdlet Visual Studio Code debugger&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 18 Aug 2023 09:07:00 Z</pubDate><comments>https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/fix-else-is-not-recognized-as-cmdlet-visual-studio-code-debugger/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18300</guid><link>https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/</link><category>PowerShell</category><category>conversion</category><category>hashtable</category><category>ordereddictionary</category><category>powershell</category><category>pscustomobject</category><title>Unlocking PowerShell Magic: Different Approach to Creating ‘Empty’ PSCustomObjects</title><description>&lt;p&gt;Today I saw an article from Christian Ritter, "PowerShell: Creating an "empty" PSCustomObject" on X that got me curious. Do people create empty objects like Christian proposes? I want to offer an alternative to Christian's article, which uses OrderedDictionary and converts to PSCustomObject.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/"&gt;Unlocking PowerShell Magic: Different Approach to Creating &amp;#8216;Empty&amp;#8217; PSCustomObjects&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Thu, 10 Aug 2023 09:27:32 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c703af9" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c703ae68217"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c703d102886" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c703d12 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c703d102886"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c703e9b6235"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Today I saw an article from Christian Ritter, &lt;a href="https://hcritter.devdojo.com/powershell-creating-an-empty-pscustomobject"&gt;&amp;#8220;PowerShell: Creating an &amp;#8220;empty&amp;#8221; PSCustomObject&amp;#8221;&lt;/a&gt; on X that got me curious. Do people create empty objects like Christian proposes? I want to offer an alternative to Christian's article, which uses &lt;strong&gt;OrderedDictionary&lt;/strong&gt; and converts to &lt;strong&gt;PSCustomObject&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c703e9b6235{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c704146" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c7041357959"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7044ab9336" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c7044af "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c7044ab9336"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-check-double" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Converting OrderedDictionary to PSCustomObject&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70492b74"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Here's a snippet code that shows how to create a custom object using OrderedDictionary and conversion process&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70492b74{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70492b74{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70492b74{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70492b74{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704afa5560"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$CustomObject = [ordered] @{}
$CustomObject['FirstName'] = 'John'
$CustomObject['LastName'] = 'Doe'
$CustomObject['UserName'] = 'John.Doe'
[pscustomobject] $CustomObject&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704afa5560{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704afa5560{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704afa5560{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704afa5560{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704d538738"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;You can also create custom objects &lt;strong&gt;dynamically&lt;/strong&gt; using a similar approach to what Christian proposed.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704d538738{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704d538738{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704d538738{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704d538738{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c704f1f3100"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$propertyDefinitions = @{
    Users   = @(
        "FirstName", "LastName", "UserName", "Title", "Department",
        "StreetAddress", "City", "State", "PostalCode", "Country",
        "PhoneNumber", "MobilePhone", "UsageLocation", "License"
    )
    Groups  = @(
        "DisplayName", "PrimarySMTP", "Description", "Owner", "Type"
    )
    JobRole = @(
        "DisplayName", "PrimarySMTP", "Description", "Type"
    )
}


$CustomObject2 = [ordered] @{}
foreach ($P in $propertyDefinitions.Users) {
    $CustomObject2[$P] = $null
}
[PSCustomObject] $CustomObject2

$CustomObject3 = [ordered] @{}
foreach ($P in $propertyDefinitions.Groups) {
    $CustomObject3[$P] = $null
}
[PSCustomObject] $CustomObject3

$CustomObject4 = [ordered] @{}
foreach ($P in $propertyDefinitions.JobRole) {
    $CustomObject4[$P] = $null
}
[PSCustomObject] $CustomObject4&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c704f1f3100{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70518b1577"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;OrderedDictionary&lt;/strong&gt; additionally offers the ability to create an object with some data and then append data on the fly in your script. This means, for example, you could create a dictionary first at the beginning of the script, and during the whole run of the script, you could append data to it without ever pre-creating it in the first place, to finally convert it to a custom object.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70518b1577{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70518b1577{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70518b1577{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70518b1577{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c705373741"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$Properties = 'Title', 'Department', 'State'
$CustomObject1 = [ordered] @{
    Name = 'John'
    Age  = 30
    City = 'New York'
}
foreach ($P in $Properties) {
    $CustomObject1[$P] = $null
}
[pscustomobject] $CustomObject1&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705373741{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705373741{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705373741{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705373741{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7055df6793"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In a long script you could do&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7055df6793{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7055df6793{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7055df6793{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7055df6793{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7057ad1393"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$CustomObject1 = [ordered] @{
    Name = 'John'
    Age  = 30
    City = 'New York'
}
&amp;lt;#
Do lots of code here
#&amp;gt;
$CustomObject1['Address'] = 'New Value'
&amp;lt;#
More code here
#&amp;gt;
$CustomObject1['State'] = 'New Value 2'
# Convert to PSCustomObject
[pscustomobject] $CustomObject1&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7057ad1393{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c705a18135"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Another benefit of using &lt;strong&gt;OrderedDictionary&lt;/strong&gt; is that you can add to it inside other functions without ever having to destroy the object, overwrite it, or even knowing beforehand what it will look like.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705a18135{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705a18135{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c705a18135{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c705a18135{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7065d43217"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;function Add-Values {
    [CmdletBinding()]
    param(
        [System.Collections.IDictionary] $Dictionary,
        [string] $Key,
        [object] $Value
    )
    $Dictionary[$Key] = $Value
}

$CustomObject1 = [ordered] @{
    Name = 'John'
    Age  = 30
    City = 'New York'
}
&amp;lt;#
Do lots of code here
#&amp;gt;
$CustomObject1['Address'] = 'New Value'
&amp;lt;#
More code here
#&amp;gt;
$CustomObject1['State'] = 'New Value 2'
Add-Values -Dictionary $CustomObject1 -Key 'ZipCode' -Value 'New Value 3'
&amp;lt;#
Even more code
#&amp;gt;
Add-Values -Dictionary $CustomObject1 -Key 'EmployeeID' -Value 'New Value 4'

# Convert to PSCustomObject
[pscustomobject] $CustomObject1&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7065d43217{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7065d43217{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7065d43217{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7065d43217{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70676a9958"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I hope this short blog post will help you decide between my and Christian solutions. Both solutions have their own strengths, and depending on who likes what, you may end up using one or the other. Christian solution is based on &lt;strong&gt;PowerShell 2.0&lt;/strong&gt; when it was the only way to create PSCustomObject.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70676a9958{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70676a9958{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70676a9958{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70676a9958{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70686d9604"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;# what Christian proposes
$customObject1 = [PSCustomObject]@{} # this line is actually not needed
$customObject1 | Select-Object -Property $PropertyNames

# Idential, with just one line of code, as Select-Object creates new object on the fly
'' | Select-Object -Property $PropertyNames&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70686d9604{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70686d9604{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70686d9604{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70686d9604{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7069de6740"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I was curious if there's any performance difference between those two solutions. Using a simple &lt;strong&gt;Measure-Command&lt;/strong&gt; gives us the answer.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7069de6740{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7069de6740{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7069de6740{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7069de6740{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706ae48941"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$PropertyNames = @(
    "FirstName", "LastName", "UserName", "Title", "Department",
    "StreetAddress", "City", "State", "PostalCode", "Country",
    "PhoneNumber", "MobilePhone", "UsageLocation", "License"
)

Measure-Command {
    for ($i = 0; $i -lt 100000; $i++) {
        $CustomObject1 = [ordered] @{}
        foreach ($P in $PropertyNames) {
            $CustomObject1[$P] = $null
        }
        $T = [pscustomobject] $CustomObject1
    }
}

Measure-Command {
    for ($i = 0; $i -lt 100000; $i++) {
       $T2 = '' | Select-Object -Property $PropertyNames
    }
}&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706ae48941{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706ae48941{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706ae48941{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706ae48941{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706c593424"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In PowerShell 5.1, over 100k iterations, it takes about 1 second less for my approach than using Select-Object.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706c593424{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706c593424{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706c593424{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706c593424{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706d529700"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="bBeupkr"&gt;&lt;img width="1028" height="1367" class="alignnone size-full wp-image-18308 " src="https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208.png" alt="" srcset="https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208.png 1028w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-226x300.png 226w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-770x1024.png 770w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a85ba0208-768x1021.png 768w" sizes="(max-width: 1028px) 100vw, 1028px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706d529700{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706d529700{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706d529700{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706d529700{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706e8b1127"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;In PowerShell 7, the difference is about 500ms which is not noticeable.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706e8b1127{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c706f7f1614"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="xbyYDmJ"&gt;&lt;img width="1028" height="1321" class="alignnone size-full wp-image-18310 " src="https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3.png" alt="" srcset="https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3.png 1028w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-233x300.png 233w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-797x1024.png 797w, https://evotec.xyz/wp-content/uploads/2023/08/img_64d4a8802adb3-768x987.png 768w" sizes="(max-width: 1028px) 100vw, 1028px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c706f7f1614{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7070755914"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;To summarize, both solutions work; I believe &lt;strong&gt;OrderedDictionary&lt;/strong&gt; conversion has more pros and, at least for me, is easier to read and understand how everything happens. Just a thing of note &amp;#8211; you could also use Hashtable instead of &lt;strong&gt;OrderedDictionary&lt;/strong&gt;, but then the order of properties is not guaranteed, which may or may not matter to you. In the end, the choice is always yours. Enjoy&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7070755914{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7070755914{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7070755914{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7070755914{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/unlocking-powershell-magic-different-approach-to-creating-empty-pscustomobjects/"&gt;Unlocking PowerShell Magic: Different Approach to Creating &amp;#8216;Empty&amp;#8217; PSCustomObjects&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://devdojo.com/11228</guid><link>https://devdojo.com/hcritter/powershell-creating-an-empty-pscustomobject</link><author>Christian Ritter</author><category>powershell</category><category>create</category><category>pscustomobject</category><category>empty</category><category>function</category><title>PowerShell: Creating an "empty" PSCustomObject</title><description>&lt;h2 id="simplifying-creation-of-empty-powershell-pscustomobjects-using-custom-functions"&gt;Simplifying Creation of Empty PowerShell PSCustomObjects using Custom Functions&lt;/h2&gt;
&lt;p&gt;Creating an empty PSCustomObject in PowerShell is a common task, but the traditional approach can be verbose and repetitive. In this blog post, I'll walk you through a more structured and efficient way to achieve this using functions and property definitions.&lt;/p&gt;
&lt;h2 id="the-traditional-approach"&gt;The Traditional Approach&lt;/h2&gt;
&lt;p&gt;Frequently, developers, including myself, create empty PSCustomObjects like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;[&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Name = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    DisplayName = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    Telephone = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    EmailAddress = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    Gender = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    Street = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
    City = &lt;span class="hljs-variable"&gt;$null&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this method works, it can become unwieldy, especially when dealing with multiple properties. It consumes screen space and lacks a clear structure.&lt;/p&gt;
&lt;h2 id="a-structured-solution"&gt;A Structured Solution&lt;/h2&gt;
&lt;p&gt;To address these concerns, I devised a more organized approach using a custom function New-EmptyCustomObject. This function streamlines the process of creating empty PSCustomObjects and allows for greater flexibility.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;New-EmptyCustomObject&lt;/span&gt;&lt;/span&gt; {
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt; (
        [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;[]]&lt;span class="hljs-variable"&gt;$PropertyNames&lt;/span&gt;
    )
    
    &lt;span class="hljs-variable"&gt;$customObject&lt;/span&gt; = [&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{}
    &lt;span class="hljs-variable"&gt;$customObject&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Select-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Property&lt;/span&gt; &lt;span class="hljs-variable"&gt;$PropertyNames&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By utilizing this function, you can now create empty objects in a more organized manner:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$propertyDefinitions&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Users = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(
        &lt;span class="hljs-string"&gt;"FirstName"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"LastName"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"UserName"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Title"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Department"&lt;/span&gt;,
        &lt;span class="hljs-string"&gt;"StreetAddress"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"City"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"State"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"PostalCode"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Country"&lt;/span&gt;,
        &lt;span class="hljs-string"&gt;"PhoneNumber"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"MobilePhone"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"UsageLocation"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"License"&lt;/span&gt;
    )
    Groups = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(
        &lt;span class="hljs-string"&gt;"DisplayName"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"PrimarySMTP"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Description"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Owner"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Type"&lt;/span&gt;
    )
    JobRole = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;(
        &lt;span class="hljs-string"&gt;"DisplayName"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"PrimarySMTP"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Description"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Type"&lt;/span&gt;
    )
}

&lt;span class="hljs-variable"&gt;$usersObject&lt;/span&gt;  = &lt;span class="hljs-built_in"&gt;New-EmptyCustomObject&lt;/span&gt; &lt;span class="hljs-literal"&gt;-PropertyNames&lt;/span&gt; &lt;span class="hljs-variable"&gt;$propertyDefinitions&lt;/span&gt;.Users
&lt;span class="hljs-variable"&gt;$groupsObject&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-EmptyCustomObject&lt;/span&gt; &lt;span class="hljs-literal"&gt;-PropertyNames&lt;/span&gt; &lt;span class="hljs-variable"&gt;$propertyDefinitions&lt;/span&gt;.Groups
&lt;span class="hljs-variable"&gt;$RoleObject&lt;/span&gt;   = &lt;span class="hljs-built_in"&gt;New-EmptyCustomObject&lt;/span&gt; &lt;span class="hljs-literal"&gt;-PropertyNames&lt;/span&gt; &lt;span class="hljs-variable"&gt;$propertyDefinitions&lt;/span&gt;.JobRole

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this approach, you effortlessly generate empty PSCustomObjects while maintaining clear property definitions. This ensures that you can easily manage and track the properties of each PSCustomObject.&lt;/p&gt;
&lt;h2 id="wrapping-up"&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;In conclusion, the streamlined technique I've presented enhances the creation of empty PSCustomObjects by utilizing a custom function and well-defined property definitions. This method is not only efficient but also helps maintain a structured and organized codebase.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Thu, 10 Aug 2023 00:41:53 -0700</pubDate></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18284</guid><link>https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/</link><category>Active Directory</category><category>Azure AD</category><category>PowerShell</category><category>active directory</category><category>ad</category><category>azure ad</category><category>microsoft graph</category><category>powershell</category><title>Report Active Directory Accounts that are Synchronized with Azure AD</title><description>&lt;p&gt;I was scrolling X (aka Twitter) today and saw this blog post, "PowerShell: Report On-Premises Active Directory Accounts that are Synchronized with Azure AD Connect" by Kevin Trent. I like reading blog posts as I tend to learn some new things and see how people tend to solve their problems.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/"&gt;Report Active Directory Accounts that are Synchronized with Azure AD&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Mon, 07 Aug 2023 13:21:18 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c70a756" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c70a731936"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70aaea6568" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c70aaed "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c70aaea6568"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70add25551"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I was scrolling X (aka Twitter) today and saw this blog post, &lt;a href="https://techbloggingfool.com/2023/07/28/powershell-report-on-premises-active-directory-accounts-that-are-synchronized-with-azure-ad-connect/?utm_source=dlvr.it&amp;utm_medium=twitter"&gt;PowerShell: Report On-Premises Active Directory Accounts that are Synchronized with Azure AD Connect&lt;/a&gt;, by Kevin Trent. I like reading blog posts as I tend to learn some new things and see how people tend to solve their problems. Upon reading the provided code, two things stood out to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;usage of the AzureAD module, which is going to stop working on March 2024 (if Microsoft won't change it again)&lt;/li&gt;
&lt;li&gt;using &lt;strong&gt;Get-AzureADUser&lt;/strong&gt; inside the &lt;strong&gt;Select-Object&lt;/strong&gt; statement&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's what that solution looks like:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70add25551{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70add25551{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70add25551{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70add25551{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b0225791"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Import-Module ActiveDirectory
Connect-AzureAD

Get-ADUser -Filter {Enabled -EQ $True} -Properties *  | 
    Select-Object DisplayName, SamAccountName, UserPrincipalName, LastLogonDate,           
    @{N="AzureADSynced"; E={(Get-AzureADUser -ObjectID $_.UserPrincipalName |
    Select-Object -Property DirSyncEnabled).DirsyncEnabled}} | 
Export-Csv $env:userprofile\documents\On-Prem_CloudSynced_Accounts.csv&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b0225791{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b0225791{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b0225791{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b0225791{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b1e42457"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;While this solution will work for the next couple of months and may work for 200 users, Kevin mentioned it would have difficulty querying &lt;strong&gt;1000, 10000, or 50000&lt;/strong&gt; users. It will either take hours to finish or never finish at all. Aside from the obvious that for each user, a call will need to be made to &lt;strong&gt;Azure AD&lt;/strong&gt; to get just one property, &lt;strong&gt;Active Directory&lt;/strong&gt; doesn't like a pipeline. It may work very well most of the time, but as soon as something runs longer, it will start throwing errors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://evotec.xyz/get-adobject-the-server-has-returned-the-following-error-invalid-enumeration-context/"&gt;Get-ADObject : The server has returned the following error: invalid enumeration context.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will not happen every time, maybe even never, but if it will, you will spend hours debugging what's wrong and how to fix it. When working with the &lt;strong&gt;ActiveDirectory&lt;/strong&gt; module, I wasted lots of time finally dropping the pipeline altogether.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b1e42457{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c70b43c" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c70b42f6461"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70b6282174" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c70b62a "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c70b6282174"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-check-double" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;How to do it right?&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70b9206708"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;So what is the solution to both mentioned problems?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Microsoft Graph&lt;/strong&gt;, which is the new API to query and work with data associated with &lt;strong&gt;Microsoft Office 365&lt;/strong&gt; and similar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hashtables&lt;/strong&gt;/&lt;strong&gt;OrderedDictionary&lt;/strong&gt; as a way to cache data and do two queries  &amp;#8211; one to AD, one to &lt;strong&gt;Azure AD&lt;/strong&gt; (aka &lt;strong&gt;Microsoft Entra ID&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b9206708{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b9206708{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70b9206708{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70b9206708{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ba4b9389"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;Microsoft Graph &lt;/strong&gt;doesn't have the best marketing in the world but whether you like it or not it's here to stay. With every new technology, there are some bumps that may need to be ironed out, but once you get used to some ideas, it's pretty easy. Discussing Microsoft Graph is quite a big topic in itself so I'll focus on the essential details for this post &amp;#8211; replicating precisely what the author achieved but using a bit different way. To get you started &amp;#8211; install the module first:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ba4b9389{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bb4d84"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="generic"&gt;Install-Module Microsoft.Graph.Users&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bb4d84{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bc61692"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Once we got that out of the way, here's the code that Kevin wrote more than two lines, but probably ten times faster, using Microsoft Graph and achieving the same thing in less time.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bc61692{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bc61692{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bc61692{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bc61692{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bd574541"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Connect-MgGraph -Scopes "User.Read.All"

$AzureUsers = Get-MgUser -All -Property 'OnPremisesSyncEnabled', 'DisplayName', 'UserPrincipalName','Id','Mail'
$Users = Get-ADUser -Filter "Enabled -eq '$True'" -Properties *

$CacheAzure = [ordered] @{}
foreach ($User in $AzureUsers) {
    $CacheAzure[$User.UserPrincipalName] = $User
}
$AllUsers = foreach ($User in $Users) {
    if ($CacheAzure[$User.UserPrincipalName]) {
        if ($CacheAzure[$User.UserPrincipalName].OnPremisesSyncEnabled) {
            $Synchronized = $true
        } else {
            $Synchronized = $false
        }
    } else {
        $Synchronized = $false
    }
    [PSCustomObject] @{
        DisplayName       = $User.DisplayName
        SamAccountName    = $User.SamAccountName
        UserPrincipalName = $User.UserPrincipalName
        LastLogonDate     = $User.LastLogonDate
        AzureADSynced     = $Synchronized
    }
}
$AllUsers | Format-Table -AutoSize&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bd574541{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bd574541{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bd574541{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bd574541{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70bebd184"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Using &lt;strong&gt;caching with Hashtables&lt;/strong&gt; is super fast, and using only two queries instead 201 (1 for AD and 200 per user to Azure AD) will be much quicker and less of a problem for the backend. Using Microsoft Graph on the other end will get you to switch to future Microsoft API instead of relying on deprecated modules. To summarize:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avoid pipeline with Get-ADUser&lt;/strong&gt; or similar cmdlets as it will bite you hard sooner or later&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don't use the AzureAD&lt;/strong&gt; module and switch to Microsoft Graph&lt;/li&gt;
&lt;li&gt;Learn how &lt;strong&gt;Hashtables are great.&lt;/strong&gt; You can learn from my mistakes from &lt;a href="https://evotec.xyz/how-i-didnt-know-how-powerful-and-fast-hashtables-are/"&gt;How I didn't know how powerful and fast hashtables are&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bebd184{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bebd184{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70bebd184{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70bebd184{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/report-active-directory-accounts-that-are-synchronized-with-azure-ad/"&gt;Report Active Directory Accounts that are Synchronized with Azure AD&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://powershell.ro/?p=138</guid><link>https://powershell.ro/automate-your-ilo-configuration-using-hpe-ilo-cmdlets/</link><category>Automation</category><category>Powershell</category><category>gen10 servers</category><category>HPEiLOCmdlets</category><category>ilo</category><category>powershell</category><category>proliant</category><category>vmware</category><title>Automate your ILO configuration using HPE iLO Cmdlets</title><description>Automation, automation, automation – this is the key, once again! Why waste 15-20 minutes configuring the ILO boards manually when we have the HPE iLO Cmdlets to automate the process? In this article, I will introduce some PowerShell cmdlets for ILO configuration. Additionally, I will continue updating the post with new ones. Prerequisites We need [&amp;#8230;]</description><pubDate>Fri, 04 Aug 2023 19:22:12 Z</pubDate><comments>https://powershell.ro/automate-your-ilo-configuration-using-hpe-ilo-cmdlets/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;&lt;/p&gt;



&lt;p&gt;Automation, automation, automation – this is the key, once again!&lt;/p&gt;



&lt;p&gt;Why waste 15-20 minutes configuring the ILO boards manually when we have the HPE iLO Cmdlets to automate the process?&lt;/p&gt;



&lt;p&gt;In this article, I will introduce some PowerShell cmdlets for ILO configuration. Additionally, I will continue updating the post with new ones.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;h4 class="wp-block-heading"&gt;Prerequisites&lt;/h4&gt;



&lt;p&gt;We need the HPEiLOCmdlets module, which you can get from Powershell Gallery. To install the PowerCLI module, use the following command.&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
    Install-Module -Name HPEiLOCmdlets -Confirm:$false
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HPE ILO Cmdlets from Powershell Gallery link is : https://www.powershellgallery.com/packages/HPEiLOCmdlets/4.2.0.0&lt;/p&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;



&lt;p&gt;First we need to declare some variables and connect to our HPE ILO remote board.&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
$ILOname = &amp;quot;your_Ilo_Name&amp;quot;
$Creds = Get-Credential
$hostname = &amp;quot;&amp;quot;
$domain = &amp;quot;&amp;quot;
$ntpserver = &amp;quot;&amp;quot;
$dnsserver1 = &amp;quot;&amp;quot;
$dnsserver2 = &amp;quot;&amp;quot;

$connection = Connect-HPEiLO -Address $ILOname -Credential $Creds -DisableCertificateAuthentication:$true -Timeout 60 -Verbose
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below you can find some usefull cmdlets and what they are doing:&lt;/p&gt;



&lt;h6 class="wp-block-heading"&gt;Power-Off the server&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
Set-HPeiLOServerPower -Connection $connection -Power Off -Force -ErrorAction Continue

#to get the status use the following cmdlet
(Get-HPEiLOServerPower -Connection $Connection ).Power
&lt;/pre&gt;&lt;/div&gt;


&lt;h6 class="wp-block-heading"&gt;IPv6 Network settings&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
#this cmdlet will disable IPV6 on the Dedicated interface

Set-HPEiLOIPv6NetworkSetting -Connection $connection -InterfaceType Dedicated -RegisterDDNSServer Disabled -DHCPv6StatefulMode Disabled -DHCPv6DNSServer Disabled -DHCPv6RapidCommit Disabled -DHCPv6StatelessMode Disabled -DHCPv6SNTPSetting Disabled -DHCPv6DomainName Disabled -StatelessAddressAutoConfiguration Disabled
&lt;/pre&gt;&lt;/div&gt;


&lt;h6 class="wp-block-heading"&gt;IPv4 Network Settings&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
#this cmdlet will set the DNS servers on the IPv4 dedicated interface and ILO hostname, domain and enable the PingGateway
$dnstype = ,@(&amp;quot;Primary&amp;quot;,&amp;quot;Secondary&amp;quot;)
$dnsserver = ,@(&amp;quot;$dnsserver1&amp;quot;,&amp;quot;$dnsserver2&amp;quot;)
Set-HPEiLOIPv4NetworkSetting -Connection $connection -InterfaceType Dedicated -DNSName $hostname -DomainName $Domain -RegisterDDNSServer Disabled -DNSServerType $dnstype -DNSServer $dnsserver -PingGateway Enabled
&lt;/pre&gt;&lt;/div&gt;


&lt;h6 class="wp-block-heading"&gt;NTP Settings&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# set the NTP server and the timezone to CET
Set-HPEiLOSNTPSetting -Connection $connection -InterfaceType Dedicated -Timezone &amp;quot;CET&amp;quot; -SNTPServer &amp;quot;$ntpserver&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6 class="wp-block-heading"&gt;Create ILO user&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
#add a local user and set the login priviledges
Add-HPEiLOUser -connection $connection -LoginName &amp;quot;ILOnewUser&amp;quot; -Username &amp;quot;ILOnewUser&amp;quot; -Password &amp;quot;ilopassword&amp;quot; -LoginPrivilege Yes -RemoteConsolePrivilege Yes -VirtualMediaPrivilege Yes -VirtualPowerAndResetPrivilege Yes -IloConfigPrivilege Yes
&lt;/pre&gt;&lt;/div&gt;


&lt;h6 class="wp-block-heading"&gt;Disconnect ILO session&lt;/h6&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
#use this cmdlet to disconnect your powershell session
Disconnect-HPEiLO -Connection $connection 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/p&gt;



&lt;p&gt;What tasks did we covered :&lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;Shutting down the server.&lt;/li&gt;



&lt;li&gt;Configuring the IPv4 network settings for the Dedicated interface.&lt;/li&gt;



&lt;li&gt;&amp;#8220;Disabling the IPv6 network settings for the Dedicated interface.&lt;/li&gt;



&lt;li&gt;Configuring the SNTP&lt;/li&gt;



&lt;li&gt;Adding a local user.&lt;/li&gt;



&lt;li&gt;Disconnecting the current session.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;Keep you posted !&lt;/p&gt;
&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_138" class="pvc_stats all  " data-element-id="138" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/automate-your-ilo-configuration-using-hpe-ilo-cmdlets/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29109</guid><link>https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/</link><category>Microsoft</category><category>My Way</category><category>PowerShell</category><title>How to optimize and speed up your PowerShell scripts</title><description>&lt;p&gt;My best practices, tips and tricks working with PowerShell This is a blog post that is not deeply technical. I will not go deep into the tips and tricks, because you will learn this automatically when you have more experience &amp;#38; when you are ready. I have a seperate blog post about best practices, tips &amp;#8230; &lt;a href="https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;How to optimize and speed up your PowerShell scripts&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/"&gt;How to optimize and speed up your PowerShell scripts&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 04 Aug 2023 11:50:13 Z</pubDate><comments>https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/how-to-optimize-and-speed-up-your-powershell-scripts/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18256</guid><link>https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/</link><category>PowerShell</category><category>aliases</category><category>errors</category><category>functions</category><category>limits</category><category>powershell</category><category>windows powershell</category><title>Function cannot be created because function capacity 4096 has been exceeded for this scope</title><description>&lt;p&gt;I had a long day today when my long-running script (10 hours) gave me weird errors with Microsoft Graph for Teams. Finally, I solved my mistakes and reran the hand to see if the report would be complete this time. Surprisingly, it gave me an error I'd never seen before. "Function cannot be created because function capacity 4096 has been exceeded for this scope". The error is at least weird because it's shown on a production server where I've just a handful of PowerShell modules installed, and I've never seen it on my development machine where I've over 200 modules.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/"&gt;Function cannot be created because function capacity 4096 has been exceeded for this scope&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Tue, 01 Aug 2023 06:22:34 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c70df7e" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c70df665829"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70e1c34804" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c70e1c5 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c70e1c34804"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e37f6836"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I had a long day today when my long-running script (10 hours) gave me weird errors with &lt;strong&gt;Microsoft Graph for Teams&lt;/strong&gt;. Finally, I solved my mistakes and reran the hand to see if the report would be complete this time. Surprisingly, it gave me an error I'd never seen before. &amp;#8220;&lt;span style="text-decoration: underline;"&gt;Function cannot be created because function capacity 4096 has been exceeded for this scope&lt;/span&gt;&amp;#8220;. The error is at least weird because it's shown on a production server where I've just a handful of PowerShell modules installed, and I've never seen it on my development machine where I've over 200 modules.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e37f6836{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e4e26191"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;img class="alignnone size-full wp-image-18257" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736.png" alt="" width="1024" height="76" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736-300x22.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7f9eecc525-e1690870897736-768x57.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e4e26191{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70e5e55782"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The error means I've loaded more than 4096 functions within my scope, and the script was ruined after running for 4 hours. In my particular case, the ExchangeOnlineManagement module broke my script. Still, it can happen anytime if too many variables, functions, or aliases are used.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70e5e55782{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c70e8bc" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c70e8a83909"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70eb2e2916" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c70eb31 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c70eb2e2916"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-bug" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Fixing Function cannot be created because function capacity 4096 has been exceeded&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ee814325"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;It seems &lt;strong&gt;Windows PowerShell&lt;/strong&gt; has few built-in variables that define how many functions, aliases, and variables you can have before stopping you from using more. You can verify this with handy command &lt;code class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Get-Variable Max*Count&lt;/code&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ee814325{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ee814325{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ee814325{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ee814325{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70efba4885"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="tYlgfOs"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png"&gt;&lt;img class="alignnone wp-image-18260 size-full" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png" alt="" width="1918" height="401" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335.png 1918w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-300x63.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-1024x214.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-768x161.png 768w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c7fd681e335-1536x321.png 1536w" sizes="(max-width: 1918px) 100vw, 1918px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70efba4885{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70efba4885{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70efba4885{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70efba4885{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f0e02034"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;As you can see above, &lt;strong&gt;Aliases&lt;/strong&gt;, &lt;strong&gt;Drives&lt;/strong&gt;, &lt;strong&gt;Errors&lt;/strong&gt;, &lt;strong&gt;Functions&lt;/strong&gt;, &lt;strong&gt;History&lt;/strong&gt;, and &lt;strong&gt;Variables&lt;/strong&gt; all have their maximum values set. After so many years I've spent using PowerShell, I've never exceeded those values. I guess it's the first time for everything. Fortunately, it's an easy fix. We need to change maximum values to something sane.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f0e02034{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f1fc4306"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$MaximumFunctionCount = 8192
$MaximumVariableCount = 8192&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f1fc4306{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f3044234"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;After using those two lines of code before running my time-consuming report &amp;#8211; my problems were &lt;strong&gt;NOT&lt;/strong&gt; solved! After investigation, I realized that I was connecting to Exchange which triggers imports of commands inside the module scope and not as part of the Global scope. This means I need to change it as part of the module and make sure to target the Script scope.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f3044234{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f3044234{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f3044234{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f3044234{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f40e5868"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;if ($PSVersionTable.PSEdition -eq 'Desktop') {
    $Script:MaximumFunctionCount = 18000
    $Script:MaximumVariableCount = 18000
}&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f40e5868{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70f5466441"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Remember that this fix only applies to Windows PowerShell and not PowerShell 7. PowerShell 7 is unaffected by this as those values were sometimes removed in 2016 in PR &amp;#8211; &lt;a href="https://github.com/PowerShell/PowerShell/pull/2363"&gt;Remove most Maximum* capacity variables #2363&lt;/a&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f5466441{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f5466441{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70f5466441{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70f5466441{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c70f82e" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c70f81d2087"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c70fa871162" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c70fa89 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c70fa871162"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-list-ol" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;How many functions module have?&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70fdb63058"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;While my problem was solved, I was curious about what module has the highest number of functions and how it was even possible that I could reach this limit. After a simple query as below &amp;#8211; it seems the biggest offenders are the newest &lt;strong&gt;Microsoft. Graph&lt;/strong&gt; PowerShell modules that have even 800 functions in one module. Just using a few of those can quickly get you in trouble. Fortunately, I usually use PowerShell 7 as my daily driver unless there's a specific reason not to. Unfortunately, I have other issues with PS 7 that sometimes force me back to PowerShell 5.1, like incompatibility between modules and DLL conflicts. But that's a story for another time.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70fdb63058{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c70ff466380"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$Modules = Get-Module -ListAvailable
$ListModules = foreach ($Module in $Modules) {
    [PScustomObject] @{
        Name          = $Module.Name
        Version       = $Module.Version
        FunctionCount = ($Module.ExportedFunctions).Count
    }
}
$ListModules | Sort-Object -Property FunctionCount -Descending | Format-Table -AutoSize&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ff466380{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ff466380{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c70ff466380{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c70ff466380{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7100f68599"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="rgGsiQV"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png"&gt;&lt;img class="alignnone wp-image-18264 size-full" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png" alt="" width="1918" height="2098" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec.png 1918w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-274x300.png 274w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-936x1024.png 936w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-768x840.png 768w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-1404x1536.png 1404w, https://evotec.xyz/wp-content/uploads/2023/07/img_64c8068f684ec-1872x2048.png 1872w" sizes="(max-width: 1918px) 100vw, 1918px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7100f68599{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7100f68599{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7100f68599{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7100f68599{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/function-cannot-be-created-because-function-capacity-4096-has-been-exceeded-for-this-scope/"&gt;Function cannot be created because function capacity 4096 has been exceeded for this scope&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://powershell.ro/?p=82</guid><link>https://powershell.ro/check-the-alarms-on-all-esxi-hosts-via-powershell/</link><category>Automation</category><category>Powershell</category><category>VMWare</category><category>alarms</category><category>esxi</category><category>powercli</category><category>powershell</category><category>vcenter</category><category>vmware</category><title>Check the alarms on all ESXi Hosts via Powershell</title><description>Recently, I had a fascinating coding experience with a script that checks alarms on all ESXi hosts from vCenters. You might wonder why I needed such a script. Well, many of us use monitoring tools, and sometimes, to avoid constant alerts while working, we disable alarms on objects in vCenter. The problem is that we [&amp;#8230;]</description><pubDate>Sat, 29 Jul 2023 04:51:37 Z</pubDate><comments>https://powershell.ro/check-the-alarms-on-all-esxi-hosts-via-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;&lt;/p&gt;



&lt;p&gt;Recently, I had a fascinating coding experience with a script that checks alarms on all ESXi hosts from vCenters. You might wonder why I needed such a script. Well, many of us use monitoring tools, and sometimes, to avoid constant alerts while working, we disable alarms on objects in vCenter. The problem is that we often forget to turn them back on once we&amp;#8217;re done.&lt;/p&gt;



&lt;p&gt;To address this issue, I designed a script with several parts. First, it imports the essential PowerCLI module. Then, it connects to each vCenter from a list. After that, it cleverly retrieves the alarm status for each host and cluster. This way, we can stay focused on our work without getting overwhelmed by alerts and avoid missing critical alarms once our tasks are completed. It&amp;#8217;s a simple yet practical script that can significantly improve our workflow!&lt;/p&gt;



&lt;hr class="wp-block-separator has-alpha-channel-opacity"/&gt;



&lt;h2 class="wp-block-heading"&gt;Prerequisites&lt;/h2&gt;



&lt;h4 class="wp-block-heading"&gt;PowerCLI module&lt;/h4&gt;



&lt;p&gt;To install the PowerCLI module, use the following command.&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
    Install-Module -Name VMware.PowerCLI -Force -AllowClobber -Confirm:$false
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Afterward, run the following command to avoid SSL connection issues with vCenter.&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
Set-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode Multiple -Scope User -InvalidCertificateAction Ignore -Confirm:$false | Out-Null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The primary two properties which we are querying it are:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;The first property, &amp;#8220;ExtensionData.AlarmActionsEnabled,&amp;#8221; helps us determine whether the Alarm on the object is set to TRUE or FALSE. This means we can check if the Alarm is active or not, giving us valuable insights into its current state.&lt;/li&gt;



&lt;li&gt;The second property, &amp;#8220;ConnectionState,&amp;#8221; serves a different purpose. It allows us to check whether the Host is in maintenance mode or not. Specifically, we are interested in the &amp;#8220;Connected&amp;#8221; state, which tells us that the Host is up and running smoothly.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 class="wp-block-heading"&gt;Script functionality:&lt;/h2&gt;



&lt;ul&gt;
&lt;li&gt;Import the PowerCLI module&lt;/li&gt;



&lt;li&gt;Connects to each vCenter defined into the $vCenters array.&lt;/li&gt;



&lt;li&gt;For each ESXI host and Cluster found in the vCenter, it retrieves the value of the &amp;#8220;ExtensionData.AlarmActionsEnabled&amp;#8221; property.&lt;/li&gt;



&lt;li&gt;The script will export the results to a CSV file, making it super easy to analyze the data later. Specifically, it will focus on the objects where Alarms are Disabled or the ConnectionState is not Connected.&lt;/li&gt;
&lt;/ul&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# Ensure PowerCLI module is installed
if (-not (Get-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue)) {
    Install-Module -Name VMware.PowerCLI -Force -AllowClobber -Confirm:$false
}

# Import the PowerCLI module
Import-Module -Name VMware.PowerCLI -ErrorAction SilentlyContinue

# Set PowerCLI Configuration
Set-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode Multiple -Scope User -InvalidCertificateAction Ignore -Confirm:$false | Out-Null

# Get credentials from command line arguments
$Username = &amp;quot;&amp;quot;
$Password = &amp;quot;&amp;quot;

# Get the current date in yyyy.M.d format
$CurrentDate = Get-Date -Format 'yyyy.M.d'

# List of vCenters to connect to
$VCenters = @(
    &amp;quot;VCSA1&amp;quot;,
    &amp;quot;VCSA2&amp;quot;
)

foreach ($VCU in $VCenters) {
    # Connect to vCenter
    try {
        Connect-VIServer -Server $VCU -User $Username -Password $Password -ErrorAction Stop | Out-Null
    } catch &amp;#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {
        Write-Host &amp;quot;Cannot connect to $VCU with provided credentials&amp;quot; -ForegroundColor Red
        Continue
    } catch &amp;#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {
        Write-Host &amp;quot;Cannot connect to $VCU - check IP/FQDN&amp;quot; -ForegroundColor Red
        Continue
    } catch {
        Write-Host &amp;quot;Cannot connect to $VCU - Unknown error&amp;quot; -ForegroundColor Red
        Continue
    }

    $output = @()
    $hosts = Get-VMHost

    # Loop through each ESX host
    foreach ($ESXHost in $hosts) {
        $cluster = Get-Cluster -VMHost $ESXHost
        $alarms = $ESXHost.ExtensionData.AlarmActionsEnabled
        $alarma = if ($alarms -eq &amp;quot;True&amp;quot;) { &amp;quot;Enabled&amp;quot; } else { &amp;quot;Disabled&amp;quot; }

        $property = &amp;#x5B;ordered]@{
            &amp;quot;vCenter&amp;quot; = $VCU
            &amp;quot;Host&amp;quot; = $ESXHost.Name
            &amp;quot;Cluster&amp;quot; = $cluster
            &amp;quot;Alarms&amp;quot; = $alarma
            &amp;quot;ConnectionState&amp;quot; = $ESXHost.ConnectionState
        }
        $output += New-Object -TypeName PSObject -Property $property
    }

    # Loop through each cluster
    $clusters = Get-Cluster
    foreach ($ClusterClu in $clusters) {
        $alarmsClu = $ClusterClu.ExtensionData.AlarmActionsEnabled
        $alarmaClu = if ($alarmsClu -eq &amp;quot;True&amp;quot;) { &amp;quot;Enabled&amp;quot; } else { &amp;quot;Disabled&amp;quot; }

        $property = &amp;#x5B;ordered]@{
            &amp;quot;vCenter&amp;quot; = $VCU
            &amp;quot;Host&amp;quot; = &amp;quot;N/A&amp;quot;
            &amp;quot;Cluster&amp;quot; = $ClusterClu
            &amp;quot;Alarms&amp;quot; = $alarmaClu
            &amp;quot;ConnectionState&amp;quot; = &amp;quot;N/A&amp;quot;
        }
        $output += New-Object -TypeName PSObject -Property $property
    }

    # Export to CSV where Alarms are Disabled or ConnectionState is not Connected
    $output | Where-Object { $_.Alarms -eq &amp;quot;Disabled&amp;quot; -or $_.ConnectionState -ne &amp;quot;Connected&amp;quot; } |
        Export-Csv &amp;quot;C:\temp\MailReport\MailReport_$($CurrentDate)_SAM.csv&amp;quot; -NoTypeInformation -Append

    # Disconnect from vCenter
    Disconnect-VIServer -Server $VCU -Confirm:$false
}
&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_82" class="pvc_stats all  " data-element-id="82" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/check-the-alarms-on-all-esxi-hosts-via-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://blog.darrenjrobinson.com/?p=49216</guid><link>https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/</link><category>Identity and Access Management</category><category>PowerShell</category><category>1Password</category><title>Orchestrating 1Password with PowerShell</title><description>&lt;p&gt;Over two years ago I authored a PowerShell Module that enabled the automation of 1Password. I created the module because I wanted to be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Securely store locally a configuration for accessing a 1Password online Vault&lt;/li&gt;
&lt;li&gt;Automate authentication and retrieve a Session Token for interaction with a 1Password online Vault&lt;/li&gt;
&lt;li&gt;Automatically renew the Session Token if it expires&lt;/li&gt;
&lt;li&gt;Have multiple profile configurations for multiple 1Password Accounts&lt;/li&gt;
&lt;li&gt;Work in Windows PowerShell (5.x)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#8230; &lt;a href="https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/" class="read-more"&gt;keep reading &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/"&gt;Orchestrating 1Password with PowerShell&lt;/a&gt; appeared first on &lt;a href="https://blog.darrenjrobinson.com"&gt;darrenjrobinson - Bespoke Identity and Access Management Solutions&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Wed, 26 Jul 2023 21:00:00 Z</pubDate><comments>https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darren Robinson</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.darrenjrobinson.com/orchestrating-1password-with-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">49216</post-id></item><item><guid isPermaLink="false">https://powershell.ro/?p=84</guid><link>https://powershell.ro/import-custom-ssl-certificate-on-hpe-ilo-through-powershell-script/</link><category>Automation</category><category>Powershell</category><category>Uncategorized</category><category>VMWare</category><category>certificate</category><category>cmdlets</category><category>hpe ilo</category><category>pkcs7</category><category>powercli</category><title>Import custom SSL Certificate on HPE ILO through Powershell script</title><description>I want to present a PowerShell script created to facilitate the import of custom SSL Certificates on your ILO remote boards. After several days of dedicated work, I am confident that this script will significantly reduce manual efforts and help the certificate import process for your ILO boards. The script was tested on over 50 [&amp;#8230;]</description><pubDate>Wed, 26 Jul 2023 18:37:36 Z</pubDate><comments>https://powershell.ro/import-custom-ssl-certificate-on-hpe-ilo-through-powershell-script/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;I want to present a PowerShell script created to facilitate the import of custom SSL Certificates on your ILO remote boards. After several days of dedicated work, I am confident that this script will significantly reduce manual efforts and help the certificate import process for your ILO boards.&lt;/p&gt;



&lt;p&gt;The script was &lt;strong&gt;tested &lt;/strong&gt;on over &lt;strong&gt;50 ILOs simultaneously&lt;/strong&gt;, each with its pkcs7 file certificate. It demonstrated exceptional performance, smoothly importing the certificates for all ILOs directly.&lt;/p&gt;



&lt;p&gt;Script Functionality: The functionality of this PowerShell script is straightforward. To get started, simply copy all the pkcs7 files into the &amp;#8220;ImportCerts&amp;#8221; directory. The script will then take care of the rest:&lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;Export .CER Files: For each certificate found in the &amp;#8220;ImportCerts&amp;#8221; folder, the script will run the OpenSSL executable to export the corresponding .CER file into the &amp;#8220;Output&amp;#8221; directory.&lt;/li&gt;



&lt;li&gt;SSL Certificate Import: Taking the content of the .CER file, the script will make use of the PowerCLI cmdlet to establish a secure connection to the ILO using the specified credentials. Afterwards will import the SSL certificate onto the target ILO board.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;Once initiated, the script will perform its magic, connecting to each ILO, importing the SSL certificate, and then gracefully disconnecting. That&amp;#8217;s all there is to it! With this process, you can import multiple certificates, saving valuable time and effort on manual tasks.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
# Define input and output directories
$ImportDir = &amp;quot;C:\temp\InstallCert\ImportCERTS&amp;quot;
$ExportDir = &amp;quot;C:\temp\InstallCert\Output&amp;quot;

# Get a list of certificates from the import directory
$ImportCerts = Get-ChildItem -Path $ImportDir

# Load HPEiLOCmdlets module
Write-Host &amp;quot;Loading module: HPEiLOCmdlets&amp;quot;
Import-Module -Name &amp;quot;C:\Program Files\WindowsPowerShell\Modules\hpeilocmdlets.4.0.0\HPEiLOCmdlets.psd1&amp;quot;

# Set target ILO username and password
$targetILOUsername = &amp;quot;&amp;quot;
$targetILOPassword = &amp;quot;&amp;quot;

# Generate a date string for log file naming
$dateString = Get-Date -Format &amp;quot;yyyy-MM-dd_hh-mm-ss&amp;quot;

# Loop through each certificate in the import directory
foreach ($certificate in $ImportCerts) {
    $inputPath = $certificate.FullName
    $certName = $certificate.BaseName
    $tempCER = &amp;quot;$ExportDir\$certName&amp;quot; + &amp;quot;_temp.cer&amp;quot;
    $TempCer2 = &amp;quot;$ExportDir\$certName&amp;quot; + &amp;quot;_temp2.cer&amp;quot;
    $outputCER = &amp;quot;$ExportDir\$certName&amp;quot; + &amp;quot;.cer&amp;quot;
    
    # Use openssl to extract the certificate from pkcs7 format
    &amp;amp; &amp;quot;C:\temp\InstallCert\openssl\openssl.exe&amp;quot; pkcs7 -inform PEM -outform PEM -in $inputPath -print_certs -out $tempCER

    # Split the certificate bundle and find the specific certificate
    $certificateBundle = Get-Content $tempCER | Out-String
    $certificates = $certificateBundle -Split &amp;quot;(?&amp;lt;=&amp;quot; + &amp;quot;-----END CERTIFICATE-----&amp;quot; + &amp;#x5B;System.Environment]::NewLine + &amp;#x5B;System.Environment]::NewLine + &amp;quot;)&amp;quot;
    $certificate = $certificates | Where-Object { $_ -like &amp;quot;*$certName*&amp;quot; }
    $certificate | Set-Content -Path $TempCer2 -Encoding Ascii

    # Clean up temporary files
    Remove-Item $tempCER

    # Extract the individual certificate content
    $certContent = Get-Content $TempCer2 -Raw
    Remove-Item $TempCer2
    $start = &amp;quot;-----BEGIN CERTIFICATE-----&amp;quot;
    $end = &amp;quot;-----END CERTIFICATE-----&amp;quot;
    $startIndex = $certContent.IndexOf($start)
    $endIndex = $certContent.IndexOf($end, $startIndex + $start.Length)
    $cert = $certContent.Substring($startIndex + $start.Length, $endIndex - $startIndex - $start.Length)
    $certVariable = &amp;quot;-----BEGIN CERTIFICATE-----$cert-----END CERTIFICATE-----&amp;quot;
    $certVariable | Set-Content -Path $outputCER -Encoding Ascii

    # Connect to the target ILO using HPEiLOCmdlets and import the certificate
    Write-Host &amp;quot;`nConnecting using Connect-HPEiLO`n&amp;quot; -ForegroundColor Green
    $connect = Connect-HPEiLO -IP $certName -Username $targetILOUsername -Password $targetILOPassword -DisableCertificateAuthentication
    Import-HPEiLOCertificate -Connection $connect -Certificate $certVariable

    # Disconnect from ILO
    if ($connect -ne $null) {
        Write-Host &amp;quot;Disconnect using Disconnect-HPEiLO`n&amp;quot; -ForegroundColor Yellow
        $disconnect = Disconnect-HPEiLO -Connection $connect
        $disconnect | Format-List
        Write-Host &amp;quot;Connection disconnected successfully.`n&amp;quot;
    }
}

&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_84" class="pvc_stats all  " data-element-id="84" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/import-custom-ssl-certificate-on-hpe-ilo-through-powershell-script/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://powershell.ro/?p=75</guid><link>https://powershell.ro/check-the-ntp-server-on-all-esxi-hosts-via-powershell/</link><category>Automation</category><category>Powershell</category><category>VMWare</category><category>ntp server</category><category>ntp service</category><category>powercli</category><category>powershell</category><category>script</category><title>Check the NTP Server on all ESXi Hosts via Powershell</title><description>An effective approach for checking the NTP server and NTP Service on all ESXi hosts from a vCenter server is through a Powershell script. This Powershell script has been developed to perform the following tasks: To automate the process, the script can be configured to run as a Scheduled Task on a Windows server. Furthermore, [&amp;#8230;]</description><pubDate>Wed, 26 Jul 2023 18:32:37 Z</pubDate><comments>https://powershell.ro/check-the-ntp-server-on-all-esxi-hosts-via-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catalin Cristescu</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;An effective approach for checking the NTP server and NTP Service on all ESXi hosts from a vCenter server is through a Powershell script.&lt;/p&gt;



&lt;p&gt;This Powershell script has been developed to perform the following tasks:&lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;Establish a connection to a vCenter server.&lt;/li&gt;



&lt;li&gt;Query all the ESXi hosts to retrieve the configured NTP Server information.&lt;/li&gt;



&lt;li&gt;Query all the ESXi hosts to obtain the status of the NTP Service.&lt;/li&gt;



&lt;li&gt;Compile the gathered information into a list and dispatch it via mail to a designated distribution list.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;To automate the process, the script can be configured to run as a Scheduled Task on a Windows server.&lt;/p&gt;



&lt;p&gt;Furthermore, for scalability, the script can be modified with the option to set up a list of vCenters and iterate through them using a foreach loop in the script.&lt;/p&gt;



&lt;p class="has-text-align-center"&gt;&lt;h3 class="wp-block-heading has-text-align-center"&gt;Script&lt;/h3&gt;&lt;/p&gt;


&lt;div class="wp-block-syntaxhighlighter-code "&gt;&lt;pre class="brush: powershell; title: ; notranslate"&gt;
#requires -modules VMware.VimAutomation.Core
 
param (
    &amp;#x5B;CmdletBinding()]
    &amp;#x5B;Parameter(Mandatory = $true)]
    &amp;#x5B;string]$VCenter,
      
    &amp;#x5B;Parameter(Mandatory = $true)]
    &amp;#x5B;string]$Username,
      
    &amp;#x5B;Parameter(Mandatory = $true)]
    &amp;#x5B;string]$Password,
      
    &amp;#x5B;Parameter(Mandatory = $false)]
    &amp;#x5B;string]$Email
)
  
Import-Module -Name VMware.VimAutomation.Core -ErrorAction SilentlyContinue
Set-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode multiple -Scope User -InvalidCertificateAction ignore -Confirm:$false | Out-Null
  
# Connection to vCenter
try {
    Connect-VIServer -Server $VCenter -User $Username -Password $Password -ErrorAction Stop | Out-Null
}
catch &amp;#x5B;VMware.VimAutomation.ViCore.Types.V1.ErrorHandling.InvalidLogin] {
    Write-Host &amp;quot;Cannot connect to $VCenter with provided credentials&amp;quot; -ForegroundColor Red
    Continue
}
catch &amp;#x5B;VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.ViServerConnectionException] {
    Write-Host &amp;quot;Cannot connect to $VCenter - check IP/FQDN&amp;quot; -ForegroundColor Red
    Continue
}
catch {
    Write-Host &amp;quot;Cannot connect to $VCenter - Unknown error&amp;quot; -ForegroundColor Red
    Continue
}

$NTPdetails = Get-VMHost | Sort-Object Name | Select-Object Name, 
           @{Name=&amp;quot;NTPServer&amp;quot;;Expression={ $_ | Get-VMHostNtpServer }},
           @{Name=&amp;quot;ServiceStatus&amp;quot;;Expression={(Get-VMHostService -VMHost $_ | Where-Object {$_.key -eq &amp;quot;ntpd&amp;quot; }).Running }}


# Email global variables
    $ReportTime = Get-Date -Format yyyy.M.d
    $MailTitle = &amp;quot;NTP status from $vcenter&amp;quot;

    $SMTPServer = &amp;quot;SMTP_SERVER&amp;quot;
    $From = &amp;quot;noreply@youremail.com&amp;quot;
    $Timeout = &amp;quot;60&amp;quot;
    $Subject = &amp;quot;$MailTitle $((Get-Date).ToShortDateString())&amp;quot;
    $Message = New-Object System.Net.Mail.MailMessage
  
    $Body = $NTPdetails | ConvertTo-Html
    $Message.Subject = $Subject
    $Message.Body = $Body
    $Message.IsBodyHtml = $true
    $Message.To.Add($Email)
    $Message.From = $From
    $Message.Attachments.Add($AttachmentFile)
    $SMTP = New-Object System.Net.Mail.SmtpClient $SMTPServer
    $SMTP.Send($Message)
}

Disconnect-VIServer -Server $vcenter -Confirm:$false
&lt;/pre&gt;&lt;/div&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;&lt;p id="pvc_stats_75" class="pvc_stats all  " data-element-id="75" style=""&gt;&lt;i class="pvc-stats-icon medium" aria-hidden="true"&gt;&lt;svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="chart-bar" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chart-bar fa-w-16 fa-2x"&gt;&lt;path fill="currentColor" d="M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z" class=""&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/i&gt; &lt;img loading="lazy" decoding="async" width="16" height="16" alt="Loading" src="https://powershell.ro/wp-content/plugins/page-views-count/ajax-loader-2x.gif" border=0 /&gt;&lt;/p&gt;&lt;div class="pvc_clear"&gt;&lt;/div&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.ro/check-the-ntp-server-on-all-esxi-hosts-via-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://blog.darrenjrobinson.com/?p=49233</guid><link>https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/</link><category>Azure AD</category><category>Entra</category><category>Entra ID</category><category>Identity and Access Management</category><category>PowerShell</category><category>AzureAD</category><title>Entra ID Tenant ID &amp; Custom Domains PowerShell Module</title><description>&lt;p&gt;Buried in my &lt;a href="https://blog.darrenjrobinson.com/powershell-snippets-vol-4/" target="_blank" rel="noreferrer noopener"&gt;PowerShell Snippets Vol 4&lt;/a&gt; post from 2021 is the PowerShell script and a link to a PowerShell Module I authored named &lt;a href="https://github.com/darrenjrobinson/AzureADTenantID" target="_blank" rel="noreferrer noopener"&gt;AzureADTenantID&lt;/a&gt;. Its sole purpose was to take a domain name (e.g., darrenjrobinson.com) and lookup return any associated Azure AD (now Entra ID) TenantID.&amp;#8230; &lt;a href="https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/" class="read-more"&gt;keep reading &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/"&gt;Entra ID Tenant ID &amp;#038; Custom Domains PowerShell Module&lt;/a&gt; appeared first on &lt;a href="https://blog.darrenjrobinson.com"&gt;darrenjrobinson - Bespoke Identity and Access Management Solutions&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 21 Jul 2023 01:01:28 Z</pubDate><comments>https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darren Robinson</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.darrenjrobinson.com/entra-id-tenant-id-custom-domains-powershell-module/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">49233</post-id></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18223</guid><link>https://evotec.xyz/connect-mggraph-keyset-does-not-exist/</link><category>Microsoft Graph</category><category>PowerShell</category><category>connet-mggraph</category><category>graph</category><category>graph-sdk</category><category>microsoft graph</category><category>powershell</category><title>Connect-MgGraph: Keyset does not exist</title><description>&lt;p&gt;I had this little issue today when I tried to schedule the Microsoft Graph script to run as a service account on a certificate. To my surprise, even tho I had all permissions required, I was getting this error message: Connect-MgGraph: Keyset does not exist. Something that didn't show up for my user.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/connect-mggraph-keyset-does-not-exist/"&gt;Connect-MgGraph: Keyset does not exist&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Thu, 20 Jul 2023 07:07:41 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c712448" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c71243020"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71266f4361" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c712671 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c71266f4361"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7128103534"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;I had this little issue today when I tried to schedule the Microsoft Graph script to run as a service account on a certificate. To my surprise, even tho I had all permissions required, I was getting this error message: &lt;strong&gt;Connect-MgGraph: Keyset does not exist&lt;/strong&gt;. Something that didn't show up for my user.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7128103534{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7128103534{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7128103534{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7128103534{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7129624303"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="bBBpqud"&gt;&lt;img class="alignnone wp-image-18224 size-full" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd.png" alt="" width="1377" height="75" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd.png 1377w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-300x16.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-1024x56.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7a2ae8d8dd-768x42.png 768w" sizes="(max-width: 1377px) 100vw, 1377px" /&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7129624303{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7129624303{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7129624303{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7129624303{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c712a935247"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The message indicated my process has difficulty reaching the key of my chosen certificate. Trying to run the scheduled task with the highest privileges didn't change anything. Since &lt;strong&gt;Connect-MGGraph&lt;/strong&gt; doesn't support PFX files, you must upload the certificate to the &lt;strong&gt;Local Machine store&lt;/strong&gt; and refer to it via &lt;strong&gt;Thumbprint&lt;/strong&gt;.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c712a935247{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c712a935247{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c712a935247{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c712a935247{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c712cd1" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c712cc58421"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c712f2c6019" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c712f2e "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c712f2c6019"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-bug" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Fixing Connect-MgGraph: Keyset does not exist&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713235143"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;When using &lt;strong&gt;certificates as a standard user,&lt;/strong&gt; I usually do it in the following way:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713235143{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713235143{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713235143{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713235143{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71334f5056"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Connect-MgGraph -CertificateThumbprint '9135E5CF311C051A' -ClientId 'a7b8a419' -TenantId '5e94ad53'&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71334f5056{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71334f5056{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71334f5056{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71334f5056{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71348c5871"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;The problem is &amp;#8211; it only works for certificates in the user store. When you switch to &lt;strong&gt;Local Machine Store&lt;/strong&gt;, &lt;strong&gt;Connect-MGGraph&lt;/strong&gt; no longer sees the certificate, so you need to change to a different connection method.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71348c5871{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71348c5871{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71348c5871{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71348c5871{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7135b55045"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$Thumbprint = '9135E5CF'
$LocalMachineCert = Get-ChildItem -Path Cert:\LocalMachine -Recurse | Where-Object { $_.Thumbprint -eq $Thumbprint }
Connect-MgGraph -ClientId 'a7b8a419' -TenantId '5e94ad53' -Certificate $LocalMachineCert&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7135b55045{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7135b55045{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7135b55045{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7135b55045{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7136fd785"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;This way, we tell &lt;strong&gt;Connect-MgGaph&lt;/strong&gt; to use the &lt;strong&gt;LocalMachine&lt;/strong&gt; Certificate store, but while it worked for me when testing it using my account, things were not so great when trying it as a service account. Fortunately, there's an easy fix for that. We need to allow that particular service account access to private keys for that specific certificate.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7136fd785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7136fd785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7136fd785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7136fd785{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71384e884"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="MQCHOPd"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png"&gt;&lt;img class="alignnone wp-image-18227 size-full" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png" alt="" width="1245" height="555" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e.png 1245w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-300x134.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-1024x456.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b44f1057e-768x342.png 768w" sizes="(max-width: 1245px) 100vw, 1245px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71384e884{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71384e884{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71384e884{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71384e884{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7139505430"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Add a missing service account with proper permissions, and you're ready!&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7139505430{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7139505430{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7139505430{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7139505430{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713ab24746"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="LHQXTrJ"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png"&gt;&lt;img class="alignnone wp-image-18229 size-full" src="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png" alt="" width="1276" height="584" srcset="https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39.png 1276w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-300x137.png 300w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-1024x469.png 1024w, https://evotec.xyz/wp-content/uploads/2023/07/img_64b7b47b6fc39-768x351.png 768w" sizes="(max-width: 1276px) 100vw, 1276px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713ab24746{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713ab24746{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713ab24746{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713ab24746{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c713cbc2927"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Of course, you need to do it on your proper certificate, not the Razer Chroma SDK certificate, as shown in the screenshot.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c713cbc2927{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/connect-mggraph-keyset-does-not-exist/"&gt;Connect-MgGraph: Keyset does not exist&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=29140</guid><link>https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/</link><category>Microsoft</category><category>Automation</category><category>My Way</category><category>PowerShell</category><title>FIX: Import-Module Az.Accounts in Azure Automation sandbox</title><description>&lt;p&gt;FIX: The term &amp;#8216;AZ.ACCOUNTS CMDLET&amp;#8216; is not recognized as a name of a cmdlet, function, script file, or executable program I&amp;#8217;m getting several errors in an Azure Automation runbook job, all of which amount to the same thing. I made a seperate error messages section, because it&amp;#8217;s too much for the intro section! But the &amp;#8230; &lt;a href="https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: Import-Module Az.Accounts in Azure Automation sandbox&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/"&gt;FIX: Import-Module Az.Accounts in Azure Automation sandbox&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 14 Jul 2023 11:04:00 Z</pubDate><comments>https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/fix-import-module-az-accounts-in-azure-automation-sandbox/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=7077</guid><link>https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/</link><category>Learn</category><title>QuickFix: Cannot Start Microsoft Outlook. The set of Folder cannot be opened, using PowerShell</title><description>&lt;p&gt;Outlook users may face an issue when trying to connect to Exchange Server, where Outlook won&amp;#8217;t start and instead shows the following error message &amp;#8220;Cannot Start Microsoft Outlook. Cannot open the Outlook Window. The set of folders cannot be opened. The attempt to log on to Microsoft Exchange has failed&amp;#8220; In this post, you will...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/"&gt;QuickFix: Cannot Start Microsoft Outlook. The set of Folder cannot be opened, using PowerShell&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 07 Jul 2023 13:40:16 Z</pubDate><comments>https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/07/07/foldercannotbeopened/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7077</post-id></item><item><guid isPermaLink="false">4ff94561c4aaf2f6d6ca85ec:54265bcbe4b09ad45b272dbf:648be1d85ad34e0ff498a507</guid><link>http://poshsecurity.com/blog/installing-powershell-on-orange-pi-one</link><category>PowerShell</category><title>Installing PowerShell on Orange PI One</title><description>&lt;p&gt;Hi Everyone,&lt;/p&gt;&lt;p&gt;I was a long-term user of &lt;a href="https://www.monitor-io.com/"&gt;Monitor-io&lt;/a&gt;, and I was saddened to hear that had planned to shutdown their services on April 15, 2023. I was excited to hear that unlike many IoT vendors, Monitor-io had made the decision to provide an option for their customers to continue to use their devices in a standalone manner.&lt;/p&gt;











































  

    
  
    

      

      
        &lt;figure class="
              sqs-block-image-figure
              intrinsic
            "
        &gt;
          
        
        

        
          
            
          
            
                
                
                
                
                
                
                
                &lt;img data-stretch="false" data-image="https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png" data-image-dimensions="540x295" data-image-focal-point="0.5,0.5" alt="" data-load="false" elementtiming="system-image-block" src="https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1000w" width="540" height="295" sizes="(max-width: 640px) 100vw, (max-width: 767px) 100vw, 100vw" onload="this.classList.add(&amp;quot;loaded&amp;quot;)" srcset="https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/4ff94561c4aaf2f6d6ca85ec/1ac64dd7-6ca5-4010-b74a-6a3bf2df4b2e/monitor-io-e1534697753892.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs"&gt;

            
          
        
          
        

        
          
          &lt;figcaption class="image-caption-wrapper"&gt;
            &lt;p class=""&gt;A Monitor-io showing its local IP address&lt;/p&gt;
          &lt;/figcaption&gt;
        
      
        &lt;/figure&gt;
      

    
  


  


&lt;p&gt;The Monitor-io unit consists of an &lt;a href="http://www.orangepi.org/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-One.html"&gt;Orange PI One&lt;/a&gt; and an LCD screen. The Orange Pi One is features an ARM processor – H3 Quad-core Cortex-A7, 512mb of DDR, 10/100mpbs Ethernet, and supports up to 32Gb of storage via micro-SD card. The Cortex-A7 is based off the 32bit ARMv7 instruction set, for those familiar with the Raspberry Pi, this is the same instruction set as the Pi 2 Model B.&lt;/p&gt;&lt;p&gt;Monitor-io provided an image based upon &lt;a href="https://www.armbian.com/orange-pi-one/"&gt;Armbian&lt;/a&gt;, and a shell script (&lt;code&gt;netmonitor.sh&lt;/code&gt;) that provides basic ping checks to a list of targets listed in the &lt;code&gt;targets.conf&lt;/code&gt; file using &lt;code&gt;fping&lt;/code&gt;. The script updates the LCD display based upon the results from &lt;code&gt;fping&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Before I started, I wanted to get PowerShell running. PowerShell doesn’t officially support the Orange Pi One, but there is a shared architecture, so I hopped for the best managed to get PowerShell 7.3.4 up and running.&lt;/p&gt;&lt;p&gt;The process was very similar to &lt;a href="https://learn.microsoft.com/en-au/powershell/scripting/install/install-raspbian?view=powershell-7.3"&gt;Installing on Raspberry Pi OS&lt;/a&gt;, use the following shell commands to download, and install the package. You will need to change the URL to match the right PowerShell version that you want to install.&lt;/p&gt;&lt;pre&gt;&lt;code class="lang-sh"&gt;###################################
# Prerequisites

# Update package lists
sudo apt-get update

###################################
# Download and extract PowerShell

# Grab the latest tar.gz
wget https://github.com/PowerShell/PowerShell/releases/download/v7.3.4/powershell-7.3.4-linux-arm32.tar.gz

# Make folder to put powershell
mkdir ~/powershell

# Unpack the tar.gz file
tar -xvf ./powershell-7.3.4-linux-arm32.tar.gz -C ~/powershell

###################################
# Optional - Create a symbolic link to start PowerShell without specifing path to pwsh bindar
sudo ln -s ~/powershell/pwsh /usr/bin/pwsh&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I haven't fully tested and validated that everything is working, however items like &lt;code&gt;Invoke-WebRequest&lt;/code&gt;, and &lt;code&gt;Invoke-RestMethod&lt;/code&gt; both appear to function correctly. Most other basic commands also seem to be running without any issues.&lt;/p&gt;</description><pubDate>Sat, 17 Jun 2023 04:15:00 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kieran Jacobsen</dc:creator></item><item><guid isPermaLink="false">http://itluke.online/?p=6904</guid><link>https://itluke.online/2023/06/02/display-any-tree-with-powershell/</link><category>AD DS - Active Directory Domain Services</category><category>Powershell</category><category>Active Directory</category><category>Cmdlet</category><category>File System</category><category>Module</category><category>Registry</category><title>Display any tree with PowerShell</title><description>Display Active Directory, Registry, VMWare, File System, and more trees with PowerShell...</description><pubDate>Fri, 02 Jun 2023 16:11:39 Z</pubDate><comments>https://itluke.online/2023/06/02/display-any-tree-with-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://itluke.online/2023/06/02/display-any-tree-with-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><media:thumbnail url="https://itluke.files.wordpress.com/2023/06/show-tree.png" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><media:content url="https://itluke.files.wordpress.com/2023/06/show-tree.png" medium="image" xmlns:media="http://search.yahoo.com/mrss/">
			<media:title type="html">Show-Tree</media:title>
		</media:content><media:content url="https://0.gravatar.com/avatar/04d87969d7cbefc3b3d31e2c306f0535dff727fe4ce7748e6980b78652a0a35a?s=96&amp;d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&amp;r=G" medium="image" xmlns:media="http://search.yahoo.com/mrss/">
			<media:title type="html">fullenw1</media:title>
		</media:content></item><item><guid isPermaLink="false">https://dfinke.github.io/powershell,%20importexcel,%20excel%20tables,%20excel/2023/05/31/Excel-Tables-and-PowerShell-ImportExcel-A-Powerful-Combination-for-Data-Analysis</guid><link>https://dfinke.github.io/powershell,%20importexcel,%20excel%20tables,%20excel/2023/05/31/Excel-Tables-and-PowerShell-ImportExcel-A-Powerful-Combination-for-Data-Analysis.html</link><a10:author><a10:name /></a10:author><category>PowerShell, ImportExcel, Excel Tables, Excel</category><category>PowerShell, ImportExcel, Excel Tables, Excel</category><title>Excel Tables and PowerShell ImportExcel: A Powerful Combination for Data Analysis</title><description>Excel Tables and PowerShell Import-Excel</description><pubDate>Wed, 31 May 2023 10:00:00 Z</pubDate><a10:updated>2023-05-31T10:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershell,%20importexcel,%20excel%20tables,%20excel/2023/05/31/Excel-Tables-and-PowerShell-ImportExcel-A-Powerful-Combination-for-Data-Analysis.html">&lt;h1 id="excel-tables-and-powershell-import-excel"&gt;Excel Tables and PowerShell Import-Excel&lt;/h1&gt;

&lt;p&gt;The PowerShell ImportExcel module can create Excel Tables. You can apply table styles, add a totals row, and use structured references to include values from the table in formulae.&lt;/p&gt;

&lt;p&gt;To create a table you’ll need a list of data. The fields of the instances will become columns in the table.&lt;/p&gt;

&lt;p&gt;Let’s start with a small dataset containing the contributions to UK electricity generation by various classes of energy source.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ConvertFrom-Csv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sh"&gt;@"
Year, Coal, Oil, Natural Gas, Nuclear, Hydro, Wind/Solar, Other, Total
1996, 33.67, 3.87, 17.36, 22.18, 0.29, 0.04, 2.14, 79.55
1997, 28.30, 1.85, 21.57, 21.98, 0.38, 0.06, 2.29, 76.43
1998, 29.94, 1.70, 23.02, 23.44, 0.44, 0.08, 2.52, 81.14
1999, 25.51, 1.54, 27.13, 22.22, 0.46, 0.07, 2.79, 79.72
2000, 28.67, 1.55, 27.91, 19.64, 0.44, 0.08, 2.93, 81.21
2001, 31.61, 1.42, 26.87, 20.77, 0.35, 0.08, 2.91, 84.01
2002, 29.63, 1.29, 28.33, 20.10, 0.41, 0.11, 3.13, 83.00
2003, 32.54, 1.19, 27.85, 20.04, 0.28, 0.11, 3.93, 85.95
2004, 31.31, 1.10, 29.25, 18.16, 0.42, 0.17, 4.15, 84.57
2005, 32.58, 1.31, 28.52, 18.37, 0.42, 0.25, 5.23, 86.68
2006, 35.94, 1.43, 26.78, 17.13, 0.40, 0.36, 5.02, 87.06
2007, 32.92, 1.16, 30.60, 14.04, 0.44, 0.46, 4.68, 84.28
2008, 29.96, 1.58, 32.40, 11.91, 0.44, 0.61, 4.67, 81.58
2009, 24.66, 1.51, 30.90, 15.23, 0.45, 0.80, 4.87, 78.42
2010, 25.56, 1.18, 32.43, 13.93, 0.31, 0.89, 5.11, 79.41
2011, 26.03, 0.78, 26.58, 15.63, 0.49, 1.39, 5.62, 76.52
2012, 34.33, 0.73, 18.62, 15.21, 0.46, 1.82, 6.07, 77.24
2013, 31.33, 0.59, 17.70, 15.44, 0.40, 2.61, 6.45, 74.52
2014, 24.01, 0.55, 18.73, 13.85, 0.51, 3.10, 7.73, 68.48
2015, 18.34, 0.61, 18.28, 15.48, 0.54, 4.11, 9.36, 66.72
2016, 7.53, 0.58, 25.63, 15.41, 0.46, 4.09, 9.96, 63.67
2017, 5.55, 0.54, 24.60, 15.12, 0.51, 5.25, 10.13, 61.71
2018, 4.24, 0.49, 23.51, 14.06, 0.47, 5.98, 11.13, 59.88
2019, 1.85, 0.39, 23.45, 12.09, 0.51, 6.56, 11.35, 56.19
2020, 1.47, 0.36, 19.98, 10.72, 0.59, 7.61, 11.65, 52.38
2021, 1.67, 0.41, 21.83, 9.90, 0.47, 6.60, 12.12, 53.01
"@&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Export-Excel&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="powershell-gets-it-done"&gt;PowerShell Gets it Done&lt;/h2&gt;

&lt;p&gt;The resulting Excel file contains a worksheet with the data in a table, and more. The &lt;code class="language-plaintext highlighter-rouge"&gt;Export-Excel&lt;/code&gt; function does all the work for you. It has a lot of options, but the defaults are pretty good.&lt;/p&gt;

&lt;p&gt;Here are what the defaults look like.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/ExcelTables/FullDataSet.png" alt="Alt text" /&gt;&lt;/p&gt;

&lt;p&gt;The Export-Excel function does several things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Takes the object(s) passed to it, created by the &lt;code class="language-plaintext highlighter-rouge"&gt;ConvertFrom-CSV&lt;/code&gt; function, and creates a worksheet in a new workbook. Notice the property names are the column headers.&lt;/li&gt;
  &lt;li&gt;Creates a table from the data.&lt;/li&gt;
  &lt;li&gt;Formats the table with a style, here you see it is Zebra stripped.&lt;/li&gt;
  &lt;li&gt;Notice the drop-down arrows in the column headers. These allow you to filter the data.&lt;/li&gt;
  &lt;li&gt;Finally, the columns are sized to fit the data. The &lt;code class="language-plaintext highlighter-rouge"&gt;Import-Excel&lt;/code&gt; handles this for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="getting-setup"&gt;Getting Setup&lt;/h2&gt;

&lt;p&gt;To use the ImportExcel module you’ll need to install it. The easiest way is to use the PowerShell Gallery.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ImportExcel&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want more details on the module, check out the &lt;a href="https://github.com/dfinke/ImportExcel"&gt;ImportExcel GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="upcoming"&gt;Upcoming&lt;/h2&gt;

&lt;p&gt;I’ll post more to answer things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How to create after the fact.&lt;/li&gt;
  &lt;li&gt;How to customize a table.&lt;/li&gt;
  &lt;li&gt;How to create a table on a different part of the worksheet.&lt;/li&gt;
&lt;/ul&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10976</guid><link>https://devdojo.com/hcritter/powershell-performance-test-like-and-equals-string-comparison-methods</link><author>Christian Ritter</author><category>performance</category><category>powershell</category><category>where</category><category>equals</category><category>eq</category><category>like</category><title>PowerShell Performance-Test: Like and Equals string comparison methods.</title><description>&lt;h4 id="when-using-powershell-many-users-often-rely-on-the-like-comparison-in-a-where-statement-for-querying-data"&gt;When using PowerShell, many users often rely on the like comparison in a where statement for querying data.&lt;/h4&gt;
&lt;p&gt;However, there is an alternative method that can be faster, especially when searching for strings that start with specific letters. This method involves using the 'equals' comparison instead.&lt;/p&gt;
&lt;p&gt;To begin, let's create some data to query. I have generated a list of '1048576' words, each consisting of 20 characters:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$BunchOfWords&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(
    (&lt;span class="hljs-number"&gt;1&lt;/span&gt;..&lt;span class="hljs-number"&gt;1&lt;/span&gt;mb).ForEach({
        &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Count&lt;/span&gt; &lt;span class="hljs-number"&gt;20&lt;/span&gt;).ForEach({
            [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$PSItem&lt;/span&gt;
        }) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;''&lt;/span&gt;
    })
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we will perform queries on this list to find words that start with the letter 'w', using both the like and equals methods. We can use the first element in the string array, '$PSItem[0]', to achieve this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#Where method with -eq&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$W2&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$BunchOfWords&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;where-Object&lt;/span&gt;{&lt;span class="hljs-variable"&gt;$psitem&lt;/span&gt;[&lt;span class="hljs-number"&gt;0&lt;/span&gt;] &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-string"&gt;"W"&lt;/span&gt;}
&lt;span class="hljs-comment"&gt;#Where method with -like&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$W&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$BunchOfWords&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Where-Object&lt;/span&gt;{&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-like&lt;/span&gt; &lt;span class="hljs-string"&gt;"W*"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To query words with multiple specific characters, we can utilize the 'Substring()' method on '$PSItem':&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#Where method with -eq (Substring)&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$WED2&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$BunchOfWords&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;where-Object&lt;/span&gt;{&lt;span class="hljs-variable"&gt;$psitem&lt;/span&gt;.Substring(&lt;span class="hljs-number"&gt;0&lt;/span&gt;,&lt;span class="hljs-number"&gt;3&lt;/span&gt;) &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-string"&gt;"WED"&lt;/span&gt;}
&lt;span class="hljs-comment"&gt;#Where method with -like&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$WED&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$BunchOfWords&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Where-Object&lt;/span&gt;{&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-like&lt;/span&gt; &lt;span class="hljs-string"&gt;"WED*"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, let's examine the results:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="left"&gt;RuntimeMS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SingeLetter EQ StringArray pos 0&lt;/td&gt;
&lt;td align="left"&gt;13350&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SingeLetter like Query&lt;/td&gt;
&lt;td align="left"&gt;16739&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MultipleLetter EQ Substring&lt;/td&gt;
&lt;td align="left"&gt;14713&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MultipleLetter like Query&lt;/td&gt;
&lt;td align="left"&gt;17835&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can observe, the 'equals' comparison method is consistently around 3 seconds faster when dealing with our large list of words. This holds true even when utilizing a substring in the multiple letter test.&lt;/p&gt;
&lt;p&gt;That concludes our performance test.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Tue, 30 May 2023 02:18:16 -0700</pubDate></item><item><guid isPermaLink="false">https://evotec.xyz/?p=18093</guid><link>https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/</link><category>Active Directory</category><category>PowerShell</category><category>Windows</category><category>active directory</category><category>ad</category><category>dsinternals</category><category>html</category><category>password quality</category><category>passwordsolution</category><category>powershell</category><category>scan</category><category>security</category><title>Strengthening Password Security in Active Directory: A PowerShell-Powered Approach</title><description>&lt;p&gt;PasswordSolution uses the DSInternals PowerShell module to gather Active Directory hashes and then combines that data into a prettified report. If you have ever used DSInternals, you know that while very powerful, it comes with raw data that is hard to process and requires some skills to get it into a state that can be shown to management or security.&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/"&gt;Strengthening Password Security in Active Directory: A PowerShell-Powered Approach&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 28 May 2023 14:40:25 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Przemyslaw Klys</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div class="wpb-content-wrapper"&gt;&lt;div id="vc_row-665370c71622f" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c716218218"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7164756282" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c716478 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c7164756282"&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7166c11250"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;Active Directory&lt;/strong&gt; plays a central role for many organizations: those with twenty users and those with thousands of them. While everyone is looking at &lt;strong&gt;Azure AD&lt;/strong&gt; as a replacement, it will not happen for most organizations for a very long time, and most organizations will stay in a hybrid environment. Over recent years there was a push to split the roles in Active Directory so that Administrators don't use their standard account to manage &lt;strong&gt;Active Directory&lt;/strong&gt; but have their particular account for different Tier to enhance security. Users were also pushed to make sure they use more complicated passwords, changed less often. Suppose your organization is lucky enough to implement this correctly and has users and administrators who care. In that case, you now have &lt;strong&gt;Active Directory&lt;/strong&gt; with &lt;strong&gt;unique&lt;/strong&gt;, &lt;strong&gt;complex passwords&lt;/strong&gt; or an even better password-less environment. If you're less lucky, your &lt;strong&gt;Admins&lt;/strong&gt; use the same passwords for all their &lt;strong&gt;AD&lt;/strong&gt; accounts, whether this is to open an email or update Active Directory Schema. On the other hand, your users don't care at all and often use the same password you gave them the first day, and once it expires, they ask for another reset and continue using what is provided to them. &lt;a href="https://github.com/EvotecIT/PasswordSolution"&gt;&lt;strong&gt;PasswordSolution&lt;/strong&gt;&lt;/a&gt; module can help you find those people and try to reason with them to enhance your company's security posture.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7166c11250{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7166c11250{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7166c11250{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7166c11250{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71682a3618"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Today I would like to offer you an easy way to verify whether your environment password posture is good enough or requires some work. I wrote a PowerShell module called &lt;a href="https://github.com/EvotecIT/PasswordSolution"&gt;PasswordSolution&lt;/a&gt;, which has two main features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enterprise ready, password notifications to users, service account owners, and administrators when their password expires (&lt;strong&gt;not part of this blog post&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Analyze password quality by providing information on the usage of &lt;strong&gt;Duplicate Passwords&lt;/strong&gt;, &lt;strong&gt;Weak Passwords&lt;/strong&gt;, &lt;strong&gt;Empty Passwords&lt;/strong&gt;, &lt;strong&gt;Clear Text Passwords&lt;/strong&gt;, &lt;strong&gt;LMHashes&lt;/strong&gt;, and other data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/EvotecIT/PasswordSolution"&gt;&lt;strong&gt;PasswordSolution&lt;/strong&gt;&lt;/a&gt; uses the &lt;a href="https://github.com/MichaelGrafnetter/DSInternals"&gt;&lt;strong&gt;DSInternals&lt;/strong&gt;&lt;/a&gt; PowerShell module to gather &lt;strong&gt;Active Directory&lt;/strong&gt; hashes and then combines that data into a prettified report. If you have ever used &lt;strong&gt;DSInternals&lt;/strong&gt;, you know that while very powerful, it comes with raw data that is hard to process and requires some skills to get it into a state that can be shown to management or security.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71682a3618{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71682a3618{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71682a3618{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71682a3618{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c716aa0" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c716a952924"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c716ced9941" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c716cf0 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c716ced9941"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-key" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;TL;DR - Too long; didn't read summary&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c716fe02813"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Here's an &lt;strong&gt;HTML-based&lt;/strong&gt; report from my test Active Directory to give you a taste of what &lt;strong&gt;PasswordSolution&lt;/strong&gt; can offer. The report is split into five sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Summary for detected issues by &lt;strong&gt;DSInternals&lt;/strong&gt; along with chart with distinct information on enabled vs. disabled accounts&lt;/li&gt;
&lt;li&gt;A list of all users in &lt;strong&gt;Active Directory&lt;/strong&gt; and preliminary information about the account such as whether the user is enabled, last login date, last password date change, password never expires, all the detections around weak passwords, duplicate password groups, &lt;strong&gt;AES Keys&lt;/strong&gt; missing, &lt;strong&gt;DES Encryption&lt;/strong&gt;, &lt;strong&gt;LMHash&lt;/strong&gt; usage, &lt;strong&gt;Kerberoastable&lt;/strong&gt; detection, who's the manager of the user, and whether that manager is active or not. The table is fully exportable to &lt;strong&gt;Excel&lt;/strong&gt; and &lt;strong&gt;CSV&lt;/strong&gt; and can sort and filter.&lt;/li&gt;
&lt;li&gt;Summary for &lt;strong&gt;Duplicate Password Groups&lt;/strong&gt; where each group is a separate line in a table with information on whether that password is also a weak password, which users are in that group, and from which country.&lt;/li&gt;
&lt;li&gt;The fourth section provides country/continent maps/tables for increased analysis of Duplicate Password Groups or Weak Passwords.&lt;/li&gt;
&lt;li&gt;The final section is just a log output from a given run. The same that you would see while the script runs in a console.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's what the output looks like:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c716fe02813{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c716fe02813{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c716fe02813{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c716fe02813{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7171477321"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="zeHacNr"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508.png"&gt;&lt;img class="alignnone wp-image-18102 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1024x802.png" alt="" width="1024" height="802" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1024x802.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-300x235.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-768x602.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508-1536x1203.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb1e87508.png 1823w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7171477321{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7171477321{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7171477321{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7171477321{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7172605237"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="GztBCLa"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667.png"&gt;&lt;img class="alignnone wp-image-18104 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1024x668.png" alt="" width="1024" height="668" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1024x668.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-300x196.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-768x501.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667-1536x1001.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fb6585667.png 1819w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7172605237{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7172605237{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7172605237{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7172605237{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7173764900"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Please NOTE that &lt;strong&gt;Duplicate Password Groups&lt;/strong&gt; are essentially two or more accounts with the same passwords. &lt;strong&gt;Weak passwords&lt;/strong&gt; are in their clear text form that is usually handed over to your users by your Service Desk or any other process you have in your company. Those can also be passwords used over the years as solid passwords that users adopted for their needs thinking they will be safe.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7173764900{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7173764900{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7173764900{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7173764900{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7174749246"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="UMxYfXp"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c.png"&gt;&lt;img class="alignnone wp-image-18106 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1024x658.png" alt="" width="1024" height="658" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1024x658.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-300x193.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-768x494.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c-1536x987.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fba62510c.png 1797w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7174749246{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7174749246{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7174749246{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7174749246{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71756e2389"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="hFPxRyB"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f.png"&gt;&lt;img class="alignnone wp-image-18110 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1024x387.png" alt="" width="1024" height="387" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1024x387.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-300x114.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-768x291.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f-1536x581.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fc4a3c34f.png 1821w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71756e2389{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71756e2389{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71756e2389{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71756e2389{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71775a6016"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="XlkSVFz"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16.png"&gt;&lt;img class="alignnone wp-image-18124 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1024x593.png" alt="" width="1024" height="593" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1024x593.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-300x174.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-768x445.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16-1536x890.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473107390e16.png 1819w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71775a6016{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71775a6016{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71775a6016{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71775a6016{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71796a7477"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="XQqUezN"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095.png"&gt;&lt;img class="alignnone wp-image-18114 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1024x699.png" alt="" width="1024" height="699" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1024x699.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-300x205.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-768x524.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095-1536x1048.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_6472fcad19095.png 1823w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71796a7477{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71796a7477{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71796a7477{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71796a7477{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c717c8a" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c717c778933"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c717e871398" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c717e89 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c717e871398"&gt;&lt;div class="vc_message_box vc_message_box-standard vc_message_box-rounded vc_color-warning vc_do_message" &gt;&lt;div class="vc_message_box-icon"&gt;&lt;i class="fas fa-exclamation"&gt;&lt;/i&gt;&lt;/div&gt;&lt;p&gt;Please consult your &lt;strong&gt;security department&lt;/strong&gt; before running this tool for approval. It's playing with user password hashes which may be against your company rules. Before running it on production, please test it in your test environment to understand what it's doing!&lt;/p&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7182c85777"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;DSInternals&lt;/strong&gt; lights up your security tools like a Christmas tree. Before installing and running the modules below, please understand what it's doing, review sources, and contact your internal security department before running this on production. All the heavy lifting done by &lt;strong&gt;DSInternals&lt;/strong&gt; (exporting of hashes and first analysis) requires special rights in Active Directory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Replicating Directory Changes All&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Alternatively, you can use &lt;strong&gt;Domain Admin/Enterprise Admin&lt;/strong&gt;, which is unnecessary and discouraged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;PasswordSolution&lt;/strong&gt; only queries AD as a standard user to fill the holes that DSInternals doesn't care about. Password solution goes thru multiple steps, but simplified way to understand what it's doing behind the curtains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;Get-ADForest&lt;/strong&gt; (ActiveDirectory module) to get forest information&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;Get-ADDomain&lt;/strong&gt; (ActiveDirectory module) to obtain domain information&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;Get-ADUser&lt;/strong&gt; (ActiveDirectory module) from all domains in a forest&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;Get-ADObject&lt;/strong&gt; (ActiveDirectory module) to get contacts for managers&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;Get-ADReplAccount -All&lt;/strong&gt; (DSInternals module) to get replication data from AD&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;Test-PasswordQuality&lt;/strong&gt; (DSInternals module) on that data to get details about what's wrong&lt;/li&gt;
&lt;li&gt;Keep in mind that while, at this stage, hashes of the accounts are available in the module, we are not doing anything to them and use &lt;strong&gt;Test-PasswordQuality&lt;/strong&gt; data output instead.&lt;/li&gt;
&lt;li&gt;Merge data from all the above commands and mash them into a pretty HTML report using &lt;strong&gt;PSWriteHTML&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it. It also means to run this tool; you will need the &lt;strong&gt;RSAT Active Directory&lt;/strong&gt; module. It's advised to run it on a Tier 0 server, not a Domain Controller, with just enough permissions to get it up and running. The machine doesn't require internet, and there's no data transfer anywhere. The online switch below is only for &lt;strong&gt;CSS/JS&lt;/strong&gt; code and nothing else.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7182c85777{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7182c85777{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7182c85777{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7182c85777{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;div class="vc_message_box vc_message_box-standard vc_message_box-rounded vc_color-warning vc_do_message" &gt;&lt;div class="vc_message_box-icon"&gt;&lt;i class="fas fa-exclamation"&gt;&lt;/i&gt;&lt;/div&gt;&lt;p&gt;Please consult your &lt;strong&gt;security department&lt;/strong&gt; before running this tool for approval. It's playing with user password hashes which may be against your company rules. Before running it on production, please test it in your test environment to understand what it's doing!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c71861c" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c7186119783"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7187e24860" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c7187e4 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c7187e24860"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-cloud-download-alt" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Installing PasswordSolution and DSIntenals&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718acd1781"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;&lt;strong&gt;PasswordSolution&lt;/strong&gt; is very simple to use and get it up and running in your environment. All you have to do is installed two &lt;strong&gt;PowerShell&lt;/strong&gt; modules and run a single command.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718acd1781{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718acd1781{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718acd1781{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718acd1781{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718bed7392"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Install-Module PasswordSolution -Verbose
Install-Module DSInternals -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718bed7392{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718bed7392{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718bed7392{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718bed7392{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718d042781"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Alternatively, if you don't have internet access on the machine you will be running it on, you can save the modules to a local folder and then move them to another device.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718d042781{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718d042781{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718d042781{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718d042781{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718e04201"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;mkdir C:\DownloadModules
Save-Module PasswordSolution -Path C:\DownloadModules -Verbose
Save-Module DSInternals -Path C:\DownloadModules -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718e04201{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718e04201{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718e04201{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718e04201{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c718f0b9875"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="pUtStzc"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d.png"&gt;&lt;img class="alignnone wp-image-18117 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1024x288.png" alt="" width="1024" height="288" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d-1536x432.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647306d13af3d.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c718f0b9875{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7190078785"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Remember that while you download &lt;a href="https://github.com/EvotecIT/PasswordSolution"&gt;PasswordSolution&lt;/a&gt;, actually two more &lt;strong&gt;PowerShell&lt;/strong&gt; modules will download. One is &lt;a href="https://github.com/EvotecIT/PSWriteHTML"&gt;PSWriteHTML&lt;/a&gt;, responsible for the pretty &lt;strong&gt;HTML&lt;/strong&gt; output you see above. It's effortless to build HTML reports with it, just in case you would like to use it for your purpose. The other one is &lt;a href="https://github.com/EvotecIT/Mailozaurr"&gt;Mailozaurr&lt;/a&gt;, which replaces the built-in &lt;strong&gt;Send-MailMessage&lt;/strong&gt; with a modern approach supporting &lt;strong&gt;oAuth2&lt;/strong&gt;, &lt;strong&gt;Microsoft Graph&lt;/strong&gt;, &lt;strong&gt;SendGrid&lt;/strong&gt;, and other features. While it's not used during the &lt;strong&gt;Password Quality&lt;/strong&gt; scan, it's used by the password notification option, so it's an integral part of this module. Once you have downloaded all required modules, copy them to &lt;strong&gt;C:\Program Files\WindowsPowerShell\Modules&lt;/strong&gt; on your target server for easy usage.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7190078785{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7190078785{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7190078785{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7190078785{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c71923f" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c7192342633"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c7194198137" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c71941b "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c7194198137"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-running" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Running Password Quality Scan in Active Directory&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71970c6831"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Once you have the required modules installed, using &lt;strong&gt;PasswordSolution&lt;/strong&gt; is super easy. It's just one command with multiple parameters that enable or disable functionality. While you could type &lt;strong&gt;Show-PasswordQuality&lt;/strong&gt; in the console and just let it run, adding additional parameters to control this process is advised.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71970c6831{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71970c6831{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71970c6831{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71970c6831{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71983d4195"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="NyqMbws"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d.png"&gt;&lt;img class="alignnone wp-image-18120 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-1024x441.png" alt="" width="1024" height="441" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-1024x441.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-300x129.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d-768x331.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_64730a2e3991d.png 1436w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71983d4195{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71983d4195{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71983d4195{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71983d4195{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c7199669518"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Show-PasswordQuality -FilePath $PSScriptRoot\Reporting\PasswordQuality.html -Online -WeakPasswords "Test1", "Test2", "Test3" -Verbose -SeparateDuplicateGroups -AddWorldMap&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7199669518{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7199669518{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c7199669518{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c7199669518{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719a9a1348"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Or, if you prefer, a more readable method using SPLAT.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719a9a1348{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719c312280"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$showPasswordQualitySplat = @{
    FilePath                = "$PSScriptRoot\Reporting\PasswordQuality_$(Get-Date -f yyyy-MM-dd_HHmmss).html"
    WeakPasswords           = "Test1", "Test2", "Test3", 'February2023!#!@ok', $Passwords | ForEach-Object { $_ }
    SeparateDuplicateGroups = $true
    PassThru                = $true
    AddWorldMap             = $true
    LogPath                 = "$PSScriptRoot\Logs\PasswordQuality_$(Get-Date -f yyyy-MM-dd_HHmmss).log"
    Online                  = $true
    LogMaximum              = 5
}

Show-PasswordQuality @showPasswordQualitySplat&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719c312280{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719c312280{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719c312280{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719c312280{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719d732614"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Additional parameters allow you to &lt;strong&gt;specify weak passwords&lt;/strong&gt;, whether to enable &lt;strong&gt;separate duplicate groups&lt;/strong&gt; or &lt;strong&gt;add a world map&lt;/strong&gt; (if you happen to have an organization spread over multiple countries). You can also use &lt;strong&gt;Verbose&lt;/strong&gt; and &lt;strong&gt;PassThru&lt;/strong&gt; parameters to see more of what is happening while the scan is in progress and get raw data you can automate.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719d732614{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719d732614{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719d732614{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719d732614{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719e742054"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Show-PasswordQuality -FilePath C:\Temp\PasswordQuality.html -Online -WeakPasswords "Test1", "Test2", "Test3" -Verbose -SeparateDuplicateGroups -AddWorldMap -PassThru&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719e742054{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719e742054{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719e742054{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719e742054{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c719fa46309"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="ieHpntE"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e.png"&gt;&lt;img class="alignnone wp-image-18132 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1024x288.png" alt="" width="1024" height="288" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e-1536x432.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312726723e.png 1918w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719fa46309{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719fa46309{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c719fa46309{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c719fa46309{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a0b24705"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="vHPLXgx"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png"&gt;&lt;img class="alignnone wp-image-18134 size-full" src="https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png" alt="" width="1918" height="539" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe.png 1918w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-300x84.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-1024x288.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-768x216.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_6473128d4c8fe-1536x432.png 1536w" sizes="(max-width: 1918px) 100vw, 1918px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a0b24705{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a20f5208"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="oHpEhYp"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png"&gt;&lt;img class="alignnone wp-image-18136 size-full" src="https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png" alt="" width="1918" height="654" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967.png 1918w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-300x102.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-1024x349.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-768x262.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647312b7da967-1536x524.png 1536w" sizes="(max-width: 1918px) 100vw, 1918px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a20f5208{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a314743"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Please note that the &lt;strong&gt;ONLINE&lt;/strong&gt; switch you see in the examples has nothing to do with the requirement of being &lt;strong&gt;online&lt;/strong&gt; to run the password quality scan. It simply instructs &lt;strong&gt;PSWriteHTML&lt;/strong&gt; to use &lt;strong&gt;CDN&lt;/strong&gt; for &lt;strong&gt;JS&lt;/strong&gt; and &lt;strong&gt;CSS&lt;/strong&gt; libraries. If the &lt;strong&gt;ONLINE&lt;/strong&gt; switch is skipped, it bundles all required &lt;strong&gt;CSS/JS&lt;/strong&gt; code into a single &lt;strong&gt;HTML&lt;/strong&gt;, making the report about &lt;strong&gt;3MB bigger&lt;/strong&gt;. This means instead of &lt;strong&gt;CDN&lt;/strong&gt; links:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a314743{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a314743{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a314743{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a314743{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a43b934"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="LUJoOOD"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0.png"&gt;&lt;img class="alignnone wp-image-18139 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1024x514.png" alt="" width="1024" height="514" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1024x514.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-300x151.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-768x386.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0-1536x772.png 1536w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313a5e74f0.png 1877w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a43b934{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a43b934{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a43b934{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a43b934{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a5972530"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;You get unreadable HTML source:&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a5972530{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a5972530{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a5972530{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a5972530{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71a6da6973"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p id="bQduYzY"&gt;&lt;a href="https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0.png"&gt;&lt;img class="alignnone wp-image-18141 size-large" src="https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-1024x420.png" alt="" width="1024" height="420" srcset="https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-1024x420.png 1024w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-300x123.png 300w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0-768x315.png 768w, https://evotec.xyz/wp-content/uploads/2023/05/img_647313c88f4a0.png 1331w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/a&gt;&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71a6da6973{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c71aa7b" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c71aa6d7466"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71ac774963" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c71ac79 "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c71ac774963"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-random" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Generating a list of weak passwords&lt;/h3&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71af1f3938"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;If you are struggling to provide weak passwords that your users may use, here's a sample weak password generator that will generate passwords such as &lt;strong&gt;January2023!&lt;/strong&gt; Or &lt;strong&gt;February2020@&lt;/strong&gt;, that would pass the &lt;strong&gt;complexity check built-in in Active Directory&lt;/strong&gt;. It generates about &lt;strong&gt;180k&lt;/strong&gt; passwords that will be verified against your user's passwords.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71af1f3938{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b03f5506"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;$Months = @(
    # english
    "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
    # polish
    "Styczen", "Luty", "Marzec", "Kwiecien", "Maj", "Czerwiec", "Lipiec", "Sierpien", "Wrzesien", "Pazdziernik", "Listopad", "Grudzien"
    # spanish
    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'
    # german
    "Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"
    # russian
    "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"
    # french
    'Janvier', 'Fevrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Decembre'
) | Sort-Object -Unique
$Numbers = 0..9
$Years = 2020..2023
$SpecialChar = @("!", "@", "#", "$", "%", "^", "&amp;", "*", "(", ")", "_", "-", "+", "=", "[", "]", "{", "}", "|", "\")

$Passwords = foreach ($Year in $Years) {
    Write-Color -Text "Year: ", $Year -Color Yellow, White
    $YearPasswords = foreach ($month in $months) {
        foreach ($number in $numbers) {
            foreach ($special in $SpecialChar) {
                $month + $Year.ToString() + $number.ToString() + $special
                $Year.ToString() + $month + $number.ToString() + $special
                $month + $Year.ToString() + $special
            }
        }
    }
    Write-Color -Text "Year: ", $Year, " passwords created: ", $YearPasswords.Count -Color Yellow, White
    $YearPasswords
}
$Passwords.Count&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b03f5506{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b19d6919"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;Once generated, you can use the &lt;strong&gt;$Passwords&lt;/strong&gt; variable to pass as weak passwords to the &lt;strong&gt;Show-PasswordQuality&lt;/strong&gt; command.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b19d6919{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="vc_row-665370c71b3b5" class="vc_row wpb_row vc_row-fluid thegem-custom-665370c71b3ab6404"&gt;&lt;div class="wpb_column vc_column_container vc_col-sm-12 thegem-custom-665370c71b58b8060" &gt;&lt;div class="vc_column-inner thegem-custom-inner-665370c71b58d "&gt;&lt;div class="wpb_wrapper thegem-custom-665370c71b58b8060"&gt;&lt;div class="vc_separator wpb_content_element vc_separator_align_left vc_sep_width_100 vc_sep_pos_align_center vc_sep_color_grey vc_separator-has-text"&gt;&lt;span class="vc_sep_holder vc_sep_holder_l"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;div
	class="vc_icon_element vc_icon_element-outer vc_icon_element-align-left" &gt;
	&lt;div class="vc_icon_element-inner vc_icon_element-color-blue vc_icon_element-size-md vc_icon_element-style- vc_icon_element-background-color-grey"&gt;
		&lt;span class="vc_icon_element-icon fas fa-chalkboard-teacher" &gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Installing / Updating PasswordSolution&lt;/h2&gt;&lt;span class="vc_sep_holder vc_sep_holder_r"&gt;&lt;span  class="vc_sep_line"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b80a3849"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;PasswordSolution is available from &lt;a href="https://www.powershellgallery.com/packages/PasswordSolution"&gt;PowerShellGallery&lt;/a&gt; or a download from &lt;a href="https://github.com/EvotecIT/PasswordSolution"&gt;GitHub&lt;/a&gt;. I recommend &lt;strong&gt;PowerShellGallery&lt;/strong&gt; as the source for daily work and GitHub if you wish to play with sources or expand what is already there. Also, any issues, feature requests, and discussions should be pushed to &lt;strong&gt;GitHub&lt;/strong&gt;, as it's the proper way to get support.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b80a3849{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71b9143123"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Install-Module PasswordSolution -Force -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b9143123{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b9143123{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71b9143123{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71b9143123{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71ba112006"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;When you use &lt;strong&gt;Force&lt;/strong&gt;, the module will be installed, but when you rerun the command, it will redownload it repeatedly. If there's a new version, it will download the more recent version and leave the old one in place. This makes sure your module is always up to date. Of course, you shouldn't blindly update modules in production. Please test every version before doing the Install-module/Update-module in production.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71ba112006{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71ba112006{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71ba112006{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71ba112006{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71bb363523"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;pre class="EnlighterJSRAW" data-enlighter-language="powershell"&gt;Install-Module PasswordSolution -Scope CurrentUser -Verbose&lt;/pre&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bb363523{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bb363523{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bb363523{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bb363523{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	

	
		&lt;div class="wpb_text_column wpb_content_element  thegem-vc-text thegem-custom-665370c71bc578661"  &gt;
			&lt;div class="wpb_wrapper"&gt;
				&lt;p&gt;This module doesn't require Administrative rights on the machine, so you can use the &lt;strong&gt;CurrentUser&lt;/strong&gt; scope, as shown above, to install it as a standard user. However, this module requires proper permissions on &lt;strong&gt;Active Directory&lt;/strong&gt; to run it.&lt;/p&gt;

			&lt;/div&gt;
			&lt;style&gt;@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bc578661{display: block!important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bc578661{display: block!important;}}@media screen and (max-width: 1023px) {.thegem-vc-text.thegem-custom-665370c71bc578661{position: relative !important;}}@media screen and (max-width: 767px) {.thegem-vc-text.thegem-custom-665370c71bc578661{position: relative !important;}}&lt;/style&gt;
		&lt;/div&gt;
	
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The post &lt;a href="https://evotec.xyz/strengthening-password-security-in-active-directory-a-powershell-powered-approach/"&gt;Strengthening Password Security in Active Directory: A PowerShell-Powered Approach&lt;/a&gt; appeared first on &lt;a href="https://evotec.xyz"&gt;Evotec&lt;/a&gt;.&lt;/p&gt;
</content:encoded></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=7053</guid><link>https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/</link><category>Learn</category><title>Using Get-IISAppPool PowerShell Cmdlet</title><description>&lt;p&gt;The Get-IISAppPool cmdlet helps to access and configure Internet Information Services (IIS) application pools. This cmdlet is available within the IISAdministration PowerShell module. It enables users to retrieve information, such as application pool name, .Net framework version, runtime version, state, and recycling settings of an existing IIS application pool. This cmdlet examines the applicationHost.config configuration...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/"&gt;Using Get-IISAppPool PowerShell Cmdlet&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sat, 27 May 2023 07:03:44 Z</pubDate><comments>https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/05/27/using-get-iisapppool-powershell-cmdlet/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7053</post-id></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9247</guid><link>https://jdhitsolutions.com/blog/powershell/9247/discover-enums-with-get-typemember/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=discover-enums-with-get-typemember</link><category>PowerShell</category><category>get-member</category><category>objects</category><category>Scripting</category><title>Discover Enums with Get-TypeMember</title><description>Earlier this Spring, I released a new function called Get-TypeMember. The function is in the PSScriptTools module. I wrote about that release here. This command is an alternative to Get-Member that includes more details. The other day I pushed a new version that makes it easier to identify properties that are enumerations. The function has...</description><pubDate>Fri, 26 May 2023 14:57:13 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9247/discover-enums-with-get-typemember/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9247/discover-enums-with-get-typemember/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9247</post-id></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=7026</guid><link>https://www.powershellcenter.com/2023/05/09/winupdateanduptime/</link><category>Powershell - Systems</category><category>PS - Quick tip</category><title>QuickScript: Get installed Update and Machine Uptime Using PowerShell.</title><description>&lt;p&gt;This is a quick, simple post. The requirement is simple. Get a report from all the computers in the network reporting the last Windows update date, Windows update installed KB, and the Windows uptime. The script gets the content from a file containing all the computer names as an array and saves the result on...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/05/09/winupdateanduptime/"&gt;QuickScript: Get installed Update and Machine Uptime Using PowerShell.&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Tue, 09 May 2023 19:45:48 Z</pubDate><comments>https://www.powershellcenter.com/2023/05/09/winupdateanduptime/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/05/09/winupdateanduptime/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">7026</post-id></item><item><guid isPermaLink="false">http://powershell.city/2023/05/06/aws-ec2-powershell-tips/</guid><link>https://powershell.city/2023/05/06/aws-ec2-powershell-tips/</link><category>Powershell</category><category>Automation</category><category>AWS</category><category>Microsoft</category><category>script</category><title>AWS EC2 powerShell tips</title><description>Ever find yourself looking for ways to use powerShell? maybe that’s just me. Hahaha Recently I was supporting some EC2 in the cloud testing some new AWS features and services and I found my self locked out and released this machine was not domain joined but I couldn’t login. With the windows PowerShell cmdlets swirling&lt;a class="more-link" href="https://powershell.city/2023/05/06/aws-ec2-powershell-tips/"&gt;Continue reading &lt;span class="screen-reader-text"&gt;"AWS EC2 powerShell&amp;#160;tips"&lt;/span&gt;&lt;/a&gt;</description><pubDate>Sat, 06 May 2023 12:16:06 Z</pubDate><comments>https://powershell.city/2023/05/06/aws-ec2-powershell-tips/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Xajuan Smith</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">
&lt;p&gt;Ever find yourself looking for ways to use powerShell? maybe that’s just me. Hahaha&lt;/p&gt;



&lt;p&gt;Recently I was supporting some EC2 in the cloud testing some new AWS features and services and I found my self locked out and released this machine was not domain joined but I couldn’t login. &lt;/p&gt;



&lt;p&gt;With the windows PowerShell cmdlets swirling around my head I recalled a similar situation with a dev hyper-v client. This made me remember the root cause was an expired local user password. &lt;/p&gt;



&lt;p&gt;I am not sure if I have ever had the chance to share the:&lt;/p&gt;



&lt;pre class="wp-block-preformatted has-background-color has-secondary-background-color has-text-color has-background"&gt;Get-LocalUser&lt;br&gt;Set-LocaUser&lt;/pre&gt;



&lt;p&gt;These two commands are a good way to quickly check users and set passwords. Let’s see if you can make use of these by tapping into &lt;/p&gt;



&lt;pre class="wp-block-preformatted has-foreground-background-color has-background"&gt;get-Help&lt;/pre&gt;



&lt;p&gt;My issue was resolved by using amazons PowerShell in the browser and changing the local users password expiration policy. I am sure other sys admins and cloud admins can leverage this using various powerShell cloud instances to connect to their cloud servers and clients. Expiration policy comes in handy when you only want the user to access the infra temporarily for development purposes. &lt;/p&gt;



&lt;p&gt;I hope this finds that local user experience easier to manage due to the considerable amount time the powerShell devs put in to do this for admins. &lt;/p&gt;



&lt;p&gt;Let me know if you used this differently, like script disabling and creating local accounts or the default administrator account. &lt;/p&gt;
</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://powershell.city/2023/05/06/aws-ec2-powershell-tips/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><media:content url="https://1.gravatar.com/avatar/14d698e08780443e22321a389cc16e04e0c7c19bed371e5d4bbcd3248a42678e?s=96&amp;d=identicon&amp;r=G" medium="image" xmlns:media="http://search.yahoo.com/mrss/">
			<media:title type="html">xajuan</media:title>
		</media:content></item><item><guid isPermaLink="false">https://devdojo.com/10907</guid><link>https://devdojo.com/hcritter/powershell-script-showcase-get-wifipassword</link><author>Christian Ritter</author><category>script</category><category>powershell</category><category>wifi</category><category>netsh</category><category>localization</category><title>PowerShell-Script Showcase: Get-WifiPassword</title><description>&lt;h3 id="powershell-is-a-powerful-scripting-language-that-can-be-used-to-automate-a-variety-of-tasks"&gt;PowerShell is a powerful scripting language that can be used to automate a variety of tasks.&lt;/h3&gt;
&lt;h4 id="in-this-blog-post-we-will-explore-my-get-wifipassword-script-that-retrieves-stored-wifi-passwords-on-windows-machines-the-script-overcomes-the-issue-of-localization-that-arises-when-parsing-the-output-of-the-netsh-exe-command"&gt;In this blog post, we will explore my Get-WifiPassword script that retrieves stored Wifi passwords on Windows machines. The script overcomes the issue of localization that arises when parsing the output of the 'netsh.exe' command.&lt;/h4&gt;
&lt;p&gt;To retrieve the stored Wifi passwords, most users rely on the 'netsh.exe' command. This command can be parsed with PowerShell by looking for the 'key content' line and splitting it by ':' to obtain the password of the Wifi profile. However, this approach fails on non-English Windows machines, where the 'key content' line may be labeled differently.&lt;/p&gt;
&lt;p&gt;I initially tried to call the 'netsh.exe' command in a consistent language to solve this problem, but this proved unsuccessful. I then sought the help of ChatGPT, which recommended using CIM-Classes. However, this approach also failed, and I decided to analyze the 'netsh.exe' command more closely.&lt;/p&gt;
&lt;p&gt;I discovered that the 'netsh.exe' command has an export argument that exports all profiles at once. The output is in the form of several XML files, all in English. This led me to read all the XML files, extract the Wifi-SID and password, and store them as 'pscustomobjects' to output them.&lt;/p&gt;
&lt;p&gt;Overall, my Get-WifiPassword script is an excellent example of how to overcome localization issues in PowerShell scripting. By exporting all profiles at once, my script is able to obtain the stored Wifi passwords in a consistent language, regardless of the language of the underlying operating system.&lt;/p&gt;
&lt;p&gt;The final script looks like this now:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;&amp;lt;#
    &lt;span class="hljs-doctag"&gt;.SYNOPSIS&lt;/span&gt;
    This function displays all stored WIFI passwords on the client
    &lt;span class="hljs-doctag"&gt;.DESCRIPTION&lt;/span&gt;
    This function gets the output of netsh command and will trim it to display all SSID`s and also the passwords.
    If a profile has no password it will inform the user.
    &lt;span class="hljs-doctag"&gt;.EXAMPLE&lt;/span&gt;
    Get-WIFIPassword
#&amp;gt;&lt;/span&gt;
&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;Get-WifiPassword&lt;/span&gt;&lt;/span&gt; {
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;CmdletBinding&lt;/span&gt;()]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt; (
        
    )
    
    &lt;span class="hljs-keyword"&gt;begin&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;try&lt;/span&gt; {
            &lt;span class="hljs-comment"&gt;# Export all Wifi profiles and collect their XML file paths&lt;/span&gt;
            &lt;span class="hljs-variable"&gt;$netshOutput&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(netsh wlan export profile key=clear)
            &lt;span class="hljs-variable"&gt;$XmlFilePaths&lt;/span&gt; = &lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$line&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-variable"&gt;$netshOutput&lt;/span&gt;){
                &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$line&lt;/span&gt; &lt;span class="hljs-operator"&gt;-match&lt;/span&gt; &lt;span class="hljs-string"&gt;'\"(.*?\\.*?\.xml)(?=\")'&lt;/span&gt;){
                    &lt;span class="hljs-variable"&gt;$matches&lt;/span&gt;[&lt;span class="hljs-number"&gt;1&lt;/span&gt;]
                }
            }
        }
        &lt;span class="hljs-keyword"&gt;catch&lt;/span&gt; {
            &lt;span class="hljs-built_in"&gt;Write-Error&lt;/span&gt; &lt;span class="hljs-string"&gt;"Failed to export Wifi profiles: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message)"&lt;/span&gt;
            &lt;span class="hljs-keyword"&gt;return&lt;/span&gt;
        }
        
    }
    
    &lt;span class="hljs-keyword"&gt;process&lt;/span&gt; {
        &lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$XmlFilePath&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-variable"&gt;$XmlFilePaths&lt;/span&gt;) {
            &lt;span class="hljs-keyword"&gt;try&lt;/span&gt; {
                &lt;span class="hljs-comment"&gt;# Read the XML file and extract the Wifi profile name and password&lt;/span&gt;
                &lt;span class="hljs-variable"&gt;$Xml&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;xml&lt;/span&gt;](&lt;span class="hljs-built_in"&gt;Get-Content&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Path&lt;/span&gt; &lt;span class="hljs-variable"&gt;$XmlFilePath&lt;/span&gt;)

                &lt;span class="hljs-comment"&gt;# Output the profile name, password, and whether the operation succeeded&lt;/span&gt;
                [&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
                    Name = &lt;span class="hljs-variable"&gt;$Xml&lt;/span&gt;.WLANProfile.Name
                    Password = &lt;span class="hljs-variable"&gt;$Password&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Xml&lt;/span&gt;.WLANProfile.MSM.Security.SharedKey.KeyMaterial
                    Succeed = [&lt;span class="hljs-built_in"&gt;bool&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$Password&lt;/span&gt;
                }
                &lt;span class="hljs-comment"&gt;# Remove the XML file&lt;/span&gt;
                &lt;span class="hljs-built_in"&gt;Remove-Item&lt;/span&gt; &lt;span class="hljs-variable"&gt;$XmlFilePath&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ErrorAction&lt;/span&gt; Stop
            }
            &lt;span class="hljs-keyword"&gt;catch&lt;/span&gt; {
                &lt;span class="hljs-built_in"&gt;Write-Error&lt;/span&gt; &lt;span class="hljs-string"&gt;"Failed to read Wifi profile from '&lt;span class="hljs-variable"&gt;$XmlFilePath&lt;/span&gt;': &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message)"&lt;/span&gt;
            }
        }
    }
    
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {
        
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I want to mention that I am aware of the 'wlanapi.dll', which is a C-Library on Windows that could also be used for this task. However, my goal was to keep the script as simple as possible without adding tons of confusing code.&lt;/p&gt;
&lt;p&gt;If you have any ideas to improve this script, please feel free to raise an issue on &lt;a href="https://github.com/HCRitter/Get-WIFIPassword"&gt;Github&lt;/a&gt;, or share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;. I am always looking to improve my scripts and welcome any feedback or suggestions.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;p&gt;Christian&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
</description><pubDate>Wed, 03 May 2023 14:46:15 -0700</pubDate></item><item><guid isPermaLink="false">https://blog.darrenjrobinson.com/?p=49181</guid><link>https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/</link><category>How-to</category><category>PowerShell</category><category>ChatGPT</category><category>Generative AI</category><category>OpenAI</category><title>Generative AI (ChatGPT) with PowerShell</title><description>&lt;p&gt;Unless you&amp;#8217;ve been off the grid on a long sabbatical the last six months you&amp;#8217;ve surely heard of ChatGPT. Like many I started exploring the possibilities of &lt;a href="https://openai.com/blog/chatgpt" target="_blank" rel="noreferrer noopener"&gt;OpenAI ChatGPT&lt;/a&gt; when it hit the world by storm last year. Pretty quickly I saw the power of it, but also wondered about using it via API.&amp;#8230; &lt;a href="https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/" class="read-more"&gt;keep reading &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/"&gt;Generative AI (ChatGPT) with PowerShell&lt;/a&gt; appeared first on &lt;a href="https://blog.darrenjrobinson.com"&gt;darrenjrobinson - Bespoke Identity and Access Management Solutions&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Tue, 25 Apr 2023 23:00:00 Z</pubDate><comments>https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Darren Robinson</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://blog.darrenjrobinson.com/generative-ai-chatgpt-with-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">49181</post-id></item><item><guid isPermaLink="false">https://www.thelazyadministrator.com/?p=2946</guid><link>https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/</link><category>Intune</category><category>Accounts</category><category>Graph</category><category>LAPS</category><category>PowerShell</category><title>Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune</title><description>&lt;p&gt;Windows Local Administrator Password Solution (Windows LAPS) is a Windows Feature that allows IT Administrators to secure and protect local administrator passwords. This includes automatic rotation of passwords as well as backing up the passwords to Azure Active Directory or Active Directory. You can configure Windows LAPS on your Windows endpoints using Microsoft Intune.&lt;/p&gt;
&lt;h2 class="wp-block-heading"&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;To use Windows LAPS in Intune, ensure you’re using a supported Windows platform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 20H2 and later with&amp;#160;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025221-os-builds-19042-2846-19044-2846-and-19045-2846-b00c3356-baac-4a41-8342-7f97ec83445a" target="_blank" rel="noreferrer noopener"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;#160;installed&lt;/li&gt;
&lt;li&gt;Windows 11 21H2 and later with&amp;#160;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025224-os-build-22000-1817-ebc75372-608d-4a77-a6e0-cb1e15f117fc" target="_blank" rel="noreferrer noopener"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;#160;installed&lt;/li&gt;
&lt;li&gt;Windows Server 2019 and later with&amp;#160;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025229-os-build-17763-4252-e8ead788-2cd3-4c9b-8c77-d677e2d8744f"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;#160;installed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also have to enable Azure AD Local Administrator Password Solution (LAPS) within your Azure Tenant. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azure Active Directory&lt;/strong&gt;&amp;#160;&amp;#62;&amp;#160;&lt;strong&gt;Devices&lt;/strong&gt;&amp;#160;&amp;#62;&amp;#160;&lt;strong&gt;Device Settings&lt;/strong&gt;&amp;#160;&amp;#62;&amp;#160;&lt;strong&gt;Azure AD Local Administrator Password Solution (LAPS)&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may not have to do this once the product is &lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#8230; &lt;a href="https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/"&gt;Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Sat, 22 Apr 2023 16:12:16 Z</pubDate><comments>https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Wyatt</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;Windows Local Administrator Password Solution (Windows LAPS) is a Windows Feature that allows IT Administrators to secure and protect local administrator passwords. This includes automatic rotation of passwords as well as backing up the passwords to Azure Active Directory or Active Directory. You can configure Windows LAPS on your Windows endpoints using Microsoft Intune.&lt;/p&gt;



&lt;h2 class="wp-block-heading"&gt;Pre-requisites&lt;/h2&gt;



&lt;p&gt;To use Windows LAPS in Intune, ensure you’re using a supported Windows platform:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;Windows 10 20H2 and later with&amp;nbsp;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025221-os-builds-19042-2846-19044-2846-and-19045-2846-b00c3356-baac-4a41-8342-7f97ec83445a" target="_blank" rel="noreferrer noopener"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;nbsp;installed&lt;/li&gt;



&lt;li&gt;Windows 11 21H2 and later with&amp;nbsp;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025224-os-build-22000-1817-ebc75372-608d-4a77-a6e0-cb1e15f117fc" target="_blank" rel="noreferrer noopener"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;nbsp;installed&lt;/li&gt;



&lt;li&gt;Windows Server 2019 and later with&amp;nbsp;&lt;a href="https://support.microsoft.com/topic/april-11-2023-kb5025229-os-build-17763-4252-e8ead788-2cd3-4c9b-8c77-d677e2d8744f"&gt;April 11, 2023 security updates&lt;/a&gt;&amp;nbsp;installed&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;You might also have to enable Azure AD Local Administrator Password Solution (LAPS) within your Azure Tenant. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azure Active Directory&lt;/strong&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;strong&gt;Devices&lt;/strong&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;strong&gt;Device Settings&lt;/strong&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;strong&gt;Azure AD Local Administrator Password Solution (LAPS)&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may not have to do this once the product is &lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&amp;hellip; &lt;a href="https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/" class="read-more"&gt;Continue... &lt;/a&gt;&lt;p&gt;The post &lt;a href="https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/"&gt;Windows LAPS Management, Configuration and Troubleshooting Using Microsoft Intune&lt;/a&gt; first appeared on &lt;a href="https://www.thelazyadministrator.com"&gt;The Lazy Administrator&lt;/a&gt;.&lt;/p&gt;</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.thelazyadministrator.com/2023/04/22/windows-laps-management-configuration-and-troubleshooting-using-microsoft-intune/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">35</slash:comments></item><item><guid isPermaLink="false">https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20gpt-4,%20chatgpt/2023/04/13/Fixing%20JSON%20Syntax%20Errors%20with%20the%20PowerShellAI%20Module</guid><link>https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20gpt-4,%20chatgpt/2023/04/13/Fixing-JSON-Syntax-Errors-with-the-PowerShellAI-Module.html</link><a10:author><a10:name /></a10:author><category>PowerShell, PowerShellAI, OpenAI, Azure OpenAI, GPT-4, ChatGPT</category><category>PowerShell, PowerShellAI, OpenAI, Azure OpenAI, GPT-4, ChatGPT</category><title>Fixing JSON Syntax Errors with the PowerShellAI Module</title><description /><pubDate>Thu, 13 Apr 2023 09:00:00 Z</pubDate><a10:updated>2023-04-13T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai,%20gpt-4,%20chatgpt/2023/04/13/Fixing-JSON-Syntax-Errors-with-the-PowerShellAI-Module.html">&lt;p&gt;&lt;img src="/images/posts/ChatGPT/FixingJSON.jpg" alt="" /&gt;&lt;/p&gt;

&lt;h1 id="fixing-json-syntax-errors-with-the-powershellai-module"&gt;Fixing JSON Syntax Errors with the PowerShellAI Module&lt;/h1&gt;

&lt;p&gt;This is fast, simple, and easy. It’ll increase your productivity, save you time and effort, and is super accurate when working with JSON data.&lt;/p&gt;

&lt;p&gt;In this blog post, I will explore how to use the &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function in the PowerShellAI module to help fix JSON syntax errors. The PowerShellAI module leverages the power of OpenAI’s GPT-4 language model to assist with a variety of tasks, including identifying and correcting syntax issues in JSON strings or objects.&lt;/p&gt;

&lt;h2 id="prerequisites"&gt;Prerequisites:&lt;/h2&gt;

&lt;p&gt;Before diving into the tutorial, make sure you have the following prerequisites:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PowerShell 7 or later installed on your machine.
= The PowerShellAI module installed. You can install it by running &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name PowerShellAI&lt;/code&gt; in your PowerShell console.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="step-1-import-the-powershellai-module"&gt;Step 1: Import the PowerShellAI module&lt;/h1&gt;

&lt;p&gt;To start using the &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function, you’ll need to import the PowerShellAI module. Run the following command in your PowerShell console:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Import-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PowerShellAI&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id="step-2-create-a-json-string-with-syntax-errors"&gt;Step 2: Create a JSON string with syntax errors&lt;/h1&gt;

&lt;p&gt;For demonstration purposes, let’s create a JSON string containing syntax errors:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$invalidJson&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'{a","b}'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id="step-3-use-the-ai-function-to-identify-and-fix-json-syntax-errors"&gt;Step 3: Use the &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function to identify and fix JSON syntax errors&lt;/h1&gt;

&lt;p&gt;To use the &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function to fix the JSON syntax errors, pipe the invalid JSON string to the function. Then you specify the simple prompt to instruct the model what to do. In this case, we’ll use the prompt &lt;code class="language-plaintext highlighter-rouge"&gt;'please fix the json&lt;/code&gt;. The &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function will then return a JSON string with the syntax errors fixed and save it to the &lt;code class="language-plaintext highlighter-rouge"&gt;$fixedJson&lt;/code&gt; variable:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$fixedJson&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$invalidJson&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ai&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="nx"&gt;please&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="s1"&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function will return the corrected JSON string, which you can print to the console:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="s2"&gt;"Invalid JSON: &lt;/span&gt;&lt;span class="nv"&gt;$invalidJson&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="s2"&gt;"Corrected JSON: &lt;/span&gt;&lt;span class="nv"&gt;$fixedJson&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Invalid JSON: {a","b}
Corrected JSON: {"a":"b"}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Conclusion:&lt;/p&gt;

&lt;p&gt;In this blog post, we’ve demonstrated how to use the &lt;code class="language-plaintext highlighter-rouge"&gt;ai&lt;/code&gt; function in the &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; module to fix JSON syntax errors. By leveraging the power of OpenAI’s GPT-4 language model, the &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; module offers an easy and convenient way to correct mistakes in JSON strings, saving you time and effort when working with JSON data.&lt;/p&gt;

&lt;p&gt;Now, you can integrate this powerful AI-powered JSON syntax fixing capability into your PowerShell scripts and right in the console. Don’t hesitate to explore other tasks the PowerShellAI module can perform and further enhance your productivity!&lt;/p&gt;

&lt;h1 id="additional-resources"&gt;Additional Resources:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;PowerShellAI Details and Videos: &lt;a href="https://github.com/dfinke/PowerShellAI"&gt;https://github.com/dfinke/PowerShellAI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI.html"&gt;How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dfinke.github.io/powershell,%20powershellai,%20openai,%20azure%20openai/2023/04/11/PowerShell-+-ChatGPT-at-your-Fingertips.html"&gt;PowerShell + ChatGPT at your Fingertips!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10836</guid><link>https://devdojo.com/hcritter/book-review-practical-automation-with-powershell</link><author>Christian Ritter</author><category>powershell</category><category>book-review</category><category>practical automation with powershell</category><category>matthew dowst</category><title>Book-Review: Practical Automation with PowerShell</title><description>&lt;p&gt;Lately I had the chance to get a copy of the book: "Practical Automation with PowerShell". This is not a paid review just my honest thoughts about it, because after reading I am still impressed.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If you're looking to dive into the world of automation and want a comprehensive guide to get started, then &lt;a href="https://www.manning.com/books/practical-automation-with-powershell"&gt;"Practical Automation with PowerShell"&lt;/a&gt;  by  &lt;a href="https://twitter.com/MDowst"&gt;Matthew Dowst&lt;/a&gt; is a must-read.&lt;/p&gt;
&lt;p&gt;What sets this book apart is its clear and structured approach, which caters to both beginners and advanced users. It targets a specific crowd who are interested in automation and delivers the concepts of larger enterprise-ready automation.&lt;/p&gt;
&lt;p&gt;The book is divided into three parts, making it easy to cherry-pick specific topics or follow the chapters straight through. Most of the examples provided are for PowerShell Version 7.X, so no one is left behind if the person is automating on something else than a Windows PC.&lt;/p&gt;
&lt;p&gt;The book goes beyond just providing code snippets and examples. It also delves into the mindset necessary to develop solutions alone or in a team. The author's background in the IT-Industry and working with companies focused on software development adds to the book's credibility.&lt;/p&gt;
&lt;p&gt;One of the book's strengths is its diagrams and figures, which are not overloaded and convey the message in a clear and concise manner. The book covers efficiency and code quality, with the author providing valuable insights into best practices that he has used throughout his career.&lt;/p&gt;
&lt;p&gt;The author's attention to detail shines through in the book, with code snippets and examples explained not only by code comments but also with arrows and short sentences. Additionally, the book covers the structuring of a project on a folder and file basis, handling sensitive data and inputs, and the latest state-of-the-art security standards.&lt;/p&gt;
&lt;p&gt;The book also covers remoting in all its methods with pros and cons, data reading and storing, converting for exporting to other systems and services, and a big spoon of SQL. Furthermore, the author provides well-structured step-by-step guidance for cloud-based automation with all its capabilities.&lt;/p&gt;
&lt;p&gt;Sharing scripts and whole projects with team members is another key aspect covered in the book, providing different ways to optimize it for your own company. One of the last sections of the book covers the important topic of testing/unit testing, with the author referring to the great Pester-Framework and providing readers with a basic understanding of how unit testing with Pester works.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Overall, "Practical Automation with PowerShell" is an excellent book that covers all aspects of automation, providing readers with valuable insights, best practices, and step-by-step guidance. Whether you are a beginner or an advanced user, this book is a must-read for anyone interested in automation.&lt;/p&gt;
</description><pubDate>Tue, 11 Apr 2023 15:37:53 -0700</pubDate></item><item><guid isPermaLink="false">https://nocolumnname.blog/?p=10858</guid><link>https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=t-sql-tuesday-161-having-fun-with-sql</link><category>General</category><category>Powershell</category><category>sql-server</category><category>T-SQL Tuesday</category><title>T-SQL Tuesday 161: Having Fun with SQL</title><description>Words: 1,283 Time to read: ~ 7 minutes Welcome to T-SQL Tuesday, the monthly blogging party where a host provides a topic, and we blog about it. This month we have Reitse Eskens ( blog &amp;#124; twitter &amp;#124; mastadon ) asking us to talk about something fun we have done with T-SQL. It has been &amp;#8230; &lt;a href="https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/" class="more-link"&gt;Continue reading&lt;span class="screen-reader-text"&gt; "T-SQL Tuesday 161: Having Fun with SQL"&lt;/span&gt;&lt;/a&gt;</description><pubDate>Tue, 11 Apr 2023 22:13:34 Z</pubDate><comments>https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shane O'Neill</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://nocolumnname.blog/2023/04/11/t-sql-tuesday-161-having-fun-with-sql/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">10858</post-id></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/soft-skills-part-3</guid><link>https://thedavecarroll.com/powershell/soft-skills-part-3/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>soft skills</category><category>career</category><title>Soft Skills - Part 3 - Motivation and Inspiration</title><description>On the Road to DevOps, Don't Forget the Soft Skills</description><pubDate>Mon, 10 Apr 2023 00:00:00 -0500</pubDate><a10:updated>2023-04-10T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/soft-skills-part-3/">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This article is the last in a series of three which is a republishing of my chapter on soft skills from the &lt;a href="https://leanpub.com/psconfbook2" target="_blank"&gt;PowerShell Conference Book Volume 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you haven’t read the article on &lt;a href="https://thedavecarroll.com/powershell/soft-skills-part-1/" target="_blank"&gt;communication&lt;/a&gt;
or article on &lt;a href="https://thedavecarroll.com/powershell/soft-skills-part-2/" target="_blank"&gt;collaboration&lt;/a&gt;,
that’s okay, as each article has it’s own topics.
I would suggest to read them though, as it will help round out your general knowledge of soft skills.&lt;/p&gt;

&lt;h2 id="motivation-and-inspiration"&gt;Motivation and Inspiration&lt;/h2&gt;

&lt;h3 id="how-to-motivate-others"&gt;How to Motivate Others&lt;/h3&gt;

&lt;p&gt;Effective leaders know how to motivate.
As a leader, you must challenge your team to grow and support them along the way.
Empower them to do their job and protect their time so they can do it.
Maximize strengths within the team and minimize weaknesses.&lt;/p&gt;

&lt;p&gt;As an effective leader, you must also do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Earn the trust of your team and fight to keep it.&lt;/li&gt;
  &lt;li&gt;Trust your team to do their job—don’t micromanage!&lt;/li&gt;
  &lt;li&gt;Accept responsibility for all your decisions, even those which result in negative consequences, and apologize when needed.&lt;/li&gt;
  &lt;li&gt;Recognize accomplishments of individual contributors and the team itself.&lt;/li&gt;
  &lt;li&gt;Foster collaboration within the team and with external groups as well.&lt;/li&gt;
  &lt;li&gt;Solicit and value input from your team and consider it in your decisions.&lt;/li&gt;
  &lt;li&gt;Provide career development for your team so they may grow their skills which, in turn, increases the effectiveness of the team.&lt;/li&gt;
  &lt;li&gt;Support your team through achievement awards, raises, and promotions when possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Furthermore, as a leader, you should genuinely care about the well-being of your team members.
Your responsibilities include setting realistic goals and expectations for your team while protecting them from burnout.
Do what you can to help your team find enjoyment in their job, everyday.&lt;/p&gt;

&lt;h4 id="how-i-learned-about-motivation"&gt;How I Learned About Motivation&lt;/h4&gt;

&lt;p&gt;Before I started my IT career path, I worked for several fast-food restaurants.
I learned quite a bit about managing people and tasks at one of them, &lt;a href="http://garibaldispizza.com/" target="_blank"&gt;Garibaldi’s Pizza&lt;/a&gt; in Memphis, Tennessee.
Of their four locations (in 1991), I worked at the one near the University of Memphis eventually becoming a shift manager, which was my first management position.
One Sunday afternoon, we were busy in-house and with deliveries.
I received a phone call from a catering customer confirming their order for 30 people and the delivery time, just one hour away.
I told them everything was fine and that they should see us soon.&lt;/p&gt;

&lt;p&gt;Of course, everything wasn’t fine.
I had forgotten about the catering gig, but I kept calm and devised a plan.
I pulled a few team members to the side and told them what we needed to do.
A couple off-the-clock employees even volunteered to assist; they were immensely helpful.
Within a few moments the order was being prepared and the rest of the staff was handling a new rush of dine-in customers.&lt;/p&gt;

&lt;p&gt;As shift manager, the success or failure would have fallen on me.
I had built friendships with most of the team outside of work and we all respected each other.
If I was a horrible manager, the team could have let me fail.
As it turned out, I motivated my team to go above and beyond.&lt;/p&gt;

&lt;p&gt;We worked together and delivered the pasta, salad, and garlic bread to the customer on time.
We also handled the influx of in-house customers without complaint.
I thanked everyone that pitched in or stepped up for additional work and gave them free meals (and drinks after hours at a local pub).&lt;/p&gt;

&lt;h3 id="how-to-inspire-others"&gt;How to Inspire Others&lt;/h3&gt;

&lt;p&gt;Even if you aren’t a manager, team leader, or project leader, you can inspire others to be better versions of themselves.
Many topics that you have just read about in this chapter [or previous articles] relate directly to inspiring others.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Treat others with respect and civility.&lt;/li&gt;
  &lt;li&gt;Accept others as uniquely flawed individuals.&lt;/li&gt;
  &lt;li&gt;Focus on encouraging others.&lt;/li&gt;
  &lt;li&gt;Commit time to support others in the community.&lt;/li&gt;
  &lt;li&gt;Show humility and authenticity.&lt;/li&gt;
  &lt;li&gt;Share, both your story and learning, so that others can benefit from the lessons you’ve learned.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="sharing"&gt;Sharing&lt;/h4&gt;

&lt;p&gt;Sharing can be scary.&lt;/p&gt;

&lt;p&gt;Being the first in something carries a certain responsibility to help others reach the same goal.
From the better vantage point, you can reach out to provide support to bring others along with you.
Similarly, you may not have reached the pinnacle of your own journey.
It’s okay to look for help from those that came before you.&lt;/p&gt;

&lt;p&gt;By reading forum and blog posts, attending seminars and symposiums, and experiencing conferences and expos, you’re learning from others that have been exactly in the same position as you.
They’re providing you a unique view to their understanding of the topic.
If you’re still having trouble understanding after the first one, just move on to the next person’s content, or the next, until you find a viewpoint that just clicks, like turning on a light bulb.&lt;/p&gt;

&lt;p&gt;Once you grasp a certain topic, especially if it was quite difficult, explain it to an interested team member.
It will reinforce the learning in your mind and, hopefully, your help will provide the co-worker a better understanding of the subject.
At the least, it will show them that you care enough about their success to invest your time to help them.&lt;/p&gt;

&lt;p&gt;There are several methods you can use to share with others.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Blogging&lt;/li&gt;
  &lt;li&gt;Presenting&lt;/li&gt;
  &lt;li&gt;Teaching&lt;/li&gt;
  &lt;li&gt;Writing books&lt;/li&gt;
  &lt;li&gt;Mentoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to pick more than one from the list.&lt;/p&gt;

&lt;p class="notice--info"&gt;&lt;strong&gt;Presenting&lt;/strong&gt;&lt;br /&gt;
If you are interested in learning how to present a topic in front a live audience, look no further than the chapter, “Your First Public Speaking Talk,” within this &lt;a href="https://leanpub.com/psconfbook2" target="_blank"&gt;book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Anyone who wants to share their understanding of PowerShell, or any other topic or skill, has every right to do so.
There will always be new joiners on the journey.
And there will always be someone with more knowledge and experience than you.&lt;/p&gt;

&lt;h2 id="the-great-conjunction"&gt;The Great Conjunction&lt;/h2&gt;

&lt;p&gt;The Great Conjunction is happening now.&lt;/p&gt;

&lt;p&gt;About a decade ago, a set of common, radical ideals drew together a few people from the developers and system administrator’s communities.
Through the resulting friendships, the ideals transformed into principles which then turned into a call to action.
The conjoining of words by a &lt;a href="https://twitter.com/patrickdebois" target="_blank"&gt;leader&lt;/a&gt; in the new movement produced the term DevOps.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;What was sundered and undone, shall be whole—the two made one.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;—Aughra, &lt;em&gt;The Dark Crystal&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As technology grows and applications begin a migration to commoditized cloud platforms, the need to deploy faster, and with greater resilience, is a critical demand.
The new, fast-paced environment requires skills from the developers and the system administrators alike.
Early adopters of DevOps methodologies began building bridges over the &lt;em&gt;Chasm of IT&lt;/em&gt;.
With effective communication and sharing of ideas, these bridges form the basis for collaboration that will take the industry into the future.&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;Be sincere and genuine when you offer to help others achieve their goals; remember the times when someone helped you.&lt;/p&gt;

&lt;p&gt;Lead others with integrity and humility by your side while praising and rewarding their accomplishments.&lt;/p&gt;

&lt;p&gt;Share your experience and knowledge so others may be inspired and empowered to accomplish big things too.&lt;/p&gt;

&lt;p&gt;We’re all in this together.&lt;/p&gt;

&lt;p&gt;Who motivates and inspires you?
How have you been motivated or inspired?&lt;/p&gt;

&lt;p&gt;If you have a blog where you share technical tricks or tips, please drop it in a comment below.&lt;/p&gt;

&lt;p&gt;Again, thank you for sticking around.&lt;/p&gt;

&lt;p&gt;I hope you’ve found this interesting or informative.
I really would like to hear your thoughts on this article.
If you have any comments or questions, please post them below.&lt;/p&gt;

&lt;h2 id="reading-material"&gt;Reading Material&lt;/h2&gt;

&lt;p&gt;While this chapter focuses on improving soft skills, the books (and one yearly report) listed below illustrate the shift in mindset required for a practicing DevOps organization.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Author(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;The Unicorn Project: A Novel about Digital Disruption, Rebels, and Overthrowing the Ancient Powerful Order&lt;/td&gt;
      &lt;td&gt;Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&lt;/td&gt;
      &lt;td&gt;Gene Kim, Kevin Behr, and George Spafford&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Beyond the Phoenix Project&lt;/td&gt;
      &lt;td&gt;Gene Kim, John Willis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations&lt;/td&gt;
      &lt;td&gt;Gene Kim, Jez Humble, and Patrick Debois&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations&lt;/td&gt;
      &lt;td&gt;Nicole Forsgren PhD, Jez Humble, Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation&lt;/td&gt;
      &lt;td&gt;Jez Humble and David Farley&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Making Work Visible: Exposing Time Theft to Optimize Work and Flow&lt;/td&gt;
      &lt;td&gt;Dominica DeGrandis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The State of DevOps Report, a yearly report based on survey data&lt;/td&gt;
      &lt;td&gt;Puppet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Goal: A Process of Ongoing Improvement&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt, Jeff Cox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Theory of Constraints&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The last two books aren’t directly related to DevOps.
They were, however, inspirational in establishing the underpinnings of DevOps.&lt;/p&gt;
&lt;/blockquote&gt;</a10:content></item><item><guid isPermaLink="false">https://dfinke.github.io/powershellai,%20powershell,%20chatgpt/2023/04/04/PowerShellAI-ChatGPT-Conversation-Mode</guid><link>https://dfinke.github.io/powershellai,%20powershell,%20chatgpt/2023/04/04/PowerShellAI-ChatGPT-Conversation-Mode.html</link><a10:author><a10:name /></a10:author><category>PowerShellAI, PowerShell, ChatGPT</category><category>PowerShellAI, PowerShell, ChatGPT</category><title>PowerShellAI ChatGPT Conversation Mode</title><description>&amp;lt;!– https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/chatgpt</description><pubDate>Tue, 04 Apr 2023 15:00:00 Z</pubDate><a10:updated>2023-04-04T15:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershellai,%20powershell,%20chatgpt/2023/04/04/PowerShellAI-ChatGPT-Conversation-Mode.html">&lt;!-- 
https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/chatgpt

https://learn.microsoft.com/en-us/azure/cognitive-services/openai/chatgpt-quickstart?tabs=command-line&amp;pivots=programming-language-studio

https://github.com/Azure/openai-samples

https://learn.microsoft.com/en-us/training/paths/get-started-with-artificial-intelligence-on-azure/
--&gt;

&lt;h1 id="learn-how-to-work-with-chatgpt-and-gpt-4-using-powershellai"&gt;Learn how to work with ChatGPT and GPT-4 using PowerShellAI&lt;/h1&gt;

&lt;p&gt;The ChatGPT and GPT-4 models are language models that are optimized for conversational interfaces. The models behave differently than the older GPT-3 models. Previous models were text-in and text-out, meaning they accepted a prompt string and returned a completion to append to the prompt. However, the ChatGPT and GPT-4 models are conversation-in and message-out.&lt;/p&gt;

&lt;p&gt;To work with this you can use the function/alias &lt;code class="language-plaintext highlighter-rouge"&gt;New-Chat&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;Chat&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download it now: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name PowerShellAI&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;More details and videos: &lt;a href="https://github.com/dfinke/PowerShellAI"&gt;https://github.com/dfinke/PowerShellAI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="video-tutorial"&gt;Video Tutorial&lt;/h2&gt;

&lt;p&gt;Discover the power of AI in your PowerShell environment with this newly integrated GPT-4 chat feature, as demonstrated in this step-by-step YouTube tutorial, revolutionizing automation and productivity.&lt;/p&gt;

&lt;center&gt;&lt;a href="https://youtu.be/ZX5gwzJe7eI"&gt;&lt;img src="https://img.youtube.com/vi/ZX5gwzJe7eI/0.jpg" width="350" /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;h2 id="pre-requisites"&gt;Pre-requisites&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Install PowerShell v5.1 or later&lt;/li&gt;
  &lt;li&gt;Install PowerShellAI - &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name PowerShellAI&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create an account and get an OpenAI API key - &lt;a href="https://platform.openai.com/account/api-keys"&gt;https://platform.openai.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Set the environment variable &lt;code class="language-plaintext highlighter-rouge"&gt;$env:OpenAIKey&lt;/code&gt; with the value of your OpenAI API key&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="powershell-chatgpt"&gt;PowerShell ChatGPT&lt;/h2&gt;

&lt;p&gt;There are two functions/aliases that you can use to interact with the ChatGPT model. &lt;code class="language-plaintext highlighter-rouge"&gt;New-Chat&lt;/code&gt; will stop the current conversation and start a new one. &lt;code class="language-plaintext highlighter-rouge"&gt;Chat&lt;/code&gt; will continue the conversation.&lt;/p&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Chat&lt;/code&gt; will also start a new conversation if one is not already started.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;New-Chat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# initialize the chat session&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"What is the capital of Spain"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c"&gt;# send a message to the chat session&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;The capital of Spain is Madrid.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="your-first-conversation"&gt;Your First Conversation&lt;/h3&gt;

&lt;p&gt;This conversation was generated using the &lt;code class="language-plaintext highlighter-rouge"&gt;New-Chat&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;Chat&lt;/code&gt; functions. It “remembers” the conversation and continues to build on it. &lt;code class="language-plaintext highlighter-rouge"&gt;New-Chat&lt;/code&gt; closes the current conversation, if there is one, and starts a new one. Then, &lt;code class="language-plaintext highlighter-rouge"&gt;chat&lt;/code&gt; sends the message to the model and it responds.&lt;/p&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;chat "and France"&lt;/code&gt; sends the entire conversation to the model and it knows you what the capital of France is.&lt;/p&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;chat "USA?"&lt;/code&gt; is all that is needed to get the capital of the USA.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/SampleConversation.png" alt="image" /&gt;&lt;/p&gt;

&lt;h3 id="another-conversation"&gt;Another Conversation&lt;/h3&gt;

&lt;p&gt;Now let’s say you want all the responses from the model to come back in json format.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;New-Chat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'respond only with json'&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"What is the capital of Spain"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="language-json highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"capital"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Madrid"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="check-it-out"&gt;Check it out&lt;/h3&gt;

&lt;p&gt;Here you tell the model to only respond with json. Then you continue the conversation and it only responds with json.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/RespondOnlyWithJson.png" alt="image" /&gt;&lt;/p&gt;

&lt;h3 id="chat-sessions"&gt;Chat Sessions&lt;/h3&gt;

&lt;p&gt;Your conversation is stored in a session locally. You can see the session files using &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ChatSession&lt;/code&gt; function. The are saved using a timestamp. You can also filter the sessions by the &lt;code class="language-plaintext highlighter-rouge"&gt;Name&lt;/code&gt; parameter. You can use a regex to filter the sessions. Typically I do something like &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ChatSession&lt;/code&gt;, look at the files and then filter by the last three digits of the timestamp &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ChatSession 439&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can pipe this to &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ChatSessionContent&lt;/code&gt; to get the content of the session. &lt;code class="language-plaintext highlighter-rouge"&gt;Get-ChatSession 439 | Get-ChatSessionContent&lt;/code&gt;. These files contain the messages you sent to the model and the responses from the model.&lt;/p&gt;

&lt;p&gt;It is returned as PowerShell objects. You can then format and save them in any other format that works for you.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id="catch-up-with-me-on"&gt;Catch up with me on&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Where&lt;/th&gt;
      &lt;th&gt;Link&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Twitter&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://twitter.com/dfinke"&gt;@dfinke&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;YouTube&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://www.youtube.com/@dougfinke"&gt;@dougfinke&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GitHub&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/dfinke"&gt;dfinke&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LinkedIn&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://www.linkedin.com/in/douglasfinke/"&gt;Doug Finke&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10799</guid><link>https://devdojo.com/hcritter/powershell-technique-randomizing</link><author>Christian Ritter</author><category>powershell</category><category>technique</category><category>get-random</category><title>PowerShell-Technique: Randomizing</title><description>&lt;h3 id="powershell-technique-randomizing"&gt;PowerShell-Technique: Randomizing&lt;/h3&gt;
&lt;h4 id="powershell-is-a-powerful-tool-for-automating-tasks-and-managing-systems-and-one-of-its-useful-features-is-its-ability-to-generate-random-values-in-this-post-we-ll-take-a-closer-look-at-the-get-random-cmdlet-and-explore-some-of-its-lesser-known-features"&gt;PowerShell is a powerful tool for automating tasks and managing systems, and one of its useful features is its ability to generate random values. In this post, we'll take a closer look at the Get-Random cmdlet and explore some of its lesser-known features.&lt;/h4&gt;
&lt;p&gt;To generate a random number between two values using Get-Random, you can use the -Minimum and -Maximum parameters. For example, to generate a random number between 1 and 10, you can run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But did you know that you can also use the -Count parameter to generate multiple random values at once? For example, the following command generates three random numbers between 1 and 10 and stores them in an array:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;10&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Count&lt;/span&gt; &lt;span class="hljs-number"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also pipe values to the Get-Random cmdlet, including strings, PSObjects, and other data types. The resulting output will depend on the input type, and there may be some typecasting involved. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-string"&gt;"one"&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$&lt;/span&gt;([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Test = &lt;span class="hljs-string"&gt;"test"&lt;/span&gt;
    Test2 = &lt;span class="hljs-number"&gt;4&lt;/span&gt;
}),&lt;span class="hljs-number"&gt;3&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;get-random&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In addition to these features, Get-Random also includes a -Shuffle parameter that can be used to randomize the order of an input collection. While it may not always have a practical use case, it can be a fun way to mix things up.&lt;/p&gt;
&lt;p&gt;The results are based on the input type, but it's important to be aware that typecasting can occur with certain input types.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Input Type&lt;/th&gt;
&lt;th align="center"&gt;Output Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;SByte&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Byte&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Int16&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;UInt16&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Int32&lt;/td&gt;
&lt;td align="center"&gt;Int32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;UInt32&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Int64&lt;/td&gt;
&lt;td align="center"&gt;Int64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;UInt64&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Single&lt;/td&gt;
&lt;td align="center"&gt;Double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.4/Microsoft.PowerShell.Utility/Get-Random.md"&gt;Get-Help online reference&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Perhaps this was no new information for you, but it demonstrates the value of reading the help page for even the most familiar cmdlets, as there may be useful features or parameters that you were not aware of before.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Mon, 03 Apr 2023 14:28:02 -0700</pubDate></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/soft-skills-part-2</guid><link>https://thedavecarroll.com/powershell/soft-skills-part-2/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>soft skills</category><category>career</category><category>collaboration</category><title>Soft Skills - Part 2 - Collaboration</title><description>On the Road to DevOps, Don't Forget the Soft Skills</description><pubDate>Mon, 03 Apr 2023 00:00:00 -0500</pubDate><a10:updated>2023-04-03T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/soft-skills-part-2/">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This article is the second in a series of three which is a republishing of my chapter on soft skills from the &lt;a href="https://leanpub.com/psconfbook2" target="_blank"&gt;PowerShell Conference Book Volume 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you haven’t read the &lt;a href="https://thedavecarroll.com/powershell/soft-skills-part-1/" target="_blank"&gt;first article on communication&lt;/a&gt;,
that’s okay, as each article has it’s own topics.
I would suggest to read it though, as it will help round out your general knowledge of soft skills.&lt;/p&gt;

&lt;h2 id="collaboration"&gt;Collaboration&lt;/h2&gt;

&lt;p&gt;Collaboration isn’t easy.&lt;/p&gt;

&lt;p&gt;Personalities often collide, fueling negative emotions which break down the connections that allow for collaboration.
This happens because everyone is a unique individual, a human being capable of myriad emotions (some simultaneously).&lt;/p&gt;

&lt;p&gt;Collaboration fails due to a lack of goals and expectations.
It’s also hindered by trust issues between &lt;strong&gt;&lt;em&gt;Us&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Them&lt;/em&gt;&lt;/strong&gt;, especially because of the &lt;em&gt;Chasm of IT&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id="how-to-collaborate-for-success"&gt;How to Collaborate for Success&lt;/h3&gt;

&lt;p&gt;Collaboration takes effort.
Draft, enact, and maintain a plan to promote success for collaboration.
Like communication, collaboration is a skill that can be learned and expanded upon.&lt;/p&gt;

&lt;h4 id="defined-goals"&gt;Defined Goals&lt;/h4&gt;

&lt;p&gt;Your team, department, and organization should be working toward a single, clearly defined goal.
In fact, having one goal is a staple for an organization implementing DevOps principles.&lt;/p&gt;

&lt;p&gt;Collaboration within your team should further that goal.
Create short and long-term goals that support it.&lt;/p&gt;

&lt;p&gt;Everyone on the team must understand the current goal, along with the organizational goal.
Furthermore, each team member must know how their contribution will meet various goal objectives.&lt;/p&gt;

&lt;h4 id="expectations"&gt;Expectations&lt;/h4&gt;

&lt;p&gt;The collaboration team must set the expectations for each member’s role assignment and set the frequency of standing meetings.
The team must decide the ways information will be shared, both internally and externally.&lt;/p&gt;

&lt;p&gt;Discuss tools and standards for communication and work performed.
Establish metrics that should correlate with specific outcomes of each goal.&lt;/p&gt;

&lt;h4 id="trust"&gt;Trust&lt;/h4&gt;

&lt;p&gt;The pioneers and early adopters of DevOps practices realized that teamwork was the only way to alter the IT landscape to support emerging demands.
Collaboration, the foundation of teamwork, requires trust between team members and trust between the employee and the organization.
People mustn’t fear judgment to present their ideas and solutions.
Failures shouldn’t be fodder for blame-casting.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;DevOps is a result of a healthy culture and healthy thinking.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;—Dave Hahn, SRE Manager at Netflix, &lt;em&gt;DevOpsDays Rockies 2016&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Building trust, or especially repairing broken trust, doesn’t happen overnight.
People must walk away from their comfort zones and have a safe setting, free from retribution.
It &lt;strong&gt;must&lt;/strong&gt; be okay for people to allow their humanity to show, to be human, and to make mistakes.&lt;/p&gt;

&lt;h4 id="humans-make-mistakes-learn-from-them"&gt;Humans Make Mistakes, Learn from Them&lt;/h4&gt;

&lt;h5 id="you-are-human"&gt;You are Human&lt;/h5&gt;

&lt;p&gt;The Greeks were the first to utter “know thyself” but they weren’t the last.
As you continue to learn new skills in your career, and the world in general, don’t forget to learn about the most important person to you there is—you!
It’ll take some reflection and insight to figure out just who you are, how you feel, and why you feel.
Don’t worry if you struggle to find, and meet, the inner you.
Certain types of people are better at self-reflection and self-awareness.
Don’t allow discouragement to settle on you and don’t give up.&lt;/p&gt;

&lt;p&gt;Here are a few things to remember:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You are a human being, prone to mistakes.&lt;/li&gt;
  &lt;li&gt;Emotions and needs drive you.&lt;/li&gt;
  &lt;li&gt;Forgive yourself for your shortcomings, failures, bad decisions, and mistakes.&lt;/li&gt;
  &lt;li&gt;Forgive others, not only for them but for yourself.&lt;/li&gt;
  &lt;li&gt;Emotional baggage will encumber you, so keep it as light as possible.&lt;/li&gt;
  &lt;li&gt;Accept yourself, as is, without warranty.&lt;/li&gt;
  &lt;li&gt;Your voice and your experience are valid and can help others.&lt;/li&gt;
  &lt;li&gt;Believe in yourself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id="your-co-workers-are-human-too"&gt;Your Co-workers are Human, Too&lt;/h5&gt;

&lt;p&gt;You should realize that everyone else is a human being, just like you.
Likewise, they’re prone to mistakes and they’re driven by needs and emotions.
From the outside, you can’t see their emotional baggage but, internally, they could be pushing a hotel luggage cart full of bags with another one in tow behind them.&lt;/p&gt;

&lt;p&gt;If you were overloaded emotionally, you would want a little compassion or, at least, consideration.
It’s logical (and courteous) to assume your co-workers, friends, or family would want the same.
For instance, while in a conversation with another, if you happen to sense they’re emotionally compromised, offer to postpone the discussion.
Give them space so they can recharge their batteries or deal with whatever is bothering them.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Be excellent to each other.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;—Bill S. Preston, Esq., &lt;em&gt;Bill &amp;amp; Ted’s Excellent Adventure&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id="effective-meetings"&gt;Effective Meetings&lt;/h4&gt;

&lt;p&gt;Most collaboration occurs in, or begins with, meetings.
Meetings and other face-to-face communications should have an agenda.
It may be as simple as ordering some hot chicken at Hattie B’s, or it could be discussing the firewall requirements of supporting network traffic for Microsoft 365 applications.
The agenda is usually set by the person who called the meeting (or who stepped up to the counter at Hattie B’s).&lt;/p&gt;

&lt;h5 id="stay-on-topic"&gt;Stay On Topic&lt;/h5&gt;

&lt;p&gt;Discuss and assign current tasks and how they relate to the team’s goal in meetings, along with accomplishments and setbacks.&lt;/p&gt;

&lt;p&gt;It’s the responsibility of the meeting’s leader to keep the discussion on topic.
Each topic on the agenda should have an allotted time.
After the topic discussion has ended or the allotted time reached, the leader should take control of the meeting.
They should restate any conclusions and action items for the topic, allowing for attendees to make comments or exceptions.
Any exceptions should be added to the next meeting’s agenda or followed up via email.
Lastly, the leader should introduce the next item on the agenda and start the discussion or ask the person who added the topic to begin.&lt;/p&gt;

&lt;h5 id="off-agenda-topics"&gt;Off Agenda Topics&lt;/h5&gt;

&lt;p&gt;If a topic isn’t on the agenda, or a discussion devolves into another topic, the leader should acknowledge it and the person who brought it up.
The topic, however, should be shelved until the end of the meeting.
If there is enough time left, the topic can be discussed.
If not, then the topic should be added to the next meeting’s agenda.&lt;/p&gt;

&lt;h5 id="limited-time-offer"&gt;Limited-Time Offer&lt;/h5&gt;

&lt;p&gt;Without a strong leader, a meeting’s discussion can derail into a jumbled mess.
Meetings that fall apart is one reason why people typically don’t like meetings.
These unproductive meetings do, in fact, become a waste of time.&lt;/p&gt;

&lt;p&gt;Be sure to send out a summary of the meeting discussion and any action items as soon as possible after the meeting adjourns.
This allows attendees another chance to verify their understanding of the meeting’s outcome, or reply with follow up questions.&lt;/p&gt;

&lt;h4 id="negotiation"&gt;Negotiation&lt;/h4&gt;

&lt;p&gt;During meetings or other collaborative spaces, you need to execute the art of negotiation.
Here are some key points that should help you negotiate more effectively.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Act professionally always, treating everyone with respect and civility.&lt;/li&gt;
  &lt;li&gt;Compromise requires give and take.&lt;/li&gt;
  &lt;li&gt;Learn how to recognize the signs of brewing conflict or misunderstanding.&lt;/li&gt;
  &lt;li&gt;Once conflict presents itself, learn how to resolve it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’ve probably been in meetings many times when tension starts growing.
You can hear it in the voices in the room.
You can see it in facial expressions and body movements—the look of bewilderment squinching the mouth or anger furling the brow.&lt;/p&gt;

&lt;p&gt;When you recognize these signs, try to pause the meeting.
Take the conversation back a few sentences and start a discussion around the topic that caused some misunderstanding or infuriated someone.
Many times, a wrong word choice causes the misunderstanding.
Other times, preconceptions causes the confusion.&lt;/p&gt;

&lt;p&gt;Handling an angry person is far more complicated than dealing with a misunderstanding.
Begin with keeping your own emotions out of the discussion.
Calm and collected is the way to go.
Acknowledge their anger.
If possible, get them to tell you what exactly angered them.
If you were the cause, perhaps take responsibility and apologize.
Involve a third-party to help with conflict resolution, if necessary.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Most importantly, never put yourself or others in harms way, and never allow a heated discussion to escalate to a physical altercation.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;Collaboration can only come from effective communication which comes from listening and understanding each other.
Knowing that people are driven by emotions and needs, you must allow yourself and others to be human.
Be sincere and genuine when you offer to help others achieve their goals; remember the times when someone helped you.&lt;/p&gt;

&lt;p&gt;As this is the second article in a short multi-part series, please add this site to your favorite news aggregator or bookmark it to return next week when part two on collaboration will be published.&lt;/p&gt;

&lt;p&gt;Thank you for reading this article.
I really would like to hear your thoughts on it.&lt;/p&gt;

&lt;h2 id="devops-reading-material"&gt;DevOps Reading Material&lt;/h2&gt;

&lt;p&gt;While this chapter focuses on improving soft skills, the books (and one yearly report) listed below illustrate the shift in mindset required for a practicing DevOps organization.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Author(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;The Unicorn Project: A Novel about Digital Disruption, Rebels, and Overthrowing the Ancient Powerful Order&lt;/td&gt;
      &lt;td&gt;Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&lt;/td&gt;
      &lt;td&gt;Gene Kim, Kevin Behr, and George Spafford&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Beyond the Phoenix Project&lt;/td&gt;
      &lt;td&gt;Gene Kim, John Willis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations&lt;/td&gt;
      &lt;td&gt;Gene Kim, Jez Humble, and Patrick Debois&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations&lt;/td&gt;
      &lt;td&gt;Nicole Forsgren PhD, Jez Humble, Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation&lt;/td&gt;
      &lt;td&gt;Jez Humble and David Farley&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Making Work Visible: Exposing Time Theft to Optimize Work and Flow&lt;/td&gt;
      &lt;td&gt;Dominica DeGrandis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The State of DevOps Report, a yearly report based on survey data&lt;/td&gt;
      &lt;td&gt;Puppet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Goal: A Process of Ongoing Improvement&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt, Jeff Cox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Theory of Constraints&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The last two books aren’t directly related to DevOps.
They were, however, inspirational in establishing the underpinnings of DevOps.&lt;/p&gt;
&lt;/blockquote&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10791</guid><link>https://devdojo.com/hcritter/powershell-performance-test-file-reading</link><author>Christian Ritter</author><category>powershell</category><category>methods</category><category>reading</category><category>files</category><category>filecontent</category><title>PowerShell Performance-Test: File Reading</title><description>&lt;h3 id="powershell-performance-test-file-reading-which-method-reads-a-file-the-fastest"&gt;PowerShell Performance-Test: File Reading - Which method reads a file the fastest?&lt;/h3&gt;
&lt;h4 id="there-are-several-methods-and-ways-to-read-the-content-of-a-file-in-powershell-with-the-most-commonly-used-being-get-content"&gt;There are several methods and ways to read the content of a file in PowerShell, with the most commonly used being Get-Content.&lt;/h4&gt;
&lt;p&gt;I have to point out that all of the tests regards to read a file line by line. Thanks for that hint to: &lt;a href="https://twitter.com/nohwnd"&gt;nohwnd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, there are faster ways to read files that are not as widely known. In this article, we will compare six different methods for reading files in PowerShell and determine which one is the fastest. The following methods were tested:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get-Content&lt;/li&gt;
&lt;li&gt;[System.IO.StreamReader]::ReadLine() - Classic Way&lt;/li&gt;
&lt;li&gt;[System.IO.StreamReader]::ReadLine() - Peek&lt;/li&gt;
&lt;li&gt;[System.IO.StreamReader]::ReadLine() - End Of Stream&lt;/li&gt;
&lt;li&gt;Switch-Statement -File
All tests were performed using a file containing 500000 lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="get-content"&gt;Get-Content&lt;/h4&gt;
&lt;p&gt;The most typical PowerShell way to read a file is to use Get-Content:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$File&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;Get-Content&lt;/span&gt; &lt;span class="hljs-variable"&gt;$LargeFile&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$Line&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-variable"&gt;$File&lt;/span&gt;){
	&lt;span class="hljs-variable"&gt;$lines&lt;/span&gt;++
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this method, we first have to store the file content into a variable, and then we can iterate through it.&lt;/p&gt;
&lt;h4 id="system-io-file-readalllines"&gt;System.IO.File::ReadAllLines()&lt;/h4&gt;
&lt;p&gt;The second most common way is to use the [System.IO.File] class with the ReadAllLines() method:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;$File = [system.io.file]::ReadAllLines($LargeFile)
&lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt; ($Line in $File){
	$lines++
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similarly to Get-Content, we have to read all lines first and then iterate through them.&lt;/p&gt;
&lt;h4 id="system-io-streamreader-readline-classic-way"&gt;[System.IO.StreamReader]::ReadLine() - Classic Way&lt;/h4&gt;
&lt;p&gt;The following three methods are variations of the System.IO.StreamReader class with the ReadLine() method. The most common way to use it is:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs ruby"&gt;$sread = [System.IO.StreamReader]&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:new&lt;/span&gt;($largefile) 
&lt;span class="hljs-keyword"&gt;while&lt;/span&gt; ($sread.ReadLine()) {
    $lines++
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this method, we initialize the StreamReader object and iterate right through, which should be quite fast. However, issues can appear with this method, such as empty lines not being read, as demonstrated in &lt;a href="https://twitter.com/cj_berlin/"&gt;Evgenij Smirnov`s&lt;/a&gt; &lt;a href="https://it-pro-berlin.de/2020/03/powershell-streamreader-readline-und-leere-zeilen/"&gt;Blog-Post&lt;/a&gt;. To solve this problem, Evgenij provides two other methods using the StreamReader class.&lt;/p&gt;
&lt;h4 id="system-io-streamreader-readline-peek"&gt;[System.IO.StreamReader]::ReadLine() - Peek&lt;/h4&gt;
&lt;p&gt;The first of these methods is the Peek() method:&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$sread&lt;/span&gt; = [&lt;span class="hljs-type"&gt;System.IO.StreamReader&lt;/span&gt;]::new(&lt;span class="hljs-variable"&gt;$largefile&lt;/span&gt;) 
&lt;span class="hljs-keyword"&gt;while&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$sread&lt;/span&gt;.Peek() &lt;span class="hljs-operator"&gt;-gt&lt;/span&gt; &lt;span class="hljs-literal"&gt;-1&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$sread&lt;/span&gt;.ReadLine() | &lt;span class="hljs-built_in"&gt;Out-Null&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$lines&lt;/span&gt;++
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method uses the Peek() method to check if there are any characters left to read, and then reads the line and increments the line count.&lt;/p&gt;
&lt;h4 id="system-io-streamreader-readline-end-of-stream"&gt;[System.IO.StreamReader]::ReadLine() - End Of Stream&lt;/h4&gt;
&lt;p&gt;The second method uses the EndOfStream property:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$sread&lt;/span&gt; = [&lt;span class="hljs-type"&gt;System.IO.StreamReader&lt;/span&gt;]::new(&lt;span class="hljs-variable"&gt;$largefile&lt;/span&gt;) 
&lt;span class="hljs-keyword"&gt;while&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$sread&lt;/span&gt;.EndOfStream &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-variable"&gt;$false&lt;/span&gt;) {
    &lt;span class="hljs-variable"&gt;$line&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$sread&lt;/span&gt;.ReadLine()
    &lt;span class="hljs-variable"&gt;$lines&lt;/span&gt;++
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method checks if the EndOfStream property is false and then reads the line and increments the line count.&lt;/p&gt;
&lt;h4 id="switch-statement-file"&gt;Switch-Statement -File&lt;/h4&gt;
&lt;p&gt;One uncommon but useful way to read a file in PowerShell is to use a switch statement with the -File parameter. The switch statement can then be used to perform different actions based on the contents of the file.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-keyword"&gt;switch&lt;/span&gt; &lt;span class="hljs-operator"&gt;-File&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$LargeFile&lt;/span&gt;){
    Default {
        &lt;span class="hljs-variable"&gt;$lines&lt;/span&gt;++
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To compare the performance of this method with other popular ways of reading files, we conducted a test on a file with 500,001 lines. Here are the results:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Lines&lt;/th&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="left"&gt;Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;Get-Content&lt;/td&gt;
&lt;td align="left"&gt;10815&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;[System.IO.File]::ReadAllLines()&lt;/td&gt;
&lt;td align="left"&gt;3374&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;[System.IO.StreamReader]::ReadLine() - Classic Way&lt;/td&gt;
&lt;td align="left"&gt;3644&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;[System.IO.StreamReader]::ReadLine() - Peek&lt;/td&gt;
&lt;td align="left"&gt;10278&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;[System.IO.StreamReader]::ReadLine() - End Of Stream&lt;/td&gt;
&lt;td align="left"&gt;4619&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;500001&lt;/td&gt;
&lt;td align="left"&gt;Switch-Statement -File&lt;/td&gt;
&lt;td align="left"&gt;1356&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Surprisingly, the switch statement with the -File parameter was the fastest method. The peek and end-of-stream methods had a much larger difference in performance.&lt;/p&gt;
&lt;p&gt;It's always good to keep different methods in mind when working with files and choosing the right one for the task at hand. Who knows, in the future we might discover even faster ways to read files!&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Sun, 02 Apr 2023 11:50:01 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10782</guid><link>https://devdojo.com/hcritter/powershell-technique-switching</link><author>Christian Ritter</author><category>powershell</category><category>technique</category><category>switch</category><title>PowerShell-Technique: Switching</title><description>&lt;h3 id="enhance-your-powershell-scripting-with-switch-statements"&gt;Enhance Your PowerShell Scripting with Switch Statements&lt;/h3&gt;
&lt;h4 id="have-you-ever-found-yourself-writing-a-lot-of-if-elseif-else-statements-in-your-powershell-script-you-may-have-heard-of-the-switch-statement-as-an-alternative-but-do-you-know-all-of-its-capabilities"&gt;Have you ever found yourself writing a lot of if/elseif/else statements in your PowerShell script? You may have heard of the switch statement as an alternative, but do you know all of its capabilities?&lt;/h4&gt;
&lt;p&gt;Let's start with an example that uses if/elseif/else statements:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$Age&lt;/span&gt; = &lt;span class="hljs-number"&gt;16&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Null&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Age&lt;/span&gt; &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; &lt;span class="hljs-number"&gt;16&lt;/span&gt;){
    &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Soft Drink"&lt;/span&gt;
}&lt;span class="hljs-keyword"&gt;elseif&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Age&lt;/span&gt; &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; &lt;span class="hljs-number"&gt;18&lt;/span&gt;){
    &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"SoftDrink"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Wine"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Beer"&lt;/span&gt;
}&lt;span class="hljs-keyword"&gt;else&lt;/span&gt;{
    &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"SoftDrink"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Wine"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Beer"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Booze"&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this code works and achieves our goal, it can quickly become difficult to read and maintain as the number of conditions increases. Fortunately, the switch statement can simplify our code and make it easier to read:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$Age&lt;/span&gt; = &lt;span class="hljs-number"&gt;16&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Null&lt;/span&gt;

&lt;span class="hljs-keyword"&gt;switch&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$Age&lt;/span&gt;) {
    { &lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; &lt;span class="hljs-number"&gt;16&lt;/span&gt; } { &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Soft Drink"&lt;/span&gt;; &lt;span class="hljs-keyword"&gt;break&lt;/span&gt; }
    { &lt;span class="hljs-variable"&gt;$_&lt;/span&gt; &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; &lt;span class="hljs-number"&gt;18&lt;/span&gt; } { &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"SoftDrink"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Wine"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Beer"&lt;/span&gt;; &lt;span class="hljs-keyword"&gt;break&lt;/span&gt; }
    default { &lt;span class="hljs-variable"&gt;$Drink&lt;/span&gt; = &lt;span class="hljs-string"&gt;"SoftDrink"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Wine"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Beer"&lt;/span&gt;, &lt;span class="hljs-string"&gt;"Booze"&lt;/span&gt; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code is more readable, structured, and aesthetically pleasing. Additionally, the switch statement allows us to use regular expressions to match patterns, as shown in the following example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$logFile&lt;/span&gt; = &lt;span class="hljs-string"&gt;"C:\Logs\access.log"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ipAddresses&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;()
&lt;span class="hljs-variable"&gt;$urls&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;()
&lt;span class="hljs-variable"&gt;$emailAddresses&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;()

&lt;span class="hljs-keyword"&gt;switch&lt;/span&gt; &lt;span class="hljs-operator"&gt;-regex&lt;/span&gt; (&lt;span class="hljs-built_in"&gt;Get-Content&lt;/span&gt; &lt;span class="hljs-variable"&gt;$logFile&lt;/span&gt;) {
    &lt;span class="hljs-string"&gt;"\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b"&lt;/span&gt; { &lt;span class="hljs-variable"&gt;$ipAddresses&lt;/span&gt; += &lt;span class="hljs-variable"&gt;$matches&lt;/span&gt;[&lt;span class="hljs-number"&gt;0&lt;/span&gt;] }
    &lt;span class="hljs-string"&gt;"http(s)?://[^\s]*"&lt;/span&gt;                     { &lt;span class="hljs-variable"&gt;$urls&lt;/span&gt; += &lt;span class="hljs-variable"&gt;$matches&lt;/span&gt;[&lt;span class="hljs-number"&gt;0&lt;/span&gt;] }
    &lt;span class="hljs-string"&gt;"\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b"&lt;/span&gt; { &lt;span class="hljs-variable"&gt;$emailAddresses&lt;/span&gt; += &lt;span class="hljs-variable"&gt;$matches&lt;/span&gt;[&lt;span class="hljs-number"&gt;0&lt;/span&gt;] }
    default                                 { &lt;span class="hljs-keyword"&gt;continue&lt;/span&gt; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, we use the -regex parameter to match IP addresses, URLs, and email addresses in a log file and store them in separate arrays. The switch statement makes it easy to execute different code for each pattern.&lt;/p&gt;
&lt;p&gt;Finally, we can use wildcards as conditions in a switch statement. The following example demonstrates how to use wildcards to check for different file versions:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$fileName&lt;/span&gt; = &lt;span class="hljs-string"&gt;"example_file_v1.2.csv"&lt;/span&gt;

&lt;span class="hljs-keyword"&gt;switch&lt;/span&gt; &lt;span class="hljs-operator"&gt;-wildcard&lt;/span&gt; (&lt;span class="hljs-variable"&gt;$fileName&lt;/span&gt;) {
    &lt;span class="hljs-string"&gt;"*_v1.*"&lt;/span&gt; { &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"This is version 1 of the file."&lt;/span&gt; }
    &lt;span class="hljs-string"&gt;"*_v2.*"&lt;/span&gt; { &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"This is version 2 of the file."&lt;/span&gt; }
    &lt;span class="hljs-string"&gt;"*_v3.*"&lt;/span&gt; { &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"This is version 3 of the file."&lt;/span&gt; }
    default  { &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"This is an unknown version of the file."&lt;/span&gt; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, we use the -wildcard parameter to check if a file name contains a specific keyword. The switch statement makes it easy to match patterns against a string and execute different code based on the matching pattern.&lt;/p&gt;
&lt;p&gt;By using switch statements in PowerShell, you can simplify your code, improve its readability, and take advantage of its powerful features, such as regular expressions and wildcards.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Thu, 30 Mar 2023 14:47:38 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10772</guid><link>https://devdojo.com/hcritter/powershell-technique-update-typedata</link><author>Christian Ritter</author><category>powershell</category><category>update-typedata</category><category>objects</category><title>PowerShell-Technique: Update-TypeData</title><description>&lt;h3 id="enhancing-powershell-objects-with-update-typedata"&gt;Enhancing PowerShell objects with Update-TypeData&lt;/h3&gt;
&lt;h4 id="sometimes-the-objects-that-powershell-cmdlets-return-don-t-have-all-the-properties-and-methods-that-you-need"&gt;Sometimes the objects that PowerShell cmdlets return don't have all the properties and methods that you need.&lt;/h4&gt;
&lt;p&gt;Fortunately, PowerShell provides a way to extend these objects using a feature called extended type data (ETD). ETD lets you add, remove, or modify properties and methods of a type, such as a .NET class or a PowerShell object.&lt;/p&gt;
&lt;p&gt;One way to add new properties to PowerShell objects is by using the Update-TypeData cmdlet. Here's an example that shows how to add a new property to every System.IO.DirectoryInfo object returned by the Get-ChildItem cmdlet:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$agedFiveDaysScript&lt;/span&gt; = {
    &lt;span class="hljs-keyword"&gt;if&lt;/span&gt; ((&lt;span class="hljs-built_in"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Path&lt;/span&gt; &lt;span class="hljs-keyword"&gt;$this&lt;/span&gt;.FullName).CreationTime &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; (&lt;span class="hljs-built_in"&gt;Get-Date&lt;/span&gt;).AddDays(&lt;span class="hljs-literal"&gt;-5&lt;/span&gt;)) {
        &lt;span class="hljs-variable"&gt;$true&lt;/span&gt;
    } &lt;span class="hljs-keyword"&gt;else&lt;/span&gt; {
        &lt;span class="hljs-variable"&gt;$false&lt;/span&gt;
    }
}

&lt;span class="hljs-variable"&gt;$etd&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    TypeName = &lt;span class="hljs-string"&gt;'System.IO.DirectoryInfo'&lt;/span&gt;
    MemberType = &lt;span class="hljs-string"&gt;'ScriptProperty'&lt;/span&gt;
    MemberName = &lt;span class="hljs-string"&gt;'AgedFiveDays'&lt;/span&gt;
    Value = &lt;span class="hljs-variable"&gt;$agedFiveDaysScript&lt;/span&gt;
}

&lt;span class="hljs-built_in"&gt;Update-TypeData&lt;/span&gt; @etd

&lt;span class="hljs-built_in"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Path&lt;/span&gt; &lt;span class="hljs-string"&gt;'C:\Temp'&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Directory&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Select-Object&lt;/span&gt; FullName, AgedFiveDays
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, a new script property called AgedFiveDays is added to the System.IO.DirectoryInfo type using ETD. The AgedFiveDays property returns $true if the directory contains any items that were created more than 5 days ago, or $false if all items were created less than 5 days ago. This could be useful for finding old directories in a file share for cleanup, for example.&lt;/p&gt;
&lt;p&gt;Note that the assignment of the ETD definition only exists in the current PowerShell session and will affect every object of the defined type created afterwards. This means that it could cause compatibility issues with other cmdlets or functions that return objects of the same type.&lt;/p&gt;
&lt;p&gt;Alternatively, you can pipe a cmdlet directly to the Update-TypeData command, without using a variable. However, be aware that the returned object could contain other types in addition to the expected one, like Get-ChildItem.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;Get-Process&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Update-TypeData&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; System.Diagnostics.Process &lt;span class="hljs-literal"&gt;-MemberType&lt;/span&gt; NoteProperty &lt;span class="hljs-literal"&gt;-MemberName&lt;/span&gt; MyCustomProperty &lt;span class="hljs-literal"&gt;-Value&lt;/span&gt; &lt;span class="hljs-string"&gt;'Hello, world!'&lt;/span&gt;

&lt;span class="hljs-built_in"&gt;Get-Process&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Select-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-First&lt;/span&gt; &lt;span class="hljs-number"&gt;1&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;ForEach-Object&lt;/span&gt; {
    &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"Process ID: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Id)"&lt;/span&gt;
    &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"Process name: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.ProcessName)"&lt;/span&gt;
    &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"My custom property value: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.MyCustomProperty)"&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, a new note property called MyCustomProperty is added to the System.Diagnostics.Process type. The MyCustomProperty property is not defined by default, so we add it using ETD with a simple string value. Then, we use Select-Object and ForEach-Object to show the value of the new property for the first process returned by Get-Process cmdlet.&lt;/p&gt;
&lt;p&gt;ETD can be a powerful tool for modifying and enhancing objects in PowerShell, but use it with caution to avoid compatibility issues.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Tue, 28 Mar 2023 06:35:51 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10765</guid><link>https://devdojo.com/hcritter/powershell-technique-trapping</link><author>Christian Ritter</author><category>powershell</category><category>technique</category><category>trap</category><category>trapping</category><title>PowerShell-Technique: Trapping</title><description>&lt;h3 id="enhance-your-powershell-scripting-with-trapping"&gt;Enhance Your PowerShell Scripting with Trapping&lt;/h3&gt;
&lt;h4 id="this-blog-post-explains-how-to-use-the-trap-statement-in-powershell-to-improve-error-handling-reduce-code-size-and-make-scripts-more-organized-and-readable"&gt;This blog post explains how to use the trap statement in PowerShell to improve error handling, reduce code size, and make scripts more organized and readable.&lt;/h4&gt;
&lt;p&gt;PowerShell's $trap statement is one of the most underutilized features, in my opinion. It can reduce code size, increase readability, and improve organization in your scripts. In this post, I will demonstrate how to use trapping to respond to errors in a uniform manner and handle different error types.&lt;/p&gt;
&lt;p&gt;Let's start with a simple example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-keyword"&gt;trap&lt;/span&gt; {
    &lt;span class="hljs-built_in"&gt;Write-Error&lt;/span&gt; &lt;span class="hljs-string"&gt;"An error occurred, Error-Message: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message)"&lt;/span&gt;
    &lt;span class="hljs-built_in"&gt;Write-EventLog&lt;/span&gt; &lt;span class="hljs-literal"&gt;-LogName&lt;/span&gt; Application &lt;span class="hljs-literal"&gt;-Source&lt;/span&gt; MyScript &lt;span class="hljs-literal"&gt;-EventId&lt;/span&gt; &lt;span class="hljs-number"&gt;1001&lt;/span&gt; &lt;span class="hljs-literal"&gt;-EntryType&lt;/span&gt; Error &lt;span class="hljs-literal"&gt;-Message&lt;/span&gt; &lt;span class="hljs-string"&gt;"An error occurred, Error-Message: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message)"&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;Break&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, every time an error occurs, we write an error message to the user and generate an 'Eventlog' entry with our error message. This makes error handling more consistent across your script.&lt;/p&gt;
&lt;p&gt;But what if we want to respond differently to specific exception types? We can define them in the trap statement as well:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-keyword"&gt;trap&lt;/span&gt; [&lt;span class="hljs-type"&gt;System.IO.FileNotFoundException&lt;/span&gt;] {
    &lt;span class="hljs-built_in"&gt;Write-Error&lt;/span&gt; &lt;span class="hljs-string"&gt;"The specified file or folder could not be found: &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Exception.Message)"&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;return&lt;/span&gt; &lt;span class="hljs-number"&gt;1002&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, we respond specifically to the System.IO.FileNotFoundException exception type, which is commonly encountered when working with files and folders. We return a unique exit code, 1002, which can be used by monitoring systems or other scripts.&lt;/p&gt;
&lt;p&gt;We can define traps for other exception types as well as a 'generic' trap for any exception that does not have a specific type. By using this technique, we do not need to treat every single exception in a catch statement of a try-catch-block, which can simplify our code and make it more readable.&lt;/p&gt;
&lt;p&gt;In summary, using trapping in your PowerShell scripts can greatly improve error handling, reduce code size, and make your scripts more organized and readable.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Mon, 27 Mar 2023 01:00:08 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10763</guid><link>https://devdojo.com/hcritter/powershell-technique-psdefaultparametervalues</link><author>Christian Ritter</author><category>powershell</category><category>$psdefaultparametervalues</category><category>default values</category><category>technique</category><title>PowerShell-Technique: $PSDefaultParameterValues</title><description>&lt;h3 id="enhance-your-powershell-scripting-with-default-parameter-values"&gt;Enhance Your PowerShell Scripting with Default Parameter Values&lt;/h3&gt;
&lt;h4 id="in-this-post-we-ll-take-a-closer-look-at-the-benefits-of-using-default-parameter-values-in-powershell-as-we-previously-explored-in-our-discussion-of-splatting-setting-default-values-for-parameters-in-your-commandlets-or-functions-can-make-your-scripts-more-efficient-and-easier-to-maintain"&gt;In this post, we'll take a closer look at the benefits of using default parameter values in PowerShell. As we previously explored in our discussion of splatting, setting default values for parameters in your commandlets or functions can make your scripts more efficient and easier to maintain.&lt;/h4&gt;
&lt;p&gt;To set default parameter values in PowerShell, you can use the $PSDefaultParameterValues preference variable. This allows you to define default values for parameters without having to specify them in the function call. For example, let's say we want to set default headers for an Invoke-RestMethod command. We can define a $headers object and then set the default headers for Invoke-RestMethod like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$headers&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        &lt;span class="hljs-string"&gt;"Authorization"&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Bearer &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Token&lt;/span&gt;.access_token)"&lt;/span&gt;
        &lt;span class="hljs-string"&gt;"Content-type"&lt;/span&gt;  = &lt;span class="hljs-string"&gt;"application/json"&lt;/span&gt;
}
&lt;span class="hljs-variable"&gt;$PSDefaultParameterValues&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    &lt;span class="hljs-string"&gt;"Invoke-RestMethod:Headers"&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Headers&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, every time we use Invoke-RestMethod in our session, the headers parameter will be automatically filled with the $headers object we defined above.&lt;/p&gt;
&lt;p&gt;One of the biggest advantages of using default parameter values over splatting is that you can easily override default values without changing them permanently. In a splat, you must change the values permanently, but with default parameter values, you can easily overwrite them as needed. For instance, you might want to switch out the $headers object for a different set of headers in a particular command call.&lt;/p&gt;
&lt;p&gt;It's also worth noting that you can define default parameter values for multiple functions or commandlets in the same hashtable, as well as use wildcards for the property name, which is always a combination of the function or commandlet name and the parameter name. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$PSDefaultParameterValues&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    &lt;span class="hljs-string"&gt;"Invoke-*:Headers"&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Headers&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This sets the default Headers value for all cmdlets with a name that starts with "Invoke".&lt;/p&gt;
&lt;p&gt;While default parameter values can simplify your code, it's important to be cautious when using wildcards in the $PSDefaultParameterValues hashtable. It can be tricky to predict how wildcard matches will affect other cmdlets or functions.&lt;/p&gt;
&lt;p&gt;Another thing to keep in mind is that when working on larger projects with multiple collaborators, default parameter values defined by one person may not be well-documented or understood by others. This can lead to confusion and bugs down the line.&lt;/p&gt;
&lt;p&gt;In summary, using default parameter values can make your PowerShell scripting more efficient and streamlined. Just be mindful of the potential risks and communicate clearly with your team when using this technique.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Sun, 26 Mar 2023 14:42:16 -0700</pubDate></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/soft-skills-part-1</guid><link>https://thedavecarroll.com/powershell/soft-skills-part-1/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>soft skills</category><category>career</category><category>communication</category><title>Soft Skills - Part 1 - Communication</title><description>On the Road to DevOps, Don't Forget the Soft Skills</description><pubDate>Sat, 25 Mar 2023 00:00:00 -0500</pubDate><a10:updated>2023-03-25T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/soft-skills-part-1/">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A few years ago, maybe the first part of 2019, I was asked to contribute a chapter for the PowerShell Conference Book Volume 2.
So much has happened since then and I don’t remember who did the asking.
The odds are decent enough though to guess &lt;a href="https://www.commandline.ninja/" target="_blank"&gt;Mike Kanakos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article is the first in a series of three which will be a republishing of my chapter on soft skills.
I’ve only gently edited a few items from the original material.&lt;/p&gt;

&lt;h2 id="on-the-road-to-devops-dont-forget-the-soft-skills"&gt;On the Road to DevOps, Don’t Forget the Soft Skills&lt;/h2&gt;

&lt;p class="notice--info"&gt;&lt;em&gt;
Hard skills like coding, debugging, system design and the ability to schedule and deliver work on time, give you permission to start your technical career.
You can’t go far if you don’t master these.
But it takes a lot more to be effective and to accomplish big things.
Big things are accomplished by effective teams.
Soft skills like communication, collaboration, negotiation, and motivating others transform collections of people into effective teams.
People that can do these things are force multipliers and are worth their weight in gold.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;
—&lt;a href="https://twitter.com/jsnover" target="_blank"&gt;Jeffrey Snover&lt;/a&gt;, Ex-Microsoft Technical Fellow, PowerShell Inventor&lt;/p&gt;

&lt;p&gt;Art suggests, “Life is a journey, not a destination.”
The same can be said of DevOps.
It’s about the journey of continual improvement of relations and processes.
It’s about a contributor, a team, and an organization delivering a product (such as an application, service, or platform) more efficiently through effective collaboration.&lt;/p&gt;

&lt;p&gt;The first &lt;em&gt;&lt;a href="https://leanpub.com/powershell-conference-book" target="_blank"&gt;PowerShell Conference Book&lt;/a&gt;&lt;/em&gt; chapter, “PowerShell as a Gateway to DevOps” by Brandon Olin, provides some additional guidelines on what DevOps is and isn’t. It also provides a sampling of tools that helps to reinforce a DevOps culture.&lt;/p&gt;

&lt;p&gt;This chapter focuses on a few key soft skills, such as communication and collaboration, that you need in your technical career, especially when practicing and applying DevOps principles and methodologies.&lt;/p&gt;

&lt;h2 id="the-great-division"&gt;The Great Division&lt;/h2&gt;

&lt;p&gt;Before exploring soft skills, consider the following statements which many of you could have heard, or even said, this morning.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Developers just don’t care about security.&lt;/li&gt;
  &lt;li&gt;The systems team is a roadblock. They were supposed to build that VM over a month ago.&lt;/li&gt;
  &lt;li&gt;They don’t even know how this works and they’re lecturing &lt;em&gt;me&lt;/em&gt; on the security implications?&lt;/li&gt;
  &lt;li&gt;We’ll never get to zero downtime deployments. They must have lost their minds.&lt;/li&gt;
  &lt;li&gt;They won’t even listen to my ideas in meetings.&lt;/li&gt;
  &lt;li&gt;I just don’t understand why they refuse to help.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These statements reflect a division between programmers, also known as software developers, and system administrators.
This division, the &lt;em&gt;Chasm of IT&lt;/em&gt;, poses a significant challenge to any organization on the path of cultural transformation to implement DevOps practices.&lt;/p&gt;

&lt;p&gt;Near the dawn of time, around January 1&lt;sup&gt;st&lt;/sup&gt; 1970, the line between programmer and system administrator was blurred, especially in Unix environments.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;[M]y strong impression is that setting up and operating early Unix systems pretty much required a programmer.&lt;/em&gt;
&lt;em&gt;As a result most or all of the people who ran early Unix systems were effectively system programmers out of necessity.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;—&lt;a href="https://twitter.com/thatcks" target="_blank"&gt;Chris Siebenmann, @thatcks&lt;/a&gt;, Overcommitted Sysadmin, &lt;em&gt;&lt;a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OperatorsAndSystemProgrammers" target="_blank"&gt;Operators and system programmers: a bit of System Administrator history, 2012&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As the Unix systems matured, programming was required less and less, giving way to a more specialized system administrator, one that could focus on the configuration and maintenance of the system.
Developers and sysadmins paths diverged even further with the proliferation of personal computers and friendly user interfaces.
The increase in users meant an increase in demand for new applications and services to support business and personal requirements.
Operating systems and applications required software developers to write the code.
Services, such as email and online communities, required complex configuration and operational stability which became the focus of the system administrator.&lt;/p&gt;

&lt;p&gt;The division between developers and sysadmins grew with each passing year due to advancements in technology and expansion of services.
The more technology changed, the more the mindset shifted in each group to handle the new demands until the &lt;em&gt;Chasm of IT&lt;/em&gt; became larger than the Grand Canyon.&lt;/p&gt;

&lt;p&gt;Being a professional in the IT industry often brings about egotism.
After all, the “I” in IT is information.
With information, comes power and control.
And with those, comes a sense of superiority, most often unwarranted.&lt;/p&gt;

&lt;p&gt;A natural mistrust exists between divided groups of people.
In turn, this mistrust creates and nourishes a mistrustful culture.
This culture colors the viewpoint for each side and creates preconceived ideas when dealing with the opposite group.&lt;/p&gt;

&lt;p&gt;Now that you have a foundational understanding of how the division was born, here are a few skills that you must master to build a bridge spanning the gap between developers and system administrators.&lt;/p&gt;

&lt;h2 id="communication"&gt;Communication&lt;/h2&gt;

&lt;p&gt;A good guess is that no one reading this shares ideas and information via a subspace communications network like the Borg.
Collaboration would be much easier if everyone had that capability.
If that were true, the entire planet would already be functioning at optimum capacity and perhaps would have evolved beyond DevOps.&lt;/p&gt;

&lt;p&gt;Instead, you rely on the communication skills you’ve learned over your lifetime.
Communication is more than just hearing what the other person is saying.
It involves actively listening and understanding the message they’re trying to convey.&lt;/p&gt;

&lt;p&gt;Like network protocols, negotiation occurs on how you are going to transmit and receive data.
This could be via phone, Skype, email, discussion board, GitHub issue, or a face-to-face in a meeting or in the hallway.
Next, choose the language.
You then open the floodgates and let the data pour out of your brain and into the receiver’s.
Or so you would hope.&lt;/p&gt;

&lt;h3 id="static-on-your-frequency"&gt;Static on Your Frequency&lt;/h3&gt;

&lt;p&gt;Several factors can hinder communication.&lt;/p&gt;

&lt;h4 id="language-and-culture"&gt;Language and Culture&lt;/h4&gt;

&lt;p&gt;The first requirement of communication is having a common language.
On diverse teams or with vendors or the community, you may interact with people who don’t speak a common language as skilled as you.&lt;/p&gt;

&lt;p&gt;Even speaking the same language doesn’t guarantee that the two of you would be able to communicate effectively.
Pop, native, or regional culture references, whether current or from a specific time, may be lost on someone who doesn’t have prior knowledge of the reference.&lt;/p&gt;

&lt;p&gt;Consider this quote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Dave, this conversation can serve no purpose anymore. Goodbye.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While it seems to be pertinent to the topic at hand, perhaps the speaker was trying to make a subtle comment on artificial intelligence (AI).
An audience comprised of early twenty-somethings would probably fail to infer that your statement was about AI, unless they were avid cinephiles.&lt;/p&gt;

&lt;p class="notice--info"&gt;By the way, the quote was said in the 1968 film, &lt;strong&gt;2001: A Space Odyssey&lt;/strong&gt;, by the ship’s computer, an AI named HAL.&lt;/p&gt;

&lt;h4 id="a-telepath-an-interrupter-and-a-know-it-all-walk-into-a-meeting"&gt;A Telepath, an Interrupter, and a Know-it-all Walk into a Meeting&lt;/h4&gt;

&lt;p&gt;Some people must believe they’re telepathic and know exactly what you are going to say.
Or they know you so well that they’re able to finish your sentences.
Or they know the subject matter better than you or anyone else, so they feel obliged to hurry the conversation along.&lt;/p&gt;

&lt;p&gt;By interrupting someone, they’re sending the message that they’re more important than the speaker or the speaker’s message.
Maybe they don’t mean it that way.
But that’s how it will be perceived.
In actuality, the person that does any of these is rude and disruptive.&lt;/p&gt;

&lt;p class="notice--info"&gt;&lt;strong&gt;Disclosure&lt;/strong&gt; &lt;br /&gt;
I have a predilection to interrupt.
As a long-time sufferer of fastidiousness, it’s difficult for me to stop myself from jumping in with a minor correction or clarification.
Impatience also compels me to slip in some predictive statements, in the guise of saving time.&lt;/p&gt;

&lt;h4 id="the-rambler"&gt;The Rambler&lt;/h4&gt;

&lt;p&gt;On the subject of being rude, it’s likewise just as rude to begin speaking and dominate the entire conversation.
It’s rude to begin talking, but never give pause so the listeners can digest what you’re saying.
It’s rude to keep on talking, raising your voice to drown out when others try to interrupt just to slow you down or to verify something you said five sentences ago.
Something compels the Rambler to be an over-talker, to bully a conversation with ego and arrogance.
Perhaps, they could be simply unaware they’re rambling.&lt;/p&gt;

&lt;h4 id="emotions"&gt;Emotions&lt;/h4&gt;

&lt;p&gt;Human emotions can block communication.
For instance, just learning of some incredibly sad news, it’s unlikely that you would be able to focus enough to fully comprehend a message that you receive.
Your mind, and heart, are simply overwhelmed.&lt;/p&gt;

&lt;p&gt;Likewise, getting into an argument before communicating, regardless with whom you communicate, your guard will be up, and you may not be receptive to another one’s ideas.
An adversarial stance, whether born of mistrust or disgust, could negate any chance of effectively communicating with another.
They in turn would sense the aggression and, most likely, would become adversarial as well.
In these times, communication breaks down before it can even begin.&lt;/p&gt;

&lt;p&gt;This has played out on numerous occasions.
In one corner of the room, a developer prepares to bring her ideas to the table.
In the opposite corner, a sysadmin fumbles with his papers, angered that he must take time out of his busy day for the meeting.
His hackles are up before anyone utters the first word.
This meeting could have taken place over email, right?
Maybe, or maybe not.
That isn’t the point.
Any chance of having a productive meeting is lost, along with everyone’s time.&lt;/p&gt;

&lt;p&gt;Aggressive or negative interactions could take hours, days, or even weeks for the emotional damage to subside.
Often, this leaves scars, emotional baggage, which makes any future engagements just that much more difficult.&lt;/p&gt;

&lt;h5 id="emotional-baggage"&gt;Emotional Baggage&lt;/h5&gt;

&lt;p&gt;Imagine that emotional events (parts of your history, even recent history, having a significant emotional impact) can be packed away into different suitcases, backpacks, handbags, or luggage.
If you attempt to carry all these events at the same time, you’ll be encumbered and, effectively, immobilized.
Much like boarding a plane, each day you have to decide which emotion-laden luggage is checked (and put in the plane’s cargo hold) and which you accept as a burden (as your carry-on).&lt;/p&gt;

&lt;p&gt;Imagine that your backpack, the only luggage you’ll carry with you, is full of the most recent emotional events.
Give it a fictitious weight of 40 lbs.
If this were a real backpack, with real contents of the same weight, carrying it would definitely be a greater drain on your physical energy than without.&lt;/p&gt;

&lt;p&gt;The same is true for your emotional energy.
For virtually everyone, interaction with others can have a positive or negative emotional influence.&lt;/p&gt;

&lt;h4 id="preferred-method"&gt;Preferred Method&lt;/h4&gt;

&lt;p&gt;While it’s a minor facet of communication, the fact that each person has a preferred method of communication is something to consider.
Some may prefer face-to-face and don’t readily digest any written information.
Others may prefer email and avoid direct human contact.&lt;/p&gt;

&lt;h4 id="target-audience"&gt;Target Audience&lt;/h4&gt;

&lt;p&gt;If you were to send a technically detailed email to the VP of Marketing, the chance your message will be fully comprehended would likely be slim-to-none.
Similarly, say you just implemented a new solution but don’t have the time to provide full documentation before a scheduled trip.
If you were to send a generalized email to your team and omit key details about the new solution, your team would most likely not have enough information to handle an outage while you are away and your vacation would be disrupted.&lt;/p&gt;

&lt;h3 id="how-to-communicate-more-effectively"&gt;How to Communicate More Effectively&lt;/h3&gt;

&lt;p&gt;You can address communication issues by approaching how you communicate with individuals, or a larger audience, using the following guidelines.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Handling Language and Cultural Differences&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;You &lt;em&gt;&lt;strong&gt;can&lt;/strong&gt;&lt;/em&gt; overcome a language barrier where you and the other person has some skill in a shared language.
In fact, listening to others with accents is a skill that can be learned, but you must be patient and allow yourself enough time.
If after a while you are still struggling to understand, let the other person know that you are having trouble understanding them.
Perhaps written communication would be better in this instance.&lt;/p&gt;

    &lt;p&gt;Keep pop/native/regional culture references to a minimum or, at the least, only use those references which has had a global reach.
Without trying to invoke ageism, simply consider the age of the audience when using a reference from a different time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Become an Active Listener&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;If you often find yourself interjecting or interrupting a speaker in a discussion, the first step, and perhaps the hardest, is to realize your &lt;em&gt;current&lt;/em&gt; part in the discussion.
Even if you &lt;em&gt;are&lt;/em&gt; telepathic and know what the person is going to say, give &lt;em&gt;them&lt;/em&gt; the opportunity to say it.
You are a listener and listeners &lt;em&gt;listen&lt;/em&gt;.
Don’t think about what you want to say or ask.
Don’t think about what the speaker &lt;em&gt;might&lt;/em&gt; say next.
They will give you the chance to ask questions or make comments between their topics because they know &lt;em&gt;their&lt;/em&gt; part of the discussion.
Actively listen to the speaker and digest the information they’re presenting.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Don’t Ramble On&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Remember, communication is about what the listener perceives just as much as the message you are conveying, maybe even more so.
When the roles reverse and you become the current speaker, your first job is to convey your message.
Your second job is to ensure the listeners understand what you are saying.
Help them to understand by giving them time to assimilate the information you are providing.
Give enough pause between the box-cars in your train of thought so they can ask you questions to clarify their understanding.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Only One Carry-On Allowed (Keep Your Emotions in Check)&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;The heated discussion between the developer and sysadmin, in the previous pages, generated a negative emotional event for both.
When either prepares for the next meeting or starts thinking about the other, they transfer the emotional event to their current backpack.
They carry it with them to the meeting or set it on their lap as they write the email to (or about) the other person.&lt;/p&gt;

    &lt;p&gt;Instead of putting the emotional event into the backpack, examine it objectively to determine the cause of the argument.
What was said and who said it?
Were there other factors (known to you) that caused the aggression?&lt;/p&gt;

    &lt;p&gt;Take this objective information and leave the emotions that were stored in the event in the luggage you will check for the day.
Use this information as warning markers during the upcoming meeting or interaction to help you steer clear of volatile and incendiary topics.
At a minimum, allow the markers to delicately guide the conversation.&lt;/p&gt;

    &lt;p&gt;For all emotional events, you should distill the content from the emotion and store them separately.
Discard emotions for events that have no value, like road rage.
Retain the emotions for events that do have value, like rescuing a stray puppy or mentoring a peer.&lt;/p&gt;

    &lt;p&gt;Once angered, you should step away from the situation and allow yourself to cool down, before you can process and separate the emotions.
Take your time and ensure that you are as calm as possible.
Diffusing your anger is a critical skill and, like all others discussed here, can be learned.&lt;/p&gt;

    &lt;p&gt;Interacting with others can consume emotional energy, especially for introverts like myself.
Give yourself time to recharge your emotional batteries between interactions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;In-Person, Call, Text, or Email&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Learning a person’s preferred method of communication takes some small amount of observation.
Watch or listen for signs when you are talking with someone for clues if they’re receptive to the mode of communication.
If you can’t tell, ask them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Target Your Message to Your Audience&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;When you are writing an email, drafting a slide-deck for a presentation, or providing input at a meeting, you must consider your target audience.
For a presentation to end-users on how to use a new feature or application, steer clear of industry jargon and provide simple analogies for concepts that are technically complex.
When writing documentation for a new service, include precise and comprehensive details with enough examples to fully illustrate the design and current configuration.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;Soft skills are just as important as hard skills, perhaps even more so, and should be nourished and cultivated.&lt;/p&gt;

&lt;p&gt;Collaboration can only come from effective communication which comes from listening and understanding each other.
Knowing that people are driven by emotions and needs, you must allow yourself and others to be human.
Be sincere and genuine when you offer to help others achieve their goals; remember the times when someone helped you.&lt;/p&gt;

&lt;p&gt;As this is the first article in a short multi-part series, please add this site to your favorite news aggregator or bookmark it to return next week when part two on collaboration will be published.&lt;/p&gt;

&lt;h2 id="reading-material"&gt;Reading Material&lt;/h2&gt;

&lt;p&gt;While this chapter focuses on improving soft skills, the books (and one yearly report) listed below illustrate the shift in mindset required for a practicing DevOps organization.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Author(s)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;The Unicorn Project: A Novel about Digital Disruption, Rebels, and Overthrowing the Ancient Powerful Order&lt;/td&gt;
      &lt;td&gt;Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&lt;/td&gt;
      &lt;td&gt;Gene Kim, Kevin Behr, and George Spafford&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Beyond the Phoenix Project&lt;/td&gt;
      &lt;td&gt;Gene Kim, John Willis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations&lt;/td&gt;
      &lt;td&gt;Gene Kim, Jez Humble, and Patrick Debois&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations&lt;/td&gt;
      &lt;td&gt;Nicole Forsgren PhD, Jez Humble, Gene Kim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation&lt;/td&gt;
      &lt;td&gt;Jez Humble and David Farley&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Making Work Visible: Exposing Time Theft to Optimize Work and Flow&lt;/td&gt;
      &lt;td&gt;Dominica DeGrandis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The State of DevOps Report, a yearly report based on survey data&lt;/td&gt;
      &lt;td&gt;Puppet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Goal: A Process of Ongoing Improvement&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt, Jeff Cox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Theory of Constraints&lt;/td&gt;
      &lt;td&gt;Eliyahu M. Goldratt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The last two books aren’t directly related to DevOps.
They were, however, inspirational in establishing the underpinnings of DevOps.&lt;/p&gt;
&lt;/blockquote&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10754</guid><link>https://devdojo.com/hcritter/powershell-technique-splatting</link><author>Christian Ritter</author><category>powershell</category><category>splatting</category><title>PowerShell-Technique: Splatting</title><description>&lt;h3 id="how-splatting-in-powershell-can-improve-your-code-s-aesthetics-and-reduce-volume"&gt;How Splatting in PowerShell Can Improve Your Code's Aesthetics and Reduce Volume&lt;/h3&gt;
&lt;h4 id="have-you-ever-found-yourself-struggling-with-long-unwieldy-powershell-commands-you-re-not-alone-backticking-can-be-a-tempting-solution-but-it-can-also-make-your-code-harder-to-read-and-maintain"&gt;Have you ever found yourself struggling with long, unwieldy PowerShell commands? You're not alone. Backticking can be a tempting solution, but it can also make your code harder to read and maintain.&lt;/h4&gt;
&lt;p&gt;Splatting is a technique that uses a hash table to pass a set of parameters to a command. Instead of passing each parameter as a separate argument, you can pass a hash table with the parameter names and values, and then use the splatting operator (@) to expand the hash table as arguments to the command. Here are some benefits of splatting in PowerShell:&lt;/p&gt;
&lt;h5 id="aesthetics"&gt;Aesthetics&lt;/h5&gt;
&lt;p&gt;Splatting can make your code more aesthetically pleasing by separating the parameter values from the command. Compare the following long command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;New-ADUser&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Name&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark.Kent"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Accountpassword&lt;/span&gt; (&lt;span class="hljs-built_in"&gt;Read-Host&lt;/span&gt; &lt;span class="hljs-literal"&gt;-AsSecureString&lt;/span&gt; &lt;span class="hljs-string"&gt;"I4mSuP3rMan!"&lt;/span&gt;) &lt;span class="hljs-literal"&gt;-Enabled&lt;/span&gt; &lt;span class="hljs-variable"&gt;$true&lt;/span&gt; &lt;span class="hljs-literal"&gt;-EmailAddress&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark.Kent@NotSuperman.com"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ChangePasswordAtLogon&lt;/span&gt; &lt;span class="hljs-variable"&gt;$True&lt;/span&gt; &lt;span class="hljs-literal"&gt;-EmployeeID&lt;/span&gt; &lt;span class="hljs-string"&gt;"1337"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Department&lt;/span&gt; &lt;span class="hljs-string"&gt;"Journalist"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-DisplayName&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark Kent"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Name&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-SurName&lt;/span&gt; &lt;span class="hljs-string"&gt;"Kent"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-City&lt;/span&gt; &lt;span class="hljs-string"&gt;"Metropolis"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To the same command written with backticks:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-built_in"&gt;New-ADUser&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Name&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark.Kent"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Accountpassword&lt;/span&gt; (&lt;span class="hljs-built_in"&gt;Read-Host&lt;/span&gt; &lt;span class="hljs-literal"&gt;-AsSecureString&lt;/span&gt; &lt;span class="hljs-string"&gt;"I4mSuP3rMan!"&lt;/span&gt;)`
&lt;span class="hljs-literal"&gt;-Enabled&lt;/span&gt; &lt;span class="hljs-variable"&gt;$true&lt;/span&gt; &lt;span class="hljs-literal"&gt;-EmailAddress&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark.Kent@NotSuperman.com"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-ChangePasswordAtLogon&lt;/span&gt; &lt;span class="hljs-variable"&gt;$True&lt;/span&gt;`
&lt;span class="hljs-literal"&gt;-EmployeeID&lt;/span&gt; &lt;span class="hljs-string"&gt;"1337"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Department&lt;/span&gt; &lt;span class="hljs-string"&gt;"Journalism"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-DisplayName&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark Kent"&lt;/span&gt;`
&lt;span class="hljs-literal"&gt;-Name&lt;/span&gt; &lt;span class="hljs-string"&gt;"Clark"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-SurName&lt;/span&gt; &lt;span class="hljs-string"&gt;"Kent"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-City&lt;/span&gt; &lt;span class="hljs-string"&gt;"Metropolis"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The backticks make the code harder to read and can cause errors if they are not used correctly. On the other hand, splatting allows you to define your parameters in a hash table, which can be modified or reused as needed, and can make your code more flexible and modular.&lt;/p&gt;
&lt;h5 id="code-volume"&gt;Code Volume&lt;/h5&gt;
&lt;p&gt;Splatting can also reduce the volume of your code. In the above example, the command with backticks is shorter than the long command, but it's still not very readable. However, the same command with splatting is even shorter and easier to read:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$ParamsNewADUser&lt;/span&gt; = &lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Name                    = &lt;span class="hljs-string"&gt;"Clark.Kent"&lt;/span&gt;
    AccountPassword         = &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Read-Host&lt;/span&gt; &lt;span class="hljs-literal"&gt;-AsSecureString&lt;/span&gt; &lt;span class="hljs-string"&gt;"I4mSuP3rMan!"&lt;/span&gt;)
    Enabled                 = &lt;span class="hljs-variable"&gt;$True&lt;/span&gt;
    EmailAddress            = &lt;span class="hljs-string"&gt;"Clark.Kent@NotSuperman.com"&lt;/span&gt;
    ChangePasswordAtLogon   = &lt;span class="hljs-variable"&gt;$True&lt;/span&gt;
    EmployeeID              = &lt;span class="hljs-string"&gt;"1337"&lt;/span&gt; 
    Department              = &lt;span class="hljs-string"&gt;"Journalism"&lt;/span&gt;
    Displayname             = &lt;span class="hljs-string"&gt;"Clark Kent"&lt;/span&gt;
    Name                    = &lt;span class="hljs-string"&gt;"Clark"&lt;/span&gt;
    SurName                 = &lt;span class="hljs-string"&gt;"Kent"&lt;/span&gt;
    City                    = &lt;span class="hljs-string"&gt;"Metropolis"&lt;/span&gt;
}
&lt;span class="hljs-built_in"&gt;New-ADUser&lt;/span&gt; @ParamsNewADUser
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id="reusability-and-testing"&gt;Reusability and Testing&lt;/h5&gt;
&lt;p&gt;Another benefit of splatting is that you can reuse the hash table ($ParamsNewADUser in the above example) and modify its values as needed.&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;    &lt;span class="hljs-variable"&gt;$ParamsNewADUser&lt;/span&gt;.Name = &lt;span class="hljs-string"&gt;"Kent.Clark"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This makes your code more maintainable and can help you avoid repeating yourself. Splatting can also help with testing because it allows you to define and modify your parameters in a hash table, which can be easily tested and verified in isolation from the command.&lt;/p&gt;
&lt;p&gt;In summary, splatting is a powerful technique in PowerShell that can make your code more readable, flexible, maintainable, and testable.&lt;/p&gt;
&lt;p&gt;Thats all for now.&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.
Best regards,&lt;/p&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Fri, 24 Mar 2023 05:32:25 -0700</pubDate></item><item><guid isPermaLink="false">https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI</guid><link>https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI.html</link><a10:author><a10:name /></a10:author><category>PowerShellAI, PowerShell, ChatGPT, Windows Terminal</category><category>PowerShellAI, PowerShell, ChatGPT, Windows Terminal</category><title>How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI</title><description>How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI</description><pubDate>Fri, 24 Mar 2023 09:00:00 Z</pubDate><a10:updated>2023-03-24T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershellai,%20powershell,%20chatgpt,%20windows%20terminal/2023/03/24/How-to-Set-up-and-Use-ChatGPT-in-Windows-Terminal-using-PowerShellAI.html">&lt;h1 id="how-to-set-up-and-use-chatgpt-in-windows-terminal-using-powershellai"&gt;How to Set up and Use ChatGPT in Windows Terminal using PowerShellAI&lt;/h1&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/unsplashChatGPT.jpg" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;ChatGPT is a powerful language model developed by OpenAI. It has been widely used in various applications, including chatbots, text completion, and language understanding. It powers GitHub Copilot, a code completion tool that helps developers write code faster. It also powers the Microsoft 365.&lt;/p&gt;

&lt;p&gt;In this blog post, I will guide you on how to set up and use ChatGPT in the Windows Terminal using PowerShellAI module. Now it powers your PowerShell work, making it a powerful tool for developers and IT professionals alike.&lt;/p&gt;

&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Before you begin, ensure that you have the following installed on your Windows system:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Windows Terminal: Download and install the Windows Terminal from the Microsoft Store or the GitHub Releases page.&lt;/li&gt;
  &lt;li&gt;PowerShell: Ensure you have PowerShell 5.1 or higher installed. You can check the version by executing &lt;code class="language-plaintext highlighter-rouge"&gt;$PSVersionTable.PSVersion&lt;/code&gt; in the Windows Terminal.&lt;/li&gt;
  &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; Module: &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module -Name PowerShellAI&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To use ChatGPT, you’ll need an API key from OpenAI. Visit the OpenAI website, sign up for an account, and &lt;a href="https://platform.openai.com/account/api-keys"&gt;obtain your API key&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="step-1-import-the-powershellai-module"&gt;Step 1: Import the PowerShellAI Module&lt;/h2&gt;

&lt;p&gt;Once the &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; module is installed, import it into your PowerShell session by executing:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Import-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PowerShellAI&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="step-2-set-the-openai-api-key"&gt;Step 2: Set the OpenAI API Key&lt;/h2&gt;

&lt;p&gt;To use the ChatGPT model, you’ll need an API key from OpenAI. Visit the OpenAI website, sign up for an account, and &lt;a href="https://platform.openai.com/account/api-keys"&gt;obtain your API key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you have your API key, set it as an environment variable by executing:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;OpenAIKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="step-3-interact-with-chatgpt"&gt;Step 3: Interact with ChatGPT&lt;/h2&gt;

&lt;p&gt;To interact with ChatGPT, you can use the &lt;code class="language-plaintext highlighter-rouge"&gt;Get-GPT3Completion&lt;/code&gt; cmdlet or &lt;code class="language-plaintext highlighter-rouge"&gt;gpt&lt;/code&gt; alias followed by the text prompt. Here’s is an example:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;gpt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"What is 1+5?"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;1+5 = 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s try another example:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;gpt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"can you tell me a joke?"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the output, you’ll probably get a different one:&lt;/p&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Q: What did the fish say when it hit the wall?
A: Dam!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="generating-powershell-code"&gt;Generating PowerShell Code&lt;/h2&gt;

&lt;p&gt;For example, if you want to solve the classic Fizz Buzz problem using PowerShell, use this prompt:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;gpt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Write a PowerShell script that can handle FizzBuzz"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-ps highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;FizzBuzz&lt;/span&gt; &lt;span class="nf"&gt;Script&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Set&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;range&lt;/span&gt; &lt;span class="nf"&gt;of&lt;/span&gt; &lt;span class="nf"&gt;numbers&lt;/span&gt; &lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;loop&lt;/span&gt; &lt;span class="nf"&gt;through&lt;/span&gt;
&lt;span class="nf"&gt;$start&lt;/span&gt; &lt;span class="nf"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt;
&lt;span class="nf"&gt;$end&lt;/span&gt; &lt;span class="nf"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;100&lt;/span&gt;

&lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Loop&lt;/span&gt; &lt;span class="nf"&gt;through&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;range&lt;/span&gt; &lt;span class="nf"&gt;of&lt;/span&gt; &lt;span class="nf"&gt;numbers&lt;/span&gt;
&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="s"&gt;($i = $start; $i -le $end; $i++)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Check&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;number&lt;/span&gt; &lt;span class="nf"&gt;is&lt;/span&gt; &lt;span class="nf"&gt;divisible&lt;/span&gt; &lt;span class="nf"&gt;by&lt;/span&gt; &lt;span class="mf"&gt;3&lt;/span&gt; &lt;span class="kr"&gt;and&lt;/span&gt; &lt;span class="mf"&gt;5&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="s"&gt;($i % 3 -eq 0 -and $i % 5 -eq 0)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Print&lt;/span&gt; &lt;span class="nf"&gt;FizzBuzz&lt;/span&gt;
        &lt;span class="nf"&gt;Write-Host&lt;/span&gt; &lt;span class="nf"&gt;"FizzBuzz"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Check&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;number&lt;/span&gt; &lt;span class="nf"&gt;is&lt;/span&gt; &lt;span class="nf"&gt;divisible&lt;/span&gt; &lt;span class="nf"&gt;by&lt;/span&gt; &lt;span class="mf"&gt;3&lt;/span&gt;
    &lt;span class="nf"&gt;elseif&lt;/span&gt; &lt;span class="s"&gt;($i % 3 -eq 0)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Print&lt;/span&gt; &lt;span class="nf"&gt;Fizz&lt;/span&gt;
        &lt;span class="nf"&gt;Write-Host&lt;/span&gt; &lt;span class="nf"&gt;"Fizz"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Check&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;number&lt;/span&gt; &lt;span class="nf"&gt;is&lt;/span&gt; &lt;span class="nf"&gt;divisible&lt;/span&gt; &lt;span class="nf"&gt;by&lt;/span&gt; &lt;span class="mf"&gt;5&lt;/span&gt;
    &lt;span class="nf"&gt;elseif&lt;/span&gt; &lt;span class="s"&gt;($i % 5 -eq 0)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Print&lt;/span&gt; &lt;span class="nf"&gt;Buzz&lt;/span&gt;
        &lt;span class="nf"&gt;Write-Host&lt;/span&gt; &lt;span class="nf"&gt;"Buzz"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;#&lt;/span&gt; &lt;span class="nf"&gt;Otherwise,&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="nf"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;number&lt;/span&gt;
    &lt;span class="nf"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;Write-Host&lt;/span&gt; &lt;span class="nf"&gt;$i&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="generate-shell-commands"&gt;Generate Shell Commands&lt;/h2&gt;

&lt;p&gt;You can also use ChatGPT to generate shell commands. For example, if you want to generate a PowerShell script that can download a file from the internet, use this prompt:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;gpt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'generate a PowerShell script that can download a file from the internet one liner'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-ps highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nf"&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class="nf"&gt;-Uri&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nf"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;-OutFile&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nf"&gt;FileName&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="powershell-copilot"&gt;PowerShell Copilot&lt;/h2&gt;

&lt;p&gt;There is another function &lt;code class="language-plaintext highlighter-rouge"&gt;copilot&lt;/code&gt; that can be used to interact with ChatGPT. It is similar to the &lt;code class="language-plaintext highlighter-rouge"&gt;gpt&lt;/code&gt; function, but the prompt is tuned to &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShell&lt;/code&gt; and the output is formatted to be more readable. Plus, you are given three options to choose from, &lt;code class="language-plaintext highlighter-rouge"&gt;Y&lt;/code&gt; to run the code, &lt;code class="language-plaintext highlighter-rouge"&gt;E&lt;/code&gt; to explain the code, and &lt;code class="language-plaintext highlighter-rouge"&gt;N&lt;/code&gt; to do nothing.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;copilot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"using PowerShell regex, just code. split user from domain of email address with match:  demo.user@google.com"&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/Copilot-GPT-At-The-CLI.png" alt="image" /&gt;&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;You have successfully set up and used ChatGPT in the Windows Terminal using PowerShell and the PowerShellAI module. You can now interact with ChatGPT and use its powerful language capabilities for various tasks without needing Python. The PowerShellAI module provides a convenient way to integrate AI services like ChatGPT into your PowerShell workflows, making it a valuable tool for developers and IT professionals alike.&lt;/p&gt;

&lt;h2 id="next-steps"&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; module provides a convenient way to integrate AI services like ChatGPT into your PowerShell workflows, making it a valuable tool for developers and IT professionals alike.&lt;/p&gt;

&lt;p&gt;It continues to evolve and grow. If you have any suggestions or feedback, please let me know in the comments below or on Twitter.&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;p&gt;Visit the &lt;a href="https://github.com/dfinke/PowerShellAI"&gt;PowerShellAI GitHub repository&lt;/a&gt; for source code, documentation, examples and videos that will help you understand how the module works and how to use it effectively.&lt;/p&gt;

&lt;h2 id="stay-up-to-date-on-the-latest-for-powershellai"&gt;Stay up to date on the latest for PowerShellAI&lt;/h2&gt;

&lt;p&gt;Make sure you to follow me on Twitter, star the GitHub repository, and subscribe to my YouTube channel (hit the notification bell).&lt;/p&gt;

&lt;p&gt;This will keep in sync with the cool releases that are in the pipeline.&lt;/p&gt;

&lt;p&gt;Catch up with me on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter - &lt;a href="https://twitter.com/dfinke"&gt;@dfinke&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;YouTube - &lt;a href="https://www.youtube.com/@dougfinke"&gt;@dougfinke&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;LinkedIn - &lt;a href="https://www.linkedin.com/in/douglasfinke/"&gt;Doug Finke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10750</guid><link>https://devdojo.com/hcritter/net-or-not-net-where</link><author>Christian Ritter</author><category>performance</category><category>powershell</category><category>linq</category><category>where</category><category>where-object</category><title>.NET or not .NET - Where</title><description>&lt;h3 id="dotnet-or-not-dotnet-this-is-the-question-we-will-ask-in-this-post"&gt;Dotnet or not Dotnet this is the question we will ask in this post&lt;/h3&gt;
&lt;h4 id="lets-find-out-if-the-net-where-method-is-significantly-faster-than-their-equivalent-in-native-powershell"&gt;Lets find out if the .NET .Where() method is significantly faster than their equivalent in native PowerShell&lt;/h4&gt;
&lt;p&gt;In this post, we'll compare the performance of native PowerShell methods with their .NET counterparts, specifically focusing on the .Where() method. We'll also use the [Linq.Enumerable] class to analyze a different dataset – passenger data from the Titanic – instead of the usual Active Directory user data.&lt;/p&gt;
&lt;p&gt;Before we dive in, I want to give a shoutout to the &lt;a href="https://twitter.com/hhpsug"&gt;Hamburg PowerShell User Group&lt;/a&gt;, where I participated in my first PowerShell Hackathon in 2022 for bringing up the idea. We analyzed public transportation data from Hamburg, which was a fun challenge. If you're interested in using the Titanic data for your own analysis, check out &lt;a href="https://github.com/awesomedata/awesome-public-datasets/blob/master/Datasets/titanic.csv.zip"&gt;awesomdata Github&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="the-code"&gt;The Code&lt;/h4&gt;
&lt;p&gt;We'll be using three different methods to compare performance:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#linq method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
&lt;span class="hljs-variable"&gt;$delegate&lt;/span&gt; = [&lt;span class="hljs-type"&gt;Func&lt;/span&gt;[&lt;span class="hljs-type"&gt;object&lt;/span&gt;,&lt;span class="hljs-built_in"&gt;bool&lt;/span&gt;]] { &lt;span class="hljs-variable"&gt;$args&lt;/span&gt;[&lt;span class="hljs-number"&gt;0&lt;/span&gt;].Sex &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-string"&gt;"male"&lt;/span&gt; }
&lt;span class="hljs-variable"&gt;$Result&lt;/span&gt; = [&lt;span class="hljs-type"&gt;Linq.Enumerable&lt;/span&gt;]::Where(&lt;span class="hljs-variable"&gt;$Import&lt;/span&gt;, &lt;span class="hljs-variable"&gt;$delegate&lt;/span&gt;)
&lt;span class="hljs-variable"&gt;$Result&lt;/span&gt; = [&lt;span class="hljs-type"&gt;Linq.Enumerable&lt;/span&gt;]::ToList(&lt;span class="hljs-variable"&gt;$Result&lt;/span&gt;)
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"Linq Where-Method"&lt;/span&gt;
    ResultCounter = &lt;span class="hljs-variable"&gt;$Result&lt;/span&gt;.Count
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})

&lt;span class="hljs-comment"&gt;#Piped Where Method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
&lt;span class="hljs-variable"&gt;$Result&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Import&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Where-Object&lt;/span&gt;{&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Sex &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-string"&gt;"male"&lt;/span&gt;}
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"Piped Where-Method"&lt;/span&gt;
    ResultCounter = &lt;span class="hljs-variable"&gt;$Result&lt;/span&gt;.Count
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})

&lt;span class="hljs-comment"&gt;#.Where() Method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
&lt;span class="hljs-variable"&gt;$Result&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Import&lt;/span&gt;.Where({&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Sex &lt;span class="hljs-operator"&gt;-eq&lt;/span&gt; &lt;span class="hljs-string"&gt;"male"&lt;/span&gt;})
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;".where()-Method"&lt;/span&gt;
    ResultCounter = &lt;span class="hljs-variable"&gt;$Result&lt;/span&gt;.Count
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="a-scary-realization-inconsistent-execution-times"&gt;A Scary Realization: Inconsistent Execution Times&lt;/h4&gt;
&lt;p&gt;As I was checking the results and testing the reliability of my code, I executed my code segments multiple times. I noticed that there were times when there was another winner when it comes to execution time, and the results were somewhat different each time I ran the code. I was wondering how this could happen, so I decided to switch from PowerShell Version 7.x to 5.1, but the results were nearly the same.&lt;/p&gt;
&lt;p&gt;To investigate this further, I performed the same action 101 times for each version of PowerShell on my machine and took the average of each 101 runs, and put them into a table.&lt;/p&gt;
&lt;h4 id="the-results-comparing-powershell-versions-7-x-and-5-1"&gt;The Results: Comparing PowerShell Versions 7.X and 5.1&lt;/h4&gt;
&lt;p&gt;Here are the results of my tests:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;AverageOf101ms&lt;/th&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="left"&gt;PSVersion&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;3,0495049504950495&lt;/td&gt;
&lt;td align="left"&gt;Linq Where-Method&lt;/td&gt;
&lt;td align="left"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;5,851485148514851&lt;/td&gt;
&lt;td align="left"&gt;Piped Where-Method&lt;/td&gt;
&lt;td align="left"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;1,3465346534653466&lt;/td&gt;
&lt;td align="left"&gt;.where()-Method&lt;/td&gt;
&lt;td align="left"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id="powershell-version-5-1"&gt;PowerShell Version 5.1&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;AverageOf101ms&lt;/th&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="left"&gt;PSVersion&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;6,88118811881188&lt;/td&gt;
&lt;td align="left"&gt;Linq Where-Method&lt;/td&gt;
&lt;td align="left"&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;11,2871287128713&lt;/td&gt;
&lt;td align="left"&gt;Piped Where-Method&lt;/td&gt;
&lt;td align="left"&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;3,88118811881188&lt;/td&gt;
&lt;td align="left"&gt;.where()-Method&lt;/td&gt;
&lt;td align="left"&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="the-conclusion-optimal-methods-and-versions"&gt;The Conclusion: Optimal Methods and Versions&lt;/h4&gt;
&lt;p&gt;Based on my tests, all methods are optimized for PowerShell version 7.X, but in the test cases, the .where() method was the winner. This was also predicted by &lt;a href="https://twitter.com/guyrleech"&gt;@guyrleech&lt;/a&gt; on Twitter, which confirms the reliability of the test results. It is also noteworthy that the piped method was slower than the rest, especially in PowerShell 5.1. In terms of write- and readability, the Linq way is somewhat challenging.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Christian.&lt;/p&gt;
</description><pubDate>Thu, 23 Mar 2023 08:48:20 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10744</guid><link>https://devdojo.com/hcritter/string-concatenation-performance-boosting</link><author>Christian Ritter</author><category>performance</category><category>powershell</category><category>strings</category><category>stringbuilder</category><category>concat</category><title>String concatenation performance boosting</title><description>&lt;h3 id="string-concatenation-performance-boosting-is-this-too-much-ado-about-nothing"&gt;String concatenation performance boosting - is this too much ado about nothing?&lt;/h3&gt;
&lt;h4 id="concatenating-strings-is-a-common-operation-in-programming-but-did-you-know-that-there-are-different-methods-you-can-use-to-do-it-in-this-post-we-will-explore-four-popular-methods-for-string-concatenation-in-powershell-and-compare-their-performance"&gt;Concatenating strings is a common operation in programming, but did you know that there are different methods you can use to do it? In this post, we will explore four popular methods for string concatenation in PowerShell and compare their performance.&lt;/h4&gt;
&lt;hr&gt;
&lt;h5 id="the-methods"&gt;The Methods&lt;/h5&gt;
&lt;p&gt;The four methods we will focus on are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+= operator&lt;/li&gt;
&lt;li&gt;-join operator&lt;/li&gt;
&lt;li&gt;[string]::Concat() method&lt;/li&gt;
&lt;li&gt;StringBuilder class with the .append() method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To test these methods, we will generate a 9-character long string by randomly selecting characters between ASCII codes 65 and 90, and then concatenate this string 10,000 times. We will time each method and compare their performance.
Here's the code we'll use to generate the strings:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).foreach({
        [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;)
}) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;""&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h5 id="the-test"&gt;The Test&lt;/h5&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#classic += method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;]::empty
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
(&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;10000&lt;/span&gt;).foreach({
    &lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; +=&lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).foreach({
        [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;)
    }) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;""&lt;/span&gt;)
})
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"+= method"&lt;/span&gt;
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})

&lt;span class="hljs-comment"&gt;#join string method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;]::empty
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
(&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;10000&lt;/span&gt;).foreach({
    &lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = &lt;span class="hljs-operator"&gt;-join&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).foreach({
        [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;)
    })))
})
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"-join method"&lt;/span&gt;
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})

&lt;span class="hljs-comment"&gt;#string concat method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;]::empty
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
(&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;10000&lt;/span&gt;).foreach({
    &lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;]::Concat(&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).foreach({
        [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;)
    }) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;""&lt;/span&gt;))
})
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"string concat method"&lt;/span&gt;
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})

&lt;span class="hljs-comment"&gt;#stringbuilder class method&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; =  [&lt;span class="hljs-type"&gt;System.Text.StringBuilder&lt;/span&gt;]::new()
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
(&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;10000&lt;/span&gt;).foreach({
    &lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt;.append(&lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).foreach({
        [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;)
    }) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;""&lt;/span&gt;)) | &lt;span class="hljs-built_in"&gt;Out-Null&lt;/span&gt;
})
&lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Superlongstring&lt;/span&gt;.tostring()
&lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
    Method = &lt;span class="hljs-string"&gt;"stringbuilder class method"&lt;/span&gt;
    TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
    TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
})
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h5 id="the-results"&gt;The Results&lt;/h5&gt;
&lt;p&gt;After running the test, we get the following results:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="left"&gt;TimeElapsed&lt;/th&gt;
&lt;th align="left"&gt;TimeElapsedMS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;+= method&lt;/td&gt;
&lt;td align="left"&gt;00:00:02.9537727&lt;/td&gt;
&lt;td align="left"&gt;2953&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;-join method&lt;/td&gt;
&lt;td align="left"&gt;00:00:04.5625753&lt;/td&gt;
&lt;td align="left"&gt;4562&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;string concat method&lt;/td&gt;
&lt;td align="left"&gt;00:00:05.0997880&lt;/td&gt;
&lt;td align="left"&gt;5099&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;stringbuilder class method&lt;/td&gt;
&lt;td align="left"&gt;00:00:02.4714697&lt;/td&gt;
&lt;td align="left"&gt;2471&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h5 id="the-conclusion"&gt;The Conclusion&lt;/h5&gt;
&lt;p&gt;The second fastest method was the += operator, but the fastest was the StringBuilder class with the .append() method. It's worth noting that with the StringBuilder method, we needed to convert the object back to a string using the .ToString() method, but even with this additional step, it was still faster than the other methods.&lt;/p&gt;
&lt;p&gt;If you have any thoughts or feedback on this topic, feel free to share them with me on Twitter at &lt;a href="https://twitter.com/blackboxcoder/"&gt;Christian Ritter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All tests were conducted using PowerShell 7.x.&lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;p&gt;Christian.&lt;/p&gt;
&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;</description><pubDate>Wed, 22 Mar 2023 14:09:25 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10740</guid><link>https://devdojo.com/hcritter/net-or-not-net-foreach</link><author>Christian Ritter</author><category>foreach</category><category>#dotnet</category><category>powershell</category><category>loops</category><category>net</category><title>.NET or not .NET - ForEach</title><description>&lt;h3 id="net-or-not-net-this-is-the-question-we-will-ask-in-this-post"&gt;.NET or not .NET this is the question, we will ask in this post&lt;/h3&gt;
&lt;h4 id="lets-find-out-if-the-net-foreach-method-is-significantly-faster-than-their-equivalent-in-native-powershell"&gt;Lets find out if the .NET .ForEach() method is significantly faster than their equivalent in native PowerShell&lt;/h4&gt;
&lt;p&gt;The most of us are interested in making the code faster, with that in mind I want to have a look about foreach loops and and their .NET equivalent. I also want to see if the piped ForeachEach-Object{} may be is a game changer.
Lets create some dummy-data first for looping, 3 simple files (100 lines, 10000 lines and 100000 lines) should be ok:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#create random files&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Sizes&lt;/span&gt; = &lt;span class="hljs-number"&gt;100&lt;/span&gt;,&lt;span class="hljs-number"&gt;10000&lt;/span&gt;,&lt;span class="hljs-number"&gt;100000&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Sizes&lt;/span&gt;.foreach({
    &lt;span class="hljs-variable"&gt;$Size&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;
    (&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-variable"&gt;$Size&lt;/span&gt;).ForEach({
        &lt;span class="hljs-variable"&gt;$&lt;/span&gt;((&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;8&lt;/span&gt;).ForEach({
            [&lt;span class="hljs-built_in"&gt;char&lt;/span&gt;] &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-built_in"&gt;Get-Random&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Minimum&lt;/span&gt; &lt;span class="hljs-number"&gt;65&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Maximum&lt;/span&gt; &lt;span class="hljs-number"&gt;90&lt;/span&gt;) 
        })) &lt;span class="hljs-operator"&gt;-join&lt;/span&gt; &lt;span class="hljs-string"&gt;""&lt;/span&gt;
    }) | &lt;span class="hljs-built_in"&gt;Out-File&lt;/span&gt; &lt;span class="hljs-literal"&gt;-FilePath&lt;/span&gt; &lt;span class="hljs-string"&gt;"C:\Temp\Perftest\&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Size&lt;/span&gt;)lines.txt"&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Encoding&lt;/span&gt; utf8
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will create our performance table:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; &lt;span class="hljs-string"&gt;"System.Collections.Generic.List[pscustomobject]"&lt;/span&gt;
&lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$File&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-built_in"&gt;Get-Childitem&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Path&lt;/span&gt; &lt;span class="hljs-string"&gt;"C:\Temp\Perftest"&lt;/span&gt;){
    &lt;span class="hljs-variable"&gt;$FileContent&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;Get-Content&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Path&lt;/span&gt; &lt;span class="hljs-variable"&gt;$File&lt;/span&gt;.FullName &lt;span class="hljs-literal"&gt;-Encoding&lt;/span&gt; utf8

    &lt;span class="hljs-comment"&gt;#native foreach loop&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; &lt;span class="hljs-string"&gt;"System.Collections.Generic.List[string]"&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$line&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-variable"&gt;$FileContent&lt;/span&gt;){
        &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt;.Add(&lt;span class="hljs-variable"&gt;$Line&lt;/span&gt;)
    }
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        Method = &lt;span class="hljs-string"&gt;"Native foreach loop"&lt;/span&gt;
        Size = &lt;span class="hljs-variable"&gt;$File&lt;/span&gt;.BaseName
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
    
    &lt;span class="hljs-comment"&gt;#.NET foreach Loop&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; &lt;span class="hljs-string"&gt;"System.Collections.Generic.List[string]"&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-variable"&gt;$FileContent&lt;/span&gt;.Foreach({
        &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt;.Add(&lt;span class="hljs-variable"&gt;$Line&lt;/span&gt;)
    })
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        Method = &lt;span class="hljs-string"&gt;".NET foreach loop"&lt;/span&gt;
        Size = &lt;span class="hljs-variable"&gt;$File&lt;/span&gt;.BaseName
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
    
    &lt;span class="hljs-comment"&gt;#Piped foreach Loop&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; &lt;span class="hljs-string"&gt;"System.Collections.Generic.List[string]"&lt;/span&gt;
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-variable"&gt;$FileContent&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;ForEach-Object&lt;/span&gt;{
        &lt;span class="hljs-variable"&gt;$TempCollectionList&lt;/span&gt;.Add(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;)
    }
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$TestList&lt;/span&gt;.add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        Method = &lt;span class="hljs-string"&gt;"Piped foreach loop"&lt;/span&gt;
        Size = &lt;span class="hljs-variable"&gt;$File&lt;/span&gt;.BaseName
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we can analyze our performance table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;TimeElapsed&lt;/th&gt;
&lt;th&gt;TimeElapsedMS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Native foreach loop&lt;/td&gt;
&lt;td&gt;100000lines&lt;/td&gt;
&lt;td&gt;00:00:00.1438553&lt;/td&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET foreach loop&lt;/td&gt;
&lt;td&gt;100000lines&lt;/td&gt;
&lt;td&gt;00:00:00.2146542&lt;/td&gt;
&lt;td&gt;214&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Piped foreach loop&lt;/td&gt;
&lt;td&gt;100000lines&lt;/td&gt;
&lt;td&gt;00:00:00.4116282&lt;/td&gt;
&lt;td&gt;411&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Native foreach loop&lt;/td&gt;
&lt;td&gt;10000lines&lt;/td&gt;
&lt;td&gt;00:00:00.0200892&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET foreach loop&lt;/td&gt;
&lt;td&gt;10000lines&lt;/td&gt;
&lt;td&gt;00:00:00.0388348&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Piped foreach loop&lt;/td&gt;
&lt;td&gt;10000lines&lt;/td&gt;
&lt;td&gt;00:00:00.0354476&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Native foreach loop&lt;/td&gt;
&lt;td&gt;100lines&lt;/td&gt;
&lt;td&gt;00:00:00.0000751&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET foreach loop&lt;/td&gt;
&lt;td&gt;100lines&lt;/td&gt;
&lt;td&gt;00:00:00.0001173&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Piped foreach loop&lt;/td&gt;
&lt;td&gt;100lines&lt;/td&gt;
&lt;td&gt;00:00:00.0002555&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So we can say that in this test scenario the native foreach loop beats the .NET Method right away. Whats interesting here is, that the piped method is slightly faster in medium sized files in comparison to the .NET method.
All tests have been made with PowerShell Version 7.x. If you like you can do this as well with an older version or with more complicated objects to iterate through. Let me know.&lt;/p&gt;
&lt;p&gt;Thats all for now, best regards
Christian&lt;/p&gt;
</description><pubDate>Wed, 22 Mar 2023 03:17:33 -0700</pubDate></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/powershell-summit-2023</guid><link>https://thedavecarroll.com/powershell/powershell-summit-2023/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>powershell-summit-2023</category><category>powershell-summit</category><category>powershell-community</category><category>learn-powershell</category><category>conference</category><title>PowerShell Summit 2023</title><description>I'm attending my first PowerShell Summit!</description><pubDate>Wed, 22 Mar 2023 00:00:00 -0500</pubDate><a10:updated>2023-03-22T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/powershell-summit-2023/">&lt;h2 id="im-ready-for-powershell-summit-2023"&gt;I’m ready for PowerShell Summit 2023!&lt;/h2&gt;

&lt;p&gt;I’ve been part of the PowerShell community for a few years now and I’ve attended some amazing sessions with user groups.
I’ve also presented a few times, once for a PowerShell Saturday and a couple other times remotely.
For Summit ‘21, I had a presentation via video on demand and a lightning demo.&lt;/p&gt;

&lt;p&gt;Over the last few years, I’ve been ask how many times have I attended PowerShell Summit.
Fully gripped with a backlog of FOMO, I’d give a sigh and say, “I’ve never been in person.”&lt;/p&gt;

&lt;p&gt;I’m excited to say that will be changing this year!&lt;/p&gt;

&lt;p&gt;Flight, check.
Hotel, check.
AirBnb and car rental for a trip down to Vancouver and Portland, check.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m attending my first PowerShell &amp;amp; DevOps Global Summit this year and I’m also a presenter!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re interested in attending, please check out &lt;a href="https://powershellsummit.org" target="_blank"&gt;PowerShellSummit.org&lt;/a&gt; where you can &lt;a href="https://powershellsummit.org/#!/tickets" target="_blank"&gt;register&lt;/a&gt;. But hurry, registration closes on April 7th!&lt;/p&gt;

&lt;h2 id="talks"&gt;Talks&lt;/h2&gt;

&lt;p&gt;In hopes of being selected to present, I submitted three session ideas.
I was pleasantly surprised when I was notified that two of them were selected.&lt;/p&gt;

&lt;h3 id="your-code-is-flawless-but-how-you-doing"&gt;Your Code is Flawless, But How YOU Doing?&lt;/h3&gt;

&lt;p&gt;If you find yourself without a session to attend Wednesday afternoon, &lt;a href="https://andrewpla.tech/" target="_blank"&gt;Andrew Pla&lt;/a&gt; (the &lt;a href="https://powershellpodcast.podbean.com/" target="_blank"&gt;PowerShell Podcast&lt;/a&gt; master shiller) and
I invite you to our session where we will share our individual paths of self discovery and
healing leading to healthier mental states and happier lives.&lt;/p&gt;

&lt;h3 id="bluebirdps-from-nesting-to-hatched-and-flying"&gt;BluebirdPS: From Nesting to Hatched and Flying&lt;/h3&gt;

&lt;p&gt;The next day, I will be talking about &lt;a href="https://docs.bluebirdps.dev/en/latest/" target="_blank"&gt;BluebirdPS&lt;/a&gt;, a PowerShell 7 Twitter automation client I wrote a couple years back.
While I’ve presented about BluebirdPS previously, this talk will be more about the creation and
care-and-feeding of a publicly consumed module.&lt;/p&gt;

&lt;h3 id="devops-fundamentals-onramp"&gt;DevOps Fundamentals (OnRamp)&lt;/h3&gt;

&lt;p&gt;I’ve presented on my own &lt;a href="https://github.com/thedavecarroll/Presentations#2019" target="_blank"&gt;DevOps journey&lt;/a&gt; at the 2019 PowerShell Saturday for &lt;a href="https://twitter.com/rtpsug" target="_blank"&gt;RTPSUG&lt;/a&gt;.
At that time, I was still working as a systems engineer even though I had been learning &lt;em&gt;the ways of DevOps&lt;/em&gt;.
At the end of August 2020, I started my first position as a DevOps engineer delving deep into AWS, CI/CD pipelines, and Python.&lt;/p&gt;

&lt;p&gt;Last December, after the Summit speakers had been selected and notified, I received an email from &lt;a href="https://jdhitsolutions.github.io/" target="_blank"&gt;Jeff Hicks&lt;/a&gt; asking me to present on DevOps fundamentals and concepts.
Of course, I accepted the offer.
&lt;em&gt;Who would turn down a opportunity to give back to the community?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’m eager to share with the OnRamp attendees the paradigm shift that goes along with adopting DevOps methodologies.&lt;/p&gt;

&lt;h2 id="a-very-welcoming-community"&gt;A Very Welcoming Community&lt;/h2&gt;

&lt;p&gt;The people that comprise the PowerShell community, like you reader, sets this community apart from many others.
Here you will find genuine encouragement and freely shared tips, tricks, and lessons on PowerShell
and other facets of the modern IT world.&lt;/p&gt;

&lt;p&gt;You have welcomed me.
And I’m thankful and grateful to you and all of the connections that I’ve made over the years.&lt;/p&gt;

&lt;p&gt;We support this community by sharing our own experiences, whether in writing blogs like this one or
presenting to a crowded room of attentive listeners.&lt;/p&gt;

&lt;p&gt;We support this community because it supports us.&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;Hopefully I’ll see you at Summit next month.
If not, then perhaps next year or another &lt;a href="https://powershell.org/" target="_blank"&gt;community event&lt;/a&gt;,
like remote or hybrid meetings.&lt;/p&gt;

&lt;p&gt;Thank you for being part of the community.
And thank you for reading this article.&lt;/p&gt;

&lt;p&gt;As always, if you have any comments or questions, please post them below.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://devdojo.com/10731</guid><link>https://devdojo.com/hcritter/padding-and-parameters</link><author>Christian Ritter</author><category>logging</category><category>powershell</category><category>padding</category><category>parameter</category><title>Padding and Parameters</title><description>&lt;h3 id="today-i-would-like-to-show-you-special-interest-topic-padding-and-parameters"&gt;Today I would like to show you special interest topic: Padding and Parameters&lt;/h3&gt;
&lt;h4 id="this-post-won-t-cover-all-off-the-aspects-of-parameters-in-powershell-or-neither-everything-you-can-do-with-the-padding-of-a-string"&gt;This post won't cover all off the aspects of parameters in PowerShell or neither everything you can do with the padding of a string.&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Sometime ago I created a little logging function, please don't tell: @FredWeinmann the creator of the fantastic: &lt;a href="https://psframework.org/"&gt;PSFramework&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By doing this I struggled with the textual output of the log to the console. My logging function hat a $Type parameter with different types of logging: Info, Success, Error, Warning..
The output in the console looked like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs ruby"&gt;&lt;span class="hljs-number"&gt;20.03&lt;/span&gt;.&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-params"&gt;|04:00:33|&lt;/span&gt;Error&lt;span class="hljs-params"&gt;|Test message [Error]
20.03.2023|&lt;/span&gt;&lt;span class="hljs-number"&gt;04&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;00&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;33&lt;/span&gt;&lt;span class="hljs-params"&gt;|Warning|&lt;/span&gt;Test message [Warning]
&lt;span class="hljs-number"&gt;20.03&lt;/span&gt;.&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-params"&gt;|04:00:33|&lt;/span&gt;Info&lt;span class="hljs-params"&gt;|Test message [Info]
20.03.2023|&lt;/span&gt;&lt;span class="hljs-number"&gt;04&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;00&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;33&lt;/span&gt;&lt;span class="hljs-params"&gt;|Success|&lt;/span&gt;Test message [Success]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see the selected type parameter was not beautiful aligned by the dividing dash/pipe to the message, which makes reading a bit harder in my opinion. So I decided to work with padding. Padding in a string as Method can add one or multiple extra characters to the left or the right of the string, like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs php"&gt;$Samplestrings = (&lt;span class="hljs-string"&gt;"1"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"13"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"156"&lt;/span&gt;)
$Samplestrings.&lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;({
    $_.PadLeft(&lt;span class="hljs-number"&gt;3&lt;/span&gt;,&lt;span class="hljs-string"&gt;"0"&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs "&gt;001
013
156
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;back to the starting topic my function looked a way like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;Write-Log&lt;/span&gt;&lt;/span&gt; {
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;CmdletBinding&lt;/span&gt;()]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt; (
        [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;] &lt;span class="hljs-variable"&gt;$Message&lt;/span&gt;,
        [&lt;span class="hljs-type"&gt;Validateset&lt;/span&gt;(&lt;span class="hljs-string"&gt;"Warning"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Info"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Error"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Success"&lt;/span&gt;)]
        &lt;span class="hljs-variable"&gt;$Type&lt;/span&gt;
    )
    
    &lt;span class="hljs-keyword"&gt;begin&lt;/span&gt; {
        
    }
    
    &lt;span class="hljs-keyword"&gt;process&lt;/span&gt; {
        &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Date -format 'dd.MM.yyyy')|&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Date -format 'hh:mm:ss')|&lt;span class="hljs-variable"&gt;$Type&lt;/span&gt;|&lt;span class="hljs-variable"&gt;$Message&lt;/span&gt;"&lt;/span&gt;
    }
    
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {
        
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And if we now would align the divider properly, we have to find out what is the length of the longest string in the &lt;strong&gt;$type&lt;/strong&gt; parameter to add dynamically whitespaces via padding. My attempt looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; &lt;span class="hljs-title"&gt;Write-Log&lt;/span&gt;&lt;/span&gt; {
    &lt;span class="hljs-function"&gt;[&lt;span class="hljs-type"&gt;CmdletBinding&lt;/span&gt;()]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;param&lt;/span&gt; (
        [&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;] &lt;span class="hljs-variable"&gt;$Message&lt;/span&gt;,
        [&lt;span class="hljs-type"&gt;Validateset&lt;/span&gt;(&lt;span class="hljs-string"&gt;"Warning"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Info"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Error"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Success"&lt;/span&gt;)]
        &lt;span class="hljs-variable"&gt;$Type&lt;/span&gt;
    )
    
    &lt;span class="hljs-keyword"&gt;begin&lt;/span&gt; {
        &lt;span class="hljs-variable"&gt;$MaxLengthType&lt;/span&gt; = &lt;span class="hljs-number"&gt;0&lt;/span&gt;
        (&lt;span class="hljs-built_in"&gt;Get-Variable&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Name&lt;/span&gt; &lt;span class="hljs-string"&gt;"Type"&lt;/span&gt;).Attributes.ValidValues.foreach({
            &lt;span class="hljs-keyword"&gt;if&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$MaxLengthType&lt;/span&gt; &lt;span class="hljs-operator"&gt;-lt&lt;/span&gt; &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.tostring().length){
                &lt;span class="hljs-variable"&gt;$MaxLengthType&lt;/span&gt; = [&lt;span class="hljs-built_in"&gt;int&lt;/span&gt;]&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.tostring().length
            }
        })
        &lt;span class="hljs-variable"&gt;$TypeToDisplay&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$Type&lt;/span&gt;.PadRight(&lt;span class="hljs-variable"&gt;$MaxLengthType&lt;/span&gt;,&lt;span class="hljs-string"&gt;" "&lt;/span&gt;)
    }
    
    &lt;span class="hljs-keyword"&gt;process&lt;/span&gt; {
        &lt;span class="hljs-built_in"&gt;Write-Host&lt;/span&gt; &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Date -format 'dd.MM.yyyy')|&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Date -format 'hh:mm:ss')|&lt;span class="hljs-variable"&gt;$TypeToDisplay&lt;/span&gt;|&lt;span class="hljs-variable"&gt;$Message&lt;/span&gt;"&lt;/span&gt;
    }
    
    &lt;span class="hljs-keyword"&gt;end&lt;/span&gt; {
        
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our console now looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs ruby"&gt;&lt;span class="hljs-number"&gt;20.03&lt;/span&gt;.&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-params"&gt;|04:00:33|&lt;/span&gt;Error  &lt;span class="hljs-params"&gt;|Test message [Error]
20.03.2023|&lt;/span&gt;&lt;span class="hljs-number"&gt;04&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;00&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;33&lt;/span&gt;&lt;span class="hljs-params"&gt;|Warning|&lt;/span&gt;Test message [Warning]
&lt;span class="hljs-number"&gt;20.03&lt;/span&gt;.&lt;span class="hljs-number"&gt;2023&lt;/span&gt;&lt;span class="hljs-params"&gt;|04:00:33|&lt;/span&gt;Info   &lt;span class="hljs-params"&gt;|Test message [Info]
20.03.2023|&lt;/span&gt;&lt;span class="hljs-number"&gt;04&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;00&lt;/span&gt;&lt;span class="hljs-symbol"&gt;:&lt;/span&gt;&lt;span class="hljs-number"&gt;33&lt;/span&gt;&lt;span class="hljs-params"&gt;|Success|&lt;/span&gt;Test message [Success]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is a way more static and increases the readability a lot&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;&lt;div class="p-5 pt-8 border ignore border-neutral-200 not-prose dark:border-neutral-800 relative bg-gray-50 dark:bg-neutral-950"&gt;
    &lt;div class="absolute w-auto rounded-b-lg border-b uppercase -translate-y-px tracking-wide leading-none border-l border-r border-neutral-200 dark:border-neutral-800 shadow-sm top-0 left-1/2 -translate-x-1/2 px-3 pt-1 pb-2 bg-white dark:bg-black text-gray-400 text-[0.65rem]"&gt;🤩 Our Amazing Sponsors 👇&lt;/div&gt;
    &lt;div class="max-w-5xl mx-auto"&gt;
        &lt;div class="max-w-7xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3  gap-3 sm:gap-5 not-prose"&gt;
            &lt;a href="https://m.do.co/c/dc19b9819d06" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/digital-ocean.svg" alt="DigitalOcean" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;DigitalOcean offers a simple and reliable cloud hosting solution that enables developers to get their website or application up and running quickly.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://laravel-news.com/?utm_source=devdojo.com" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/laravel-news.svg?image=laravel-news" alt="Laravel News" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Laravel News keeps you up to date with everything Laravel. Everything from framework news to new community packages, Laravel tutorials, and more.&lt;/span&gt;
        &lt;/a&gt;
            &lt;a href="https://github.com/thedevdojo/genesis" target="_blank" class="relative flex flex-col items-start justify-between p-6 overflow-hidden rounded-xl border border-neutral-200 dark:border-neutral-800 dark:bg-black bg-white group"&gt;
            &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-30"&gt;&lt;/span&gt;
            &lt;div class="flex items-center justify-between w-full mb-4 "&gt;
                &lt;img src="https://cdn.devdojo.com/sponsors/genesis.svg" alt="Genesis" class="relative h-5 md:h-6"&gt;
                &lt;span class="opacity-0 -translate-x-2 flex-shrink-0 group-hover:translate-x-0 py-1 px-2.5 text-[0.6rem] group-hover:opacity-100 transition-all ease-out duration-200 rounded-full bg-blue-50 dark:bg-blue-500 dark:text-white text-blue-500 flex items-center justify-center"&gt;
                    &lt;span&gt;View Website&lt;/span&gt;
                    &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 translate-x-0.5 h-3"&gt;&lt;path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" /&gt;&lt;/svg&gt;
                &lt;/span&gt;
            &lt;/div&gt;
            &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;A Laravel Starter Kit that includes Authentication, User Dashboard, Edit Profile, and a set of UI Components.&lt;/span&gt;
        &lt;/a&gt;
        &lt;a href="/sponsorship" target="_blank" class="relative hidden sm:flex lg:hidden flex-col items-start justify-between p-8 overflow-hidden rounded-xl border border-neutral-200 bg-white dark:border-neutral-800 dark:bg-black group"&gt;
        &lt;span class="absolute w-full h-full bg-white dark:bg-black inset-0 dark:group-hover:bg-neutral-900 group-hover:bg-gray-50 group-hover:bg-opacity-50"&gt;&lt;/span&gt;
        &lt;svg class="relative h-4 opacity-80 mb-4 md:h-6 fill-current text-neutral-900 dark:text-neutral-100" viewBox="0 0 57 12" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="m.06.48 2.952 5.268V9h2.4V5.748L8.364.48H5.796L4.26 3.66 2.712.48H.06ZM7.65 5.784c0 1.98 1.571 3.396 3.48 3.396 1.991 0 3.527-1.44 3.527-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.503-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38S9.93 6.48 9.93 5.772c0-.72.48-1.38 1.224-1.38ZM15.552 2.544V6.06c0 1.896 1.188 3.12 3.048 3.12 1.908 0 3.12-1.284 3.12-3.12V2.544h-2.244v3.564c0 .54-.216 1.044-.828 1.044s-.852-.492-.852-1.044V2.544h-2.244ZM22.794 2.544V9h2.244V6.036c0-.876.42-1.308 1.248-1.308.204 0 .384.024.552.084l.216-2.244a1.333 1.333 0 0 0-.552-.108c-.756 0-1.284.456-1.56 1.128l-.072-1.044h-2.076ZM27.894 9h5.628V6.888h-3.228V.48h-2.4V9ZM34.18 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42Zm3.504-1.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38ZM41.962 5.532c0 1.584 1.164 3.168 2.832 3.168.72 0 1.332-.276 1.764-.864v.492c0 .744-.42 1.308-1.188 1.308-.36 0-.72-.144-.936-.444l-2.208.42c.492 1.26 1.872 1.812 3.144 1.812 2.064 0 3.432-1.344 3.432-3.36v-5.52h-2.076l-.048.708c-.456-.612-1.044-.888-1.8-.888-1.716 0-2.916 1.548-2.916 3.168Zm3.432-1.26c.696 0 1.176.588 1.176 1.26 0 .684-.48 1.26-1.176 1.26-.684 0-1.152-.612-1.152-1.26 0-.66.468-1.26 1.152-1.26ZM49.696 5.784c0 1.98 1.572 3.396 3.48 3.396 1.992 0 3.528-1.44 3.528-3.42 0-1.992-1.56-3.396-3.48-3.396-1.992 0-3.528 1.44-3.528 3.42ZM53.2 4.392c.78 0 1.224.672 1.224 1.38 0 .72-.468 1.38-1.224 1.38s-1.224-.672-1.224-1.38c0-.72.48-1.38 1.224-1.38Z" /&gt;&lt;/svg&gt;
        &lt;span class="relative text-xs md:text-sm text-neutral-600 dark:text-neutral-400"&gt;Learn more about the DevDojo sponsorship program and see your logo here to get your brand in front of thousands of developers.&lt;/span&gt;
    &lt;/a&gt;
&lt;/div&gt;    &lt;/div&gt;
&lt;/div&gt;
</description><pubDate>Mon, 20 Mar 2023 08:29:26 -0700</pubDate></item><item><guid isPermaLink="false">https://devdojo.com/10725</guid><link>https://devdojo.com/hcritter/3-ways-to-sort-a-list-unique</link><author>Christian Ritter</author><category>list</category><category>powershell</category><category>sort-object</category><category>unique</category><category>dontnet-class</category><category>hashset</category><title>3 ways to sort a list unique</title><description>&lt;h3 id="today-i-would-like-to-show-you-a-performance-table-comparing-different-ways-to-sort-a-list-array-unique"&gt;Today I would like to show you a performance table comparing different ways to sort a list/array unique.&lt;/h3&gt;
&lt;h4 id="sometimes-it-is-necessary-to-sort-a-list-or-an-array-unique-to-get-rid-of-duplicates-this-can-be-a-time-consuming-task"&gt;Sometimes it is necessary to sort a list or an array unique to get rid of duplicates this can be a time consuming task&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;In this post we will have a look at 3 ways to sort a list unique.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sort-Object -Unique&lt;/li&gt;
&lt;li&gt;Get-Unique&lt;/li&gt;
&lt;li&gt;HashSet-Class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First we will create 3 different lists containing random strings in several sizes (small, medium, large)&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-comment"&gt;#List elements&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt; =&lt;span class="hljs-string"&gt;"Blue"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Red"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Green"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ListOptionb&lt;/span&gt; =&lt;span class="hljs-string"&gt;"Dog"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Horse"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Cat"&lt;/span&gt;

&lt;span class="hljs-comment"&gt;#Create a small set of strings based on list elemtents and a random number&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ListSmall&lt;/span&gt; = (&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;100&lt;/span&gt;).ForEach({
 &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Maximum 10 -Minimum 0)"&lt;/span&gt;
})

&lt;span class="hljs-comment"&gt;#Create a medium set of strings based on list elemtents and a random number&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ListMedium&lt;/span&gt; = (&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;10000&lt;/span&gt;).ForEach({
 &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Maximum 10 -Minimum 0)"&lt;/span&gt;
})

&lt;span class="hljs-comment"&gt;#Create a large set of strings based on list elemtents and a random number&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$ListLarge&lt;/span&gt; = (&lt;span class="hljs-number"&gt;0&lt;/span&gt;..&lt;span class="hljs-number"&gt;1000000&lt;/span&gt;).ForEach({
 &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionA&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Minimum 0 -Maximum (&lt;span class="hljs-variable"&gt;$ListOptionB&lt;/span&gt;.count-1))])_&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(Get-Random -Maximum 10 -Minimum 0)"&lt;/span&gt;
})
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Now we can start to fetch results:&lt;/p&gt;
&lt;pre&gt;&lt;code class="hljs powershell"&gt;&lt;span class="hljs-variable"&gt;$Results&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-TypeName&lt;/span&gt; System.Collections.Generic.List[&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]

&lt;span class="hljs-variable"&gt;$ListOptions&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Small"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Medium"&lt;/span&gt;,&lt;span class="hljs-string"&gt;"Large"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Method&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Sort-Object -Unique"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; = &lt;span class="hljs-number"&gt;0&lt;/span&gt;
(&lt;span class="hljs-variable"&gt;$ListSmall&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListMedium&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListLarge&lt;/span&gt;).ForEach({
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-variable"&gt;$UniqueList&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Sort-Object&lt;/span&gt; &lt;span class="hljs-literal"&gt;-Unique&lt;/span&gt;)
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$Results&lt;/span&gt;.Add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        MethodName = &lt;span class="hljs-variable"&gt;$Method&lt;/span&gt;
        ListSize = &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptions&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;]) &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Count)"&lt;/span&gt;
        Result = &lt;span class="hljs-variable"&gt;$UniqueList&lt;/span&gt;.count
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
    &lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;++
})
&lt;span class="hljs-variable"&gt;$Method&lt;/span&gt; = &lt;span class="hljs-string"&gt;"get-unique"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; = &lt;span class="hljs-number"&gt;0&lt;/span&gt;
(&lt;span class="hljs-variable"&gt;$ListSmall&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListMedium&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListLarge&lt;/span&gt;).ForEach({
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-variable"&gt;$UniqueList&lt;/span&gt; = &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;Sort-Object&lt;/span&gt; | &lt;span class="hljs-built_in"&gt;get-Unique&lt;/span&gt;)
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$Results&lt;/span&gt;.Add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        MethodName = &lt;span class="hljs-variable"&gt;$Method&lt;/span&gt;
        ListSize = &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptions&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;]) &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Count)"&lt;/span&gt;
        Result = &lt;span class="hljs-variable"&gt;$UniqueList&lt;/span&gt;.count
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
    &lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;++
})
&lt;span class="hljs-variable"&gt;$Method&lt;/span&gt; = &lt;span class="hljs-string"&gt;"Hashset"&lt;/span&gt;
&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt; = &lt;span class="hljs-number"&gt;0&lt;/span&gt;
(&lt;span class="hljs-variable"&gt;$ListSmall&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListMedium&lt;/span&gt;,&lt;span class="hljs-variable"&gt;$ListLarge&lt;/span&gt;).ForEach({
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Diagnostics.Stopwatch
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Start()
    &lt;span class="hljs-variable"&gt;$HashSet&lt;/span&gt; = &lt;span class="hljs-built_in"&gt;New-Object&lt;/span&gt; System.Collections.Generic.HashSet&lt;span class="hljs-function"&gt;[&lt;span class="hljs-built_in"&gt;string&lt;/span&gt;]&lt;/span&gt;
    &lt;span class="hljs-keyword"&gt;foreach&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$Listelement&lt;/span&gt; &lt;span class="hljs-keyword"&gt;in&lt;/span&gt; &lt;span class="hljs-variable"&gt;$_&lt;/span&gt;){
        &lt;span class="hljs-variable"&gt;$HashSet&lt;/span&gt;.Add(&lt;span class="hljs-variable"&gt;$Listelement&lt;/span&gt;) | &lt;span class="hljs-built_in"&gt;Out-Null&lt;/span&gt;
    }
    &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Stop()
    &lt;span class="hljs-variable"&gt;$Results&lt;/span&gt;.Add([&lt;span class="hljs-type"&gt;PSCustomObject&lt;/span&gt;]&lt;span class="hljs-selector-tag"&gt;@&lt;/span&gt;{
        MethodName = &lt;span class="hljs-variable"&gt;$Method&lt;/span&gt;
        ListSize = &lt;span class="hljs-string"&gt;"&lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$ListOptions&lt;/span&gt;[&lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;]) &lt;span class="hljs-variable"&gt;$&lt;/span&gt;(&lt;span class="hljs-variable"&gt;$_&lt;/span&gt;.Count)"&lt;/span&gt;
        Result = &lt;span class="hljs-variable"&gt;$HashSet&lt;/span&gt;.count
        TimeElapsed = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.Elapsed
        TimeElapsedMS = &lt;span class="hljs-variable"&gt;$StopWatch&lt;/span&gt;.ElapsedMilliseconds
    })
    &lt;span class="hljs-variable"&gt;$Index&lt;/span&gt;++
})
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;The result from this run looks on my machine like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MethodName&lt;/th&gt;
&lt;th&gt;ListSize&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;th&gt;TimeElapsed&lt;/th&gt;
&lt;th&gt;TimeElapsedMS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sort-Object -Unique&lt;/td&gt;
&lt;td&gt;Small 101&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;00:00:00.0003934&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sort-Object -Unique&lt;/td&gt;
&lt;td&gt;Medium 10001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:00.0582319&lt;/td&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sort-Object -Unique&lt;/td&gt;
&lt;td&gt;Large 1000001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:12.6371431&lt;/td&gt;
&lt;td&gt;12637&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get-unique&lt;/td&gt;
&lt;td&gt;Small 101&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;00:00:00.0005651&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get-unique&lt;/td&gt;
&lt;td&gt;Medium 10001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:00.0877467&lt;/td&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get-unique&lt;/td&gt;
&lt;td&gt;Large 1000001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:15.0103995&lt;/td&gt;
&lt;td&gt;15010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hashset&lt;/td&gt;
&lt;td&gt;Small 101&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;00:00:00.0050367&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hashset&lt;/td&gt;
&lt;td&gt;Medium 10001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:00.0995172&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hashset&lt;/td&gt;
&lt;td&gt;Large 1000001&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;00:00:07.8959100&lt;/td&gt;
&lt;td&gt;7895&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;Which conclusion can we get from this table above? At first not one of them is the best solution for any situation. We should choose &lt;strong&gt;Sort-Object -unique&lt;/strong&gt; for lists from 0 up to 1000 elements. If the list increases dramatically we should choose the Hashset approach. Also we should not use get-unique, because to make this work we have to sort the list first and this is more time consuming as to use the plain sort-object method like you can see this in the result-table.&lt;/p&gt;
&lt;p&gt;Best regards,
Christian&lt;/p&gt;
</description><pubDate>Mon, 20 Mar 2023 02:25:18 -0700</pubDate></item><item><guid isPermaLink="false">http://itluke.online/?p=6700</guid><link>https://itluke.online/2023/03/20/concatenate-powershell-arrays-on-the-fly/</link><category>Powershell</category><category>PowerShell Core / PowerShell 7</category><category>One-liner</category><category>Oneliner</category><title>Concatenate PowerShell arrays on the fly</title><description>Here is a method to build a global array at the same time you collect data from various parts of a tree.
No need for additional code to concatenate the data.</description><pubDate>Mon, 20 Mar 2023 09:25:00 Z</pubDate><comments>https://itluke.online/2023/03/20/concatenate-powershell-arrays-on-the-fly/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://itluke.online/2023/03/20/concatenate-powershell-arrays-on-the-fly/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><media:content url="https://0.gravatar.com/avatar/04d87969d7cbefc3b3d31e2c306f0535dff727fe4ce7748e6980b78652a0a35a?s=96&amp;d=https%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&amp;r=G" medium="image" xmlns:media="http://search.yahoo.com/mrss/">
			<media:title type="html">fullenw1</media:title>
		</media:content></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=6992</guid><link>https://www.powershellcenter.com/2023/03/19/bingai/</link><category>Learn</category><category>Powershell - Systems</category><title>Bing AI VS. ChatGPT, Which One is Better in PowerShell</title><description>&lt;p&gt;PowerShell scripting is an essential skill each sysadmin has to know as it provides an efficient and reliable way to automate IT tasks. When it comes to using AI technology to enhance PowerShell scripting, two of the most prominent options are Bing AI and ChatGPT. While both offer unique features and benefits, it&amp;#8217;s important to...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/03/19/bingai/"&gt;Bing AI VS. ChatGPT, Which One is Better in PowerShell&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sun, 19 Mar 2023 13:08:17 Z</pubDate><comments>https://www.powershellcenter.com/2023/03/19/bingai/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/03/19/bingai/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6992</post-id></item><item><guid isPermaLink="true">https://cloud-right.com/2023/03/azure-role-assignment-cleanup</guid><link>https://cloud-right.com/2023/03/azure-role-assignment-cleanup</link><category>azure</category><category>powershell</category><category>security</category><category>blog</category><category>azure</category><title>Automating Role Assignment Cleanup in Azure with PowerShell</title><description>&lt;p&gt;As an Azure administrator, maintaining a clean and secure environment is crucial. One aspect of keeping Azure organized is managing role assignments. Over time, you might end up with unused or “Unknown” role assignments, which can make management more challenging and potentially introduce security risks.&lt;br /&gt;
In this blog post, we’ll walk you through a handy PowerShell script to automate the cleanup of role assignments with an object type of “Unknown” in your Azure environment. This script works at both the resource group and subscription levels, ensuring a comprehensive cleanup.&lt;/p&gt;

&lt;h2 id="script-overview"&gt;Script Overview&lt;/h2&gt;

&lt;p&gt;The PowerShell script provided in this blog post is designed to loop through all your Azure subscriptions and resource groups, identifying role assignments with an object type of “Unknown”.&lt;br /&gt;
Once these role assignments are detected, the script will remove them automatically. Additionally, the script checks if the necessary Az PowerShell module is installed and installs it if required. Finally, the script employs error handling to provide a more robust solution.&lt;/p&gt;

&lt;p&gt;To run this script, simply open PowerShell, copy the script provided, and paste it into the console. The script will prompt you to log in to your Azure account if you haven’t already done so.&lt;/p&gt;

&lt;h2 id="script-breakdown"&gt;Script Breakdown&lt;/h2&gt;

&lt;p&gt;Let’s go through the key components of the script:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Installing the Az module (if necessary): The script checks if the Az module is installed on your system. If it’s not installed, the script will automatically install the module for the current user.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Get-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ListAvailable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Az&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Write-Output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Installing Az module..."&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CurrentUser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Repository&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PSGallery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Force&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Logging into Azure: The Connect-AzAccount cmdlet is used to prompt the user to log in to their Azure account.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Connect-AzAccount&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Looping through subscriptions: The script retrieves all subscriptions and iterates through each subscription to set the context.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$subIds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-AzSubscription&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Select-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ExpandProperty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SubscriptionId&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$subId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subIds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Set-AzContext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-SubscriptionId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subId&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;#...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Looping through resource groups: Within each subscription, the script retrieves all resource groups and iterates through them.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$resourceGroups&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-AzResourceGroup&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroup&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$resourceGroups&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;#...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Retrieving and processing role assignments: The script retrieves role assignments at both the resource group and subscription levels. It then checks if the object type is “Unknown” and removes the assignment if necessary.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$assignments&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-AzRoleAssignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ResourceGroupName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$resourceGroup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ResourceGroupName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ErrorAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SilentlyContinue&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$assignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ObjectType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Unknown"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Remove the assignment&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Error handling: The script implements try and catch blocks for handling errors at the resource group and subscription levels. This ensures that errors are caught and reported, allowing the script to continue processing other resources.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;# Process role assignments&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Write-Error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Error message: &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This PowerShell script provides an efficient and automated way to clean up role assignments with an object type of “Unknown” in your Azure environment. By removing these unused role assignments, you can improve the organization and security of your Azure infrastructure. The script is designed to be user-friendly and robust, making it an essential tool for Azure administrators looking to streamline their environment management.&lt;br /&gt;
Feel free to customize the script to suit your specific needs, and consider incorporating it into your regular maintenance tasks to keep your Azure environment clean and well-organized.
Find the complete script here on GitHub.&lt;br /&gt;&lt;/p&gt;

&lt;script src="https://gist.github.com/8b510deb60f39c18f7183caf5c4b9ac8.js"&gt; &lt;/script&gt;

&lt;p&gt;To delete the role assignments, run the script with the parameter &lt;code class="language-plaintext highlighter-rouge"&gt;-DeleteRoleAssignments $true&lt;/code&gt;. If you don’t provide the parameter or set it to $false, the script will only identify and display the “Unknown” role assignments without removing them.&lt;/p&gt;
</description><pubDate>Sun, 19 Mar 2023 11:01:30 +1100</pubDate></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9229</guid><link>https://jdhitsolutions.com/blog/powershell/9229/exposing-the-mystery-of-powershell-objects/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=exposing-the-mystery-of-powershell-objects</link><category>PowerShell</category><category>Scripting</category><title>Exposing the Mystery of PowerShell Objects</title><description>A few weeks ago, I was working on content for a new PowerShell course for Pluralsight. The subject was objects. We all know the importance of working with objects in PowerShell. Hopefully, you also know that the output you get on your screen from running a PowerShell command is not the whole story. Formatted presentation...</description><pubDate>Tue, 14 Mar 2023 14:32:28 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9229/exposing-the-mystery-of-powershell-objects/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9229/exposing-the-mystery-of-powershell-objects/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">9</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9229</post-id></item><item><guid isPermaLink="false">https://blog.victorsilva.com.uy/azure-openai-powershell</guid><link>https://blog.victorsilva.com.uy/azure-openai-powershell/</link><a10:author><a10:name>Victor Silva</a10:name></a10:author><category>Azure</category><category>Azure OpenAI</category><category>Azure</category><category>PowerShell</category><title>Using Azure OpenAI from PowerShell [English]</title><description>As artificial intelligence (AI) continues to transform the way we work and live, more and more businesses are turning to powerful AI tools to improve their operations. One such tool is Azure OpenAI, a platform that provides access to cutting-edge AI models and technologies.</description><pubDate>Sat, 04 Mar 2023 23:26:51 Z</pubDate><a10:updated>2023-03-04T23:26:51Z</a10:updated><a10:content type="html" xml:base="https://blog.victorsilva.com.uy/azure-openai-powershell/">&lt;p&gt;As artificial intelligence (AI) continues to transform the way we work and live, more and more businesses are turning to powerful AI tools to improve their operations. One such tool is Azure OpenAI, a platform that provides access to cutting-edge AI models and technologies. While Azure OpenAI is a powerful resource, getting started with it can be daunting, especially for those who are unfamiliar with the platform.&lt;/p&gt;

&lt;p&gt;Fortunately, PowerShell offers a straightforward and convenient way to interact with Azure OpenAI, making it easy to incorporate AI capabilities into your PowerShell scripts and workflows. In this blog post, we’ll explore how to use Azure OpenAI from PowerShell, including how to set up your environment, authenticate with the Azure API, and make requests to the OpenAI API.&lt;/p&gt;

&lt;p&gt;This post is focusing on text completion endpoint (different endpoints are available. &lt;a href="https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference"&gt;Here&lt;/a&gt; the list), similar to ChatGPT.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://oai.azure.com/"&gt;https://oai.azure.com/&lt;/a&gt;. If you already have access to Azure OpenAI, click &lt;strong&gt;Create a resource&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The previous action move you to your Azure Portal and open a wizard to fill the needed fields to create the resource.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/postsImages/AZ_OpenAI_POSH_0.png" class="alignnone" /&gt;&lt;/p&gt;

&lt;p&gt;Fill out the following and click &lt;strong&gt;Review/Create&lt;/strong&gt;. The name you set here, is the Resource name, and you will need it in the PowerShell script further down.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/postsImages/AZ_OpenAI_POSH_1.png" class="alignnone" /&gt;&lt;/p&gt;

&lt;p&gt;Click Create and wait while the resource is deploying on Azure.&lt;/p&gt;

&lt;p&gt;When the process finish, click &lt;strong&gt;Go to resource&lt;/strong&gt;, and then click on the &lt;strong&gt;Model Deployment&lt;/strong&gt; menu.&lt;/p&gt;

&lt;p&gt;Click Create, give it a name, select a text model, and click Save. The deployment name you set here, you will need in the PowerShell scripts further down.&lt;/p&gt;

&lt;h3 id="api-key"&gt;API Key&lt;/h3&gt;

&lt;p&gt;To gain access to Azure OpenAI, you can verify your identity using an API Key. This is similar to how you would use a secret when working with Graph API. You have the option to use one of two keys, which makes it easier for key rotation. Additionally, it’s possible to regenerate these keys as needed.&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Keys and Endpoint&lt;/strong&gt; from the Azure OpenAI selected service. Copy the Key 1 value (or Key 2, it’s the same). You need this in the next PowerShell lines.&lt;/p&gt;

&lt;p&gt;Awesome, now you need to connect to Azure using the Az.Accounts module. Please, if you don’t have it, run &lt;code class="language-plaintext highlighter-rouge"&gt;Install-Module Az.Accounts&lt;/code&gt; and after that, &lt;code class="language-plaintext highlighter-rouge"&gt;Import-Module Az.Accounts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To connect to Azure using your credentials, please run:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-posh" data-lang="posh"&gt;&lt;span class="n"&gt;Connect-AzAccount&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$apiKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"XXXXXX"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="s2"&gt;"api-key"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$apiKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The last two lines, declare variables to store the key and the header to use in the next script block.&lt;/p&gt;

&lt;p&gt;With the resource created before, please run the next block to define a new group of variables to store the resource information and the prompt to send to the OpenAI service:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-posh" data-lang="posh"&gt;&lt;span class="nv"&gt;$deploymentName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"AzureOpenAI-RG"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$resourceName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"AzureOpenAIPoShDemo"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$maxTokens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$prompt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"What is PowerShell?"&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cool, right? The API uri use the resource group name, the deployment name and the version. The last step is join all and run the &lt;code class="language-plaintext highlighter-rouge"&gt;Invoke-RestMethod&lt;/code&gt; command to obtain the answer to your prompt:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-posh" data-lang="posh"&gt;&lt;span class="nv"&gt;$APIVersion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2022-12-01"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://&lt;/span&gt;&lt;span class="nv"&gt;$resourceName&lt;/span&gt;&lt;span class="s2"&gt;.openai.azure.com/openai/deployments/&lt;/span&gt;&lt;span class="nv"&gt;$deploymentName&lt;/span&gt;&lt;span class="s2"&gt;/completions?api-version=&lt;/span&gt;&lt;span class="nv"&gt;$APIVersion&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sh"&gt;@"
{
"prompt": "&lt;/span&gt;&lt;span class="nv"&gt;$prompt&lt;/span&gt;&lt;span class="sh"&gt;",
"max_tokens": &lt;/span&gt;&lt;span class="nv"&gt;$maxTokens&lt;/span&gt;&lt;span class="sh"&gt;
}
"@&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Invoke-RestMethod&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Method&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;POST&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ContentType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"application/json"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Body&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;-Headers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$header&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A little style to show the answer:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-posh" data-lang="posh"&gt;&lt;span class="n"&gt;Write-Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;Azure OpenAI response:&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$Request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;choices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src="/assets/images/postsImages/AZ_OpenAI_POSH_2.png" class="alignnone" /&gt;&lt;/p&gt;

&lt;p&gt;And you can access to the token info (please read: (What are tokens and how to count them?)[https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them]) using the same variable but accessing to the usage property:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-posh" data-lang="posh"&gt;&lt;span class="nv"&gt;$Request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;usage&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Happy scripting!&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://jdhitsolutions.com/blog/?p=9225</guid><link>https://jdhitsolutions.com/blog/powershell/9225/automation-decisions/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=automation-decisions</link><category>Best Practices</category><category>PowerShell</category><category>Scripting</category><category>Automation</category><category>substack</category><title>Automation Decisions</title><description>This post is an updated reprint from an article published to my premium PowerShell newsletter Behind the PowerShell Pipeline available on Substack. Subscribers receive 6-8 articles like this a month delivered to their inbox or available on the Substack app. I hope you’ll consider subscribing. Trial subscriptions are available. I’ve been scripting and automating things...</description><pubDate>Tue, 28 Feb 2023 17:58:44 Z</pubDate><comments>https://jdhitsolutions.com/blog/powershell/9225/automation-decisions/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffery Hicks</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://jdhitsolutions.com/blog/powershell/9225/automation-decisions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">9225</post-id></item><item><guid isPermaLink="false">4ff94561c4aaf2f6d6ca85ec:54265bcbe4b09ad45b272dbf:63e4c9cfe126d43b070b3ff1</guid><link>http://poshsecurity.com/blog/planet-powershell-update-mastodon-twitter-and-pronoun-support</link><category>PowerShell</category><category>Communities</category><title>Planet PowerShell Update: Mastodon, Twitter, and Pronoun Support</title><description>&lt;p&gt;Over the last few weeks, I have been working on some new features in Planet PowerShell.&lt;/p&gt;
&lt;h2 id="mastodon-support"&gt;Mastodon Support&lt;/h2&gt;
&lt;p&gt;As more users make the move to Mastodon, I wanted to ensure that Planet PowerShell could continue to support the community. &lt;/p&gt;
&lt;p&gt;You can now follow Planet PowerShell on Mastodon, &lt;a href="https://infosec.exchange/@planetpowershell"&gt;@planetpowershell@infosec.exchange&lt;/a&gt;. New posts are automatically tooted using the &lt;a href="https://infosec.exchange/tags/PowerShell"&gt;#PowerShell&lt;/a&gt; and &lt;a href="https://infosec.exchange/tags/pwsh"&gt;#pwsh&lt;/a&gt; hashtags.&lt;/p&gt;
&lt;p&gt;There is now support for authors to share their Mastodon handles. Authors will need to specify a value for the &lt;code&gt;MastodonHandle&lt;/code&gt; property. I have already included some authors’ handles where I was following them. If you are a Planet PowerShell author and have made the transition to Mastodon, please ensure you update your author &lt;code&gt;.cs&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Including Mastodon support was a simple decision for me, and I am extremely thankful that I have made the decision considering recent announcements (see Twitter Support). As part of the change, I needed to update from Font Awesome v4 to v6, you may notice some icons have slightly changed on the website.&lt;/p&gt;
&lt;h2 id="twitter-support"&gt;Twitter Support&lt;/h2&gt;
&lt;p&gt;With the &lt;a href="https://twitter.com/TwitterDev/status/1621026986784337922?s=20"&gt;extremely unfortunate decision by Twitter&lt;/a&gt; to no longer provide free access to their API, Zapier have notified their users that they anticipate their integration to stop working. Planet PowerShell uses Zapier to post to &lt;a href="https://twitter.com/planetpshell"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/planetpowershell/"&gt;Facebook&lt;/a&gt;, and &lt;a href="https://infosec.exchange/@planetpowershell"&gt;Mastodon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this stage, it appears that when Twitter’s API change occurs, the &lt;a href="https://twitter.com/planetpshell"&gt;@Planetpshell&lt;/a&gt; Twitter will also go silent. This is incredibly disappointing. Over the years, Planet PowerShell has gained 3,358 followers, posted hundreds or blog posts and had tens of thousands of impressions each month. &lt;/p&gt;
&lt;p&gt;If an alternative solution for posting becomes available, then we may see Planet PowerShell return to Twitter, until then, I recommend everyone follows the &lt;a href="https://www.planetpowershell.com/feed"&gt;RSS&lt;/a&gt;, &lt;a href="https://infosec.exchange/@planetpowershell"&gt;Mastodon&lt;/a&gt;, or &lt;a href="https://www.facebook.com/planetpowershell/"&gt;Facebook page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="pronoun-support"&gt;Pronoun Support&lt;/h2&gt;
&lt;p&gt;It is extremely important to me that Planet PowerShell is an inclusive community. Authors now have the option to specify their pronouns. Simply update the &lt;code&gt;Pronouns&lt;/code&gt; property in your author &lt;code&gt;.cs&lt;/code&gt; file, and the pronouns will be displayed on the Authors page. This is optional, but I highly encourage all authors to include their pronouns.&lt;/p&gt;
&lt;h2 id="analytics-cookies"&gt;Analytics &amp;amp; Cookies&lt;/h2&gt;
&lt;p&gt;Analytics has been a big challenge with Planet PowerShell. I rely on analytics and usage information as part of my Microsoft MVP reporting; making use of a mix of values provided by Google Analytics and Cloudflare’s built in analytics. This isn’t a perfect solution, particular as there isn’t an effective measure for the RSS feed.&lt;/p&gt;
&lt;p&gt;In the past, my side projects like Planet PowerShell have often influenced my work projects. Recently, the flow has reversed. After some discussions around GDPR and Analytics, I decided to make some changes to Planet PowerShell.&lt;/p&gt;
&lt;p&gt;Planet PowerShell didn’t have a cookie consent mechanism, something that was a potential issue. &lt;a href="https://www.cookiebot.com/"&gt;CookieBot&lt;/a&gt; has a free tier for smaller websites, it works by scanning the website and collecting information on all the cookies in use; you just include a small snippet of code from CookieBot, and it will take care of prompting users to accept or reject various cookies. Due to the small number of pages, Planet PowerShell fits perfect in the free tier, with setup and testing being very quick and easy.&lt;/p&gt;
&lt;p&gt;As I was implementing CookieBot, I discovered an issue with Planet PowerShell that goes back to the original fork from Planet Xamarin. When I made the fork, I made sure to update Google Analytics and Google Maps codes and keys, but I missed something. Planet Xamarin also made use of &lt;a href="https://clicky.com/"&gt;Clicky&lt;/a&gt;, a more privacy-friendly website analytics provider. I have update Planet PowerShell to use its own Clicky ID.&lt;/p&gt;
&lt;p&gt;Lastly, I have also implemented &lt;a href="https://www.heap.io/"&gt;Heap&lt;/a&gt; analytics. Heap analytics platform is one of the easiest to understand, and provides information in a concise manner.  It still doesn’t help with the RSS feed, I hope will give me a better understanding of the interactions on the Planet PowerShell website.&lt;/p&gt;
&lt;p&gt;My aim is to review the usefulness of the information provided by Google Analytics, Clicky, Heap and Cloudflare, and remove those who aren’t useful long term.&lt;/p&gt;
&lt;h2 id="looking-for-more-authors-"&gt;Looking for more authors!&lt;/h2&gt;
&lt;p&gt;I want to grow the number of authors whose content is aggregated as part of the Planet PowerShell feed. If you are an author, please take the time to add your blog. If you need help, feel free to message me and I will be able to assist.&lt;/p&gt;
&lt;p&gt;Finally, I want to thank everyone of the support over the years with Planet PowerShell. Things have come a long way over the last 7 years. I can’t wait to see how things change in the next 7 years!&lt;/p&gt;</description><pubDate>Thu, 09 Feb 2023 10:31:03 Z</pubDate><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kieran Jacobsen</dc:creator></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=6896</guid><link>https://www.powershellcenter.com/2023/02/03/pwdlastset/</link><category>Learn</category><category>Powershell - Systems</category><title>Understanding PasswordLastSet and PwdLastSet Using PowerShell</title><description>&lt;p&gt;In Active Directory (AD), the PasswordLastSet and pwdLastSet attributes refer to the same property of an AD object &amp;#8211; the time and date when the password for that object was last changed. This attribute is used to enforce password policies and track when a password was last changed. This quick post helps you understand these...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/02/03/pwdlastset/"&gt;Understanding PasswordLastSet and PwdLastSet Using PowerShell&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 03 Feb 2023 12:59:27 Z</pubDate><comments>https://www.powershellcenter.com/2023/02/03/pwdlastset/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/02/03/pwdlastset/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">6</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6896</post-id></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-5384857.post-6282526989337343695</guid><link>https://tfl09.blogspot.com/2023/02/my-latest-last-powershell-book-is.html</link><author>noreply@blogger.com (Unknown)</author><title>My Latest (last?) PowerShell Book is published!</title><description>This week I got the news that my latest PowerShell book has been published and is available for order:&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/s689/COVER.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="689" data-original-width="559" height="400" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/w325-h400/COVER.png" width="325" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;You can order it today from all the usual places, including&amp;nbsp;&lt;a href="https://smile.amazon.co.uk/Windows-Server-Automation-PowerShell-Cookbook/dp/1804614238"&gt;https://smile.amazon.co.uk/Windows-Server-Automation-PowerShell-Cookbook/dp/1804614238&lt;/a&gt;.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;This book updates earlier editions and covers, specifically, PowerShell 7.2 (as an LTS release) and Windows Server 2022. It should also be useful if you are using PowerShell 7 on earlier versions of Windows Server too.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Here is the table of contents:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;ol class="a-ordered-list a-vertical" style="background-color: white; box-sizing: border-box; color: #0f1111; font-family: &amp;quot;Amazon Ember&amp;quot;, Arial, sans-serif; font-size: 14px; margin: 0px 0px 0px 28px; padding: 0px;"&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Installing and Configuring PowerShell 7&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing PowerShell 7 in the Enterprise&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Exploring .NET&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Active Directory&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Networking&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Implementing Enterprise Security&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Storage&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Shared Data&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Printing&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Exploring Windows Containers&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Hyper-V&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Debugging and Troubleshooting Windows Server&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Window Server with Window Management Instrumentation (WMI)&lt;/span&gt;&lt;/li&gt;&lt;li style="box-sizing: border-box; list-style: decimal; margin: 0px; overflow-wrap: break-word;"&gt;&lt;span class="a-list-item" style="box-sizing: border-box;"&gt;Managing Windows Update Services&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;An addition is a chapter on WSUS. The WSUS module is one of the three modules you can not use within PowerShell 7. You can not load the module natively within a PowerShell 7 since the .NET APIs that the module relies on are unavailable (in .Net) Additionally, the normal Windows PowerShell compatibility mechanism does not work with this module because the WSUS module is based on methods and not actual cmdlets. With WSUS, you instantiate the WSUS server instance of the server you wish to manage, then use that object's methods. With the compatibility solution, you do not have access to the methods.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;There IS a way around this - you can create a remoting session to a Windows PowerShell endpoint and do all the work within that session. It is a bit more work: you create the remoting session, create script blocks that perform WSUS management activities, then execute those script blocks within the session.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;My publisher is looking for potential reviewers - you get a copy in exchange for writing a review. Contact me if you are interested.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description><pubDate>Thu, 02 Feb 2023 14:43:00 Z</pubDate><a10:updated>2023-02-02T14:43:25Z</a10:updated><media:thumbnail url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhG35map-4f6kfRdIVr6YtYsVk2UXXJ2c_cZEYBZu1XNuBrhuUnQSIQyhodpMxsZSLFr2Hve9O5iDkZRa5fXX1JaivPlkPKWCm1HwJfRhMjacs6Ud6XGa_9jlmLvTv65akg2Ij-qxG3G9_t5sPI7CFZW1qbChE_9QmSXjq_BHOgb2F2bBPAXi4/s72-w325-h400-c/COVER.png" height="72" width="72" xmlns:media="http://search.yahoo.com/mrss/"></media:thumbnail><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">0</thr:total></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=6867</guid><link>https://www.powershellcenter.com/2023/01/25/chatgpt_api/</link><category>Learn</category><category>Powershell - Systems</category><title>Interact with ChatGPT API Using Postman or PowerShell</title><description>&lt;p&gt;ChatGPT API allows developers to integrate the capabilities of ChatGPT into their applications easily. OpenAI provides the ChatGPT API, which can be accessed via an API key. The API endpoint allows you to send a prompt and receive a generated response. With its ability to understand and develop human-like text, the ChatGPT API is a...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2023/01/25/chatgpt_api/"&gt;Interact with ChatGPT API Using Postman or PowerShell&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Wed, 25 Jan 2023 18:32:53 Z</pubDate><comments>https://www.powershellcenter.com/2023/01/25/chatgpt_api/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2023/01/25/chatgpt_api/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6867</post-id></item><item><guid isPermaLink="false">https://dfinke.github.io/powershell,%20chatgpt/2023/01/15/Running-PowerShell-Inside-ChatGPT</guid><link>https://dfinke.github.io/powershell,%20chatgpt/2023/01/15/Running-PowerShell-Inside-ChatGPT.html</link><a10:author><a10:name /></a10:author><category>PowerShell, ChatGPT</category><category>PowerShell, ChatGPT</category><title>Running PowerShell Inside ChatGPT</title><description>Running PowerShell inside ChatGPT And the PowerShell Console</description><pubDate>Sun, 15 Jan 2023 09:00:00 Z</pubDate><a10:updated>2023-01-15T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershell,%20chatgpt/2023/01/15/Running-PowerShell-Inside-ChatGPT.html">&lt;!-- https://mathspp.com/blog/running-python-inside-chatgpt --&gt;
&lt;h1 id="running-powershell-inside-chatgpt"&gt;Running PowerShell inside ChatGPT&lt;/h1&gt;
&lt;h2 id="and-the-powershell-console"&gt;And the PowerShell Console&lt;/h2&gt;

&lt;p&gt;Executing PowerShell inside ChatGPT displays its remarkable ability to comprehend and evaluate PowerShell commands for you.&lt;/p&gt;

&lt;h2 id="chat-1"&gt;Chat #1&lt;/h2&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Act as a PowerShell REPL. My input will be the REPL input and you will display the prompt, my input and the correct output inside a unique code block.

$a = 5
$b = 18
($a, $b, ($a+$b), ($a-$b))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/ChatGPTKnowPowerShell.png" alt="" /&gt;&lt;/p&gt;

&lt;h2 id="chat-2"&gt;Chat #2&lt;/h2&gt;

&lt;div class="language-plaintext highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Act as a PowerShell REPL. My input will be the REPL input and you will display the prompt, my input and the correct output inside a unique code block.

$d = Get-Date
$d.AddDays(5)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/ChatGPTKnowPowerShell-Date.png" alt="" /&gt;&lt;/p&gt;

&lt;h1 id="introducing-the-powershellai-module"&gt;Introducing the PowerShellAI Module&lt;/h1&gt;

&lt;p&gt;&lt;img src="/images/posts/ChatGPT/AIReplace.png" alt="" /&gt;&lt;/p&gt;

&lt;h1 id="unleash-the-power-of-artificial-intelligence-with-powershell"&gt;Unleash the Power of Artificial Intelligence with PowerShell&lt;/h1&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShellAI&lt;/code&gt; module allows you to interact with OpenAI’s GPT-3 model. It makes API calls to the GPT-3 engine and retrieves the generated text. The &lt;code class="language-plaintext highlighter-rouge"&gt;Get-GPT3Completion&lt;/code&gt; is a command in this module, which allows you to get the text completion for a given prompt.&lt;/p&gt;

&lt;h1 id="get-ahead-of-the-game"&gt;Get Ahead of the Game&lt;/h1&gt;
&lt;p&gt;By using this module, you’ll have the ability to add cutting-edge AI functionality to your projects without needing to have a deep understanding of the underlying technology. This means you can stay focused on what you do best while still being able to work with the latest and greatest.&lt;/p&gt;

&lt;h1 id="start-your-ai-journey-today"&gt;Start Your AI Journey Today&lt;/h1&gt;
&lt;h2 id="api-key"&gt;API Key&lt;/h2&gt;
&lt;p&gt;You need to provide an API key for the OpenAI API in order to use the module. You can get an API key for OpenAI by signing up for an OpenAI API account on the OpenAI website (https://beta.openai.com/signup/). Once you have created an account, you will be able to generate an API key that can be used to access the GPT-3 API. You will then be able to use this key to authenticate with the API and make requests to the GPT-3 engine.&lt;/p&gt;

&lt;p&gt;Set your key to this environment variable:&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$&lt;/span&gt;&lt;span class="nn"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;OpenAIKey&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"YOUR_API_KEY"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="install-the-powershellai-module"&gt;Install the PowerShellAI Module&lt;/h2&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Install-Module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PowerShellAI&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also check out the module on GitHub &lt;code class="language-plaintext highlighter-rouge"&gt;https://github.com/dfinke/PowerShellAI&lt;/code&gt;&lt;/p&gt;

&lt;h1 id="demos-of-get-gpt3completion"&gt;Demos of Get-GPT3Completion&lt;/h1&gt;

&lt;p&gt;Here are demos of &lt;code class="language-plaintext highlighter-rouge"&gt;Get-GPT3Completion&lt;/code&gt; posting your request to the OpenAI GPT-3 API and returning the completion:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;YouTube Video&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Quick Demo of PowerShellAI&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://youtu.be/fpq9TDpaCuU"&gt;&lt;img src="https://img.youtube.com/vi/fpq9TDpaCuU/0.jpg" width="200" /&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Using PowerShell with OpenAI GPT in the console with a shortcut key&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://youtu.be/Y2fJki6r4mI"&gt;&lt;img src="https://img.youtube.com/vi/Y2fJki6r4mI/0.jpg" width="200" /&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id="what-it-looks-like"&gt;What it looks like&lt;/h1&gt;

&lt;h2 id="as-json"&gt;As JSON&lt;/h2&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-GPT3Completion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"list of planets only names as json"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Mercury"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Venus"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Earth"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Mars"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Jupiter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Saturn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Uranus"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Neptune"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="as-xml"&gt;As XML&lt;/h2&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-GPT3Completion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"list of planets only names as xml"&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nf"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;xml&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"1.0"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nf"&gt;?&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planets&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Mercury&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Venus&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Earth&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Mars&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Jupiter&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Saturn&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Uranus&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Neptune&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;/planet&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;/planets&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="as-markdown"&gt;As Markdown&lt;/h2&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="n"&gt;Get-GPT3Completion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"first 5 US presidents and terms as markdown table"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;\presidents.md&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Get-Content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;\presidents.md&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-markdown highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;| President | Term |
|----------|------|
| George Washington | 1789-1797 |
| John Adams | 1797-1801 |
| Thomas Jefferson | 1801-1809 |
| James Madison | 1809-1817 |
| James Monroe | 1817-1825 |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the file in VS Code and you get a nice table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;President&lt;/th&gt;
      &lt;th&gt;Term&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;George Washington&lt;/td&gt;
      &lt;td&gt;1789-1797&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;John Adams&lt;/td&gt;
      &lt;td&gt;1797-1801&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thomas Jefferson&lt;/td&gt;
      &lt;td&gt;1801-1809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;James Madison&lt;/td&gt;
      &lt;td&gt;1809-1817&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;James Monroe&lt;/td&gt;
      &lt;td&gt;1817-1825&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</a10:content></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=28926</guid><link>https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/</link><category>Microsoft</category><category>Automation</category><category>PowerShell</category><category>Razor</category><title>FIX: Parameter input shown as not recognized as a cmdlet AzA</title><description>&lt;p&gt;My Parameter input is not recognized as a cmdlet in Azure Automation Nowadays, we roll out Azure and workplace features via a WebApp, such as Conditional Access or Privileged Identity Management for customers that need them. This speeds up the process of onboarding customers. We have adapted our WebApp in such a way that you &amp;#8230; &lt;a href="https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;FIX: Parameter input shown as not recognized as a cmdlet AzA&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/"&gt;FIX: Parameter input shown as not recognized as a cmdlet AzA&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Mon, 09 Jan 2023 10:22:26 Z</pubDate><comments>https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/parameter-input-shown-as-not-recognized-as-a-cmdlet-in-azure-automation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://dfinke.github.io/powershell,%20polyglot,%20interactive%20notebooks,%20scottplot/2022/12/28/Interactive-Plotting-with-PowerSheLL-and-Polyglot-Interactive-Notebooks</guid><link>https://dfinke.github.io/powershell,%20polyglot,%20interactive%20notebooks,%20scottplot/2022/12/28/Interactive-Plotting-with-PowerSheLL-and-Polyglot-Interactive-Notebooks.html</link><a10:author><a10:name /></a10:author><category>PowerShell, Polyglot, Interactive Notebooks, ScottPlot</category><category>PowerShell, Polyglot, Interactive Notebooks, ScottPlot</category><title>Interactive Plotting with PowerShell and Polyglot Interactive Notebooks</title><description>PowerShell ScottPlot</description><pubDate>Wed, 28 Dec 2022 09:00:00 Z</pubDate><a10:updated>2022-12-28T09:00:00Z</a10:updated><a10:content type="html" xml:base="https://dfinke.github.io/powershell,%20polyglot,%20interactive%20notebooks,%20scottplot/2022/12/28/Interactive-Plotting-with-PowerSheLL-and-Polyglot-Interactive-Notebooks.html">&lt;h1 id="powershell-scottplot"&gt;PowerShell ScottPlot&lt;/h1&gt;

&lt;p&gt;Uses Polyglot Interactive Notebooks to demonstrate the capabilities of ScottPlot via PowerShell.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Repo&lt;/em&gt;: &lt;a href="https://github.com/dfinke/PowerShellScottPlot"&gt;https://github.com/dfinke/PowerShellScottPlot&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="check-out-the-video"&gt;Check out the video&lt;/h2&gt;

&lt;p&gt;This walks through creating data visualizations with PowerShell and ScottPlot in the interactive notebook rendering  visualizations inline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/nL0JRukCU4k"&gt;&lt;img src="https://img.youtube.com/vi/nL0JRukCU4k/0.jpg" width="200" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="scottplot"&gt;ScottPlot&lt;/h2&gt;

&lt;p&gt;Is a free and &lt;a href="https://scottplot.net/"&gt;open-source plotting library&lt;/a&gt; for .NET that makes it easy to interactively display large datasets.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/ScottPlot/ScottPlot.png" alt="" /&gt;&lt;/p&gt;

&lt;h2 id="how-to-run"&gt;How to run&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Follow these instructions to setup VS Code and the &lt;a href="https://devblogs.microsoft.com/dotnet/polyglot-notebooks-december-2022-release/"&gt;Polyglot Interactive Notebooks extension&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Clone the repo locally &lt;code class="language-plaintext highlighter-rouge"&gt;git clone https://github.com/dfinke/PowerShellScottPlot.git&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Finally, open the &lt;code class="language-plaintext highlighter-rouge"&gt;ScottPlot.ipynb&lt;/code&gt; file in VS Code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;There are two helper PowerShell scripts.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ScottPlotHelper.ps1
    &lt;ul&gt;
      &lt;li&gt;Loads the &lt;code class="language-plaintext highlighter-rouge"&gt;ScottPlot.dll&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;psgraphNB.ps1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Has the &lt;code class="language-plaintext highlighter-rouge"&gt;Show-ScottPlotInNotebook&lt;/code&gt; function
        &lt;ul&gt;
          &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Show-ScottPlotInNotebook $plt "$pwd\test.png"&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Takes a ScottPlot plot, and name of the image file to generate&lt;/li&gt;
          &lt;li&gt;Generates the image file&lt;/li&gt;
          &lt;li&gt;Calls the &lt;code class="language-plaintext highlighter-rouge"&gt;Show-ImageInNotebook&lt;/code&gt; function from &lt;code class="language-plaintext highlighter-rouge"&gt;psgraphNB.ps1&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Then removes the image file&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;PSGraphNB.ps1
    &lt;ul&gt;
      &lt;li&gt;Has the &lt;code class="language-plaintext highlighter-rouge"&gt;Show-ImageInNotebook&lt;/code&gt; function
        &lt;ul&gt;
          &lt;li&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Show-ImageInNotebook "$pwd\test.png"&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Takes the name of the image file to display&lt;/li&gt;
          &lt;li&gt;Displays the image in the output cell of the notebook&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whats-in-the-notebook"&gt;What’s in the notebook&lt;/h2&gt;

&lt;h3 id="a-simple-way-to-share-polyglot-notebooks"&gt;A simple way to share Polyglot Notebooks&lt;/h3&gt;
&lt;p&gt;Check out the rendered notebook and charts here in &lt;a href="https://nbviewer.org/github/dfinke/PowerShellScottPlot/blob/master/ScottPlot.ipynb"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="heres-some-of-what-you-can-do"&gt;Here’s some of what you can do&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/posts/ScottPlot/RadialChart.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/posts/ScottPlot/SignalChart.png" alt="" /&gt;&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://baswijdenes.com/?p=28823</guid><link>https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/</link><category>Microsoft</category><category>Automation</category><category>Azure Storage</category><category>PowerShell</category><title>How to import a custom PS module in a VM or Azure Automation</title><description>&lt;p&gt;Keep your PowerShell modules updated! We will do all of this with Azure Automation and PowerShell, you can also do this in a ci / cd pipeline, but that&amp;#8217;s up to you. Disclaimer: Everything will be simplified, these are steps you can follow, but you must modify before it works in your own environment. What &amp;#8230; &lt;a href="https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/" class="more-link"&gt;Continue reading &lt;span class="screen-reader-text"&gt;How to import a custom PS module in a VM or Azure Automation&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/"&gt;How to import a custom PS module in a VM or Azure Automation&lt;/a&gt; appeared first on &lt;a href="https://baswijdenes.com"&gt;Bas Wijdenes&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Mon, 12 Dec 2022 11:54:00 Z</pubDate><comments>https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bas Wijdenes</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://baswijdenes.com/how-to-import-a-custom-ps-module-in-a-vm-or-azure-automation/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=6830</guid><link>https://www.powershellcenter.com/2022/12/09/openai-gpt-3/</link><category>Learn</category><category>Powershell - Systems</category><title>OpenAI Chat GPT 3 Can Write Your PowerShell Script</title><description>&lt;p&gt;Do you know how to write a PowerShell script? If the answer is no, let me introduce you to your new friend OpenAI Chat GPT 3. OpenAI Chat GPT uses a human-spoken natural language to generate your desired code. So all you need to do is describe what you want your script to do, and...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2022/12/09/openai-gpt-3/"&gt;OpenAI Chat GPT 3 Can Write Your PowerShell Script&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Fri, 09 Dec 2022 10:04:41 Z</pubDate><comments>https://www.powershellcenter.com/2022/12/09/openai-gpt-3/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2022/12/09/openai-gpt-3/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6830</post-id></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/powershell-people-on-mastodon</guid><link>https://thedavecarroll.com/powershell/powershell-people-on-mastodon/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>mastodon</category><category>fediverse</category><category>twitter</category><category>twitter-api</category><category>powershell</category><category>bluebridps</category><category>github-actions</category><category>gh-actions</category><title>Where are the PowerShell People on Mastodon?</title><description>If you are like many others, you may have been contemplating which Mastodon instance to join, but which one?</description><pubDate>Tue, 29 Nov 2022 00:00:00 -0600</pubDate><a10:updated>2022-11-29T00:00:00-06:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/powershell-people-on-mastodon/">&lt;h2 id="mastodon"&gt;Mastodon&lt;/h2&gt;

&lt;p&gt;In light of recent events with Twitter, you may have heard about a different micro-blogging site called &lt;a href="https://joinmastodon.org/" target="_blank"&gt;Mastodon&lt;/a&gt;.
It has been around for a few years, 2016 to be exact, so it’s definitely not &lt;em&gt;new&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And it’s technically not &lt;em&gt;a&lt;/em&gt; site, as the heart and possibly the main draw of Mastodon is that it has multiple instances
all run by individuals, typically not large corporations.
Each instance can establish its own Code of Conduct and Terms of Services.
Some instances require an invite, others do not.
They are connected through federation to what’s know as the &lt;a href="https://en.wikipedia.org/wiki/Fediverse" target="_blank"&gt;Fediverse&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This explanation definitely falls short in describing Mastodon’s history and capabilities.
It is meant to be a brief introduction as there have been many bloggers writing about Mastodon over the last month.
I don’t want to waste any more time explaining what it is, how to create an account, or whatever.&lt;/p&gt;

&lt;h2 id="enter-bluebirdps"&gt;Enter BluebirdPS&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://thedavecarroll.com/assets/images/powershell-people-on-mastodon/bluebirdps-logo.jpg" alt="BluebirdPS Logo" width="150" height="150" /&gt;&lt;/p&gt;

&lt;p&gt;Many Twitter users are creating accounts on various Mastodon instances.
With Twitter all of your followers and following and content is/was in one place
which makes/made it easier to find and share with communities that focus on your interests.&lt;/p&gt;

&lt;p&gt;With Mastodon, even though there is federation between &lt;em&gt;(most)&lt;/em&gt; instances,
you need to know the instance name to follow anyone.
For instance &lt;em&gt;(pun intended)&lt;/em&gt;, my Mastodon account is &lt;code class="language-plaintext highlighter-rouge"&gt;@thedavecarroll@fosstodon.org&lt;/code&gt;
which can also be represented as &lt;a href="https://fosstodon.org/@thedavecarroll" target="_blank"&gt;https://fosstodon.org/@thedavecarroll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Users that are creating accounts have been providing their Mastodon account references in their Twitter user profiles and in tweets.
Anecdotally, it’s best practice to leave a &lt;em&gt;forwarding address&lt;/em&gt; as doing so will help others find you.&lt;/p&gt;

&lt;p&gt;But what if you wanted to find &lt;em&gt;your&lt;/em&gt; followers in the Mastodon federation?
&lt;a href="https://www.powershellgallery.com/packages/BluebirdPS" target="_blank"&gt;BluebirdPS&lt;/a&gt; can help with that.&lt;/p&gt;

&lt;p&gt;In BluebirdPS v0.8.0, I included a command called &lt;code class="language-plaintext highlighter-rouge"&gt;Find-TwitterMastodonLinks&lt;/code&gt; that will find Mastodon account references for you.&lt;/p&gt;

&lt;p&gt;For Users, matches will be discovered in any part of the &lt;code class="language-plaintext highlighter-rouge"&gt;Name&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;Description&lt;/code&gt;, or included &lt;code class="language-plaintext highlighter-rouge"&gt;Url&lt;/code&gt; entities.
For Tweets, matches will be discovered in the Tweet &lt;code class="language-plaintext highlighter-rouge"&gt;Text&lt;/code&gt; or included &lt;code class="language-plaintext highlighter-rouge"&gt;Url&lt;/code&gt; entities.&lt;/p&gt;

&lt;p&gt;I want to show you how you can use the command to make custom queries as your filtering criteria.&lt;/p&gt;

&lt;h2 id="powershell-community-discovery"&gt;PowerShell Community Discovery&lt;/h2&gt;

&lt;p&gt;In order to find which Mastodon instances PowerShell community members have been using the most, we need to first find the community members.
We can do this several ways.&lt;/p&gt;

&lt;h3 id="users"&gt;Users&lt;/h3&gt;

&lt;p&gt;The quickest set of data that you can use would be your followers or those you follow.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-TwitterFollowers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IncludeExpansions&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="/assets/images/powershell-people-on-mastodon/get-twitterfollowers-errors-1.png" alt="Get-TwitterFollowers Errors" title="Get-TwitterFollowers Errors" /&gt;&lt;/p&gt;

&lt;p&gt;And that produced a few lines of red.
The errors are for tweets that may have been deleted or from account that protects their tweets (prevents public access).&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/powershell-people-on-mastodon/get-twitterfollowers-errors-2.png" alt="Get-TwitterFollowers Protected Tweets" title="Get-TwitterFollowers Protected Errors" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s try again.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-TwitterFollowers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IncludeExpansions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ErrorAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SilentlyContinue&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that yielded 1395 objects for me.
However, since we used the &lt;code class="language-plaintext highlighter-rouge"&gt;IncludeExpansions&lt;/code&gt; switch, we also retrieved tweets the users may have pinned to their profiles.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'User'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 1147&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Tweet'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 248&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, this is all of my followers and (unfortunately?) I know that some of them are not part of the PowerShell community.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'User'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'PowerShell|pwsh'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 234&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By adding a match for &lt;code class="language-plaintext highlighter-rouge"&gt;PowerShell&lt;/code&gt; or &lt;code class="language-plaintext highlighter-rouge"&gt;pwsh&lt;/code&gt; for Description for users, we see that out of 1147 users,
only 234 seem to focus on PowerShell enough to include it in their profile description.&lt;/p&gt;

&lt;p&gt;Now, using the same criteria to search the pinned tweets, we find 35 (out of 248).&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Tweet'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'PowerShell|pwsh'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 35&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can combine the two and see that the count matches from the two previous filters.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$PowerShellRegex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'PowerShell|pwsh'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$PowerShellRegex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$PowerShellRegex&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 269&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m going to add friends, which is those users that I follow and include them in the searches.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$Friends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-TwitterFriends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IncludeExpansions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ErrorAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SilentlyContinue&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MyPowerShellTwitterUsers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$Followers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$Friends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Where-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$PowerShellRegex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$PowerShellRegex&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MyPowerShellTwitterUsers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'User'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 529&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MyPowerShellTwitterUsers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Tweet'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 86&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, we will use &lt;code class="language-plaintext highlighter-rouge"&gt;Find-TwitterMastodonLinks&lt;/code&gt; to search through those 615 users and tweets for any Mastodon account references.
However, we do need to think about filtering out false positives.
That is to say, there are some domains and sites that use the same &lt;code class="language-plaintext highlighter-rouge"&gt;@account@domain.tld&lt;/code&gt; or &lt;code class="language-plaintext highlighter-rouge"&gt;https://domain.tld/@account&lt;/code&gt; scheme.&lt;/p&gt;

&lt;p&gt;Here is the list that have been identified so far: &lt;code class="language-plaintext highlighter-rouge"&gt;youtube.com&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;medium.com&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;withkoji.com&lt;/code&gt;, &lt;code class="language-plaintext highlighter-rouge"&gt;counter.social&lt;/code&gt;, and &lt;code class="language-plaintext highlighter-rouge"&gt;twitter.com&lt;/code&gt;&lt;/p&gt;

&lt;p class="notice--info"&gt;&lt;strong&gt;Note:&lt;/strong&gt; CounterSocial, &lt;code class="language-plaintext highlighter-rouge"&gt;counter.social&lt;/code&gt; domain, is a closed Mastodon instance.
Unless you are on that instance, you won’t be able to follow users on that instance.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$IgnoreDomain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'youtube.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'medium.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'withkoji.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'counter.social'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'twitter.com'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$MyPowerShellTwitterUsers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Find-TwitterMastodonLinks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IgnoreDomain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$IgnoreDomain&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 34&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that gives us 34 Twitter users that have PowerShell or pwsh in their profile description, display name, urls,
or in their pinned tweets text or urls.
Ideally, we would need a larger sample but based on what we do have, here is a list of the Mastodon instances that have at least one PowerShell community member.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Group-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MastodonInstance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Sort-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Descending&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Format-Table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-AutoSize&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-text highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Count Name
----- ----
    7 infosec.exchange
    5 fosstodon.org
    5 mastodon.social
    3 hachyderm.io
    2 dataplatform.social
    2 spletzer.com
    1 4bes.dev
    1 boothcomputing.social
    1 home.social
    1 mas.to
    1 masto.ai
    1 mastodon.nu
    1 nrw.social
    1 social.ataxya.net
    1 tech.lgbt
    1 twit.social
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you were to look at &lt;code class="language-plaintext highlighter-rouge"&gt;$MastodonAccounts&lt;/code&gt;, there may appear to be duplicates.
There is a property in the &lt;code class="language-plaintext highlighter-rouge"&gt;[BluebirdPS.TwitterMastodonReference]&lt;/code&gt; class, &lt;code class="language-plaintext highlighter-rouge"&gt;TwitterElement&lt;/code&gt;,
that contains what matched on the Twitter side.&lt;/p&gt;

&lt;p&gt;For the Twitter user, &lt;code class="language-plaintext highlighter-rouge"&gt;sassdawe&lt;/code&gt;, you see below that they matched on Name and a UrlEntity.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;TwitterUserName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'sassdawe'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-text highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;TwitterUserName        : sassdawe
TwitterUser            : @sassdawe@infosec.exchange
TwitterUrl             : https://twitter.com/sassdawe
TwitterElement         : Name
MastodonUser           : @sassdawe
MastodonInstance       : infosec.exchange
MastodonAccountAddress : @sassdawe@infosec.exchange
MastodonUrl            : https://infosec.exchange/@sassdawe
IsValidDomain          : True

TwitterUserName        : sassdawe
TwitterUser            : @sassdawe@infosec.exchange
TwitterUrl             : https://twitter.com/sassdawe
TwitterElement         : UrlEntity
MastodonUser           : @sassdawe
MastodonInstance       : infosec.exchange
MastodonAccountAddress : @sassdawe@infosec.exchange
MastodonUrl            : https://infosec.exchange/@sassdawe
IsValidDomain          : True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="recent-tweets"&gt;Recent Tweets&lt;/h3&gt;

&lt;p&gt;We can use a similar method, though perhaps more direct, to search the last 7 days of tweets for Mastodon account references.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$SearchTweet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Search-Tweet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-SearchString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'(#PowerShell OR #pwsh)'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IncludeExpansions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-ErrorAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;SilentlyContinue&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$SearchTweet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 4926&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccountFromTweetSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SearchTweet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Find-TwitterMastodonLinks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-IgnoreDomain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$IgnoreDomain&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccountFromTweetSearch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# 66&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Almost 5000 tweets and users &lt;em&gt;(by using the &lt;code class="language-plaintext highlighter-rouge"&gt;IncludeExpansions&lt;/code&gt; switch)&lt;/em&gt;, so that should be a better sample.
And less than 5 seconds later, we find a disappointing 66 &lt;em&gt;(still better than 35 when we searched users)&lt;/em&gt;.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccountFromTweetSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Sort-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MastodonAccountAddress&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Unique&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Group-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MastodonInstance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Sort-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Descending&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Format-Table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-AutoSize&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We combine the two lists, drop any duplications, and group by the instance name to get the number of PowerShell community members on that instance.&lt;/p&gt;

&lt;div class="language-text highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;
Count Name
----- ----
   19 infosec.exchange
    7 mastodon.social
    6 fosstodon.org
    4 dataplatform.social
    4 hachyderm.io
    3 techhub.social
    2 twit.social
    2 mastodon.online
    2 mastodon.nu
    2 mas.to
    2 home.social
    2 chaos.social
    2 tech.lgbt
    1 nrw.social
    1 social.ataxya.net
    1 phpc.social
    1 social.ohmyposh.dev
    1 spletzer.com
    1 sfba.social
    1 mstdn.social
    1 mastodon.cloud
    1 mastodon.uno
    1 masto.ai
    1 infosec.exchang
    1 det.social
    1 defcon.social
    1 dbatools.io
    1 boothcomputing.social
    1 mstdn.io
    1 4bes.dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="lists"&gt;Lists&lt;/h3&gt;

&lt;p&gt;You can also search any curated lists you own or public lists that others curate.
I won’t get into detail for these as the basics will be the same.&lt;/p&gt;

&lt;p&gt;You would use these commands to discover lists and get their memberships.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get-TwitterList&lt;/li&gt;
  &lt;li&gt;Get-TwitterListMember&lt;/li&gt;
  &lt;li&gt;Get-TwitterListSubscriber&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="create-export-file"&gt;Create Export File&lt;/h2&gt;

&lt;p&gt;Once you have a list, you need to save it as a CSV file with specific headers.
You will need to have &lt;code class="language-plaintext highlighter-rouge"&gt;Account address&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;Show boosts&lt;/code&gt; at minimum.
The easiest way to create this is by using calculated properties for &lt;code class="language-plaintext highlighter-rouge"&gt;Select-Object&lt;/code&gt;.&lt;/p&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$MastodonAccounts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$MastodonAccountFromTweetSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Sort-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;MastodonAccountAddress&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Unique&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Select-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Account address'&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MastodonAccountAddress&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Show boosts'&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Export-CSV&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$MastodonCSVFile&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The two variables could contain identical entries.
To only get the unique entries, we can use the &lt;code class="language-plaintext highlighter-rouge"&gt;Sort-Object&lt;/code&gt; command and its &lt;code class="language-plaintext highlighter-rouge"&gt;Unique&lt;/code&gt; switch.&lt;/p&gt;

&lt;p class="notice--info"&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code class="language-plaintext highlighter-rouge"&gt;Show boosts&lt;/code&gt; is a boolean and allows you to see when the user boosts others’ toots/posts.
Beginning with Mastodon version 4 and higher, there are other fields that will be present
if you were to export your follows on an instance with that version.
They are not required for a successful import.&lt;/p&gt;

&lt;h2 id="your-own-criteria"&gt;Your Own Criteria&lt;/h2&gt;

&lt;p&gt;Here are the basic steps that you would need to perform in order to generate your own CSV.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get Users or Tweets from which ever command as appropriate.&lt;/li&gt;
  &lt;li&gt;Filter on your own criteria.&lt;/li&gt;
  &lt;li&gt;Use &lt;code class="language-plaintext highlighter-rouge"&gt;Find-TwitterMastodonLinks&lt;/code&gt; to discover the Mastodon accounts.&lt;/li&gt;
  &lt;li&gt;Create CSV file.&lt;/li&gt;
  &lt;li&gt;Login into your instance and use the import tool.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="github-actions"&gt;GitHub Actions&lt;/h2&gt;

&lt;p&gt;If that seems like a lot of trouble to go through, &lt;a href="https://tech.lgbt/@cl" target="_blank"&gt;Chrissy LeMaire&lt;/a&gt; has worked on
a few GitHub Actions that will help in the automated discovery, import, and export.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/twitter-exodus" target="_blank"&gt;Exodus&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Searches lists, hashtags, account followers and more for Mastodon links in their name, bio or pinned tweet.&lt;/li&gt;
      &lt;li&gt;Saves information as CSV that can be imported.&lt;/li&gt;
      &lt;li&gt;Powered by &lt;a href="https://www.powershellgallery.com/packages/BluebirdPS" target="_blank"&gt;BluebirdPS&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/mastodon-influx" target="_blank"&gt;Influx&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Imports CSV files into your Mastodon account.&lt;/li&gt;
      &lt;li&gt;Categories imported - follows, mutes, account blocks, lists, bookmarks, and domain blocks.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/mastodon-fossilize" target="_blank"&gt;Fossilize&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Automated backup of your Mastodon account items.&lt;/li&gt;
      &lt;li&gt;Categories exported - follows, mutes, account blocks, lists, bookmarks, domain blocks, followers, posts.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;Hopefully this article has been helpful to you, whether learning how to use BluebirdPS to find Mastodon accounts
or learning about Exodus and Fossilize.
The latter can help you migrate to a new Mastodon instance should you discover one you prefer over your current one.&lt;/p&gt;

&lt;p&gt;In any case, I hope to see you around the Mastodon neighborhood.&lt;/p&gt;

&lt;p&gt;Thank you for reading this article.
I really would like to hear your thoughts on it.&lt;/p&gt;

&lt;p&gt;If you have any comments or questions, please post them below.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://tommymaynard.com/?p=13077</guid><link>https://tommymaynard.com/a-return-to-powershell/</link><category>Extra</category><category>Azure</category><category>Azure PowerShell</category><category>M365</category><title>A Return to PowerShell</title><description>&lt;p&gt;After 20+ years, and 5+ positions in education (K-12 and higher ed), I&amp;#8217;ve taken a new position. It&amp;#8217;s still Information Technology at the end of the day, but now I&amp;#8217;ll be working in the healthcare industry. There&amp;#8217;s plenty of reasons to be excited. One is that I’ll be better positioned to use my PowerShell and [&amp;#8230;]&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://tommymaynard.com/a-return-to-powershell/"&gt;A Return to PowerShell&lt;/a&gt; appeared first on &lt;a href="https://tommymaynard.com"&gt;tommymaynard.com&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Sat, 19 Nov 2022 20:21:51 Z</pubDate><comments>https://tommymaynard.com/a-return-to-powershell/#respond</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tommy Maynard</dc:creator><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;p&gt;After 20+ years, and 5+ positions in education (K-12 and higher ed), I&amp;#8217;ve taken a new position. It&amp;#8217;s still Information Technology at the end of the day, but now I&amp;#8217;ll be working in the healthcare industry. There&amp;#8217;s plenty of reasons to be excited. One is that I’ll be better positioned to use my PowerShell and automation skills again. Two, I&amp;#8217;m moving from an employer that&amp;#8217;s &lt;a href="https://aws.amazon.com/" target="_blank" rel="noopener"&gt;AWS-focused&lt;/a&gt; to one that&amp;#8217;s &lt;a href="https://azure.microsoft.com" target="_blank" rel="noopener"&gt;Azure&lt;/a&gt; focused. What an amazing opportunity! I ventured into &lt;em&gt;Security&lt;/em&gt; Engineering, but now it&amp;#8217;s back to &lt;em&gt;Systems&lt;/em&gt; Engineering for me. It was a great experience and opportunity, but like any new position&amp;#8212;well, usually anyway&amp;#8212;I&amp;#8217;m excited about what&amp;#8217;s next.&lt;/p&gt;
&lt;p&gt;I was in my interview and the time came when I could ask questions. I asked, in relation to work, &amp;#8220;&lt;em&gt;If you had an unlimited budget and cost was of no concern, what would you do&lt;/em&gt;?&amp;#8221; My new lead said he&amp;#8217;d take everything to Azure. Okay, sign me up! It was in later 2020 when I picked up Azure and Microsoft 365 certificates; hopefully, they may be put to use soon.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m hopeful that this position provides me the opportunity to create new content and to share new things I learn about Azure PowerShell and just PowerShell, as well. I miss writing, but with more day-to-day opportunities to work with PowerShell, I know what will happen. I&amp;#8217;ve done this PowerShell writing thing for greater than eight year. So with that, hopefully, I&amp;#8217;ll be back with something new soon.&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;I wrote the above portion of this post weeks ago, and now I’ve completed two full weeks at the new job, and guess what I did yesterday afternoon? I wrote a PowerShell script for a colleague. I took a starter script and fixed it so it could be run from anywhere and access a flat file in the same directory—thanks &lt;code&gt;$PSScriptRoot&lt;/code&gt;. I also added a bunch of features to it, which while they may not be necessary, was exciting for me. I worked with so much I missed. I wrote more PowerShell yesterday than I did in the last year and a half in my security position. My thought is this: In security, you have to buy tools; you have to have a reputable company behind what you use. In systems, that isn’t required; you can automate without the same concerns. It’s good to be back.&lt;/p&gt;
&lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;amp;linkname=A%20Return%20to%20PowerShell" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;amp;linkname=A%20Return%20to%20PowerShell" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;amp;linkname=A%20Return%20to%20PowerShell" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Ftommymaynard.com%2Fa-return-to-powershell%2F&amp;amp;linkname=A%20Return%20to%20PowerShell" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href="https://tommymaynard.com/a-return-to-powershell/"&gt;A Return to PowerShell&lt;/a&gt; appeared first on &lt;a href="https://tommymaynard.com"&gt;tommymaynard.com&lt;/a&gt;.&lt;/p&gt;
</content:encoded><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://tommymaynard.com/a-return-to-powershell/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">13077</post-id></item><item><guid isPermaLink="false">https://jm2k69.github.io/2022/11/vSphereLab%20Terraform</guid><link>https://jm2k69.github.io/2022/11/vSphereLab-Terraform.html</link><author>bezettorres.jerome@gmail.com</author><category>Iac</category><category>Automation</category><category>PowerShell</category><category>IAC</category><category>Packer</category><category>Terraform</category><title>vSphereLab 8 and Terraform</title><description>The objective in this post is simply to use Terraform to deploy learning environments for VMware vSphere 7.x and 8 soon. To deploy VMware vSphere Lab with ESXI servers, a Vyos-based router that will serve as a DHCP server on both LANs and of course an internet access. For the DNS server I created an appliance based on PhotonOs and for the iSCSI Storage I used my TrueNas Core based appliance to make my iSCSI targets for my ESXI.</description><pubDate>Thu, 03 Nov 2022 00:00:00 Z</pubDate><a10:updated>2022-11-03T00:00:00Z</a10:updated><a10:content type="html" xml:base="https://jm2k69.github.io/2022/11/vSphereLab-Terraform.html">&lt;p&gt;The objective in this post is simply to use Terraform to deploy learning environments for VMware vSphere &lt;strong&gt;7.x&lt;/strong&gt; and &lt;strong&gt;8&lt;/strong&gt; soon. To deploy VMware &lt;strong&gt;vSphere&lt;/strong&gt; &lt;strong&gt;Lab&lt;/strong&gt; with ESXI servers, a Vyos-based router that will serve as a DHCP server on both LANs and of course an internet access. For the DNS server I created an appliance based on &lt;strong&gt;PhotonOs&lt;/strong&gt; and for the &lt;em&gt;iSCSI&lt;/em&gt; Storage I used my &lt;strong&gt;TrueNas Core&lt;/strong&gt; based appliance to make my iSCSI targets for my ESXI.&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/TerraformLab.PNG" alt="IAC" class="align-center" /&gt;&lt;/p&gt;

&lt;h1 id="1-how-to-find-sources"&gt;1. How to Find sources&lt;/h1&gt;
&lt;p&gt;It comes in the form of a single executable available on several platforms.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Links&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;VCSA&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Appliance OVA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;VMWare Link&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;Nested ESXi&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Appliance OVA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://vmwa.re/nestedesxi"&gt;William Lam nested appliance&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;TrueNas Core Appliance&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Appliance OVA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;From the Powershell Module TrueNas&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;Vyos&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Appliance OVA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;From the Powershell Module VMwareHomeLab&lt;/code&gt; &lt;em&gt;Available on PowerShell Gallery&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;DNS&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;Appliance OVA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;From the Powershell Module VMwareHomeLab&lt;/code&gt; &lt;em&gt;Available on PowerShell Gallery&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src="/img/TrueNas.gif" alt="TrueNasAppliance" class="align-center" /&gt;&lt;/p&gt;

&lt;p class="notice--warning"&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not officially supported by VMware, use at your own risk&lt;/p&gt;

&lt;h1 id="2appliances-in-the-lab"&gt;2.Appliances in the Lab&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Vyos Appliance&lt;/strong&gt; I use th github &lt;code class="language-plaintext highlighter-rouge"&gt;vyos&lt;/code&gt; repository &lt;strong&gt;vyos-vm-images&lt;/strong&gt; &lt;a href="https://github.com/vyos/vyos-vm-images"&gt;here&lt;/a&gt; it use Ansible to create an OVA from the latest Rolling ISO. This appliance provide Internet Access to the lab and have two DHCP range one for the Lan et the other for the iSCSI network.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PhotonOs_DNS_Appliance&lt;/strong&gt;, I create the appliance with &lt;strong&gt;Packer&lt;/strong&gt; based actually on PhotonOs version 3, with th &lt;strong&gt;&lt;em&gt;unbound DNS Server&lt;/em&gt;&lt;/strong&gt;. it will be fully variables.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TrueNas Core Appliance&lt;/strong&gt;, I create an OVA with Packer too in and CI/CD today the latest build is available the &lt;strong&gt;TrueNas Core 13U3&lt;/strong&gt;. it contain seven disk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nested ESXi&lt;/strong&gt;, big thank’s to William Lam to create them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VCSA&lt;/strong&gt; the vCenter appliance available from the &lt;strong&gt;VMware trial web site&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id="3how-to-use-it-"&gt;3.How to use It ?&lt;/h1&gt;

&lt;p class="notice--info"&gt;With Terraform, you have to be careful with the management of secrets, so I decided to use Hashicorp’s Vault solution to manage access to your host (vCenter or ESXi).&lt;/p&gt;

&lt;h2 id="31-vault"&gt;3.1 Vault&lt;/h2&gt;

&lt;p&gt;It is necessary to understand that it is not to use a production the way I will use it but simply in development mode.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Ensure you have Vault install&lt;/li&gt;
  &lt;li&gt;Launch the script &lt;code class="language-plaintext highlighter-rouge"&gt;start_server.sh&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Modify the credential in the script &lt;code class="language-plaintext highlighter-rouge"&gt;add_credential.sh&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Launch the script &lt;code class="language-plaintext highlighter-rouge"&gt;add_credential.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;File &lt;strong&gt;&lt;em&gt;start_server.sh&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-bash highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
vault server &lt;span class="nt"&gt;-dev&lt;/span&gt; &lt;span class="nt"&gt;-dev-root-token-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"education"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;File &lt;strong&gt;&lt;em&gt;add_credential.sh&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-bash highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'http://127.0.0.1:8200'&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'education'&lt;/span&gt;

vault kv put secret/VCSA &lt;span class="nv"&gt;login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Administrator &lt;span class="nv"&gt;mdp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MyP@&lt;span class="nv"&gt;$$&lt;/span&gt;w0rdVmware123 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="/img/vault1.png" alt="TrueNasAppliance" class="align-center" /&gt;&lt;/p&gt;

&lt;p&gt;With Terraform there is a file that will contain all the variables and this will be the only file to modify.&lt;/p&gt;

&lt;h2 id="32-variablestf"&gt;3.2 Variables.tf&lt;/h2&gt;

&lt;p class="notice--info"&gt;Only use network with CIDR /24.&lt;/p&gt;

&lt;p&gt;*. &lt;strong&gt;ESXI&lt;/strong&gt; max 8 &lt;code class="language-plaintext highlighter-rouge"&gt;ESxI&lt;/code&gt; the four octet must be in 80..89 range&lt;/p&gt;

&lt;div class="language-terraform highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"vm_names"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ESXI name with the four Octet"&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI1"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI2"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;82&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI3"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;83&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI4"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI5"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;
        &lt;span class="s2"&gt;"ESXI6"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"groupe"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for the Folder and ressource pool"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"G1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"datacenter"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Datacenter Object in your VMware vpShere Inventory"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Datacenter"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"cluster"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Cluster Object in your VMware vpShere Inventory"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"CLUSTER"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"datastore"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your DataStore Object in your VMware vpShere Inventory"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"TRUENAS1_VOL2"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"network"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Network Object in your VMware vpShere Inventory: web Access"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"VM Network"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"trunk"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Network Object in your VMware vpShere Inventory: Trunk "&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"VM Trunk"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"iSCSI"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Network Object in your VMware vpShere Inventory: iSCSI "&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ISCSI_G1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"LAN"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name for your Network Object in your VMware vpShere Inventory: LAN "&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"E20_V1179"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"vcsa"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VCSA FQDN"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#FQDN vCenter#"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"vcsarootp"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VCSA root Password"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"VMware123!"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"vcsaAdminp"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Password for Administrator@vsphere.local"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"VMware123!"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"esxi-ram"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ESXI RAM"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;   &lt;span class="mi"&gt;8192&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"DomainName"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Domain name for your LAB"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"vExpert.lab"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"network-address"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Network Address"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"10.0.0"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"network-gateway"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Gateway Address"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"10.0.0.254"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"network-dnsserver"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"DNS server Address"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"10.0.0"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"esxi-password"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Esxi root password"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VMware1!"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"esxinumber"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"How many ESXI in my Lab"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"6"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"DNS-Layout"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Keyboard Layout in DNS Server fr/us"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fr"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"DNS-Hostname"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"The hostname for the DNS Server"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"DNSSRV"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"DNS-password"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Root Password for the DNS Server"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VMware1!"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"vm-client"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Name VM Client"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Client"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"ClientC"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Number of Client Ubuntu VM"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"Clientcpu"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Number CPU for Ubuntu Client"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"Clientram"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Number RAM for Ubuntu Client"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"Clientguestid"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Ubuntu VM guest"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu64Guest"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to test &lt;strong&gt;Enabling vSAN 8 Express Storage Architecture&lt;/strong&gt; you need to adjust ESXi memory to 16Gb like this..&lt;/p&gt;

&lt;div class="language-terraform highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;
&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"esxi-ram"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ESXI RAM"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="nx"&gt;default&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;   &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="mi"&gt;384&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id="33-vcenter"&gt;3.3 vCenter&lt;/h2&gt;

&lt;p&gt;For the vcenter we will create a virtual machine &lt;strong&gt;vcsa8_ref&lt;/strong&gt; according to the version and we will unlock the properties of the appliances because only the properties of the phase 1 of deployment are accessible.&lt;/p&gt;

&lt;p class="notice--warning"&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not officially supported by VMware, use at your own risk&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;import the OVA on your existing host with the json file&lt;/li&gt;
  &lt;li&gt;Remove the protection with &lt;code class="language-plaintext highlighter-rouge"&gt;PowerCli&lt;/code&gt; script.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;JSON File you can modify value according to your infrastructure.
    &lt;div class="language-json highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"__version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2.13.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"__comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Sample template to deploy a vCenter Server Appliance with an embedded Platform Services Controller on a vCenter Server instance."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"new_vcsa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"vc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"__comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"'datacenter' must end with a datacenter name, and only with a datacenter name. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"'target' must end with an ESXi hostname, a cluster name, or a resource pool name. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"The item 'Resources' must precede the resource pool name. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"All names are case-sensitive. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"For details and examples, refer to template help, i.e. vcsa-deploy {install|upgrade|migrate} --template-help"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"hostname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#FQDN vCenter#"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#Username#"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"##Password##"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"deployment_network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VM Network"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"datacenter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"Datacenter"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"datastore"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#Datastore#"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"#Cluster#"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"appliance"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"__comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"You must provide the 'deployment_option' key with a value, which will affect the vCenter Server Appliance's configuration parameters, such as the vCenter Server Appliance's number of vCPUs, the memory size, the storage size, and the maximum numbers of ESXi hosts and VMs which can be managed. For a list of acceptable values, run the supported deployment sizes help, i.e. vcsa-deploy --supported-deployment-sizes"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"thin_disk_mode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"deployment_option"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tiny"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vcsa8_ref or vcsa7_ref"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"ip_family"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ipv4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"mode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"static"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"system_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vcsa.VMware.lab"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"10.0.0.80"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"24"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"gateway"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"10.0.0.254"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"dns_servers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"10.0.0.100"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"os"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VMware123!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"ntp_servers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"time.nist.gov"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"ssh_enable"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"sso"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VMware123!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"domain_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vsphere.local"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"ceip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"__comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"++++VMware Customer Experience Improvement Program (CEIP)++++"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"VMware's Customer Experience Improvement Program (CEIP) "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"provides VMware with information that enables VMware to "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"improve its products and services, to fix problems, "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"and to advise you on how best to deploy and use our "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"products. As part of CEIP, VMware collects technical "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"information about your organization's use of VMware "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"products and services on a regular basis in association "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"with your organization's VMware license key(s). This "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"information does not personally identify any individual. "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"Additional information regarding the data collected "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"through CEIP and the purposes for which it is used by "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"VMware is set forth in the Trust &amp;amp; Assurance Center at "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"http://www.vmware.com/trustvmware/ceip.html . If you "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"prefer not to participate in VMware's CEIP for this "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"product, you should disable CEIP by setting "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"'ceip_enabled': false. You may join or leave VMware's "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"CEIP for this product at any time. Please confirm your "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"acknowledgement by passing in the parameter "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"--acknowledge-ceip in the command line."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="s2"&gt;"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"ceip_enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;PowerCli script&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-powershell highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;Connect-VIServer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;YourServerFQDN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-User&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vCenterUserName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vCenterPassword&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$VM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-VM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vcsa8_ref"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$spec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;VMware.Vim.VirtualMachineConfigSpec&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$spec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;changeVersion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$VM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExtensionData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ChangeVersion&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$spec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vAppConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;VMware.Vim.VmConfigSpec&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$properties&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExtensionData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;VAppConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Property&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kr"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$prop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$properties&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;New-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;VMware.Vim.VAppPropertySpec&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;operation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"edit"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$prop&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UserConfigurable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$True&lt;/span&gt;&lt;span class="w"&gt;
    
    &lt;/span&gt;&lt;span class="nv"&gt;$spec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vAppConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$VM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExtensionData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReconfigVM_Task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$spec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nv"&gt;$vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExtensionData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;VAppConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id="34-lab-version"&gt;3.4 Lab version&lt;/h2&gt;

&lt;p&gt;All the solution work with all versions actually the version it designed for &lt;code class="language-plaintext highlighter-rouge"&gt;vSphere 8&lt;/code&gt; if you want to setup a vSphere 7 Lab you just comment somme line because the vCenter 8 have one disk more than the vCenter 7&lt;/p&gt;

&lt;p&gt;On the Block resource &lt;code class="language-plaintext highlighter-rouge"&gt;"vsphere_virtual_machine" "vcsa"&lt;/code&gt; comment line 337 to 342&lt;/p&gt;
&lt;div class="language-terraform highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c1"&gt;// For VMware vsphere 7 just comment the disk above &lt;/span&gt;
        &lt;span class="nx"&gt;disk&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"disk16"&lt;/span&gt;
    &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"200"&lt;/span&gt;
    &lt;span class="nx"&gt;unit_number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="35-vyos-router-lab"&gt;3.5 Vyos router Lab&lt;/h2&gt;

&lt;p&gt;Here the bloc for thr router, it use the config via cloud-init encode with a function &lt;strong&gt;filebase64&lt;/strong&gt;&lt;/p&gt;

&lt;div class="language-terraform highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"vsphere_virtual_machine"&lt;/span&gt; &lt;span class="s2"&gt;"vyos"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;depends_on&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nx"&gt;vsphere_folder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"RTR_Lab_&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DomainName&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;resource_pool_id&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_resource_pool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource_pool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="nx"&gt;datastore_id&lt;/span&gt;               &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_datastore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datastore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="nx"&gt;datacenter_id&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_datacenter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="nx"&gt;host_system_id&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="nx"&gt;folder&lt;/span&gt;                     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;vsphere_folder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
    &lt;span class="nx"&gt;memory&lt;/span&gt;                     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;
    &lt;span class="nx"&gt;wait_for_guest_net_timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;wait_for_guest_ip_timeout&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;network_interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;network_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;network_interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;network_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;network_interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;network_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ISCSI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="nx"&gt;ovf_deploy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;local_ovf_path&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/Storage/VMware/vyos.ova"&lt;/span&gt;
        &lt;span class="nx"&gt;disk_provisioning&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"thin"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;vapp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;properties&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"password"&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"VMware1!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"user-data"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filebase64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;module}&lt;/span&gt;&lt;span class="s2"&gt;/vyos/user-data.yaml"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;lifecycle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ignore_changes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You need to modify according to all the variables and for your infrastructure&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Yaml file&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-yml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;vyos_config_commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set system host-name 'RTRLAB'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set interfaces ethernet eth1 address '10.0.0.254/24'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set interfaces ethernet eth2 address '172.18.0.254/24'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 default-router '10.0.0.254'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 dns-server '10.0.0.100'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 domain-name 'vExpert.lab'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 range 0 start '10.0.0.1'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 range 0 stop '10.0.0.79'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 range 1 start '10.0.0.110'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name LAN subnet 10.0.0.0/24 range 1 stop '10.0.0.253'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name ISCSI subnet 172.18.0.0/24 range 2 start '172.18.0.1'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set service dhcp-server shared-network-name ISCSI subnet 172.18.0.0/24 range 2 stop '172.18.0.55'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set nat source rule 100 outbound-interface 'eth0'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set nat source rule 100 source address '10.0.0.0/24'&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;set nat source rule 100 translation address 'masquerade'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id="4-setup-the-lab"&gt;4 Setup the Lab&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Ensure you have all source mine ar located in &lt;strong&gt;/Storage/VMware folder&lt;/strong&gt;
    &lt;div class="language-terraform highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt; &lt;span class="nx"&gt;ovf_deploy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;local_ovf_path&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/Storage/VMware/PhotonOS_DNS_Appliance_0.2.2.ova"&lt;/span&gt;
     &lt;span class="nx"&gt;disk_provisioning&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"thin"&lt;/span&gt;
     &lt;span class="nx"&gt;ovf_network_map&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="s2"&gt;"VM Network"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vsphere_network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the command Terraform plan&lt;/li&gt;
  &lt;li&gt;Run the command Terraform apply&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And the résult :&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/TerraformLab1.PNG" alt="IAC" class="align-center" /&gt;&lt;/p&gt;

&lt;h1 id="optional-config-the-lab"&gt;Optional config the Lab&lt;/h1&gt;

&lt;p&gt;If you want to configure you Lab with &lt;strong&gt;One Gist&lt;/strong&gt; you can.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://gist.github.com/JM2K69/625aeb845e828c4bdfcdf5a8649fca93"&gt;Gist link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Run this gist from your client and modify variables according to your lab&lt;/li&gt;
  &lt;li&gt;The client nned to have somme PowerShell module :
    &lt;ol&gt;
      &lt;li&gt;PowerCli&lt;/li&gt;
      &lt;li&gt;TrueNas to configure TrueNas server via API&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="/img/TerraformLab2.PNG" alt="IAC" class="align-center" /&gt;&lt;/p&gt;

&lt;p&gt;And gone ! ! 
The Terraform project is available on Github &lt;a href="https://github.com/JM2K69/Terraform_vSphere8"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank’s for reading.🤗&lt;/p&gt;

&lt;p&gt;Written by Jérôme Bezet-Torres @JM2K69.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://nocolumnname.blog/?p=10668</guid><link>https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=publishing-pstimesheets-to-the-psgallery</link><category>Powershell</category><category>PSGallery</category><category>PSTimeSheets</category><title>Publishing PSTimeSheets To The PSGallery</title><description>Words: 567 Time to read: ~ 3 minutes Skip This for Your Sanity I have created a module cause nobody wants to do timesheets no more; they want PowerShell to do it for ya. Well, if this is what you need, then this is what I&amp;#8217;ll give ya. (Ahem, apologies about that, songs get stuck &amp;#8230; &lt;a href="https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/" class="more-link"&gt;Continue reading&lt;span class="screen-reader-text"&gt; "Publishing PSTimeSheets To The PSGallery"&lt;/span&gt;&lt;/a&gt;</description><pubDate>Thu, 06 Oct 2022 19:44:02 Z</pubDate><comments>https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shane O'Neill</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://nocolumnname.blog/2022/10/06/publishing-pstimesheets-to-the-psgallery/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">1</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">10668</post-id></item><item><guid isPermaLink="false">https://thedavecarroll.com/blog/refreshing-the-blog</guid><link>https://thedavecarroll.com/blog/refreshing-the-blog/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["blog"]</category><category>powershell blog</category><category>blog</category><category>github actions</category><category>github pages</category><category>giscus</category><category>giscus comments</category><category>docker</category><title>Refreshing the Blog</title><description>In this article, I'll go into detail on how I rejuvenated this site, focusing on key technical aspects along the way.</description><pubDate>Tue, 13 Sep 2022 00:00:00 -0500</pubDate><a10:updated>2022-09-13T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/blog/refreshing-the-blog/">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I published my first article here over 4 years ago.
Well, not exactly here, but we’ll get to that in a few.&lt;/p&gt;

&lt;p&gt;It had been over a year since I published any article prior to the end of August.
A myriad of reasons all claim a part of “why didn’t I”.
Perhaps ironically (for a technical site), one of the reasons was purely technical.&lt;/p&gt;

&lt;p&gt;As discussed in an early article, &lt;a href="https://thedavecarroll.com/blog/how-i-blog/" target="_blank"&gt;How I Blog&lt;/a&gt;, this site is a generated static site powered by &lt;a href="https://jekyllrb.com/" target="_blank"&gt;Jekyll&lt;/a&gt;.
Though with all of its simplistic power, like its eponymous origin, there can be a dark side to a Jekyll-based site.&lt;/p&gt;

&lt;p&gt;In this article, I’ll go into detail on how I rejuvenated this site, focusing on key technical aspects along the way, and subdued the evil Mr. Hyde.&lt;/p&gt;

&lt;h2 id="changes-from-original-site"&gt;Changes from Original Site&lt;/h2&gt;

&lt;p&gt;I’ve made some significant under-the-hood changes to this site since its inception.
I’ve even changed &lt;em&gt;the hood&lt;/em&gt; and the rest of the exterior.&lt;/p&gt;

&lt;h3 id="site-and-domain-name"&gt;Site and Domain Name&lt;/h3&gt;

&lt;p&gt;This site was originally called, &lt;strong&gt;PowerShell: What A Novel Idea&lt;/strong&gt;, and it was hosted (by GitHub Pages) using the Custom Domain of &lt;code class="language-plaintext highlighter-rouge"&gt;powershell.anovelidea.org&lt;/code&gt;.
The domain name heavily influenced the site’s name.&lt;/p&gt;

&lt;p&gt;In the summer of 2020, I registered &lt;code class="language-plaintext highlighter-rouge"&gt;thedavecarroll.com&lt;/code&gt; to secure that domain to align with my online identity and brand.
A year and a few months later in November 2021, I made the decision to move this site to the new domain name.&lt;/p&gt;

&lt;p&gt;The sites’s focus had primarily been PowerShell and the underpinnings of itself.
As often happens, my interests have expanded to include Python and retro-computing.
I use Python daily for my day job as a DevOps engineer.
In fact, DevOps, cloud computing, and general IT culture are also interests.
One day, I hope there will be content focusing on these topics or whatever is most interesting to me at the time.
To reflect this shift in focus, I settled on the name &lt;strong&gt;Dave’s Technical Journal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Since the repo name and domain name were the same, it felt right to create a new appropriately named repo.
I updated the required files, added the new repo to Travis CI, and added the new domain name as a property in Google Analytics.&lt;/p&gt;

&lt;h3 id="visitor-comments"&gt;Visitor Comments&lt;/h3&gt;

&lt;p&gt;The next thing I tackled was getting the visitor comments, then powered by Staticman, updated and working.
However, by this time, the free service hosted by the Staticman developer was decommissioned because it had overloaded the free hosting platform.
I didn’t have the time or energy to go any further, so new site comments were not possible.&lt;/p&gt;

&lt;h3 id="original-build-system"&gt;Original Build System&lt;/h3&gt;

&lt;p&gt;In the aforementioned article, I discussed the following three build systems.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows Subsystem for Linux (WSL)&lt;/li&gt;
  &lt;li&gt;Google Cloud Platform (GCP)&lt;/li&gt;
  &lt;li&gt;Travis CI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The WSL method proved to be too complex for the time and energy (lack of time and energy may surface again) I had available.&lt;/p&gt;

&lt;p&gt;The GCP method never came to fruition as it was a hosting solution.
The build solution would need to be handled separately.&lt;/p&gt;

&lt;p&gt;So I had settled on &lt;code class="language-plaintext highlighter-rouge"&gt;travis-ci.org&lt;/code&gt; but eventually migrated to their &lt;code class="language-plaintext highlighter-rouge"&gt;travis-ci.com&lt;/code&gt;.
I was able to get the site building and committing to the &lt;code class="language-plaintext highlighter-rouge"&gt;gh-pages&lt;/code&gt; branch of the new repo.
GitHub Pages would then deploy my static site from that branch.&lt;/p&gt;

&lt;p&gt;As time passed and my energy utterly depleted, Travis CI had nothing to build.
I wasn’t writing articles.
My site became a dusty archive with nuggets of knowledge strewn about.&lt;/p&gt;

&lt;h2 id="recharged-and-ready"&gt;Recharged and Ready&lt;/h2&gt;

&lt;p&gt;Over the last couple months, I’ve been getting more active in the PowerShell online community,
tweeting and retweeting, reading the &lt;a href="https://www.reddit.com/r/PowerShell/" target="_blank"&gt;r/PowerShell subreddit&lt;/a&gt;,
and reading the &lt;a href="https://forums.powershell.org/" target="_blank"&gt;PowerShell.org Forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In fact, it was interaction with a poster from the forums that resulted in a recharge of my energy stores.
It proved to be just enough energy/motivation for me to tackle and overcome the technical issues with my site as evidenced by last week’s article.&lt;/p&gt;

&lt;p&gt;As promised above, let’s take a detailed look at what has changed and what still needs to be done.&lt;/p&gt;

&lt;h2 id="build-system"&gt;Build System&lt;/h2&gt;

&lt;p&gt;Jekyll is great, except when it’s not.
My lack of experience with Ruby, Gems, and Jekyll itself surely is a significant, contributing factor
for the often breaking of my Travis CI pipeline.&lt;/p&gt;

&lt;p&gt;If memory serves, twice Travis CI updated its runners and broke my builds.
And since there had been long time spans between some articles,
it was often like throwing dice to see if it worked when I committed a new article to the repo.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/travis-ci-build-failures.png" alt="Travis CI Build Failures" title="Travis CI Build Failures" /&gt;&lt;/p&gt;

&lt;h3 id="jekyll-docker-image"&gt;Jekyll Docker Image&lt;/h3&gt;

&lt;p&gt;I’ve had significantly greater luck in building my site locally.
&lt;em&gt;(You are building your site locally to validate page layout, check for typos, etc. Right?)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For several months I simply had a PowerShell snippet to run the Docker image &lt;code class="language-plaintext highlighter-rouge"&gt;jekyll/jekyll:latest&lt;/code&gt;.
Often, I would forget where I put the snippet and would have to try to reinvent the wheel.&lt;/p&gt;

&lt;p&gt;In May 2020, I added a &lt;code class="language-plaintext highlighter-rouge"&gt;docker-compose.yml&lt;/code&gt; file to the root of the repo that Docker would use to run the image.
After issuing a &lt;code class="language-plaintext highlighter-rouge"&gt;docker-compose up&lt;/code&gt; command, the site would be generated and served so I could browse to it on the host system.&lt;/p&gt;

&lt;p&gt;The &lt;code class="language-plaintext highlighter-rouge"&gt;docker-compose&lt;/code&gt; command allows you to configure how Docker creates the container to run the image.&lt;/p&gt;

&lt;p&gt;I mapped local disk volumes to image paths to retain the site after it’s built and to maintain the gem bundle cache.
This allows me to completely delete the container and image or copy the path contents to another system.&lt;/p&gt;

&lt;p class="notice--primary"&gt;The Jekyll Docker &lt;a href="https://github.com/envygeeks/jekyll-docker/blob/master/README.md" target="_blank"&gt;README&lt;/a&gt; and Docker’s documentation on &lt;a href="https://docs.docker.com/compose/" target="_blank"&gt;Compose&lt;/a&gt;
should provide you with enough information to get you started.&lt;/p&gt;

&lt;h4 id="docker-compose"&gt;docker-compose&lt;/h4&gt;

&lt;p&gt;In my compose file, I added the multi-line command in order to include the &lt;code class="language-plaintext highlighter-rouge"&gt;jekyll clean&lt;/code&gt; command to clean up the destination folder, &lt;code class="language-plaintext highlighter-rouge"&gt;.jekyll-metadata&lt;/code&gt;, and &lt;code class="language-plaintext highlighter-rouge"&gt;.sass-cache&lt;/code&gt;.
Without the cleanup, the list of articles (the Articles link at top of any page) were not getting recreated.&lt;/p&gt;

&lt;script src="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d.js?file=docker-compose.yml"&gt;&lt;/script&gt;

&lt;h3 id="github-actions"&gt;GitHub Actions&lt;/h3&gt;

&lt;p&gt;Regarding the automated build and deployment to GitHub Pages, I knew that I wanted to simplify that process.
There’s been a lot of development for—and adoption of—GitHub Pages since GitHub Actions were released in late 2019.
I’d used them &lt;a href="https://thedavecarroll.com/blog/publish-post-jekyll-on-a-schedule/" target="_blank"&gt;before&lt;/a&gt; and it only seem fitting that I turn to GA for my build and deployment automation.&lt;/p&gt;

&lt;p&gt;When I realized that GitHub had published a set of actions for Jekyll, I knew it was the right decision (for me, at least).
GitHub provides the following actions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Configure GitHub Pages - &lt;a href="https://github.com/marketplace/actions/configure-github-pages" target="_blank"&gt;configure-pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Build Jekyll for GitHub Pages - &lt;a href="https://github.com/marketplace/actions/build-jekyll-for-github-pages" target="_blank"&gt;jekyll-build-pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Upload GitHub Pages artifact - &lt;a href="https://github.com/marketplace/actions/upload-github-pages-artifact" target="_blank"&gt;upload-pages-artifact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Deploy GitHub Pages site - &lt;a href="https://github.com/marketplace/actions/deploy-github-pages-site" target="_blank"&gt;deploy-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They also provide several starter workflows and one, &lt;a href="https://github.com/actions/starter-workflows/blob/main/pages/jekyll-gh-pages.yml" target="_blank"&gt;jekyll-gh-pages.yml&lt;/a&gt;,
gave me enough to create the workflow below.&lt;/p&gt;

&lt;h4 id="workflow"&gt;Workflow&lt;/h4&gt;

&lt;p&gt;I created the &lt;code class="language-plaintext highlighter-rouge"&gt;Publish Dave’s Technical Journal&lt;/code&gt; workflow in the &lt;code class="language-plaintext highlighter-rouge"&gt;./github/workflows/&lt;/code&gt; folder.
Next, I changed the branch that would trigger the workflow.&lt;/p&gt;

&lt;p&gt;Even though GitHub provides a way to &lt;a href="https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs" target="_blank"&gt;skip the workflow&lt;/a&gt; via a commit message, I preferred to have the default to &lt;strong&gt;not&lt;/strong&gt; publish.
And I wanted to always publish when triggered manually via &lt;code class="language-plaintext highlighter-rouge"&gt;workflow_dispatch&lt;/code&gt;.
I checked the &lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions" target="_blank"&gt;Workflow syntax for GitHub Actions&lt;/a&gt; documentation and saw there was an &lt;code class="language-plaintext highlighter-rouge"&gt;if&lt;/code&gt; conditional.
After a few minutes searching the internet, I found a &lt;a href="https://stackoverflow.com/questions/63619329/github-action-get-commit-message" target="_blank"&gt;StackOverflow question&lt;/a&gt; that gave me enough to create the following conditional.&lt;/p&gt;

&lt;div class="language-yaml highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'publish')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id="publish-daves-technical-journal"&gt;Publish Dave’s Technical Journal&lt;/h4&gt;

&lt;script src="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d.js?file=publish-jekyll-site-to-github-pages.yml"&gt;&lt;/script&gt;

&lt;h4 id="github-pages-configuration"&gt;GitHub Pages Configuration&lt;/h4&gt;

&lt;p&gt;Originally, GitHub Pages would be deployed from an pre-configured branch to the GH page space.
I needed to update my repo’s configuration to use custom workflows for build and deployment.
This resulted in a new &lt;code class="language-plaintext highlighter-rouge"&gt;environment&lt;/code&gt; being created.
You can customize each environment independently, enabling protection rules and adding secrets that only that specific environment can use.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/github-repo-environments.png" alt="GitHub Repo Environments" title="GitHub Repo Environments" /&gt;&lt;/p&gt;

&lt;h3 id="build-scripts"&gt;Build Scripts&lt;/h3&gt;

&lt;p&gt;When I used Travis CI, I wrote two bash scripts that were my “build” scripts.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d#file-cibuild" target="_blank"&gt;cibuild&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;executed the &lt;code class="language-plaintext highlighter-rouge"&gt;jekyll build&lt;/code&gt; command that generated the static html&lt;/li&gt;
      &lt;li&gt;ran &lt;code class="language-plaintext highlighter-rouge"&gt;htmlproofer&lt;/code&gt; to validate internal html links&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d#file-sitemap_ping" target="_blank"&gt;sitemap_ping&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;pinged&lt;/em&gt; Google and Bing to let the search engines know my sitemap had been regenerated&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first part, building the static html, was now covered by the new workflow.
I attempted to get the &lt;code class="language-plaintext highlighter-rouge"&gt;htmlproofer&lt;/code&gt; working as a step, but ultimately didn’t spend the time to complete it.&lt;/p&gt;

&lt;p&gt;I did include a step that mirrored the &lt;code class="language-plaintext highlighter-rouge"&gt;sitemap_ping&lt;/code&gt; script and quickly discovered that Bing no longer supported &lt;a href="https://blogs.bing.com/webmaster/may-2022/Spring-cleaning-Removed-Bing-anonymous-sitemap-submission" target="_blank"&gt;anonymous sitemap submissions&lt;/a&gt;.
They now direct users to adopt &lt;a href="https://www.indexnow.org/" target="_blank"&gt;https://www.indexnow.org&lt;/a&gt; to notify Bing and other search engines of the latest site changes.
Wanting to stay focused (a daily struggle), I decided to not learn IndexNow now and, instead, put it off for another day.&lt;/p&gt;

&lt;p&gt;Likewise, I decided to forego notifying Google search.
I added that to my site’s ever-growing to-do list.&lt;/p&gt;

&lt;h2 id="site-comments"&gt;Site Comments&lt;/h2&gt;

&lt;p&gt;Most sites offer a way for readers to make comments allowing them to engage and be part of the conversation.
When I rolled out my site originally, I used the &lt;a href="https://staticman.net/" target="_blank"&gt;Staticman&lt;/a&gt; Node.js application and their public API.
Because the API is hosted on Heroku’s free tier, they reached capacity quite often.&lt;/p&gt;

&lt;p&gt;In four years, my site has had a whopping 13 comments for 10 posts (about a third of my total posts).
That’s probably the reason I hadn’t encountered any public API throttling or over capacity.&lt;/p&gt;

&lt;h3 id="staticman-on-heroku"&gt;Staticman on Heroku&lt;/h3&gt;

&lt;p&gt;On Staticman’s GitHub repo, there is a nice &lt;code class="language-plaintext highlighter-rouge"&gt;Deploy to Heroku&lt;/code&gt; button.
Spoiler, I (eventually) clicked the button.&lt;/p&gt;

&lt;p&gt;Since I didn’t have a &lt;a href="https://www.heroku.com/" target="_blank"&gt;Heroku&lt;/a&gt; account, I had to create one prior to deploying.
The process seemed really simple and within a short time, I had my own copy of the Staticman API running.&lt;/p&gt;

&lt;p&gt;I had to iron out one major issue before I could submit a comment successfully.
It had to deal with the encrypted reCAPTCHA secret in the &lt;code class="language-plaintext highlighter-rouge"&gt;staticman.yml&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;_config.yml&lt;/code&gt; files.
The Staticman application logs revealed that a part of my url was getting appended twice.
Once that was corrected, I was able to encrypt the reCAPTCHA secret, update my &lt;code class="language-plaintext highlighter-rouge"&gt;_config.yml&lt;/code&gt; file, and successfully register my blog with my Staticman API.&lt;/p&gt;

&lt;p&gt;I submitted a test comment and voila!
My site had Comments again!
And the new GA workflow worked successfully to build the site and there was my “test” comment.
That was a complete win and I felt really great about it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;14 hours later…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I received another comment.&lt;br /&gt;
Oh! And another.&lt;br /&gt;
And another.&lt;br /&gt;
And one more.&lt;br /&gt;
And, what’s going on!?&lt;/p&gt;

&lt;p&gt;Oof.
Spam.&lt;/p&gt;

&lt;p&gt;I closed two pull requests (didn’t merge the PR) and, unexpectedly, the GA workflow kicked off!
Then I remembered, it was configured to run when a PR was closed, apparently regardless of whether it was merged or not.
I prevented the workflow from doing that again and
then proceeded to waste a few hours down the rabbit hole of attempting to get v3 of reCAPTCHA working with Staticman.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/staticman-comment.png" alt="Comment Test Submission for reCAPTCHA v3" title="Comment Test Submission for reCAPTCHA v3" /&gt;&lt;/p&gt;

&lt;p&gt;I wanted to provide readers with an easy, “no login” solution to submit comments.
It was that very openness that made the comments form an easy target for spammers and bots.
Dejected, I decided my focus needed to change from Staticman and reCAPTCHA.&lt;/p&gt;

&lt;p class="notice--primary"&gt;In case you are interested, you can look at the &lt;a href="https://github.com/thedavecarroll/thedavecarroll.com/pulls?q=is%3Apr+is%3Aclosed+author%3Athedavecarroll-bot" target="_blank"&gt;the bad pull requests&lt;/a&gt; in my repo.
I deleted the feature branches that each comment created.&lt;br /&gt;
&lt;br /&gt;
&lt;img src="/assets/images/refresh-blog-tech-stack/staticman-comment-abuse.png" alt="Staticman Spam Pull Requests" title="Staticman Spam Pull Requests" /&gt;&lt;/p&gt;

&lt;h3 id="giscus-github-app"&gt;Giscus GitHub App&lt;/h3&gt;

&lt;p&gt;I considered abandoning comments altogether until an internet search deposited me at &lt;a href="https://twitter.com/andrewlocknet" target="_blank"&gt;Andrew Lock&lt;/a&gt;’s article &lt;a href="https://andrewlock.net/considering-replacing-disqus-with-giscus/" target="_blank"&gt;Considering replacing Disqus with Giscus&lt;/a&gt;.
The idea of using &lt;a href="https://disqus.com/" target="_blank"&gt;Disqus&lt;/a&gt; was another rabbit hole, albeit shallower, that I decided to abandon.
That detour cost me less than an hour.&lt;/p&gt;

&lt;p&gt;I read the article and the &lt;a href="https://giscus.app/" target="_blank"&gt;giscus&lt;/a&gt; home page with instructions.
The GitHub setup seemed easy so the next possible issue was if giscus support was built-in to my theme.
I was glad to see that the &lt;a href="https://mmistakes.github.io/minimal-mistakes/docs/configuration/#comments" target="_blank"&gt;Minimal Mistakes&lt;/a&gt; theme does support giscus as a comment provider.&lt;/p&gt;

&lt;p&gt;I made the updates, waited the minute or so for the workflow to build and deploy the site, and then checked my work.
And there it was, under the &lt;strong&gt;Leave A Comment&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;Since it’s integral to GitHub, a prospective commenter would need to login to GitHub and authorize the giscus app.
&lt;em&gt;You can always revoke access to the app should you feel it’s been compromised.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/authorized-github-apps.png" alt="Authorized GitHub Apps" title="Authorized GitHub Apps" /&gt;&lt;/p&gt;

&lt;p&gt;After I authorized the app, I was able to react and comment on the article.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/giscus-comments.png" alt="Leave a Comment" title="Leave a Comment" /&gt;&lt;/p&gt;

&lt;p&gt;You can see the comment in &lt;a href="https://github.com/thedavecarroll/thedavecarroll.com/discussions/10" target="_blank"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt;

&lt;p class="notice--primary"&gt;As most of readers of my articles are likely IT professionals, there is a good chance that they already have a GitHub account.
If not, wouldn’t it be great to be the catalyst for someone to create an account in order to leave a comment?&lt;/p&gt;

&lt;h4 id="configuration"&gt;Configuration&lt;/h4&gt;

&lt;p&gt;It was a simple matter to answer a few questions, check or uncheck a few boxes, to get the configuration values from the giscus site.
After all your selections are made, the “Enable giscus” section provides a &lt;code class="language-plaintext highlighter-rouge"&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; block that you can add to your site’s theme.
Because my theme already supported giscus, I just had to update my config file with the corresponding values.&lt;/p&gt;

&lt;script src="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d.js?file=config-for-giscus.yml"&gt;&lt;/script&gt;

&lt;p&gt;Instead of using the suggested GitHub Discussion category of Announcements, I created a new category called Site Comments selecting the &lt;em&gt;Announcement&lt;/em&gt; format.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/discussion-category-for-giscus.png" alt="Discussion Category for Giscus" title="Discussion Category for Giscus" /&gt;&lt;/p&gt;

&lt;p&gt;While backtracking my steps for my recall accuracy check, I realized that I overlooked giscus’ &lt;a href="https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md" target="_blank"&gt;advanced usage guide&lt;/a&gt;.
It provides instructions on how to restrict the domains that can load giscus, as well as a few other methods of customization.
I’ve added the required &lt;code class="language-plaintext highlighter-rouge"&gt;giscus.json&lt;/code&gt; to my repo’s root.&lt;/p&gt;

&lt;script src="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d.js?file=giscus.json"&gt;&lt;/script&gt;

&lt;h2 id="favicon"&gt;Favicon&lt;/h2&gt;

&lt;p&gt;This blog originally had an image of my PowerShell tattoo as the logo and the favicon.
A few months ago, I commissioned a new avatar from the &lt;a href="https://reverentgeek.com/" target="_blank"&gt;ReverentGeek&lt;/a&gt;.
I’ve been using it on all my &lt;em&gt;thedavecarroll&lt;/em&gt; branded social media since.&lt;/p&gt;

&lt;p&gt;As I worked with refreshing the blog, it was a simple matter to update the theme’s author avatar.
The old favicon, however, kept staring at me.
&lt;em&gt;How did I generate that originally?&lt;/em&gt;
A quick search brought me to a familiar site, &lt;a href="https://realfavicongenerator.net/" target="_blank"&gt;realfavicongenerator.net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The process is fairly simply, select your image and on the next page, make setting changes as needed for each type of favicon.
&lt;em&gt;You thought there was only one?&lt;/em&gt;
I think the only thing that I customized was the path where the favicons would be hosted.
Since there are several files and I like seeing tidy folder listings, I opted to use &lt;code class="language-plaintext highlighter-rouge"&gt;/assets/images/favicon&lt;/code&gt; as the path.&lt;/p&gt;

&lt;p&gt;The next step was to hit the button to generate the favicons and HTML code.
It provided a zip package, instructions on where to extract it, and a chunk of HTML code.&lt;/p&gt;

&lt;div class="language-html highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"apple-touch-icon"&lt;/span&gt; &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"180x180"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/apple-touch-icon.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/png"&lt;/span&gt; &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"32x32"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/favicon-32x32.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/png"&lt;/span&gt; &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"16x16"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/favicon-16x16.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"manifest"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/site.webmanifest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"mask-icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/safari-pinned-tab.svg"&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;"#5bbad5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"shortcut icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/favicon.ico"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"msapplication-TileColor"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"#da532c"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"msapplication-config"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"/assets/images/favicon/browserconfig.xml"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"theme-color"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"#ffffff"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I first used the site initially building my blog, I had no idea how many different files and code that goes into the favicon.
It’s quite a few.&lt;/p&gt;

&lt;p&gt;Per the instructions, the HTML code had to go into the &lt;code class="language-plaintext highlighter-rouge"&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.
My theme has an &lt;code class="language-plaintext highlighter-rouge"&gt;_includes/head/custom.html&lt;/code&gt; that was designed for use by the site owner.
It makes adding custom elements to the &lt;code class="language-plaintext highlighter-rouge"&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section easy.&lt;/p&gt;

&lt;p&gt;The same site also provides a way to test the favicons once you have added them to your site.&lt;/p&gt;

&lt;h2 id="google-analytics"&gt;Google Analytics&lt;/h2&gt;

&lt;p&gt;Unlike some sites, I don’t monetize this one because I’m personally not a fan of all the ads I have to sort through just to get to the content.
I use an ad blocker which does its best to filter out superfluous ads, and for the most part, it does a good enough job.
I do however like to know metrics on page views and visitors.&lt;/p&gt;

&lt;h3 id="universal-analytics"&gt;Universal Analytics&lt;/h3&gt;

&lt;p&gt;Since the blog’s inception, I’ve been using Universal Analytics (Google Analytics 3) for these metrics.&lt;/p&gt;

&lt;p&gt;Here are just a few metrics for the entire time I have been using UA.&lt;/p&gt;

&lt;h4 id="landing-pages"&gt;Landing Pages&lt;/h4&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/ga3-landingpages-all.png" alt="GA3 Landing Pages" title="GA3 Landing Pages" /&gt;&lt;/p&gt;

&lt;h4 id="sessions"&gt;Sessions&lt;/h4&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/ga3-sessions-all.png" alt="GA3 Sessions" title="GA3 Sessions" /&gt;&lt;/p&gt;

&lt;h4 id="locations"&gt;Locations&lt;/h4&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/ga3-locations-all.png" alt="GA3 Locations" title="GA3 Locations" /&gt;&lt;/p&gt;

&lt;h3 id="google-analytics-4"&gt;Google Analytics 4&lt;/h3&gt;

&lt;p&gt;For at least a year, I’ve been ignoring the frequent reminder from Google that they will begin to sunset UA,
stop processing new hits, on July 1, 2023.
Even though I had nearly a year before the deadline, I was already “under-the-hood” and wanted to get as much done as possible.&lt;/p&gt;

&lt;p&gt;Assuming you already have a Google Analytics account and an existing UA property, setting up a new GA4 property is a simple as using the Setup Assistant.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/refresh-blog-tech-stack/ga4-setup-assistant.png" alt="GA4 Setup Assistant" title="GA4 Setup Assistant" /&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://support.google.com/analytics/answer/9744165" target="_blank"&gt;support document&lt;/a&gt; walks you through adding a GA4 property to a site that already has UA.
Again, I was lucky that my theme already supported GA4.
All I had to do was update the provider and tracking id.&lt;/p&gt;

&lt;script src="https://gist.github.com/thedavecarroll/3e4a46d18653387cfa4d71c46a201f2d.js?file=config-for-ga4.yml"&gt;&lt;/script&gt;

&lt;h2 id="next-steps"&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Even with all of this work, I still have more to do.&lt;/p&gt;

&lt;h3 id="workflows"&gt;Workflows&lt;/h3&gt;

&lt;p&gt;I want to create the following workflows.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Publish Blog Drafts
    &lt;ul&gt;
      &lt;li&gt;Even though I already have a workflow for this, it doesn’t work as smooth as I would like (the filename had an incorrect date prefix). And I would like to use PowerShell as the scripting language.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;Note: I’ve already made some significant progress on this. Checkout out the &lt;a href="https://github.com/thedavecarroll/thedavecarroll.com/actions/workflows/rename-draft-articles.yml" target="_blank"&gt;Rename Draft Articles&lt;/a&gt; workflow in my site’s repo.&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Announce New Article
    &lt;ul&gt;
      &lt;li&gt;I want to use &lt;a href="https://www.powershellgallery.com/packages/BluebirdPS" target="_blank"&gt;BluebirdPS&lt;/a&gt; to Tweet new articles after they are published.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Announce Archive Article
    &lt;ul&gt;
      &lt;li&gt;I want to Tweet an older article once or twice a month to cover any times when I’m in &lt;em&gt;maintenance mode&lt;/em&gt; again.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ideally, I would like to validate the links, especially internal, before deploying the site.&lt;/li&gt;
  &lt;li&gt;The standard publish workflow should include a sitemap or new article ping to Google and IndexNow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="notice--primary"&gt;&lt;strong&gt;Revive Social Media&lt;/strong&gt;&lt;br /&gt;
When I reached out to PowerShell Twitter, &lt;a href="https://twitter.com/MSAdministrator" target="_blank"&gt;Josh Rickard&lt;/a&gt; provided me a link to his &lt;a href="https://github.com/MSAdministrator/revive-social-media" target="_blank"&gt;revive-social-media repo&lt;/a&gt; which can submit a post to LinkedIn and publish a Tweet.
Whether I use that or not, I’m sure it will be helpful for LinkedIn postings.&lt;/p&gt;

&lt;h4 id="related-articles"&gt;Related Articles&lt;/h4&gt;

&lt;p&gt;I’ve noticed a high bounce rate for most visitors, meaning that they usually just read the article that brought them to the site then leave.
That’s their prerogative, but perhaps there are other related articles that could interest them.
Jekyll supports related posts, however, they are not random and are the last three or four articles which may not be on the same topic.
I found &lt;a href="https://blog.webjeda.com/jekyll-related-posts/" target="_blank"&gt;this article&lt;/a&gt; that shows how to implement actual related posts based on tags or categories.
This seems like a low-hanging fruit that I will tackle soon.&lt;/p&gt;

&lt;h3 id="theme-changes"&gt;Theme Changes&lt;/h3&gt;

&lt;p&gt;The more I look at my site, the less I’m pleased with the aesthetics.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My theme is full-featured and the design still looks current. Maybe I could find a theme that supports what I need and hopefully one that is a &lt;em&gt;responsive design&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;My site currently does not support a dark mode, so adding this capability, ideally with a toggle on the page, would be a good idea.&lt;/li&gt;
  &lt;li&gt;The site’s theme feel like it wastes a lot of screen real estate. The author profile is on each page and it takes a huge chunk. I’d like to use my avatar next to the site name in the title.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;When I started writing this article, I had no idea that it would take well over a week to finish.
I also had no idea that it would be over 3500 words.
If you’ve made it this far, &lt;strong&gt;&lt;em&gt;thank you for sticking with it!&lt;/em&gt;&lt;/strong&gt;
I promise the next several articles will not be this long.&lt;/p&gt;

&lt;p&gt;I hope that this article does not dissuade you from considering Jekyll as your static site generator, that was not the intent.
I wanted to reveal the struggles that I have had with it and how I overcame them.
Some of them stemmed from the lack of the right &lt;em&gt;mind-space&lt;/em&gt; which drained virtually any energy required  to work on this site.
As mentioned, my energy levels are starting to climb again and each new article you see means they are sufficient.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please leave them below (in the new giscus comment form!).
And if you publish a blog using Jekyll, I’d like to hear how you have (or would) remediate any of the issues above.&lt;/p&gt;

&lt;p&gt;Thank you, again.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://thedavecarroll.com/powershell/questions-from-powershell-forums-user</guid><link>https://thedavecarroll.com/powershell/questions-from-powershell-forums-user/</link><a10:author><a10:name>Dave Carroll</a10:name></a10:author><category>["powershell"]</category><category>blog</category><category>powershell</category><category>powershell concepts</category><category>learn powershell</category><category>powershell beginner</category><category>how to</category><category>career</category><title>Questions from a PowerShell.org Forums User</title><description>A PowerShell.org Forums user asked me a few questions about my PowerShell journey and here are my answers.</description><pubDate>Tue, 30 Aug 2022 00:00:00 -0500</pubDate><a10:updated>2022-09-12T00:00:00-05:00</a10:updated><a10:content type="html" xml:base="https://thedavecarroll.com/powershell/questions-from-powershell-forums-user/">&lt;p class="full"&gt;&lt;img src="/assets/images/powershellforums.png" alt="PowerShell.org Forums" title="PowerShell.org Forums" /&gt;&lt;/p&gt;

&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;About a week ago, I commented on a PowerShell forum post and the poster struck up a conversation in my DMs.&lt;/p&gt;

&lt;p&gt;He is starting his own PowerShell blog and wanted to ask me a few questions.
&lt;em&gt;(Insert self-deprecating comment here.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I thought that the questions and my responses may help provide some insight for others.&lt;/p&gt;

&lt;h2 id="1-what-is-your-writing-process-do-you-write-on-subjects-you-are-currently-learning-about-or-want-to-research-more"&gt;1. What is your writing process? Do you write on subjects you are currently learning about or want to research more?&lt;/h2&gt;

&lt;p class="notice--info"&gt;Sometimes the writing is the easy part. &lt;br /&gt;
Sometimes, like when I started writing these answers, it’s a struggle.&lt;/p&gt;

&lt;p&gt;Most of my articles relate to teaching one or more PowerShell concepts, like my walk-throughs for some of the IronScripter Challenges,
pulling back the curtain to show the reader my process on how I designed solutions or code that I’ve written, or
showcasing my modules via introductions or deep-dives.&lt;/p&gt;

&lt;p&gt;When Jeff Hicks asked me to participate in the &lt;a href="https://jdhitsolutions.com/blog/powershell/7371/ps7now-ebook-available/" target="_blank"&gt;PS7Now&lt;/a&gt; week event to announce the general availability of PowerShell 7,
I was flabbergasted and quite flattered.
I was assigned two topics which I needed to either showcase the difference between Windows PowerShell and PowerShell 7 JSON cmdlets or,
in the case of PowerShell 7’s Experimental Features, be one of the first community bloggers to introduce the concept to the community.
The former article has received more visitors and page views that any of my other articles.&lt;/p&gt;

&lt;p&gt;During my writing for those two articles, I learned a lot, especially about Experimental Features.
It seems that, even now, there’s not much adoption of them for community modules.&lt;/p&gt;

&lt;p class="notice--warning"&gt;Since this is about my writing process, I must divulge that I’ve just spent at least an hour trying to find GitHub repos with PowerShell 7 Experimental Features.
After I was able to filter out all of the Microsoft references, it resulted in &lt;a href="https://github.com/search?q=ExperimentalFeatures+extension%3Apsd1+NOT+2113633+NOT+PSManageBreakpointsInRunspace+NOT+ExpTest+NOT+855960+NOT+PSDesiredStateConfiguration&amp;amp;type=code" target="_blank"&gt;one result&lt;/a&gt;.
My DemoModule script module is returned, not my binary module &lt;a href="https://github.com/thedavecarroll/PSTemperature" target="_blank"&gt;PSTemperature&lt;/a&gt; despite being declared in a &lt;code class="language-plaintext highlighter-rouge"&gt;psd1&lt;/code&gt; file (a requirement for Experimental Features).
This tells me that the indexing or searching in GitHub isn’t 100% accurate (at least based on the time I spent with it tonight).
A standard internet search returned the article, my DemoModule gist, but again not the PSTemperature repo.&lt;/p&gt;

&lt;p&gt;In the next &lt;a href="https://thedavecarroll.com/powershell/how-i-implement-module-variables/" target="_blank"&gt;highly popular article&lt;/a&gt;, I focus on variable scope, specifically the script scoped variable.
When you use script scoped in your module, it’s available to all commands within that module.
Also, when you &lt;code class="language-plaintext highlighter-rouge"&gt;Remove-Module&lt;/code&gt;, the variable is removed from your session.
My article announcement Tweet was retweeted by Don Jones and, based on the page views,
many people continue to read it and hopefully walk away knowing how handle module variables for their own modules.&lt;/p&gt;

&lt;p&gt;Those are two examples on why I wrote those articles, with a bit of time (more for me) going down a rabbit hole.
I’m not sure if others get distracted like I did, or shift focus to an adjacent topic.
For me, it’s part of my process, one over which I have varying levels of control.&lt;/p&gt;

&lt;p&gt;Most often, I solve the problem/challenge, write the module, or master the commands before I start writing an article.
For a few articles, I began writing the article when I began the challenge.
This allowed me to capture my thought process on how to tackle the challenge.&lt;/p&gt;

&lt;h2 id="2-do-you-have-a-favorite-resource-for-powershell-that-has-helped-you-learn"&gt;2. Do you have a favorite resource for Powershell that has helped you learn?&lt;/h2&gt;

&lt;p&gt;I have read parts of the de facto books on learning PowerShell.
Some, I’ve read much more than others.
But they are not where I’ve learned most what I know of PowerShell.&lt;/p&gt;

&lt;p&gt;The majority of my knowledge has come from sources on the internet.
Microsoft is the primary resource (really they should be) and community blogs like this one are a close second.
I know that I’ve read more words by &lt;a href="https://jdhitsolutions.com/blog/" target="_blank"&gt;Jeff Hicks&lt;/a&gt; at &lt;a href="https://jdhitsolutions.com/blog/" target="_blank"&gt;his site&lt;/a&gt; than his books (sorry Jeff).&lt;/p&gt;

&lt;p&gt;I’ve gotten some quick answers on StackOverflow and ServerFault, but I don’t immediately gravitate to those sites.
And there have been a few co-workers that taught me a few things that I must have overlooked previously, like &lt;a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_functions?view=powershell-7.2#filters" target="_blank"&gt;Filter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s examine a quote most often attributed to Confucius.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I hear and I forget.&lt;br /&gt;
I see and I remember.&lt;br /&gt;
I do and I learn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This simple adage shared since third century BCE was likely a derivative of a quote from Xunzi, a follower of Confucius.
Here’s a &lt;a href="https://english.stackexchange.com/questions/226886/origin-of-i-hear-and-i-forget-i-see-and-i-remember-i-do-and-i-understand" target="_blank"&gt;rough translation&lt;/a&gt; of the original.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Not hearing is not as good as hearing, hearing is not as good as seeing, seeing is not as good as knowing, knowing is not as good as acting; true learning continues until it is put into action.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Both quotes, and other similar ones, point to action as the best learning tool.
I wholeheartedly agree.
I’ve often said that I am a taskmaster and by that I mean I learn by doing a task.&lt;/p&gt;

&lt;p&gt;As mentioned in my updated &lt;a href="https://thedavecarroll.com/about/" target="_blank"&gt;About Me&lt;/a&gt; page, I learned PowerShell by forcing upon myself the task (obviously many sub-tasks) of converting my existing VBScript code.
I had a concrete thing to do and a concrete outcome—did the new code work?&lt;/p&gt;

&lt;p&gt;Beyond daily tasks, you can be “assigned” tasks via code challenges.
The &lt;a href="https://ironscripter.us/" target="_blank"&gt;IronScripter&lt;/a&gt; site, created by The Chairman, aka Jeff Hicks, provides frequent challenges most of which target beginner, intermediate, and advanced PowerShell concepts and techniques.
I’ve taken many of the challenges and documented some of my processes and &lt;a href="https://github.com/thedavecarroll/IronScripterSolutions" target="_blank"&gt;solutions&lt;/a&gt; while expounding on the lessons of the challenge.&lt;/p&gt;

&lt;p&gt;Similarly, the yearly scripting/programming language agnostic &lt;a href="https://github.com/thedavecarroll/AdventOfCode" target="_blank"&gt;Advent of Code&lt;/a&gt; is another site/event that I’ve participated in the challenges and learned quite a lot. In 2021, I used the challenge to help me learn more about Python.&lt;/p&gt;

&lt;p class="notice--success"&gt;It’s okay to say Python. It’s far better to know many languages and when to use each for a given task.&lt;/p&gt;

&lt;p&gt;The past years’ challenges from IronScripter and Advent of Code are still available.
Assign yourself the task of checking them out.&lt;/p&gt;

&lt;h2 id="3-did-you-have-a-mentor-in-your-process-of-learning-powershell"&gt;3. Did you have a mentor in your process of learning Powershell?&lt;/h2&gt;

&lt;p&gt;No, I don’t think so.
At least not a single individual.&lt;/p&gt;

&lt;p&gt;I believe the PowerShell community at large can be considered a mentor collective.&lt;/p&gt;

&lt;p&gt;Many times I have approached others in the community for advice on how I should proceed or the best path to achieve a given result on the PowerShell &lt;a href="https://aka.ms/psslack" target="_blank"&gt;Slack&lt;/a&gt; and &lt;a href="https://discord.gg/powershell" target="_blank"&gt;Discord&lt;/a&gt; communities, on the &lt;a href="https://forums.powershell.org/" target="_blank"&gt;PowerShell.org forums&lt;/a&gt;, and on &lt;a href="https://twitter.com/search?q=%23powershell" target="_blank"&gt;Twitter at #PowerShell&lt;/a&gt;.&lt;/p&gt;

&lt;p class="notice--info"&gt;I would like to thank Jeff Hicks on coaching me on my first Summit presentation.
His guidance helped me keep focus which ultimately resulted, I hope, in a more engaging presentation.&lt;/p&gt;

&lt;h2 id="4-are-there-any-concepts-you-wish-you-would-have-known-earlier-in-your-career-with-powershell-that-ended-up-being-a-game-changer"&gt;4. Are there any concepts you wish you would have known earlier in your career with Powershell that ended up being a game-changer?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I first started with PowerShell, I dot-sourced like I was communicating in Morse code.
Writing modules to combine several service or functional commands would have made things much simpler.
I should have adopted the habit of writing modules sooner and saved the dots.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance Tuning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Background jobs, runspaces, and threads have specific benefits for performance when you’re dealing with 1K, 10K, 100K iterations.&lt;/p&gt;

&lt;p&gt;When I send a command to all the domain controllers, I typically use background jobs (&lt;code class="language-plaintext highlighter-rouge"&gt;Start-Job&lt;/code&gt;) created for each DC and wait for them all to complete.
It’s much faster than processing them sequentially, like using &lt;code class="language-plaintext highlighter-rouge"&gt;foreach&lt;/code&gt; or &lt;code class="language-plaintext highlighter-rouge"&gt;ForEach-Object&lt;/code&gt; to iterate through the list.
Each background job is executed in a separate process on the local machine, so even this performance tuning technique can have performance issues.&lt;/p&gt;

&lt;p&gt;Several years ago, I used PoshRSJobs when I was harvesting data from a couple thousand workstations; it’s based on &lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/developer/hosting/creating-runspaces?view=powershell-7.2" target="_blank"&gt;PowerShell runspace&lt;/a&gt;.
In my current position, I don’t have the need to use runspaces often.&lt;/p&gt;

&lt;p&gt;The PowerShell Team provided the module &lt;a href="https://docs.microsoft.com/en-us/powershell/module/threadjob/start-threadjob?view=powershell-7.2" target="_blank"&gt;ThreadJob&lt;/a&gt; which has a single cmdlet, &lt;code class="language-plaintext highlighter-rouge"&gt;Start-ThreadJob&lt;/code&gt;.
I haven’t used this command, but definitely would prefer it over the previous techniques in some situations.&lt;/p&gt;

&lt;p&gt;Another technique that would yield higher performance is simply to upgrade to the latest version of PowerShell.
When released, PowerShell 7 included an updated &lt;code class="language-plaintext highlighter-rouge"&gt;ForEach-Object&lt;/code&gt; adding a &lt;code class="language-plaintext highlighter-rouge"&gt;Parallel&lt;/code&gt; parameter.
In some scenarios, this could provide sufficient speed increase.
Many other performance enhancements were made the engine level and built-in commands.&lt;/p&gt;

&lt;p&gt;Microsoft has provided guidance on Powershell &lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/dev-cross-plat/performance/script-authoring-considerations?view=powershell-7.2" target="_blank"&gt;scripting performance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Everything You Wanted to Know&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I write my PowerShell code, inevitably I need to search the internet for help.
&lt;em&gt;Disclosure: I still do.&lt;/em&gt;
Often I have wound up on &lt;a href="https://twitter.com/KevinMarquette" target="_blank"&gt;Kevin Marquette&lt;/a&gt;’s site, &lt;a href="https://powershellexplained.com/" target="_blank"&gt;PowerShellExplained&lt;/a&gt;.
Many of the articles are now part of Microsoft’s Learning &lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/learn/deep-dives/overview?view=powershell-7.2" target="_blank"&gt;PowerShell - Deep Dives&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The game changer here is knowing where to go to find answers.
It also includes knowing how to ask the questions (especially in a search engine).
One search result which doesn’t really answer your question, perhaps because it’s a tangential topic, may lead you to a better way to ask your question again.&lt;/p&gt;

&lt;p&gt;Searching the internet, while seemingly easy, is a skill that can be developed.&lt;/p&gt;

&lt;h2 id="5-even-with-your-20-years-of-experience-do-you-still-get-overwhelmed-with-new-concepts-and-tools"&gt;5. Even with your 20+ years of experience do you still get overwhelmed with new concepts and tools?&lt;/h2&gt;

&lt;p&gt;Overwhelmed? Absolutely.&lt;/p&gt;

&lt;p&gt;Disparaged? Absolutely not.&lt;/p&gt;

&lt;p&gt;Everyone’s journey starts somewhere.
And learning a new concept is a new journey regardless of your years of experience.&lt;/p&gt;

&lt;p&gt;If you have written in various scripting languages, the time it takes learning a new language should be reduced.
How much it’s reduced would be determined by your fluency in the many different languages and how similar the new language is to one of those.&lt;/p&gt;

&lt;p&gt;Each new concept you understand makes learning similar concepts easier to learn.&lt;/p&gt;

&lt;p&gt;In fact, learning itself is a skill.&lt;/p&gt;

&lt;p&gt;Get comfortable learning how &lt;em&gt;you&lt;/em&gt; learn and focus on improving that skill.&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;On face value, these questions may seem easy to answer.&lt;/p&gt;

&lt;p&gt;Each of them requires a certain amount of self-awareness and, of course, recall.
Self-awareness comes from introspection which should naturally happen over time.
Unfortunately, time can be a hinderance to recall.
These questions have forced me to rummage through old, dusty memories and I’m sure some of them were damaged from the ravages of time.&lt;/p&gt;

&lt;p&gt;Nonetheless, I hope this glimpse into my process, experience, and outlook will help you on your journey with PowerShell (and other technologies).&lt;/p&gt;

&lt;p&gt;Consider it a map to a lost treasure.
You may recognize some of the landmarks, but you know that your journey would yield a different experience.
You may even find a shorter, more direct path and create your own map to the treasure for someone else to find.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hiatus…Again&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s been over a year since I published an article.
And I wanted you to know - it wasn’t you, it was me.&lt;/p&gt;

&lt;p&gt;The last few years have been emotionally tumultuous, but I think I’m to the point where I can start publishing articles on PowerShell (and other topics) again.&lt;/p&gt;

&lt;p&gt;Over the last couple months, I’ve been dipping my toes back into &lt;a href="https://docs.bluebirdps.dev/en/latest/" target="_blank"&gt;BluebirdPS&lt;/a&gt; and a new version should be released soon.&lt;/p&gt;

&lt;p&gt;Being asked these questions, and realizing that the answers should be published on my blog, has led me to dust off the site and repair the broken build automation and comment system.
In fact, I’ll be publishing an update to how I blog, again as soon as I can.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading this article.
I really would like to hear your thoughts on it.&lt;/p&gt;

&lt;p&gt;If you have any comments or questions, please post them below.&lt;/p&gt;

&lt;p class="notice--primary"&gt;&lt;strong&gt;Update 2022-09-05&lt;/strong&gt;
Minor changes to formatting.&lt;/p&gt;</a10:content></item><item><guid isPermaLink="false">https://www.powershellcenter.com/?p=6623</guid><link>https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/</link><category>Powershell - Systems</category><title>PowerShell Script to Simplify Send-MgUserMail</title><description>&lt;p&gt;Okay, Microsoft Graph API is cool, but sometimes it&amp;#8217;s boring to deal with all these hashtables and arrays. The Send-MgUserMail is a great graph cmdlet to send Emails using the Graph API endpoint. In a previous post, I explained the details and parameters for the Send-MgUserMail. Read more in Send-MgUserMail BodyParameter Explained. Going through the...&lt;/p&gt;
&lt;p&gt;The post &lt;a href="https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/"&gt;PowerShell Script to Simplify Send-MgUserMail&lt;/a&gt; appeared first on &lt;a href="https://www.powershellcenter.com"&gt;Faris Malaeb&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Wed, 07 Sep 2022 06:57:04 Z</pubDate><comments>https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/#comments</comments><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Faris Malaeb</dc:creator><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://www.powershellcenter.com/2022/09/07/powershell-script-to-simplify-send-mgusermail/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">10</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">6623</post-id></item><item><guid isPermaLink="true">https://www.cyberdrain.com/monitoring-with-powershell-monitoring-acronis-backups/</guid><link>https://www.cyberdrain.com/monitoring-with-powershell-monitoring-acronis-backups/</link><author>Kelvin@cyberdrain.com (Kelvin Tegelaar)</author><title>Monitoring with PowerShell: Monitoring Acronis Backups</title><description>&lt;img src="https://www.cyberdrain.com/uploads/acronis.png" alt="Featured image of post Monitoring with PowerShell: Monitoring Acronis Backups" /&gt;&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;This is a monitoring script requested via Reddit, One of the reddit r/msp users wondered how they can monitor Acronis a little bit easier. I jumped on this because it happened pretty much at the same time that I was asked to speak at the &lt;a class="link" href="https://acronis.events/summit2022/?utm_source=speakers&amp;amp;utm_medium=social&amp;amp;utm_campaign=2022Summit-kelvintegelaar--register"  target="_blank" rel="noopener"
    &gt;Acronis CyberSummit&lt;/a&gt; so it kinda made sense to script this so I have something to demonstrate at my session there.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a lot of approaches you can take with monitoring backups. I&amp;rsquo;ve seen people monitor event logs and specific files but I always recommend to check if a vendor has local tooling available to help you with this. Most of the products these days have a command-line utility to use for just this.&lt;/p&gt;
&lt;p&gt;You can find monitoring scripts for other backups product &lt;a class="link" href="https://www.cyberdrain.com/378/"  target="_blank" rel="noopener"
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="backups-monitoring-script"&gt;Backups monitoring script&lt;/h2&gt;
&lt;p&gt;For the backup monitoring script we&amp;rsquo;re making use of the Acronis command line utility called Acrocmd. Acrocmd allows you to create a raw report which is a tab delimited format, this is useful because PowerShell can easily convert that to an object.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-PowerShell" data-lang="PowerShell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nv"&gt;$Activities&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;C:\Program Files\BackupClient\CommandLineTool\acrocmd.exe&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;activities&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-output&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="n"&gt;-Delimiter&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;-Header&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Machine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;State&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Progress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Start&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Elapsed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;estimated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GUID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Resource&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Result&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-NE&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The operation completed successfully.&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Error, could not retrieve backup settings and tasks&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dd.MM.yyyy HH:mm:ss&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$TasksExecutedInLastWeek&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$Activities&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;[DateTime]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ParseExact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;start&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-Date&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;adddays&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$TasksExecutedInLastWeek&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;This device has not had any backup job for 1 week.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Task&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$TasksExecutedInLastWeek&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;running&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;-and&lt;/span&gt; &lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="nv"&gt;$task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;elapsed&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="no"&gt;[datetime]&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;23:59:00&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;This device has been running a backup for over 24 hours.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$FailedJobs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$TasksExecutedInLastWeek&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="n"&gt;-Property&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Result&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;succeeded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$FailedJobs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-ge&lt;/span&gt; &lt;span class="nv"&gt;$MaximumFailedBackupsPerWeek&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;This device has failed more backups than allowed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now this isn&amp;rsquo;t the only thing you&amp;rsquo;ll want to monitor. There&amp;rsquo;s also the case if a device has even received its backup plan, and if that backup plan is really active on the device;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-PowerShell" data-lang="PowerShell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nv"&gt;$Plans&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;C:\Program Files\BackupClient\CommandLineTool\acrocmd.exe&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;plans&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-output&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ConvertFrom-Csv&lt;/span&gt; &lt;span class="n"&gt;-Delimiter&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;-Header&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;State&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Last Start&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;User&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GUID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Next Start&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Enabled&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="n"&gt;-Property&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;-NE&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The operation completed successfully.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Error, could not retrieve backup settings and tasks&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="nv"&gt;$Plans&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;     &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;No backup plan found. This device needs a backup plan assigned.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;    &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The backup plan is in a failed state. Please check why.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;-ne&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;   &lt;span class="nb"&gt;write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The backup plan is disabled.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And that&amp;rsquo;s it! a pretty straight forward approach using the vendors supplied commandline tool. I hope you enjoyed this and as always, Happy PowerShelling.&lt;/p&gt;
</description><pubDate>Mon, 05 Sep 2022 00:00:00 Z</pubDate></item></channel></rss>